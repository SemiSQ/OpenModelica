#
# Makefile for omc
#
# David Kågedal <x97davka@ida.liu.se>
#
# $Id$
#

srcdir= .
top_builddir= ..
builddir_bin=$(top_builddir)/build/bin
builddir_scripts=$(top_builddir)/build/share/omc/scripts

ANTLR_HOME = @antlrhome@
EXEEXT = @EXEEXT@

ANTLR_INCP = -I@antlrinc@
ANTLR_LIBP = -L@antlrlib@
LIBSOCKET = @LIBSOCKET@

SHELL	= /bin/sh
CC	= gcc
CFLAGS	= $(USE_CORBA) -DCYGWIN
RMLHOME	= @rmlhome@
#RML	= @rmlc_bin@ -g -Wc,-O3 -Wr,-East,-Ecps,-Efol
RML	= $(RMLHOME)/bin/rml
RMLINC  = -I$(RMLHOME)/include/plain

USE_CORBA = @USE_CORBA@
CORBAHOME = @CORBAHOME@

PROG = omc
PROGD = omcd
PROGP = omcp

SCRIPT_FILES = Compile doPlot openmodelica.lefty

#SUBDIRS= ast runtime
SUBDIRS	= runtime modpar

.SUFFIXES:
.SUFFIXES: .o .mo .h
.PHONY: all subdirs report vctarget debug release depend clean dclean test reallyclean omc_release omc_debug simcode

#all : debug
all : release

include Makefile.common

debug:	dinstall

release: install

$(PROG): omc_release
	echo Copying $(PROG)$(EXEEXT) into $(builddir_bin)
	cp omc_release/$(PROG)$(EXEEXT) $(builddir_bin)/

$(PROGD): omc_debug
	echo Copying $(PROGD)$(EXEEXT) into $(builddir_bin)
	cp omc_debug/$(PROGD)$(EXEEXT) $(builddir_bin)/

$(PROGP): omc_profiler
	echo Copying $(PROGP)$(EXEEXT) into $(builddir_bin)
	cp omc_profiler/$(PROGP)$(EXEEXT) $(builddir_bin)/

install_scripts:
	cd scripts; cp $(SCRIPT_FILES) ../$(builddir_scripts)

install: install_scripts $(PROG)
	cp OpenModelicaBootstrappingHeader.h $(top_builddir)/build/include/omc/

dinstall: install_scripts $(PROGD)

nodepend:
	(cd omc_release && $(MAKE))

omc_release: simcode
	(cd omc_release && $(MAKE))

omc_debug: simcode
	(cd omc_debug && $(MAKE))

omc_profiler: simcode
	(cd omc_profiler && $(MAKE))

#vctarget:
#	@(cd omc_debug ; $(MAKE) vctarget)

vctarget:
	@(cd omc_release ; $(MAKE) vctarget)


test:
	@(cd $(top_builddir)/testsuite ; $(MAKE))


#ast/libast.a:
#	@(cd ast ; $(MAKE) libast.a)

#subdirs:
#	@for d in $(SUBDIRS); do \
#		(cd $$d ; $(MAKE)) \
#	done

clean:
	@for d in $(SUBDIRS); do \
		(cd $$d ; $(MAKE) clean) \
	done
	(cd omc_release; $(MAKE) clean)
	-$(RM) -f $(SRCH)
	-$(RM) -f $(builddir_bin)/$(PROG)$(EXEEXT)
	-cd $(builddir_bin) && rm -f $(SCRIPT_FILES)

dclean:
	@for d in $(SUBDIRS); do \
		(cd $$d ; $(MAKE) clean) \
	done
	(cd omc_debug; $(MAKE) clean)
	-$(RM) -f $(SRCH)
	-$(RM) -f $(builddir)/$(PROGD)$(EXEEXT)
	-cd $(builddir_bin) && rm -f $(SCRIPTS_FILES)

reallyclean:
	@for d in $(SUBDIRS); do \
		(cd $$d ; $(MAKE) reallyclean) \
	done
	(cd omc_release; $(MAKE) reallyclean)
	-$(RM) -f $(SRCH)
	-$(RM) -f $(builddir)/$(PROG)$(EXEEXT)

dreallyclean:
	@for d in $(SUBDIRS); do \
		(cd $$d ; $(MAKE) reallyclean) \
	done
	(cd omc_debug; $(MAKE) reallyclean)
	-$(RM) -f $(SRCH)
	-$(RM) -f $(builddir)/$(PROGD)$(EXEEXT)

report:
	@(cd report ; $(MAKE))

ifeq ($(wildcard ../build/bin/omc),)
simcode:
	@echo OpenModelica has not been compiled yet. Using previously generated SimCode files.
else 
simcode: OpenModelicaBootstrappingHeader.h
	$(MAKE) -C susan_codegen/
	$(MAKE) -C susan_codegen/SimCode/
OpenModelicaBootstrappingHeader.h: FrontEnd/Absyn.mo Script/Interactive.mo FrontEnd/Values.mo GenerateOMCHeader.mos
	../build/bin/omc +g=MetaModelica GenerateOMCHeader.mos > $@.log || (cat $@.log && false)
	@mv $@.new $@
endif
$(SUSANMO): simcode

.PRECIOUS: Makefile

Makefile: Makefile.in
	cd $(top_builddir); ./config.status
