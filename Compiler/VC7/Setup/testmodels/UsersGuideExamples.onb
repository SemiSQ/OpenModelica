<!DOCTYPE OMNotebook>
<Notebook>
 <GroupCell closed="false" >
  <GroupCell closed="false" >
   <TextCell style="Title" >
    <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Arial; font-size:38pt; font-weight:600; color:#000000;">Users Guide Examples&lt;/p>&lt;/body>&lt;/html></Text>
   </TextCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Evaluating a Vector Expression&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We enter an assignment of a vector expression, created by the range construction expression 1:12, to be stored in the variable x. The value of the expression is returned.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>x := 1:12</Input>
     <Output>{1,2,3,4,5,6,7,8,9,10,11,12}</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Trying the Bubblesort function&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Load the function bubblesort, either by using the pull-down menu File-&amp;gt;Load Model, or by explicitly giving the command:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("C:/OpenModelica1.4.0/testmodels/bubblesort.mo")</Input>
     <Output>true</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">The function bubblesort is called below to sort the vector x in descending order. The sorted result is returned together with its type. Note that the result vector is of type Real[:], instantiated as &lt;/span>&lt;span style=" font-family:Courier New; font-size:11pt; color:#000000;">Real[12]&lt;/span>&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">, since this is the declared type of the function result. The input Integer vector was automatically converted to a Real vector according to the Modelica type coercion rules. The function is automatically compiled when called if this has not been done before.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>bubblesort(x)</Input>
     <Output>{12.0,11.0,10.0,9.0,8.0,7.0,6.0,5.0,4.0,3.0,2.0,1.0}</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">Another call:&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>bubblesort({4,6,2,5,8})</Input>
     <Output>{8.0,6.0,5.0,4.0,2.0}</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">It is also possible to give operating system commands via the system utility function. A command is provided as a string argument. The example below shows the system utility applied to the UNIX command cat, which here outputs the contents of the file bubblesort.mo to the output stream. &lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>cd("C:/OpenModelica1.4.0/testmodels")</Input>
     <Output>"C:\OpenModelica1.4.0\testmodels"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>system("cat bubblesort.mo")</Input>
     <Output>0</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">(Note: the bubblesort function in the code cell below was put there by hand)&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>function bubblesort
  input Real[:] x;
  output Real[size(x,1)] y;
protected
  Real t;
algorithm
  y := x;
  for i in 1:size(x,1) loop
    for j in 1:size(x,1) loop
      if y[i] > y[j] then
        t := y[i];
        y[i] := y[j];
        y[j] := t;
      end if; 
    end for;
  end for;
end bubblesort;</Input>
     <Output>Ok</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Trying the system and cd Commands&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Note: (??to be updated) Under Windows the output emitted into stdout by system commands is put into the OMShell console windows, not into the OMShell interaction windows. Thus the text emitted by the above cat command would not be returned. Only a success code (0 = success, 1 = failure) is returned to the OMShell window or to an OMNotebook cell. For example: &lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>system("dir")</Input>
     <Output>0</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>system("Non-existing command")</Input>
     <Output>1</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Another built-in command is cd, the change current directory command. The resulting current directory is returned as a string.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>cd()</Input>
     <Output>"C:\OpenModelica1.4.0\testmodels"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>cd("..")</Input>
     <Output>"C:\OpenModelica1.4.0"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>cd("C:\\OpenModelica1.4.0\\testmodels")</Input>
     <Output>"C:\OpenModelica1.4.0\testmodels"</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Modelica Library and DCMotor Model&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We load a model, here the whole Modelica standard library, which also can be done through the File-&amp;gt;Load Modelica Library menu item:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadModel(Modelica)</Input>
     <Output>true</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">We also load a file containing the dcmotor model:&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("C:/OpenModelica1.4.0/testmodels/dcmotor.mo")</Input>
     <Output>true</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">It is simulated:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>simulate(dcmotor,startTime=0.0,stopTime=10.0)</Input>
     <Output>record
    resultFile = "dcmotor_res.plt"
end record</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We list the source  code of the model:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>list(dcmotor)</Input>
     <Output>"model dcmotor
  Modelica.Electrical.Analog.Basic.Resistor r1(R=10);
  Modelica.Electrical.Analog.Basic.Inductor i1;
  Modelica.Electrical.Analog.Basic.EMF emf1;
  Modelica.Mechanics.Rotational.Inertia load;
  Modelica.Electrical.Analog.Basic.Ground g;
  Modelica.Electrical.Analog.Sources.ConstantVoltage v;

equation 
  connect(v.p,r1.p);
  connect(v.n,g.p);
  connect(r1.n,i1.p);
  connect(i1.n,emf1.p);
  connect(emf1.n,g.p);
  connect(emf1.flange_b,load.flange_a);
end dcmotor;

"</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We test code instantiation of the model to flat code:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>instantiateModel(dcmotor)</Input>
     <Output>"fclass dcmotor
Real r1.v "Voltage drop between the two pins (= p.v - n.v)";
Real r1.i "Current flowing from pin p to pin n";
Real r1.p.v "Potential at the pin";
Real r1.p.i "Current flowing into the pin";
Real r1.n.v "Potential at the pin";
Real r1.n.i "Current flowing into the pin";
parameter Real r1.R = 10 "Resistance";
Real i1.v "Voltage drop between the two pins (= p.v - n.v)";
Real i1.i "Current flowing from pin p to pin n";
Real i1.p.v "Potential at the pin";
Real i1.p.i "Current flowing into the pin";
Real i1.n.v "Potential at the pin";
Real i1.n.i "Current flowing into the pin";
parameter Real i1.L = 1 "Inductance";
parameter Real emf1.k(unit = "N.m/A") = 1 "Transformation coefficient";
Real emf1.v "Voltage drop between the two pins";
Real emf1.i "Current flowing from positive to negative pin";
Real emf1.w "Angular velocity of flange_b";
Real emf1.p.v "Potential at the pin";
Real emf1.p.i "Current flowing into the pin";
Real emf1.n.v "Potential at the pin";
Real emf1.n.i "Current flowing into the pin";
Real emf1.flange_b.phi "Absolute rotation angle of flange";
Real emf1.flange_b.tau "Cut torque in the flange";
Real load.phi "Absolute rotation angle of component (= flange_a.phi = flange_b.phi)";
Real load.flange_a.phi "Absolute rotation angle of flange";
Real load.flange_a.tau "Cut torque in the flange";
Real load.flange_b.phi "Absolute rotation angle of flange";
Real load.flange_b.tau "Cut torque in the flange";
parameter Real load.J = 1 "Moment of inertia";
Real load.w "Absolute angular velocity of component";
Real load.a "Absolute angular acceleration of component";
Real g.p.v "Potential at the pin";
Real g.p.i "Current flowing into the pin";
Real v.v "Voltage drop between the two pins (= p.v - n.v)";
Real v.i "Current flowing from pin p to pin n";
Real v.p.v "Potential at the pin";
Real v.p.i "Current flowing into the pin";
Real v.n.v "Potential at the pin";
Real v.n.i "Current flowing into the pin";
parameter Real v.V = 1 "Value of constant voltage";
equation
  r1.R * r1.i = r1.v;
  r1.v = r1.p.v - r1.n.v;
  0.0 = r1.p.i + r1.n.i;
  r1.i = r1.p.i;
  i1.L * der(i1.i) = i1.v;
  i1.v = i1.p.v - i1.n.v;
  0.0 = i1.p.i + i1.n.i;
  i1.i = i1.p.i;
  emf1.v = emf1.p.v - emf1.n.v;
  0.0 = emf1.p.i + emf1.n.i;
  emf1.i = emf1.p.i;
  emf1.w = der(emf1.flange_b.phi);
  emf1.k * emf1.w = emf1.v;
  emf1.flange_b.tau = -emf1.k * emf1.i;
  load.w = der(load.phi);
  load.a = der(load.w);
  load.J * load.a = load.flange_a.tau + load.flange_b.tau;
  load.flange_a.phi = load.phi;
  load.flange_b.phi = load.phi;
  g.p.v = 0.0;
  v.v = v.V;
  v.v = v.p.v - v.n.v;
  0.0 = v.p.i + v.n.i;
  v.i = v.p.i;
  emf1.flange_b.tau + load.flange_a.tau = 0.0;
  emf1.flange_b.phi = load.flange_a.phi;
  emf1.n.i + v.n.i + g.p.i = 0.0;
  emf1.n.v = v.n.v;
  v.n.v = g.p.v;
  i1.n.i + emf1.p.i = 0.0;
  i1.n.v = emf1.p.v;
  r1.n.i + i1.p.i = 0.0;
  r1.n.v = i1.p.v;
  v.p.i + r1.p.i = 0.0;
  v.p.v = r1.p.v;
  load.flange_b.tau = 0.0;
end dcmotor;
"</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We plot part of the simulated result:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>plot({load.w,load.phi})</Input>
     <Output>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Courier New; font-size:11pt; color:#000000;">&lt;img src="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/8.png" width="492" height="250" />&lt;/p>&lt;/body>&lt;/html></Output>
     <Image name="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/8.png" >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</Image>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">The BouncingBall and Switch Models&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">Below w&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">e take a look at the BouncingBall example containing when-equations and if-expressions. &lt;/span>&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">(Can also be loaded by: loadFile("C:/OpenModelica1.4.0/testmodels/BouncingBall.mo")&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("C:/OpenModelica1.4.0/testmodels/BouncingBall.mo")</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>model BouncingBall
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;
equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
    v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
    reinit(v, v_new);
  end when;
end BouncingBall;</Input>
     <Output>Ok</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Instead of just giving a simulate and plot command, we can perform a runScript command on a .mos (Modelica script) file sim_BouncingBall.mos that contains these commands:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("BouncingBall.mo");
simulate(BouncingBall, stopTime=3.0);
plot({h,flying}); </Input>
     <Output>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Courier New; font-size:11pt; color:#000000;">&lt;img src="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/10.png" width="492" height="250" />&lt;/p>&lt;/body>&lt;/html></Output>
     <Image name="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/10.png" >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</Image>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">The runScript command:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>runScript("sim_BouncingBall.mos")</Input>
     <Output>"true
record
    resultFile = "BouncingBall_res.plt"
end record
true

true"</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">We enter the Switch model, to test if-equations (e.g. copy and paste into OMShell from another file and push enter, or just evaluate the following cell):&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>model Switch
  Real v;
  Real i;
  Real i1;
  Real itot;
  Boolean open;
equation
  itot = i + i1;
  if open then
    v = 0;
  else
    i = 0;
  end if;
   1 - i1 = 0;
   1 - v - i = 0;
   open = time >= 0.5;
end Switch;</Input>
     <Output>Ok</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>simulate(Switch, startTime=0, stopTime=1)</Input>
     <Output>record
    resultFile = "Switch_res.plt"
end record</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>plot({itot,open})</Input>
     <Output>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Courier New; font-size:11pt; color:#000000;">&lt;img src="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/11.png" width="492" height="250" />&lt;/p>&lt;/body>&lt;/html></Output>
     <Image name="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/11.png" >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</Image>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We note that the variable open switches from false (0) to true (1), causing itot to increase from 1.0 to 2.0.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Clear All Models&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Now, first clear all loaded libraries and models:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>clear()</Input>
     <Output>true</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">List the loaded models - nothing left:&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>list()</Input>
     <Output>""</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">The VanDerPol Model and Parametric Plot&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We load another model, the VanDerPol model (or via the menu File-&amp;gt;Load Model):&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("C:/OpenModelica1.4.0/testmodels/VanDerPol.mo")</Input>
     <Output>true</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">We also show it in the next cell:&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>model VanDerPol "Van der Pol oscillator model"
  Real x(start=1);
  Real y(start=1);
  parameter Real lambda=0.3;
equation 
  der(x)=y;
  der(y)=-x + lambda*(1 - x*x)*y;
end VanDerPol;</Input>
     <Output>Ok</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">It is simulated:&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>simulate(VanDerPol,stopTime=25)</Input>
     <Output>record
    resultFile = "VanDerPol_res.plt"
end record</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">It is plotted:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>plotParametric(x,y);  // Error in version 1.3.2: instead use plotParametric({x,y})</Input>
     <Output>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Courier New; font-size:11pt; color:#000000;">&lt;img src="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/12.png" width="492" height="250" />&lt;/p>&lt;/body>&lt;/html></Output>
     <Image name="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/12.png" >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</Image>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Do code instantiation to flat forrm of the VanDerPol model:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>instantiateModel(VanDerPol)</Input>
     <Output>"fclass VanDerPol
Real x(start = 1.0);
Real y(start = 1.0);
parameter Real lambda = 0.3;
equation
  der(x) = y;
  der(y) = -x + lambda * (1.0 - x ^ 2.0) * y;
end VanDerPol;
"</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Variables, Functions, and Types of Variables&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Assign a vector to a variable:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>a:=1:5</Input>
     <Output>{1,2,3,4,5}</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Type in a function:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>function MySqr input Real x; output Real y; algorithm y:=x*x; end MySqr;</Input>
     <Output>Ok</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Call the function&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>b:=MySqr(2)</Input>
     <Output>4.0</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Look at the type of a:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>typeOf(a)</Input>
     <Output>"Integer[5]"</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Retrieve the type of b:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>typeOf(b)</Input>
     <Output>"Real"</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">What is the type of MySqr? Cannot currently be handled.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>typeOf(MySqr)</Input>
     <Output>[done]</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">List the available variables:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>listVariables()</Input>
     <Output>{currentSimulationResult, a, b}</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Clear again:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>clear()</Input>
     <Output>true</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">List the variables again. Nothing left.&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>listVariables()</Input>
     <Output>{}</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Using External Functions&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">The following is a small example (ExternalLibraries.mo) to show the use of external functions:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>model ExternalLibraries
  Real x(start=1.0),y(start=2.0);
equation
  der(x)=-ExternalFunc1(x);
  der(y)=-ExternalFunc2(y);
end ExternalLibraries;
function ExternalFunc1
  input Real x;
  output Real y;
external
  y=ExternalFunc1_ext(x) annotation(Library="libExternalFunc1_ext.o",
                                    Include="#include \"ExternalFunc1_ext.h\""); 
end ExternalFunc1;

function ExternalFunc2
  input Real x;
  output Real y;
  external "C" annotation(Library="libExternalFunc2.a",
                          Include="#include  \"ExternalFunc2.h\"");
end ExternalFunc2;</Input>
     <Output>Ok</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">These C (.c) files and header files (.h) are needed:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-size:11pt; color:#000000;">/* file: ExternalFunc1.c */&lt;/span>&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">double ExternalFunc1_ext(double x)&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">{&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">  double res;&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">  res = x+2.0*x*x;&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">  return res;&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">}	&lt;/p>&lt;p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">/* Header file ExternalFunc1_ext.h for ExternalFunc1 function */&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">double ExternalFunc1_ext(double);&lt;/p>&lt;p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">/* file: ExternalFunc2.c */&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">double ExternalFunc2(double x)&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">{&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">  double res;&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">  res = (x-1.0)*(x+2.0);&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">  return res;&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">}&lt;/p>&lt;p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">/* Header file ExternalFunc2.h for ExternalFunc2 */&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">double ExternalFunc2(double);&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">The following script file ExternalLibraries.mos will perform everything that is needed, provided you have gcc installed in your path:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-size:11pt; color:#000000;">loadFile("ExternalLibraries.mo");&lt;/span>&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">system("gcc -c -o libExternalFunc1_ext.o ExternalFunc1.c");&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">system("gcc -c -o libExternalFunc2.a ExternalFunc2.c");&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt; color:#000000;">simulate(ExternalLibraries);&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">We run the script:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>runScript("ExternalLibraries.mos");</Input>
     <Output>[done]</Output>
    </InputCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">and plot the results:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>plot({x,y});</Input>
     <Output>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Courier New; font-size:11pt; color:#000000;">&lt;span style=" color:#000000;">&lt;img src="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/7.png" width="492" height="250" />&lt;/span>&lt;/p>&lt;/body>&lt;/html></Output>
     <Image name="file:///C:/OpenModelica1.4.0/bin/OMNoteboook_tempfiles/7.png" >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</Image>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Quit OpenModelica&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Leave and quit OpenModelica:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="true" >
     <Input>quit()</Input>
     <Output></Output>
    </InputCell>
   </GroupCell>
  </GroupCell>
 </GroupCell>
</Notebook>
