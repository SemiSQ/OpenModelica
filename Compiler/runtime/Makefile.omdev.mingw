# Adrian Pop, adrpo@ida.liu.se, 2006-02-01
# Makefile for Compiler/runtime compilation of OMC using OMDev-mingw
# OMDev-mingw: http://www.ida.liu.se/~adrpo/omc/omdev/
#
# $Id: Makefile.omdev.mingw.in 1817 2006-02-01 12:21:26Z adrpo $
#

# The path to the OMDev-mingw package MUST BE SET!
#OMDEV=$OMDEV 
# Test if the needed variables are there... 
.testvariables:
ifndef OMDEV
	@echo You have to set the OMDEV variabile pointing to your OMDev package root! Exiting....
	@echo Take the OMDev package from: http://www.ida.liu.se/~adrpo/omc/omdev/
	@echo For questions or problems email Adrian Pop, adrpo@ida.liu.se
	ABORT
endif

srcdir=../
top_builddir= ../..
builddir_bin=$(top_builddir)/build/bin
builddir_lib=$(top_builddir)/build/lib
builddir_inc=$(top_builddir)/build/include
builddir_doc=$(top_builddir)/build/doc

USE_CORBA = -DUSE_CORBA
CORBAHOME = $(OMDEV)
RMLINCLUDE = $(OMDEV)/tools/rml/include/plain/

CFLAGS = -O3 -I. -Isqlite $(USE_CORBA) -DBUILD_MICO_DLL -DMINGW32 

# We always compile with corba on OMDev-mingw
CORBASRC = omc_communication.cc omc_communication_impl.cpp corbaimpl.cpp
CORBAINCL = -I$(CORBAHOME)/include/mico-msys-mingw/

SHELL	= /bin/sh
CC	= gcc 
IDL	= $(OMDEV)/bin/mico/idl
CFLAGS	+= -I$(RMLINCLUDE) -I../../c_runtime -I../ $(CORBAINCL) -Ilpsolve
CXXFLAGS = $(CFLAGS)
SRC	= RTOpts_rml.c socketimpl.c printimpl.c Print_rml.c System_rml.c Settings_rml.c dynload.c SimulationResults.c IOStreamExt_rml.c rtclock.c Database.c sqlite/sqlite3.c
CPPSRC  = unitparser.cpp UnitParserExt_rml.cpp ptolemyio.cpp BackendDAEEXT_rml.cpp ErrorMessage.cpp Error_rml.cpp \
optmanager.cpp systemimplmisc.cpp dynload_try.o $(CORBASRC)
OBJ     = $(SRC:.c=.o) $(CPPSRC:.cpp=.o) $(CPPSRC:.cc=.o)
OMC_OBJ = Error_omc.o Print_omc.o RTOpts_omc.o System_omc.o Settings_omc.o IOStreamExt_omc.o ErrorMessage.o systemimplmisc.o rtclock.o UnitParserExt_omc.o unitparser.o BackendDAEEXT_omc.o

all: runtime.a install
.PHONY: all install
runtime.a : $(OBJ)
	rm -f $@
	$(AR) -s -r $@ $(OBJ)
install: libomcruntime.a
	cp $< $(builddir_lib)/omc/
libomcruntime.a : $(OMC_OBJ)
	rm -f $@
	$(AR) -s -r $@ $(OMC_OBJ)	

omc_communication.cc omc_communication.h : omc_communication.idl
	$(IDL) omc_communication.idl

omc_communication.h: omc_communication_impl.cpp corbaimpl.cpp

dynload.o: systemimpl.h ../Absyn.h ../Values.h dynload_try.h
database.o : sqlite/sqlite3.h
Print_rml.o : printimpl.c
Print_omc.o : printimpl.c
Error_rml.o : errorext.cpp
Error_omc.o : errorext.cpp
System_rml.o : systemimpl.c config.h
System_omc.o : systemimpl.c config.h
RTOpts_rml.o : rtoptsimpl.c
RTOpts_omc.o : rtoptsimpl.c
IOStreamExt_rml.o : IOStreamExt.c
IOStreamExt_omc.o : IOStreamExt.c
Settings_rml.o : settingsimpl.c
Settings_omc.o : settingsimpl.c
UnitParserExt_rml.o : unitparserext.cpp unitparser.h
UnitParserExt_omc.o : unitparserext.cpp unitparser.h
BackendDAEEXT_rml.o : BackendDAEEXT.cpp
BackendDAEEXT_omc.o : BackendDAEEXT.cpp

clean:
	$(RM) -rf *.o omc_communication.cc omc_communication.h sqlite/*.o


