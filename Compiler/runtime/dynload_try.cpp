/*
 * This file is part of OpenModelica.
 *
 * Copyright (c) 1998-2010, Linköpings University,
 * Department of Computer and Information Science,
 * SE-58183 Linköping, Sweden.
 *
 * All rights reserved.
 *
 * THIS PROGRAM IS PROVIDED UNDER THE TERMS OF THIS OSMC PUBLIC
 * LICENSE (OSMC-PL). ANY USE, REPRODUCTION OR DISTRIBUTION OF
 * THIS PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THE OSMC
 * PUBLIC LICENSE.
 *
 * The OpenModelica software and the Open Source Modelica
 * Consortium (OSMC) Public License (OSMC-PL) are obtained
 * from Linköpings University, either from the above address,
 * from the URL: http://www.ida.liu.se/projects/OpenModelica
 * and in the OpenModelica distribution.
 *
 * This program is distributed  WITHOUT ANY WARRANTY; without
 * even the implied warranty of  MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE, EXCEPT AS EXPRESSLY SET FORTH
 * IN THE BY RECIPIENT SELECTED SUBSIDIARY LICENSE CONDITIONS
 * OF OSMC-PL.
 *
 * See the full OSMC Public License conditions for more details.
 *
 */

#include "dynload_try.h"
#include "Values.h"

/*
 * This code used to be part of dynload.c, but that code is pure C and does not
 * compile in all C++ compilers. Since we need to catch exceptions, it is
 * easier to maintain a separate module that only catches those exceptions.
 *
 * It could also be performed by the "in" function generated by OpenModelica,
 * but this is safer. And we don't want the possibility of the compiler going
 * down.
 */

#ifdef __cplusplus
extern "C" {
#endif

int execute_function_try_catch(int (* func)(type_description *, type_description *),
                           type_description *arglst,
                           type_description *retarg)
{
  try {
    func(arglst, retarg);
  } catch (...) {
    return 1;
  }
  return 0;
}

#ifdef __cplusplus
}
#endif
