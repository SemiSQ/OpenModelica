getErrorString();

/*
loadModel(Modelica);
cd("d:/Modelica/_modely/HumModOMC/OMC");
setModelicaPath("d:/Modelica/_modely/HumModOMC/OMC");
loadModel(HumMod);

//translateModel(HumMod.Library.Curves.TestCurve);
//buildModel(HumMod.Library.Curves.TestCurve);
//simulate(HumMod.Library.Curves.TestCurve, stopTime=10.0, outputFormat="plt");

//buildModel(HumMod.Proteins.test.T);
//simulate(HumMod.Proteins.test.T, stopTime=0.1, outputFormat="plt");
//plot({state, cur.val});

//buildModel(HumMod.Blood.test.T);
simulate(HumMod.Blood.test.T, stopTime = 0.1);

//checkModel(HumMod.HumMod_GolemEdition);
//buildModel(HumMod.HumMod_GolemEdition);
*/

/*
loadModel(Modelica);
cd("d:/Modelica/_modely/Guyton1972");
setModelicaPath("d:/Modelica/_modely/Guyton1972");
loadModel(Guyton_1972_MathModelica);
simulate(Guyton_1972.bugFun, outputFormat="plt");
*/
/*
loadModel(Modelica);
cd("d:/Modelica/_modely/Guyton1972");
setModelicaPath("d:/Modelica/_modely/Guyton1972");
loadModel(Guyton_1972_MathModelica);
//loadFile("Guyton_1972_MathModelica.mo");
//translateModel(Guyton_1972.Gyuton1972_signalWay);
//buildModel(Guyton_1972.Gyuton1972_signalWay);
simulate(Guyton_1972.Gyuton1972_signalWay, stopTime=10.0, outputFormat="plt");
*/

/*
//loadModel(Modelica);
cd("d:/Modelica/_modely/HumModOMC/OMC/bugHumMod");
setModelicaPath("d:/Modelica/_modely/HumModOMC/OMC/bugHumMod");
loadModel(nonlinearMixedTest);
//buildModel(nonlinearMixedTest);
simulate(nonlinearMixedTest, stopTime=10.0, outputFormat="plt");
*/


/*
loadModel(Modelica);

cd("d:/Modelica/_modely/HumModOMC/OMC/TestCubic/");
setModelicaPath("d:/Modelica/_modely/HumModOMC/OMC/TestCubic/");
loadModel(TestCubicCurve);
//loadFile("TestCubicCurve.mo");
buildModel(TestCubicCurve.TestCurve);
*/

/* sent to Adrian
loadModel(Modelica);
cd("d:/Modelica/_modely/HumModOMC/OMC/bugHumMod");
setModelicaPath("d:/Modelica/_modely/HumModOMC/OMC/bugHumMod");
loadModel(HumMod);
//buildModel(HumMod.Library.Curves.TestCurve);
//simulate(HumMod.Library.Curves.TestCurve, stopTime=10.0, outputFormat="plt");

//buildModel(HumMod.Proteins.test.T);
//simulate(HumMod.Proteins.test.T, stopTime=0.1, outputFormat="plt");
//plot({state, cur.val});

buildModel(HumMod.Blood.test.T);
*/

/*
loadModel(Modelica);
cd("d:/Modelica/_modely/HumModOMC/OMC");
loadFile("HumMod.mo");
//loadFile("bugHumMod/bugMSL31_Strings_scanReal.mo");

//checkModel(HumMod.HumMod_GolemEdition);
//buildModel(HumMod.HumMod_GolemEdition);

//checkModel(HumMod.Proteins.test.T);
buildModel(HumMod.Proteins.test.T);
//simulate(HumMod.Proteins.test.T, stopTime=10.0);

//simulate(StringsScanRealTest.TestReadParameter, stopTime=10.0);
//simulate(HumMod.HumMod_GolemEdition, stopTime=1.0);
*/

getErrorString();



/*
loadModel(Modelica);
loadFile("D:/Modelica/_modely/FilipJezek/VAD/circulatoryVADautoMode.mo");
//getErrorString();
simulate(Conlon.vadCirculation1, stopTime=1.0, tolerance=1e-4);
//getErrorString();
*/

/*
loadFile("d:/Modelica/_modely/Identifikace/example/CESNET_Indentification_Hoffman.mo");
getErrorString();
simulate(CESNET_Indentification_Hoffman, stopTime=1);
getErrorString();
*/
/*
//loadModel(Modelica);
getErrorString();
loadFile("d:/Modelica/_modely/HumMod - Habilitacna Prednaska/HumMod_OMCTotal.mo");
//loadFile("d:/Modelica/_modely/HumMod/for testing/HumModOMCTotal.mo");
getErrorString();
//checkModel(HumMod_HumMod_GolemEdition);
translateModel(HumMod_HumMod_GolemEdition);
getErrorString();
*/

/*
loadFile("d:/Modelica/_modely/HumMod/for testing/CVS/LeftHeartStarling.mo");
getErrorString();
simulate(LeftHeartStarling, stopTime=15);
getErrorString();
*/
/*
loadFile("NonLinSys3.mo");
simulate(NonLinSys3, tolerance=1e-10, stopTime=10); 
//val(x,0.0);
//val(x,0.5);
//val(x,1.0);
//val(y,0.0);
//val(y,0.5);
//val(y,1.0);
*/
/*
loadFile("d:/Modelica/_modely/HumMod/for testing/CVS/VenousReturn.mo");
getErrorString();
//simulate(HumMod_GolemEdition, stopTime=1);
//instantiateModel(HumMod_Blood_test_TSystemicCirculation);
//checkModel(HumMod_Blood_test_TSystemicCirculation);
simulate(VenousReturn, stopTime=15);
//simulate(Pokus, stopTime=15);
getErrorString();
*/

/*
loadFile("d:/Modelica/_modely/HumMod/for testing/CVS/TSystemicCirculationTotal.mo");
getErrorString();
//simulate(HumMod_GolemEdition, stopTime=1);
//instantiateModel(HumMod_Blood_test_TSystemicCirculation);
//checkModel(HumMod_Blood_test_TSystemicCirculation);
simulate(HumMod_Blood_test_TSystemicCirculation, stopTime=1);
getErrorString();
*/

/*
loadFile("ElectrolytesT2Total.mo");
getErrorString();
//simulate(QHP_Electrolytes_test_T2, stopTime=1);
checkModel(QHP_Electrolytes_test_T2);
getErrorString();
*/
/*
loadModel(Modelica);
//simulate(Modelica.Electrical.Analog.Examples.CauerLowPassSC,stopTime=60,numberOfIntervals=1500,method="dassl");
simulate(Modelica.Electrical.Analog.Examples.CauerLowPassSC,stopTime=1,numberOfIntervals=1500,method="dassl",fileNamePrefix="testLowPass");
getErrorString();
*/
/*
loadFile("ElectrolytesToFlat.mo");
getErrorString();
// //loadFile("Electrolytes.mo");
simulate(QHP_Electrolytes_ExpandableConnectorPatch_T, stopTime=1,fileNamePrefix="testElectrolytesPatch");
getErrorString();
*/

/*
loadFile("D:/Modelica/_modely/FilipJezek/VAD/ValveTestTotal.mo");
getErrorString();
simulate(Conlon_Tests_ValveTest, stopTime=1.0, tolerance=1e-4);
getErrorString();
*/

/*
loadFile("D:/Modelica/_modely/FilipJezek/VAD/circulatoryVADTotal.mo");
getErrorString();
simulate(Conlon_circulatoryVAD, stopTime=0.2, tolerance=1e-4);
getErrorString();
*/

/*
getErrorString();
loadFile("d:/Modelica/_modely/MM_for_debug/sysNoDelayTotal.mo");
getErrorString();
simulate(TransSystems.sysNoDelay, stopTime=10, tolerance=1e-4);
getErrorString();
*/
/*
//pth := "/d/Modelica/_modely/MM_for_debug/" + "sysTransferFnTotal.mo";
//loadModel(Modelica);
getErrorString();
loadFile("d:/Modelica/_modely/MM_for_debug/sysTransferFnTotal.mo");
getErrorString();
simulate(TransSystems.sysTransferFn, stopTime=10, tolerance=1e-4);
getErrorString();
*/

/*
//loadFile("sysNoDelayTotal.mo");
loadFile("sysNoDelayMMTotal.mo");
getErrorString();
simulate(sysNoDelay, stopTime=10, tolerance=1e-4);
getErrorString();
*/


/*
loadFile("CurveTestTotal.mo");
getErrorString();
simulate(QHP_Library_Curves_CurveTest, stopTime=5);
getErrorString();
*/

//loadFile("BusOMCTotal.mo");
//getErrorString();
//simulate(QHP_Electrolytes_test_BusOMC, stopTime=1);
//getErrorString();
/*
loadFile("BloodCircuitWithRegulatorsBlocksUISwitchTotal.mo");
getErrorString();
simulate(BloodCircuit, stopTime=10);
getErrorString();
*/



//loadFile("TestAmoniakTotal.mo");
//getErrorString();
//simulate(QHP_test_Amoniak, stopTime=1);
//getErrorString();

//loadFile("TestElectrolytesTotal.mo");
//getErrorString();
//simulate(QHP_test_TestElectrolytes, stopTime=1);
//getErrorString();

//loadFile("TestRedCellsTotal.mo"); //--> Exp.mo bug in crefHasScalarSubscripts()
//getErrorString();
//simulate(QHP_test_TestRedCells, stopTime=1000);
//getErrorString();

//loadFile("TestRedCells2NoExpandable.mo"); //--> Exp.mo bug in crefHasScalarSubscripts()
//getErrorString();
//simulate(QHP_Blood_BlooodVolume_ExpandableConnectorPatch_T, stopTime=10);
//getErrorString();

//loadFile("BeatHeartTotal.mo");
//getErrorString();
//simulate(HeartSystem_Models_BeatHeart, stopTime=10);
//getErrorString();



