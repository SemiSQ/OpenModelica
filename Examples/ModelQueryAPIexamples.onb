<!DOCTYPE OMNotebook>
<Notebook>
 <GroupCell closed="false" >
  <GroupCell closed="false" >
   <TextCell style="Title" >
    <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Arial; font-size:38pt; font-weight:600; color:#000000;">API Usage Examples for Model Query and Manipulation&lt;/p>&lt;/body>&lt;/html></Text>
   </TextCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Introduction&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">In the OpenModelica System Documentation, an external API is described which returns information about and/or allows manipulation of models. Calls to these functions can be done interactively as below, but more typically by program clients to the OpenModelica Compiler (OMC) server. Current examples or such clients are the OpenModelica MDT Eclipse plugin, OMNotebook, the MathModelica Lite graphic model editor, etc. This API is untyped for performance reasons, i.e., no typechecking is done on the calls. The results of a call is returned as a text string in Modelica syntax form, which the client has to parse. An example parser in C++ is available in the OMNotebook source code, whereas another example parser in Java is available in the MDT Eclipse plugin.&lt;/span>&lt;/p>&lt;p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">&lt;/p>&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times New Roman; font-size:12pt; color:#000000;">Below we show a few calls on the Modelica Standard Library and the BouncingBall model. The full documentation of the API is available in the OpenModelica system documentation. First we load the Modelica library and BouncingBall model, and list the model to show its structure:&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadModel(Modelica)</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("C:/OpenModelica1.4.2/testmodels/BouncingBall.mo")</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>list(BouncingBall)</Input>
     <Output>"model BouncingBall
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;

equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
      v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
reinit(v, v_new);
  
  end when;
end BouncingBall;

"</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Source File Related Calls&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Calls related to source files.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>getSourceFile(BouncingBall)</Input>
     <Output>C:/OpenModelica1.4.2/testmodels/BouncingBall.mo</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>setSourceFile(BouncingBall,"C:/OpenModelica1.4.2/testmodels/BouncingBall.mo")</Input>
     <Output>Ok</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Environment Variables&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Calls related to environment variables:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>getEnvironmentVar("OPENMODELICALIBRARY")</Input>
     <Output>C\\OpenModelica1.4.2\\ModelicaLibrary</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>setEnvironmentVar("OPENMODELICALIBRARY","C\\OpenModelica1.4.2\\ModelicaLibrary")</Input>
     <Output>Ok</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getEnvironmentVar("OPENMODELICALIBRARY")  //??Error Should return the same</Input>
     <Output>C\\OpenModelica1.4.2\\ModelicaLibrary</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Classes and Models&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Calls related to classes and models:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("C:/OpenModelica1.4.2/testmodels/BouncingBall.mo")</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFileInteractiveQualified("C:/OpenModelica1.4.2/testmodels/BouncingBall.mo")</Input>
     <Output>{BouncingBall}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFileInteractive("C:/OpenModelica1.4.2/testmodels/BouncingBall.mo")</Input>
     <Output>{BouncingBall}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>loadModel(Modelica)</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>list(BouncingBall) // Check that the model is loaded</Input>
     <Output>"model BouncingBall
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;

equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
      v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
reinit(v, v_new);
  
  end when;
end BouncingBall;

"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>saveModel("C:/OpenModelica1.4.2/testmodels/BouncingBall2.mo", BouncingBall ) //??Error in example</Input>
     <Output>false
OMC-ERROR: 
"Class BouncingBall not found in scope global.
"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>renameClass(BouncingBall, BouncingBall2)</Input>
     <Output>{BouncingBall2}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>deleteClass(BouncingBall2)</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>loadFile("C:/OpenModelica1.4.2/testmodels/BouncingBall.mo")  // Load it back</Input>
     <Output>true</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Class Attributes&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Calls related to class attributes.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>getElementsInfo(BouncingBall)</Input>
     <Output>{ { elementvisibility=public, elementfile="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", elementreadonly="writable", elementStartLine=2, elementStartColumn=3, elementEndLine=2, elementEndColumn=52, final=false, replaceable=false, inout="none", elementtype=component, typename=Real, names={e,"coefficient of restitution"}, flow=false, variability="parameter", direction="unspecified" },
{ elementvisibility=public, elementfile="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", elementreadonly="writable", elementStartLine=3, elementStartColumn=3, elementEndLine=3, elementEndColumn=47, final=false, replaceable=false, inout="none", elementtype=component, typename=Real, names={g,"gravity acceleration"}, flow=false, variability="parameter", direction="unspecified" },
{ elementvisibility=public, elementfile="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", elementreadonly="writable", elementStartLine=4, elementStartColumn=3, elementEndLine=4, elementEndColumn=35, final=false, replaceable=false, inout="none", elementtype=component, typename=Real, names={h,"height of ball"}, flow=false, variability="unspecified", direction="unspecified" },
{ elementvisibility=public, elementfile="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", elementreadonly="writable", elementStartLine=5, elementStartColumn=3, elementEndLine=5, elementEndColumn=28, final=false, replaceable=false, inout="none", elementtype=component, typename=Real, names={v,"velocity of ball"}, flow=false, variability="unspecified", direction="unspecified" },
{ elementvisibility=public, elementfile="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", elementreadonly="writable", elementStartLine=6, elementStartColumn=3, elementEndLine=6, elementEndColumn=55, final=false, replaceable=false, inout="none", elementtype=component, typename=Boolean, names={flying,"true, if ball is flying"}, flow=false, variability="unspecified", direction="unspecified" },
{ elementvisibility=public, elementfile="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", elementreadonly="writable", elementStartLine=7, elementStartColumn=3, elementEndLine=7, elementEndColumn=17, final=false, replaceable=false, inout="none", elementtype=component, typename=Boolean, names={impact,""}, flow=false, variability="unspecified", direction="unspecified" },
{ elementvisibility=public, elementfile="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", elementreadonly="writable", elementStartLine=8, elementStartColumn=3, elementEndLine=8, elementEndColumn=13, final=false, replaceable=false, inout="none", elementtype=component, typename=Real, names={v_new,""}, flow=false, variability="unspecified", direction="unspecified" }
 }</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>setClassComment(BouncingBall,"A Bouncing Ball Model")</Input>
     <Output>Ok</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>list(BouncingBall)  // Check that the comment has been added</Input>
     <Output>"model BouncingBall "A Bouncing Ball Model"
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;

equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
      v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
reinit(v, v_new);
  
  end when;
end BouncingBall;

"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>addClassAnnotation(A1&lt;cref>, annotate=&lt;expr>) //?? example call not completed</Input>
     <Output>[1:19]: error: unexpected token: (</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getIconAnnotation(Modelica.Electrical.Analog.Basic.Ground)</Input>
     <Output>{-100.0,-100.0,100.0,100.0,{Line(true,{{-60.0,50.0},{60.0,50.0}},{0,0,255},LinePattern.Solid,0.25,{Arrow.None,Arrow.None},3.0,false),Line(true,{{-40.0,30.0},{40.0,30.0}},{0,0,255},LinePattern.Solid,0.25,{Arrow.None,Arrow.None},3.0,false),Line(true,{{-20.0,10.0},{20.0,10.0}},{0,0,255},LinePattern.Solid,0.25,{Arrow.None,Arrow.None},3.0,false),Line(true,{{0.0,90.0},{0.0,50.0}},{0,0,255},LinePattern.Solid,0.25,{Arrow.None,Arrow.None},3.0,false),Text(true,{0,0,0},{0,0,255},LinePattern.Solid,FillPattern.None,0.25,{{-144.0,-60.0},{138.0,0.0}},"%name",0.0,"")}}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getDiagramAnnotation(Modelica.Electrical.Analog.Basic.Ground)</Input>
     <Output>{-100.0,-100.0,100.0,100.0,{Line(true,{{-60.0,50.0},{60.0,50.0}},{0,0,255},LinePattern.Solid,0.5,{Arrow.None,Arrow.None},3.0,false),Line(true,{{-40.0,30.0},{40.0,30.0}},{0,0,255},LinePattern.Solid,0.5,{Arrow.None,Arrow.None},3.0,false),Line(true,{{-20.0,10.0},{20.0,10.0}},{0,0,255},LinePattern.Solid,0.5,{Arrow.None,Arrow.None},3.0,false),Line(true,{{0.0,96.0},{0.0,50.0}},{0,0,255},LinePattern.Solid,0.5,{Arrow.None,Arrow.None},3.0,false),Text(true,{0,0,0},{0,0,255},LinePattern.Solid,FillPattern.None,0.25,{{-24.0,-38.0},{22.0,-6.0}},"p.v=0",0.0,"")}}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getPackages(Modelica)</Input>
     <Output>{UsersGuide,Mechanics,Math,Electrical,Blocks,SIunits,Icons,Constants}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getPackages()</Input>
     <Output>{Modelica}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getClassNames(Modelica.Electrical.Analog.Basic)</Input>
     <Output>{Ground,Resistor,HeatingResistor,Conductor,Capacitor,Inductor,SaturatingInductor,Transformer,Gyrator,EMF,VCV,VCC,CCV,CCC,OpAmp,VariableResistor,VariableConductor,VariableCapacitor,VariableInductor}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getClassNames()</Input>
     <Output>{BouncingBall,Model1,Modelica}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getClassNamesForSimulation()</Input>
     <Output>{}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>//setClassNamesForSimulation(A1&lt;string>)  ?? example call not complete</Input>
     <Output>Error occured building AST
Syntax Error</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getClassAttributes(BouncingBall) //?? Changed to rec(...) format</Input>
     <Output>{name="BouncingBall", partial=false, final=false, encapsulated=false, restriction=MODEL, comment="", file="C:/OpenModelica1.4.2/testmodels/BouncingBall.mo", readonly="writable", startLine=1, startColumn=1, endLine=20, endColumn=17}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getClassRestriction(BouncingBall) </Input>
     <Output>"model"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getClassInformation(BouncingBall)</Input>
     <Output>{"model","","C:/OpenModelica1.4.2/testmodels/BouncingBall.mo",{false,false,false},{"writable",1,1,20,17}}</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;span style=" font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Restricted Class Predicates&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Predicates related to restricted class categories:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>isPrimitive(Real)</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isConnector(BouncingBall)</Input>
     <Output>false</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isModel(BouncingBall)</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isRecord(BouncingBall)</Input>
     <Output>false</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isBlock(BouncingBall)</Input>
     <Output>false</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isType(BouncingBall)</Input>
     <Output>false</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isFunction(BouncingBall)</Input>
     <Output>false</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isPackage(BouncingBall)</Input>
     <Output>false</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isClass(BouncingBall)</Input>
     <Output>false</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isParameter(BouncingBall.e)  //??Error in example</Input>
     <Output>
OMC-ERROR: 
"Class isParameter (its type)  not found in scope &lt;global scope>.
No matching function found for isParameter, candidates are 
Class isParameter not found in scope &lt;global scope>.
"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isConstant(BouncingBall.e) //??Error in example</Input>
     <Output>
OMC-ERROR: 
"Class isConstant (its type)  not found in scope &lt;global scope>.
No matching function found for isConstant, candidates are 
Class isConstant not found in scope &lt;global scope>.
"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>isProtected(BouncingBall) //??Error</Input>
     <Output>
OMC-ERROR: 
"Class isProtected (its type)  not found in scope &lt;global scope>.
No matching function found for isProtected, candidates are 
Class isProtected not found in scope &lt;global scope>.
"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>existClass(BouncingBall)  </Input>
     <Output>true</Output>
    </InputCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Components&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Example calls related to components:&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>getComponents(Modelica)</Input>
     <Output>{}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getComponents(BouncingBall)</Input>
     <Output>{{Real,e,"coefficient of restitution", "public", false, false, false, "parameter", "none", "unspecified"},{Real,g,"gravity acceleration", "public", false, false, false, "parameter", "none", "unspecified"},{Real,h,"height of ball", "public", false, false, false, "unspecified", "none", "unspecified"},{Real,v,"velocity of ball", "public", false, false, false, "unspecified", "none", "unspecified"},{Boolean,flying,"true, if ball is flying", "public", false, false, false, "unspecified", "none", "unspecified"},{Boolean,impact,"", "public", false, false, false, "unspecified", "none", "unspecified"},{Real,v_new,"", "public", false, false, false, "unspecified", "none", "unspecified"}}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>setComponentProperties(BouncingBall,e, false, false, false,false, "parameter", {false,false}, "")  //??Error in example</Input>
     <Output>
OMC-ERROR: 
"Class setComponentProperties (its type)  not found in scope &lt;global scope>.
No matching function found for setComponentProperties, candidates are 
Class setComponentProperties not found in scope &lt;global scope>.
"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getComponentAnnotations(Modelica.Electrical.Analog.Basic.Ground)</Input>
     <Output>{{true,0.0,100.0,0.1,1.0,false,true,-90.0,0.0,100.0,0.1,1.0,false,true,-90.0}}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getCrefInfo(BouncingBall)</Input>
     <Output>C:/OpenModelica1.4.2/testmodels/BouncingBall.mo,writable,1,1,20,17</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>addComponent(e2,Real,BouncingBall);
addComponent(e3,Real,BouncingBall)</Input>
     <Output>true
true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>list(BouncingBall) // Verify that e2 and e3 have been added</Input>
     <Output>"model BouncingBall
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;
  Real e2;
  Real e3;

equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
      v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
reinit(v, v_new);
  
  end when;
end BouncingBall;

"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>deleteComponent(e2,BouncingBall)</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>list(BouncingBall) // Verify that only e3 is left</Input>
     <Output>"model BouncingBall
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;
  Real e3;

equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
      v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
reinit(v, v_new);
  
  end when;
end BouncingBall;

"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>updateComponent(e3,Integer,BouncingBall)</Input>
     <Output>true</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>list(BouncingBall) // Verify that the type has changed to Integer</Input>
     <Output>"model BouncingBall
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;
  Integer e3;

equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
      v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
reinit(v, v_new);
  
  end when;
end BouncingBall;

"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>renameComponent(BouncingBall,e3,e3_renamed)</Input>
     <Output>{BouncingBall}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>list(BouncingBall)  // Verify that e3 has been renamed</Input>
     <Output>"model BouncingBall
  parameter Real e=0.7 "coefficient of restitution";
  parameter Real g=9.81 "gravity acceleration";
  Real h(start=1) "height of ball";
  Real v "velocity of ball";
  Boolean flying(start=true) "true, if ball is flying";
  Boolean impact;
  Real v_new;
  Integer e3_renamed;

equation 
  impact=h &lt;= 0.0;
  der(v)=if flying then -g else 0;
  der(h)=v;
  when {h &lt;= 0.0 and v &lt;= 0.0,impact} then
      v_new=if edge(impact) then -e*pre(v) else 0;
    flying=v_new > 0;
reinit(v, v_new);
  
  end when;
end BouncingBall;

"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getNthComponentAnnotation(Modelica.Electrical.Analog.Basic.Ground,1)</Input>
     <Output>{{true,0.0,100.0,0.1,1.0,false,true,-90.0,0.0,100.0,0.1,1.0,false,true,-90.0}}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getNthComponentModification(BouncingBall,1)</Input>
     <Output>{Code(=0.7)}</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getComponentModifierValue(BouncingBall,e)</Input>
     <Output>0.7</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>setComponentModifierValue(BouncingBall,e,0.87) //??Error in example</Input>
     <Output>
OMC-ERROR: 
"Class setComponentModifierValue (its type)  not found in scope &lt;global scope>.
No matching function found for setComponentModifierValue, candidates are 
Class setComponentModifierValue not found in scope &lt;global scope>.
"</Output>
    </InputCell>
    <InputCell style="Input" closed="false" >
     <Input>getComponentModifierNames(BouncingBall,e)</Input>
     <Output>{}</Output>
    </InputCell>
    <GroupCell closed="false" >
     <TextCell style="Section" >
      <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Inheritance&lt;/p>&lt;/body>&lt;/html></Text>
     </TextCell>
     <TextCell style="Text" >
      <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Calls relating to inheritance properties.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
     </TextCell>
     <InputCell style="Input" closed="false" >
      <Input>getInheritanceCount(Modelica.Electrical.Analog.Basic.Resistor)</Input>
      <Output>1</Output>
     </InputCell>
     <InputCell style="Input" closed="false" >
      <Input>getNthInheritedClass(Modelica.Electrical.Analog.Basic.Resistor,1)</Input>
      <Output>Modelica.Electrical.Analog.Interfaces.OnePort</Output>
     </InputCell>
     <InputCell style="Input" closed="false" >
      <Input>getExtendsModifierNames(Modelica.Electrical.Analog.Basic.Resistor,Modelica.Electrical.Analog.Interfaces.OnePort)</Input>
      <Output>{}</Output>
     </InputCell>
     <InputCell style="Input" closed="false" >
      <Input>//getExtendsModifierValue(??)  ??Incomplete example</Input>
      <Output>Error occured building AST
Syntax Error</Output>
     </InputCell>
    </GroupCell>
    <GroupCell closed="false" >
     <TextCell style="Section" >
      <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Connections&lt;/p>&lt;/body>&lt;/html></Text>
     </TextCell>
     <TextCell style="Text" >
      <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Calls relating to connections.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
     </TextCell>
     <InputCell style="Input" closed="false" >
      <Input>getConnectionCount(Modelica.Electrical.Analog.Basic.Resistor)</Input>
      <Output>0</Output>
     </InputCell>
     <InputCell style="Input" closed="false" >
      <Input>//getNthConnection(...)) ??Incomplete</Input>
      <Output>Modelica.Electrical.Analog.Interfaces.OnePort</Output>
     </InputCell>
     <InputCell style="Input" closed="false" >
      <Input>//getNthConnectionAnnotation(A1&lt;cref>,A2&lt;int>) ??Incomplete</Input>
      <Output>{}</Output>
     </InputCell>
     <InputCell style="Input" closed="false" >
      <Input>//getExtendsModifierValue(??)  ??Incomplete example</Input>
      <Output>Error occured building AST
Syntax Error</Output>
     </InputCell>
     <InputCell style="Input" closed="true" >
      <Input>//addConnection(A1&lt;cref>,A2&lt;cref>,
A3&lt;cref>, annotate=&lt;expr>)</Input>
      <Output></Output>
     </InputCell>
     <InputCell style="Input" closed="true" >
      <Input>//updateConnection(A1&lt;cref>,A2&lt;cref>,A3&lt;cref>,annotate=&lt;expr>)</Input>
      <Output></Output>
     </InputCell>
     <InputCell style="Input" closed="true" >
      <Input>//deleteConnection(A1&lt;cref>,A2&lt;cref>,A3&lt;cref>)</Input>
      <Output></Output>
     </InputCell>
    </GroupCell>
   </GroupCell>
   <GroupCell closed="false" >
    <TextCell style="Section" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:Times; font-size:18pt; font-weight:600; color:#000000;">Miscellaneous&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <TextCell style="Text" >
     <Text>&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;/head>&lt;body style=" white-space: pre-wrap; font-family:MS Shell Dlg; font-size:8.25pt; font-weight:400; font-style:normal; text-decoration:none;">&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;">&lt;span style=" font-family:Times New Roman; font-size:12pt; color:#000000;">Miscellaneous calls.&lt;/span>&lt;/p>&lt;/body>&lt;/html></Text>
    </TextCell>
    <InputCell style="Input" closed="false" >
     <Input>getVersion()</Input>
     <Output>"1.4.2"</Output>
    </InputCell>
   </GroupCell>
  </GroupCell>
 </GroupCell>
</Notebook>
