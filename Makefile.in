all : release qtclients mosh

autoconfGeneratedFiles = @GENERATED_AUTOCONF_FILES@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
includedir = @includedir@
datadir = @datadir@
docdir = @docdir@

defaultMakefileTarget = Makefile
QMAKE=@QMAKE@
EXE=@EXE@

CFLAGS=@CFLAGS@

include Makefile.common

# We don't need OMDEV hacks, but using the same Makefile sure is nice!
.testvariables:
settings:

omc: c_runtime docs
	(cd Compiler && $(MAKE) -f Makefile release)

omcd: c_runtime docs
	(cd Compiler && $(MAKE) -f Makefile debug)

qtclean-common:
	rm -rf OMNotebook/ext/ext$(EXE) OMNotebook/ext/OMPlotWindow$(EXE)
	rm -rf OMShell/OMShell$(EXE) OMShell/omc_communication.*
	rm -rf OMNotebook/OMNotebookQT4/OMNotebook$(EXE) OMNotebook/OMNotebookQT4/omc_communication.*
ifeq ($(QMAKE),)
qtclients:
	@echo "*** OpenModelica configured without support for Qt"
qtclean: qtclean-common
else ifeq (@IDLCMD@,)
qtclients:
	@echo "*** OpenModelica configured without support for CORBA"
qtclean: qtclean-common
else
omnotebook: mkbuilddirs
	make -C OMNotebook/OMNotebookQT4 -f Makefile.unix 
omshell: mkbuilddirs
	make -C OMShell -f Makefile.unix
omplotwindow: mkbuilddirs
	make -C OMNotebook/ext -f Makefile.unix
omedit: mkbuilddirs omnotebook
	make -C OMEdit/OMEditGUI -f Makefile.unix

qtclients: omnotebook omshell omplotwindow omedit

qtclean: qtclean-common
	make -C OMShell -f Makefile.unix clean
	make -C OMNotebook/ext -f Makefile.unix clean
	make -C OMNotebook/OMNotebookQT4 -f Makefile.unix clean
endif

fix-svn-eol-style:
	#svn propset svn:eol-style LF `find testsuite/ Compiler/ libraries/ | grep "\.mos\?\$$" | grep -v parser/ParseModel`
	svn propset svn:eol-style LF `find c_runtime/ Compiler/runtime/ libraries/ OMEdit/ OMNotebook/ | egrep "\.[ch]\$$|\.[ch]pp\$$"`
	svn propset svn:eol-style LF `find . | grep /Makefile\$$`
	svn propset svn:eol-style LF `find . | grep /Makefile.in\$$`

.PRECIOUS: Makefile

Makefile: Makefile.in
	$(top_builddir)/config.status
