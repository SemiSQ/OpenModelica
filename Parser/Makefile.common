COMPILERHOME=../Compiler/
BUILDINC = -I../build/include/omc
RMLINC	= -I$(RMLHOME)/include/plain

ANTLRCMD=java -cp ./antlr-3.2/lib/antlr-3.2.jar org.antlr.Tool -report
CPPFLAGS=-I$(COMPILERHOME) $(RMLINC) -I. -Iantlr-3.2/runtime/C -Iantlr-3.2/runtime/C/include $(BUILDINC)

.PHONY: all
.SUFFIXES: .c .o
all: install libomparse_rml.a

install: libantlr3.a libomparse.a
	cp libantlr3.a libomparse.a ../build/lib/omc/

libantlr3.a: antlr-3.2/runtime/C/src/* antlr-3.2/runtime/C/include/* 
	# build the library
	$(REAL_CC) ${CFLAGS} -c antlr-3.2/runtime/C/src/*.c -Iantlr-3.2/runtime/C/include -Iantlr-3.2/runtime/C
	rm -f $@
	ar -ru libantlr3.a antlr3*.o
	ranlib libantlr3.a
	rm -f antlr3*.o

HFILES = \
  ModelicaParser.h \
  ModelicaParserCommon.h \
  MetaModelica_Lexer.h \
  MetaModelica_Lexer_BaseModelica_Lexer.h \
  ParModelica_Lexer.h \
  ParModelica_Lexer_BaseModelica_Lexer.h \
  Modelica_3_Lexer.h \
  Modelica_3_Lexer_BaseModelica_Lexer.h

OBJS = \
ParModelica_Lexer_BaseModelica_Lexer.o ParModelica_Lexer.o \
MetaModelica_Lexer_BaseModelica_Lexer.o MetaModelica_Lexer.o \
Modelica_3_Lexer_BaseModelica_Lexer.o Modelica_3_Lexer.o

ParModelica_Lexer.o: ParModelica_Lexer.h ParModelica_Lexer_BaseModelica_Lexer.h ../Compiler/runtime/errorext.h
MetaModelica_Lexer.o: MetaModelica_Lexer.h MetaModelica_Lexer_BaseModelica_Lexer.h ../Compiler/runtime/errorext.h
Modelica_3_Lexer.o: Modelica_3_Lexer.h Modelica_3_Lexer_BaseModelica_Lexer.h ../Compiler/runtime/errorext.h
ParModelica_Lexer_BaseModelica_Lexer.o: ParModelica_Lexer_BaseModelica_Lexer.h ../Compiler/runtime/errorext.h
MetaModelica_Lexer_BaseModelica_Lexer.o: MetaModelica_Lexer_BaseModelica_Lexer.h ../Compiler/runtime/errorext.h
Modelica_3_Lexer_BaseModelica_Lexer.o: Modelica_3_Lexer_BaseModelica_Lexer.h ../Compiler/runtime/errorext.h
ModelicaParser_rml.o: ModelicaParser.c ModelicaParser.h ModelicaParserCommon.h ../Compiler/Absyn.h ../Compiler/Interactive.h ../Compiler/runtime/errorext.h
ModelicaParser_omc.o: ModelicaParser.c ModelicaParser.h ModelicaParserCommon.h ../Compiler/OpenModelicaBootstrappingHeader.h ../Compiler/runtime/errorext.h

Parser_rml.o: $(HFILES) parse.c lookupTokenName.c
Parser_omc.o: $(HFILES) parse.c lookupTokenName.c ../SimulationRuntime/c/meta/rml_compatibility.h

libomparse_rml.a: Parser_rml.o $(OBJS) ModelicaParser_rml.o
	rm -f $@
	ar -ru $@ Parser_rml.o $(OBJS) ModelicaParser_rml.o
	ranlib $@

libomparse.a: Parser_omc.o $(OBJS) ModelicaParser_omc.o
	rm -f $@
	ar -ru $@ Parser_omc.o $(OBJS) ModelicaParser_omc.o
	ranlib $@

parsergen = ModelicaParser.c ModelicaParser.h
modelica3gen = Modelica_3_Lexer_BaseModelica_Lexer.c Modelica_3_Lexer_BaseModelica_Lexer.h Modelica_3_Lexer.c Modelica_3_Lexer.h
metamodelicagen = MetaModelica_Lexer_BaseModelica_Lexer.c MetaModelica_Lexer_BaseModelica_Lexer.h MetaModelica_Lexer.c MetaModelica_Lexer.h
parmodelicagen = ParModelica_Lexer_BaseModelica_Lexer.c ParModelica_Lexer_BaseModelica_Lexer.h ParModelica_Lexer.c ParModelica_Lexer.h

ModelicaParser.stamp: Modelica.g
	@rm -f $@.tmp
	@touch $@.tmp
	@touch $<
	$(ANTLRCMD) $<
	@touch -c $(parsergen)
	@mv -f $@.tmp $@
Modelica_3_Lexer.stamp: Modelica_3_Lexer.g BaseModelica_Lexer.g
	@rm -f $@.tmp
	@touch $@.tmp
	@touch $<
	$(ANTLRCMD) $<
	@touch -c $(modelica3gen)
	@mv -f $@.tmp $@
MetaModelica_Lexer.stamp: MetaModelica_Lexer.g BaseModelica_Lexer.g
	@rm -f $@.tmp
	@touch $@.tmp
	@touch $<
	$(ANTLRCMD) $<
	@touch -c $(metamodelicagen)
	@mv -f $@.tmp $@
ParModelica_Lexer.stamp: ParModelica_Lexer.g BaseModelica_Lexer.g
	@rm -f $@.tmp
	@touch $@.tmp
	@touch $<
	$(ANTLRCMD) $<
	@touch -c $(parmodelicagen)
	@mv -f $@.tmp $@
	
$(parsergen) : ModelicaParser.stamp
	## Recover from the removal of $@
	@if test -f $@; then :; else \
	rm -f $<; \
	$(MAKE) $<; \
	fi

$(modelica3gen) : Modelica_3_Lexer.stamp
	## Recover from the removal of $@
	@if test -f $@; then :; else \
	rm -f $<; \
	$(MAKE) $<; \
	fi

$(metamodelicagen) : MetaModelica_Lexer.stamp
	## Recover from the removal of $@
	@if test -f $@; then :; else \
	rm -f $<; \
	$(MAKE) $<; \
	fi
	
$(parmodelicagen) : ParModelica_Lexer.stamp
	## Recover from the removal of $@
	@if test -f $@; then :; else \
	rm -f $<; \
	$(MAKE) $<; \
	fi



clean:
	rm -f *.o *.a \
ModelicaParser.c ModelicaParser.h \
*Modelica*_Lexer.c *Modelica*_Lexer.h \
*.tokens *.stamp *.stamp.tmp
