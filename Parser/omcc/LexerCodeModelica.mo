package LexerCodeModelica // Generated  Generated by OMCC v0.9.3 (OpenModelica Compiler- Compiler) Copyright 2011 Open Souce Modelica Consorsium (OSMC) Wed Jun 22 15:53:46 2011

  /* 
   Template for Lexer Code
   replace keywords:
   %LexerCode
   %time
   %Token
   %Lexer
   %ParseTable
   %constant
   %nameSpan
   %functions
   %caseAction
  */
import Types;
import TokenModelica;
import LexerModelica;
import ParseTableModelica;


  

 function action
    input Integer act;
    input LexerModelica.Env env;
    output Option<OMCCTypes.Token> token;
    output LexerModelica.Env env2;
    Integer mm_startSt,mm_currSt,mm_pos,mm_sPos,mm_ePos,mm_linenr,mm_flinenr;
    list<Integer> buffer,bkBuffer,tb,bufferRet;
    OMCCTypes.Info info;
    array<String> tokName;
    String sToken,fileNm;
    Integer nameSpan, act2;
    Boolean debug;
  algorithm
    LexerModelica.ENV(startSt=mm_startSt,currSt=mm_currSt,pos=mm_pos,sPos=mm_sPos,ePos=mm_ePos,
     linenr=mm_linenr,buff=buffer,bkBuf=bkBuffer,isDebugging=debug,fileName=fileNm) := env;
     //buffer := listReverse(buffer);
     
     tokName := listArray(ParseTableModelica.yytname);
     nameSpan := 255;
     tb := buffer;
     //(tb,mm_flinenr) := LexerModelica.lineUpd(tb,mm_flinenr);
    // info := LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
     //info := OMCCTypes.INFO(fileNm,false,mm_linenr,mm_sPos,mm_flinenr,mm_pos);
    // print("\n" + intString(act) + ":");
     act2 := act;
     bufferRet := {};
     (token) := matchcontinue (act)
       local 
         OMCCTypes.Token tok;
       case (1) // #line 34 "lexerModelica.l"
         then (NONE());
       case (2) // #line 35 "lexerModelica.l"
         equation
           act2 = TokenModelica.UNSIGNED_REAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (3) // #line 36 "lexerModelica.l"
         equation
           act2 = TokenModelica.UNSIGNED_REAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (4) // #line 37 "lexerModelica.l"
         equation
           act2 = TokenModelica.UNSIGNED_REAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tb = listReverse(buffer);
           sToken = LexerModelica.printBuffer(tb);
           Error.addSourceMessage(6000,{"Treating "+ sToken +" as 0"+sToken+". This is not standard Modelica and only done for compatibility with old code. Support for this feature may be removed in the future."},info);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (5) // #line 38 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENDIF;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (6) // #line 39 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENDFOR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (7) // #line 40 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENDWHILE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (8) // #line 41 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENDWHEN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (9) // #line 42 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENDMATCHCONTINUE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (10) // #line 43 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENDMATCH;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (11) // #line 44 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENDCLASS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (12) // #line 45 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_ALGORITHM;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (13) // #line 46 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_AND;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (14) // #line 47 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_ANNOTATION;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (15) // #line 48 "lexerModelica.l"
         equation
           act2 = TokenModelica.BLOCK;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (16) // #line 49 "lexerModelica.l"
         equation
           act2 = TokenModelica.CLASS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (17) // #line 50 "lexerModelica.l"
         equation
           act2 = TokenModelica.CONNECT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (18) // #line 51 "lexerModelica.l"
         equation
           act2 = TokenModelica.CONNECTOR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (19) // #line 52 "lexerModelica.l"
         equation
           act2 = TokenModelica.CONSTANT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (20) // #line 53 "lexerModelica.l"
         equation
           act2 = TokenModelica.DISCRETE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (21) // #line 54 "lexerModelica.l"
         equation
           act2 = TokenModelica.DER;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (22) // #line 55 "lexerModelica.l"
         equation
           act2 = TokenModelica.DEFINEUNIT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (23) // #line 56 "lexerModelica.l"
         equation
           act2 = TokenModelica.EACH;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (24) // #line 57 "lexerModelica.l"
         equation
           act2 = TokenModelica.ELSE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (25) // #line 58 "lexerModelica.l"
         equation
           act2 = TokenModelica.ELSEIF;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (26) // #line 59 "lexerModelica.l"
         equation
           act2 = TokenModelica.ELSEWHEN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (27) // #line 60 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_END;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (28) // #line 61 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENUMERATION;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (29) // #line 62 "lexerModelica.l"
         equation
           act2 = TokenModelica.EQUATION;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (30) // #line 63 "lexerModelica.l"
         equation
           act2 = TokenModelica.ENCAPSULATED;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (31) // #line 64 "lexerModelica.l"
         equation
           act2 = TokenModelica.EXPANDABLE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (32) // #line 65 "lexerModelica.l"
         equation
           act2 = TokenModelica.EXTENDS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (33) // #line 66 "lexerModelica.l"
         equation
           act2 = TokenModelica.CONSTRAINEDBY;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (34) // #line 67 "lexerModelica.l"
         equation
           act2 = TokenModelica.EXTERNAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (35) // #line 68 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_FALSE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (36) // #line 69 "lexerModelica.l"
         equation
           act2 = TokenModelica.FINAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (37) // #line 70 "lexerModelica.l"
         equation
           act2 = TokenModelica.FLOW;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (38) // #line 71 "lexerModelica.l"
         equation
           act2 = TokenModelica.FOR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (39) // #line 72 "lexerModelica.l"
         equation
           act2 = TokenModelica.FUNCTION;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (40) // #line 73 "lexerModelica.l"
         equation
           act2 = TokenModelica.IF;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (41) // #line 74 "lexerModelica.l"
         equation
           act2 = TokenModelica.IMPORT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (42) // #line 75 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_IN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (43) // #line 76 "lexerModelica.l"
         equation
           act2 = TokenModelica.INITIAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (44) // #line 77 "lexerModelica.l"
         equation
           act2 = TokenModelica.INNER;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (45) // #line 78 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_INPUT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (46) // #line 79 "lexerModelica.l"
         equation
           act2 = TokenModelica.LOOP;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (47) // #line 80 "lexerModelica.l"
         equation
           act2 = TokenModelica.MODEL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (48) // #line 81 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_NOT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (49) // #line 82 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_OUTER;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (50) // #line 83 "lexerModelica.l"
         equation
           act2 = TokenModelica.OPERATOR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (51) // #line 84 "lexerModelica.l"
         equation
           act2 = TokenModelica.OVERLOAD;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (52) // #line 85 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_OR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (53) // #line 86 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_OUTPUT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (54) // #line 87 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_PACKAGE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (55) // #line 88 "lexerModelica.l"
         equation
           act2 = TokenModelica.PARAMETER;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (56) // #line 89 "lexerModelica.l"
         equation
           act2 = TokenModelica.PARTIAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (57) // #line 90 "lexerModelica.l"
         equation
           act2 = TokenModelica.PROTECTED;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (58) // #line 91 "lexerModelica.l"
         equation
           act2 = TokenModelica.PUBLIC;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (59) // #line 92 "lexerModelica.l"
         equation
           act2 = TokenModelica.RECORD;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (60) // #line 93 "lexerModelica.l"
         equation
           act2 = TokenModelica.REDECLARE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (61) // #line 94 "lexerModelica.l"
         equation
           act2 = TokenModelica.REPLACEABLE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (62) // #line 95 "lexerModelica.l"
         equation
           act2 = TokenModelica.RESULTS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (63) // #line 96 "lexerModelica.l"
         equation
           act2 = TokenModelica.THEN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (64) // #line 97 "lexerModelica.l"
         equation
           act2 = TokenModelica.T_TRUE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (65) // #line 98 "lexerModelica.l"
         equation
           act2 = TokenModelica.TYPE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (66) // #line 99 "lexerModelica.l"
         equation
           act2 = TokenModelica.UNSIGNED_REAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (67) // #line 100 "lexerModelica.l"
         equation
           act2 = TokenModelica.WHEN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (68) // #line 101 "lexerModelica.l"
         equation
           act2 = TokenModelica.WHILE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (69) // #line 102 "lexerModelica.l"
         equation
           act2 = TokenModelica.WITHIN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (70) // #line 103 "lexerModelica.l"
         equation
           act2 = TokenModelica.RETURN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (71) // #line 104 "lexerModelica.l"
         equation
           act2 = TokenModelica.BREAK;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (72) // #line 106 "lexerModelica.l"
         equation
           act2 = TokenModelica.LPAR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (73) // #line 107 "lexerModelica.l"
         equation
           act2 = TokenModelica.RPAR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (74) // #line 108 "lexerModelica.l"
         equation
           act2 = TokenModelica.LBRACK;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (75) // #line 109 "lexerModelica.l"
         equation
           act2 = TokenModelica.RBRACK;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (76) // #line 110 "lexerModelica.l"
         equation
           act2 = TokenModelica.LBRACE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (77) // #line 111 "lexerModelica.l"
         equation
           act2 = TokenModelica.RBRACE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (78) // #line 112 "lexerModelica.l"
         equation
           act2 = TokenModelica.EQEQ;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (79) // #line 113 "lexerModelica.l"
         equation
           act2 = TokenModelica.EQUALS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (80) // #line 114 "lexerModelica.l"
         equation
           act2 = TokenModelica.COMMA;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (81) // #line 115 "lexerModelica.l"
         equation
           act2 = TokenModelica.ASSIGN;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (82) // #line 116 "lexerModelica.l"
         equation
           act2 = TokenModelica.COLONCOLON;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (83) // #line 117 "lexerModelica.l"
         equation
           act2 = TokenModelica.COLON;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (84) // #line 118 "lexerModelica.l"
         equation
           act2 = TokenModelica.SEMICOLON;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (85) // #line 120 "lexerModelica.l"
         equation
           act2 = TokenModelica.CODE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (86) // #line 121 "lexerModelica.l"
         equation
           act2 = TokenModelica.CODE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (87) // #line 122 "lexerModelica.l"
         equation
           act2 = TokenModelica.CODE_NAME;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (88) // #line 123 "lexerModelica.l"
         equation
           act2 = TokenModelica.CODE_EXP;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (89) // #line 124 "lexerModelica.l"
         equation
           act2 = TokenModelica.CODE_VAR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (90) // #line 126 "lexerModelica.l"
         equation
           act2 = TokenModelica.PURE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (91) // #line 127 "lexerModelica.l"
         equation
           act2 = TokenModelica.IMPURE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (92) // #line 129 "lexerModelica.l"
         equation
           act2 = TokenModelica.PLUS_EW;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (93) // #line 130 "lexerModelica.l"
         equation
           act2 = TokenModelica.MINUS_EW;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (94) // #line 131 "lexerModelica.l"
         equation
           act2 = TokenModelica.STAR_EW;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (95) // #line 132 "lexerModelica.l"
         equation
           act2 = TokenModelica.SLASH_EW;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (96) // #line 133 "lexerModelica.l"
         equation
           act2 = TokenModelica.POWER_EW;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (97) // #line 135 "lexerModelica.l"
         equation
           act2 = TokenModelica.STAR;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (98) // #line 136 "lexerModelica.l"
         equation
           act2 = TokenModelica.MINUS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (99) // #line 137 "lexerModelica.l"
         equation
           act2 = TokenModelica.PLUS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (100) // #line 138 "lexerModelica.l"
         equation
           act2 = TokenModelica.LESSEQ;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (101) // #line 139 "lexerModelica.l"
         equation
           act2 = TokenModelica.LESSGT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (102) // #line 140 "lexerModelica.l"
         equation
           act2 = TokenModelica.LESS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (103) // #line 141 "lexerModelica.l"
         equation
           act2 = TokenModelica.GREATER;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (104) // #line 142 "lexerModelica.l"
         equation
           act2 = TokenModelica.GREATEREQ;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (105) // #line 144 "lexerModelica.l"
         equation
           act2 = TokenModelica.POWER;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (106) // #line 145 "lexerModelica.l"
         equation
           act2 = TokenModelica.SLASH;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (107) // #line 147 "lexerModelica.l"
         equation
           act2 = TokenModelica.AS;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (108) // #line 148 "lexerModelica.l"
         equation
           act2 = TokenModelica.CASE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (109) // #line 149 "lexerModelica.l"
         equation
           act2 = TokenModelica.EQUALITY;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (110) // #line 150 "lexerModelica.l"
         equation
           act2 = TokenModelica.FAILURE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (111) // #line 151 "lexerModelica.l"
         equation
           act2 = TokenModelica.GUARD;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (112) // #line 152 "lexerModelica.l"
         equation
           act2 = TokenModelica.LOCAL;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (113) // #line 153 "lexerModelica.l"
         equation
           act2 = TokenModelica.MATCH;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (114) // #line 154 "lexerModelica.l"
         equation
           act2 = TokenModelica.MATCHCONTINUE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (115) // #line 155 "lexerModelica.l"
         equation
           act2 = TokenModelica.UNIONTYPE;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (116) // #line 156 "lexerModelica.l"
         equation
           act2 = TokenModelica.ALLWILD;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (117) // #line 157 "lexerModelica.l"
         equation
           act2 = TokenModelica.WILD;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (118) // #line 158 "lexerModelica.l"
         equation
           act2 = TokenModelica.SUBTYPEOF;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (119) // #line 159 "lexerModelica.l"
         equation
           act2 = TokenModelica.MOD;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (120) // #line 161 "lexerModelica.l"
         equation
           act2 = TokenModelica.STREAM;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (121) // #line 163 "lexerModelica.l"
         equation
           act2 = TokenModelica.DOT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (122) // #line 165 "lexerModelica.l"
         equation
           act2 = TokenModelica.STRING;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (123) // #line 167 "lexerModelica.l"
         equation
           act2 = TokenModelica.IDENT;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (124) // #line 168 "lexerModelica.l"
         equation
           act2 = TokenModelica.UNSIGNED_INTEGER;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (125) // #line 170 "lexerModelica.l"
         equation 
           mm_startSt = 7;
           bufferRet = buffer;
         then (NONE());
       case (126) // #line 175 "lexerModelica.l"
         equation
           bufferRet = buffer;
         then (NONE());
       case (127) // #line 176 "lexerModelica.l"
         equation
           bufferRet = buffer;
         then (NONE());
       case (128) // #line 177 "lexerModelica.l"
         equation 
           mm_startSt = 1;
           act2 = TokenModelica.STRING;
           info = LexerModelica.getInfo(tb,mm_sPos,mm_linenr,fileNm);
           tok = OMCCTypes.TOKEN(tokName[act2-nameSpan],act2,listReverse(buffer),info);
         then (SOME(tok));
        case (129) // #line 178 "lexerModelica.l"
         equation
           bufferRet = buffer;
         then (NONE());
       case (130) // #line 179 "lexerModelica.l"
         equation
           bufferRet = buffer;
         then (NONE());
       case (131) // #line 186 "lexerModelica.l"
         equation 
           mm_startSt = 3;
         then (NONE());
       case (132) // #line 191 "lexerModelica.l"
         equation 
           mm_startSt = 1;
         then (NONE());
       case (133) // #line 192 "lexerModelica.l"
         then (NONE());
       case (134) // #line 193 "lexerModelica.l"
         then (NONE());
       case (135) // #line 194 "lexerModelica.l"
         then (NONE());
       case (136) // #line 201 "lexerModelica.l"
         equation 
           mm_startSt = 5;
           bufferRet = buffer;
         then (NONE());
       case (137) // #line 207 "lexerModelica.l"
         equation 
           mm_startSt = 1;
         then (NONE());
       case (138) // #line 208 "lexerModelica.l"
         then (NONE());
       case (139) // #line 213 "lexerModelica.l"
         then (NONE());

       case (_)
         equation
          // print("[enter else]");
           tb = buffer;
           sToken = LexerModelica.printBuffer(tb);
           print("ERROR TOKEN NOT FOUND:['" + sToken + "' TK:" + intString(act)  + "," + tokName[act2] + "]");
           tok = OMCCTypes.TOKEN(tokName[act2],act,listReverse(buffer),info);
         then (NONE());
     end matchcontinue;
     env2 := LexerModelica.ENV(mm_startSt,mm_startSt,mm_pos,mm_sPos,mm_sPos,mm_linenr,bufferRet,bkBuffer,{mm_startSt},debug,fileNm);
     if (debug==true) then 
        tb := buffer;
        sToken := LexerModelica.printBuffer(tb);
       print("\n[TOKEN:'" + sToken + "' ("+ intString(mm_linenr) + ":" + intString(mm_sPos) +") id:" + intString(act2)  + "]");
     end if;   
  end action;  
   



end LexerCodeModelica;