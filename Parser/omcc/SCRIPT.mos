
//setCommandLineOptions({"+g=MetaModelica","+d=rml,noevalfunc"});
getInstallationDirectoryPath();
//setCommandLineOptions("+g=MetaModelica","+d=rml,noevalfunc");
loadFile("Absyn.mo");
loadFile("AbsynPAM.mo");
loadFile("Types.mo");

/* loadFile("Token.mo");
loadFile("LexTable.mo");
loadFile("LexerCode.mo");
loadFile("Lexer.mo");
loadFile("ParseCode.mo");
loadFile("Parser.mo");
loadFile("ParseTable.mo");
loadFile("Error.mo"); */
loadFile("../trunk/Compiler/FrontEnd/Dump.mo");
loadFile("../trunk/Compiler/Util/Print.mo");

loadFile("TokenModelica.mo");
loadFile("LexTableModelica.mo");
loadFile("LexerCodeModelica.mo");
loadFile("LexerModelica.mo");
loadFile("ParseCodeModelica.mo");
loadFile("ParserModelica.mo");
loadFile("ParseTableModelica.mo");

loadFile("Parser10.mo");
loadFile("LexerCode10.mo");
loadFile("ParseCode10.mo");
loadFile("Token10.mo");
loadFile("LexTable10.mo");
loadFile("Lexer10.mo");
loadFile("ParseTable10.mo"); 

loadFile("Main.mo");
loadFile("RTOpts.mo");
loadFile("Util.mo");
loadFile("System.mo");
//loadFile("Program.mo");
loadFile("Emit.mo");
loadFile("Mcode.mo");
loadFile("Trans.mo");
loadFile("LexerGenerator.mo");
loadFile("ParserGenerator.mo");

//System.systemCall("bison parser10.y --output=parser10.c");
//System.systemCall("flex -t -l lexer10.l > lexer10.c");

//Main.main({"","10"});
//Main.main({"","4"});
//Main.main({"program.mo","10"});
//Main.main({"TestGrammar.mo","Modelica"});
Main.main({"Main.mo","Modelica"});
Main.main({"ParserGenerator.mo","Modelica"});
Main.main({"LexerGenerator.mo","Modelica"});
Main.main({"ParserModelica.mo","Modelica"});
Main.main({"LexerModelica.mo","Modelica"});
//Main.main({"program4.txt","4"});
getErrorString();