AR = ar -ru
ANSI= #-ansi
CXXFLAGS := $(CFLAGS) -Wall $(ANSI) $(EXTRA_CFLAGS)
CFLAGS := $(CFLAGS) -Wall $(ANSI) -pedantic $(EXTRA_CFLAGS)
CPPFLAGS = -I. -Iinteractive/ -Imeta/ -I../
FFLAGS  = -O -fexceptions
# P.A: before, g77 had -O3 or -O2 but that caused a bug in DDASRT, giving infinite loop.

LIBS = libsim.a libmath-support.a lib.a libutil.a libmeta.a libf2c.a libresult.a libModelicaExternalC.a 

.PHONY : libsendData.a interactive/libinteractive.a ModelicaExternalC/libModelicaExternalC.a

all : install

simulation_result_plt.o : $(CONFIG_H)

#recompile all if a header changes!
$(SIM_OBJS) : $(HFILES)
$(QSS_OBJS) : $(HFILES)

# Commented out due to the script not running on all platform, and rarely changes
#meta/meta_modelica_string_lit.h: meta/meta_modelica_gen_string_lit.sh
#	sh $< h > $@.tmp
#	mv $@.tmp $@
#meta/meta_modelica_string_lit.c: meta/meta_modelica_gen_string_lit.sh
#	sh $< > $@.tmp
#	mv $@.tmp $@

libSimulationRuntimeC.a : $(SIM_OBJS) $(HFILES)
	$(AR) $@ $(SIM_OBJS)
	ranlib $@

libSimulationRuntimeQss.a : $(QSS_OBJS) $(HFILES)
	$(AR) $@ $(QSS_OBJS)
	ranlib $@	

simulation_runtime_qss.o: simulation_runtime.cpp
	$(CXX) $(CPPFLAGS) -c -o $@ simulation_runtime.cpp -D_OMC_QSS_LIB

ModelicaExternalC/libModelicaExternalC.a: $(addprefix ModelicaExternalC/,ModelicaInternal.c ModelicaStrings.c ModelicaTablesImpl.c) $(HFILES)
	$(MAKE) -C ModelicaExternalC -f $(EXTERNALCMAKEFILE)

interactive/libinteractive.a : interactive/omi_Calculation.cpp interactive/omi_Control.cpp interactive/omi_ResultManager.cpp interactive/omi_ServiceInterface.cpp interactive/omi_Transfer.cpp interactive/socket.cpp interactive/thread.cpp
	$(MAKE) -C interactive -f $(INTERACTIVEMAKEFILE)

libf2c/libf2c.a :
	cd libf2c && $(MAKE) -f $(LIBF2CMAKEFILE)
	ranlib $@

meta/meta_modelica_catch.o : meta/meta_modelica_catch.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ -g $<

# Requires IEEE floating-point precision
simulation_input.o : simulation_input.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -mfpmath=sse -c -g $<
simulation_events.o : simulation_events.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -mfpmath=sse -c -g $<

install: libSimulationRuntimeC.a libSimulationRuntimeQss.a $(LIBF2C) interactive/libinteractive.a $(LIBSENDDATA) omdevinstall ModelicaExternalC/libModelicaExternalC.a
	cp $(HFILES) $(builddir_inc)/
	cp fmu_model_interface.c $(builddir_inc)/
	cp $(LIBS) $(builddir_lib)/
	test -z "$(LIBF2C)" || cp libf2c/libf2c.* $(builddir_lib)/
	test -z "$(LIBSENDDATA)" || cp sendData/release/$(LIBSENDDATA) $(builddir_lib)/
	cp interactive/libinteractive.a $(builddir_lib)/
	@$(MAKE) -C java_interface -f $(JAVAMAKEFILE) && \
	$(MAKE) -C java_interface -f $(JAVAMAKEFILE) install || \
	$(MAKE) -C java_interface -f $(JAVAMAKEFILE) install-nomodelica

clean :
	test -z "$(LIBF2C)" || $(MAKE) -C libf2c -f $(LIBF2CMAKEFILE) clean
	$(MAKE) -C java_interface -f $(JAVAMAKEFILE) clean
	$(MAKE) -C interactive -f $(INTERACTIVEMAKEFILE) clean
	$(MAKE) -C ModelicaExternalC -f $(EXTERNALCMAKEFILE) clean
	rm -f libSimulationRuntimeC.a libSimulationRuntimeQss.a
	rm -f $(OBJS) $(SIM_OBJS) $(QSS_OBJS)
	cd sendData && rm -fr release debug *sendData*.o *sendData*.a
	rm -rf sendData/release sendData/debug
	rm -f sendData.o sendData.a sendData/sendDataHumbug.o sendData/releasesendData.o sendData/Makefile solver_qss/*.o


