<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:y="http://www.yworks.com/xml/graphml" xmlns:yed="http://www.yworks.com/xml/yed/3" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd">
  <!--Created by yFiles for Java 2.7-->
  <key for="graphml" id="d0" yfiles.type="resources"/>
  <key attr.name="url" attr.type="string" for="node" id="d1"/>
  <key attr.name="description" attr.type="string" for="node" id="d2"/>
  <key for="node" id="d3" yfiles.type="nodegraphics"/>
  <key attr.name="Beschreibung" attr.type="string" for="graph" id="d4">
    <default/>
  </key>
  <key attr.name="url" attr.type="string" for="edge" id="d5"/>
  <key attr.name="description" attr.type="string" for="edge" id="d6"/>
  <key for="edge" id="d7" yfiles.type="edgegraphics"/>
  <graph edgedefault="directed" id="G">
    <node id="n0">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="6405.729166666666" width="354.0" x="128.4558982849121" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="57.44091796875" x="148.279541015625" y="3.0">DAELow</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>puplic
  lower
  zeroCrossingsEquations
  isVarDiscrete 
  isDiscreteEquation
  generateStatePartition 
  isStateVar
  isDummyStateVar
  isNonState
  isDiscrete
  dump
  varList
  listVar
  varCref
  varType 
  varKind 
  varIndex 
  varNominal 
  setVarFixed
  varFixed
  varStartValue
  varStateSelect
  vararrayList
  dumpJacobianStr
  dumpEqns
  equationStr
  countSimpleEquations
  isVarOnTopLevelAndOutput
  isVarOnTopLevelAndInput
  dumpVars
  dumpKind
  states
  lowerAlgorithmInputsOutputs
  devectorizeArrayVar
  collateAlgorithm 
  collateArrExp 
  incidenceMatrix
  emptyVars
  addVar
  vararrayLength
  vararrayAdd
  vararraySetnth
  vararrayNth
  getVarAt
  getVar
  existsVar
  getVarUsingName
  setVarKind
  transposeMatrix
  absIncidenceMatrix
  varsIncidenceMatrix
  dumpIncidenceMatrix
  dumpIncidenceMatrixT
  dumpMatching
  matchingAlgorithm
  equationsCrefs
  makeAllStatesAlgebraic
  varEqual
  equationEqual 
  equationAdd 
  equationList 
  listEquation 
  systemSize 
  equationSize 
  varsSize 
  equationNth 
  equationSetnth 
  varsInEqn
  dumpComponentsGraphStr
  strongComponents 
  dumpComponents 
  translateDae 
  addVars 
  analyzeJacobian 
  getEqnsysRhsExp 
  ifBranchesFreeFromVar 
  getEquationBlock 
  jacobianTypeStr 
  calculateJacobian 
  getArrayEquationSub"function: 
  residualExp 
  toResidualForm 
  equationToResidualForm 
  calculateSizes 
  calculateValues 
  printEquation 
  isVarKnown 
  getAllExps 
  traverseDEALowExps 
  isParam
  isIntParam
  isBoolParam
  isStringParam
  isExtObj
  isRealParam
  isNonRealParam
  isOutput
  isInput
  getWhenEquationExpr
  getWhenCondition
  getZeroCrossingIndicesFromWhenClause 
  daeVars
  daeKnVars
  makeExpType
  dumpTypeStr
  tearingSystem
  dumpTearing
  listSplitOnTrue 
  processDelayExpressions
  findDelaySubExpressions
  addDivExpErrorMsgtoExp 
  printCallFunction2StrDIVISION
  arrayDimensionsToRange 
  dimensionsToRange
  rangesToSubscripts 
  generateEQUATION 
  crefPrefixDer
  makeDerCref
  equationSource 
  equationInfo 

protected
  hasNoStates
  expandDerOperator
  expandDerOperatorEqns
  expandDerOperatorEqn
  expandDerOperatorWhenEqn
  expandDerOperatorAlgs
  expandDerOperatorAlg
  expandDerOperatorStmts
  expandDerOperatorStmt
  expandDerOperatorElseBranch
  expandDerOperatorArrEqns
  expandDerOperatorArrEqn
  expandDerExps
  expandDerExp
  updateStatesVars
  addDummyState
  whenEquationsIndices 
  whenEquationsIndices2
  zeroCrossingEquations
  dumpZcStr
  mergeZeroCrossings
  mergeZeroCrossing 
  sameZeroCrossing 
  differentZeroCrossing 
  findZeroCrossings 
  findZeroCrossings2 
  collectZeroCrossings 
  isKindDiscrete 
  isDiscreteExp 
  findZeroCrossings3
  makeZeroCrossing
  makeZeroCrossings
  detectImplicitDiscrete
  sortEqn
  extractAlgebraicAndDifferentialEqn
  splitBlocks 
  blockIsDynamic 
  markStateEquations 
  markStateEquation
  markStateEquation2
  invReachableNodes 
  invReachableNodes2 
  dumpAlgorithms 
  vararrayList2
  dumpJacobianStr2
  dumpArrayEqns
  dumpEqns2
  whenEquationStr
  removeSimpleEquations
  removeSimpleEquations2
  removeSimpleEquations3"
  getOutputsFromAlgorithms"
  updateAlgorithmInputsOutputs"
  countSimpleEquations2
  simpleEquation
  isTopLevelInputOrOutput
  typeofEquation
  moveVariables
  moveVariables2
  isVariable
  removeVariableNamed
  dumpExtObjCls 
  dumpVars2
  statesDaelow
  statesDaelow2
  statesExp
  statesExpMatrix
  lowerWhenEqn
  mergeClauses
  getWhenEquationFromVariable
  makeWhenClauses
  lowerWhenEqn2
  isStateOrAlgvar
  lower2
  checkAssertCondition 
  lowerTupleAssignment
  lowerTupleEquation
  lowerMultidimeqns
  lowerMultidimeqns2
  lowerMultidimeqn
  lowerMultidimeqn2
  lowerAlgorithms
  lowerAlgorithms2
  lowerAlgorithm
  lowerAlgorithm2
  lowerStatementInputsOutputs
  lowerElseAlgorithmInputsOutputs
  statesAndVarsExp
  statesAndVarsMatrixExp
  isLoopDependent
  isLoopDependentHelper
  explodeArrayVars
  rangeIntExprs
  generateArrayElements
  simplifySubscripts
  simplifySubscript
  lowerEqn
  lowerArrEqn
  extendAlgorithm 
  extendArrExp 
  traversingextendArrExp 
  makeMatrix
  traversingcollateArrExp 
  lowerComplexEqn
  lowerVar
  lowerKnownVar
  lowerExtObjVar
  lowerVarkind
  topLevelInput
  topLevelOutput
  lowerKnownVarkind
  lowerExtObjVarkind
  incidenceMatrix2
  incidenceRow
  incidenceRowStmts
  incidenceRowExp
  incidenceRowExp1
  incidenceRowMatrixExp
  mergeVars
  replaceVar
  hashComponentRef
  hashString
  hashChars
  getVar2
  getArrayVar
  getArrayVar2
  subscript2dCombinations
  subscript2dCombinations2
  getVar3
  getVarUsingName2
  deleteVar
  deleteVar2
  transposeMatrix2
  transposeMatrix3
  transposeRow
  dumpIncidenceMatrix2
  dumpIncidenceRow
  dumpMatching2
  checkMatching
  assignmentsVector
  assignmentsCreate
  assignmentsSetnth
  assignmentsExpand
  assignmentsAdd
  matchingAlgorithm2
  dumpMarkedEqns
  dumpMarkedVars
  reduceIndexDummyDer
  propagateDummyFixedAttribute
  findState
  updateIncidenceMatrix
  updateIncidenceMatrix2
  updateTransposedMatrix
  makeAllStatesAlgebraic2
  makeAlgebraic
  replaceDummyDer
  replaceDummyDer2
  replaceDummyDerAlgs
  replaceDummyDerAlgs1
  replaceDummyDerAlgs2
  replaceDummyDerEqns
  replaceDummyDerOthers
  replaceDummyDerOthersAlgs
  replaceDummyDerOthersAlgs1
  replaceDummyDerOthersAlgs2
  replaceDummyDerOthersExpLst
  replaceDummyDerOthersExp
  newDummyVar
  selectDummyState
  printPrioTuplesStr
  selectMinPrio
  ssPrioTupleMin
  calculateVarPriorities
  varStateSelectHeuristicPrio
  varStateSelectHeuristicPrio3
  varHasSameLastIdent
  varStateSelectHeuristicPrio2
  varInSameComponent
  varStateSelectHeuristicPrio1
  isStateConstraintEquation
  varStateSelectPrio
  varStateSelectPrio2
  calculateDummyStatePriorities
  calculateDummyStatePriority
  statesInEqns
  statesInVars 
  differentiateEqns
  equationList2 
  addMarkedVars 
  pathFound 
  assignOneInEqn 
  statesInEqn 
  statesAsAlgebraicVars 
  statesAsAlgebraicVars2 
  removeNegative
  eqnsForVar
  eqnsForVarWithStates
  assignFirstUnassigned
  getAssigned
  assign
  forallUnmarkedVarsInEqn
  isNotVMarked
  forallUnmarkedVarsInEqnBody
  dumpComponentsGraphStr2 
  intListStr 
  strongConnectMain 
  strongConnect 
  consIfNonempty 
  reachableNodes 
  iterateReachableNodes 
  dumpList 
  checkRoot 
  checkStack 
  dumpComponents2 
  rhsConstant 
  ifBranchesFreeFromVar2 
  makeZeroReplacements 
  makeZeroReplacement 
  rhsConstant2 
  freeFromAnyVar 
  jacobianConstant 
  jacobianNonlinear 
  jacobianNonlinearExp 
  containAnyVar 
  calculateJacobianRows 
  calculateJacobianRows2 
  calculateJacobianRow 
  makeResidualEqn 
  calculateJacobianRow2 
  calculateNumberZeroCrossings
  calculateParamSizes 
  calculateVarSizes 
  calculateValue
  replaceCrefsWithValues
  statesEqns 
  getIndex 
  calculateIndexes 
  dumpSortMap
  fillListConst
  getListConst
  sortList
  sortList1
  getNoScalarVars
  checkVarisNoScalar
  getAllElements
  getAllElements1
  sortNoScalarList
  listAppendTyp
  sortNoScalarList1
  sortNoScalarList2
  comparingNonScalars
  comparingNonScalars1
  calcPlace
  getArrayDim
  calculateIndexes2
  printEquations 
  printEquationNo 
  treeGet 
  treeGet2 
  treeAddList 
  treeAdd 
  treeDelete 
  treeDeleteRightmostValue 
  treePruneEmptyNodes 
  bintreeToList 
  bintreeToList2 
  bintreeToListOpt 
  printVarsStatistics 
  bintreeDepth 
  isAlgebraic 
  getAllExpsArrayEqns 
  getAllExpsArrayEqn 
  getAllExpsVars 
  getAllExpsVar 
  getAllExpsSubscript 
  getAllExpsEqns 
  getAllExpsEqn 
  traverseDEALowExpsVars 
  traverseDEALowExpsVar 
  traverseDEALowExpsSubscript 
  traverseDEALowExpsEqns 
  traverseDEALowExpsEqn 
  traverseDEALowExpsArrayEqns 
  traverseDEALowExpsArrayEqn 
  getZeroCrossingIndicesFromWhenClause2 
  generateDaeType
  lowerType
  copyDaeLowforTearing
  tearingSystem1
  correctAssignments
  getTearingVars
  tearingSystem2
  tearingSystem3
  tearingSystem4
  getMaxfromListList
  removeMultiple
  splitComps
  solveEquations
  transformDelayExpression
  transformDelayExpressions
  collectDelayExpressions
  traversingDivExpFinder 
  traversingDivExpFinder1 
  extendRecordEqns 
  generateCrefsExpFromType 
  generateextendedRecordEqn 
  rangesToSubscript 
  rangesToSubscripts1 
  emptyAliasVariables</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n1">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="278.87999999999965" width="238.2399999999999" x="620.4130027160645" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="143.43896484375" x="47.40051757812495" y="3.0">BackendVarTransform</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>puplic
  replaceEquations 
  replaceIfEquations 
  replaceMultiDimEquations 
  replaceAlgorithms 

protected
  replaceWhenEquation 
  shiftUnaryMinusToRHS 
  replaceStatementLst 
  replaceElse </y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n2">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="340.8319999999999" width="257.18399999999974" x="1006.0380228271479" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="43.7490234375" x="106.71748828124987" y="3.0">Derive</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>puplic
  differentiateExpTime 
  getlowerOrderDerivative
  getFunctionMapper
  getFunctionMapper1
  differentiateExpCont 
  differentiateExp 

protected
  traversingcrefOrDerCrefFinder 
  addArray 
  differentiateMatrixTime
  differentiateMatrixTime1
  differentiateFunctionTimeOutputs
  getFunctionResultTypes
  differentiateFunctionTime
  checkDerivativeFunctionInputs
  differentiateFunctionTime1
  checkDerFunctionConds </y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n3">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="370.0159999999996" width="252.06399999999985" x="1369.3465328826885" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="37.947265625" x="107.05836718749993" y="3.0">Inline</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>puplic
  inlineEqOpt 
  inlineVarOpt
  inlineMultiDimEqs
  inlineEventInfo
  inlineExtObjClasses
  inlineCallsInFunctions 
  inlineAlgorithm
  inlineExp 

protected
  inlineWhenEq
  inlineVariables
  inlineZeroCrossing
  inlineWhenClause
  inlineReinitStmt
  inlineDAEElements
  inlineStatement
  inlineElse
  inlineCall
  checkInlineType 
  extendCrefRecords
  extendCrefRecords1
  extendCrefRecords2
  getFunctionBody
  getRhsExp
  replaceArgs
  getExpFromArgMap
  getInputCrefs
  removeWilds</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n4">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="674.1439999999984" width="270.49599999999964" x="1698.1632241535133" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="45.1708984375" x="112.66255078124982" y="3.0">PartFn</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>puplic
  partEvalDAE
  createPartEvalFunctions

protected
  partEvalAlgLst
  partEvalArrEqs
  partEvalVars
  partEvalVarLst
  partEvalEqArr
  partEvalEqs
  partEvalWhenEq
  isFunctionElement
  replaceFnInFnLst
  elabElements
  elabAlg
  elabStmts
  elabElse
  elabExpMatrix
  elabExpList
  elabExpOption
  elabExp
  makeNewFnPath
  buildNewFunction
  buildNewFunction2
  buildNewFunctionType
  isNotFunctionType
  buildNewFunctionParts
  buildTypeVar
  isNotFunctionInput
  getFirstNInputs
  insertAfterInputs
  renameInput
  isInput
  fixCalls
  fixCallsAlg
  fixCallsElse
  handleExpList2
  fixCall
  replaceFnRef
  isSimpleArg
  getPartEvalFunction</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n5">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="368.47999999999956" width="201.88799999999992" x="2045.411915424338" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="71.91357421875" x="64.98721289062496" y="3.0">TaskGraph</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>protected
  buildInits2
  addVariables
  buildBlocks
  isNonState
  buildEquation 
  buildNonlinearEquations 
  buildResidualCode 
  makeResidualReplacements 
  makeResidualReplacements2
  buildResidualCode2
  storeMultipleResults 
  buildNonlinearEquations2
  addEdgesFromVars 
  buildSystem 
  buildSystem2
  addVariable
  buildAssignment
  buildExpression
  buildCallStr
  addPredecessors</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n6">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="368.47999999999956" width="308.89599999999973" x="2316.5534791812693" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="92.1435546875" x="108.37622265624987" y="3.0">TaskGraphExt
</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>puplic
  addEdge
  getTask
  storeResult
  dumpGraph
  dumpMergedGraph
  registerStartStop
  getStartTask
  getStopTask
  mergeTasks
  schedule
  generateCode
  setExecCost
  setTaskType
  setCommCost
  addInitVar
  addInitState
  addInitParam</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n7">
      <data key="d1"/>
      <data key="d2"><![CDATA[UMLClass]]></data>
      <data key="d3">
        <y:UMLClassNode>
          <y:Geometry height="3100.51200000001" width="257.6959999999999" x="2694.7030429382" y="-3167.3010940551762"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="60.341796875" x="98.67710156249996" y="3.0">SimCode</y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel/>
            <y:MethodLabel>puplic
  crefSubIsScalar
  crefNoSub
  crefIsScalar
  buildCrefExpFromAsub
  incrementInt
  makeCrefRecordExp
  cref2simvar
  derComponentRef
  createSimulationSettings
  generateModelCode
  translateModel
  translateFunctions
  getCalledFunctions
  getCalledFunctionReferences
  getCalledFunctionsInFunction
  generateFunctions2
  getMatchingExpsList
  getImplicitRecordConstructors
  listMap1_2 

protected
  generateExternalObjectIncludes
  generateExternalObjectInclude
  elaborateFunctions
  elaborateFunctions2
  elaborateFunction
  typesSimFunctionArg
  daeInOutSimVar
  extArgsToSimExtArgs
  fixOutputIndex
  assignOutputIndex
  findIndexInList
  elaborateStatement
  createSimCode
  extractDelayedExpressions
  createMakefileParams
  generateHelpVarInfo
  helpVarInfoFromWhenConditionChecks
  buildDiscreteVarChanges 
  buildDiscreteVarChangesVar 
  crefNotInWhenEquation 
  callTargetTemplates
  extractLibs
  elaborateRecordDeclarationsFromTypes
  elaborateRecordDeclarations
  elaborateRecordDeclarationsForRecord
  generateVarName
  elaborateNestedRecordDeclarations
  elaborateRecordDeclarationsForMetarecords
  createExtObjInfo
  extractExtObjInfo2
  createExtObjInfoSingle
  createAlgorithmAndEquationAsserts
  createAlgorithmAndEquationAssertsFromAlgs
  createRemovedEquations
  extractDiscreteModelVars
  varNotSolvedInWhen
  createSimWhenClauses
  createSimWhenClausesWithEqs
  findWhenEquation
  findWhenEquation1
  whenClauseToSimWhenClause
  createEquations
  createEquation
  addHindexForCondition
  createNonlinearResidualEquations
  applyResidualReplacements
  applyResidualReplacementsEqn
  createOdeSystem
  generateTearingSystem 
  generateTearingSystem1
  extractDiscEqs
  extractValuesAndDims
  createOdeSystem2
  replaceDerOpInEquationList
  replaceDerOpMultiDimEquations
  replaceDerOpInEquation
  replaceDerOpInExp
  replaceDerOpInExpCond
  replaceDerOpInExpTraverser
  generateRelaxationSystem 
  getRelaxationReplacements"
  solveEquation"
  getRelaxedResidualEqns"
  generateRelaxedResidualEqns"
  jacToSimjac
  dlowEqToExp
  listMap3passthrough 
  createSingleArrayEqnCode
  createSingleAlgorithmCode
  createSingleArrayEqnCode2
  createResidualEquations
  dlowEqToSimEqSystem
  failUnlessResidual
  createInitialEquations
  createParameterEquations
  createInitialAssignmentsFromStart
  createInitialParamAssignments
  createZeroCrossings
  createZeroCrossingsNeedSave
  createZeroCrossingNeedSave
  createModelInfo
  createVarInfo
  createVars
  extractVarsFromList
  extractVarFromVar
  derVarFromStateVar
  addSimvarIfTrue
  mergeVars
  sortSimvarsOnIndex
  fixIndex
  rewriteIndex
  varIndexComparer
  fixInitialThing
  simvarFixed
  nonFixifyIfHasInit
  getArrayCref
  unparseCommentOptionNoAnnotationNoQuote
  generateHelpVarsForWhenStatements
  generateHelpVarsInAlgorithms
  generateHelpVarsInStatements
  generateHelpVarsInStatement
  generateHelpVarsInArrayCondition
  selectContinuousEquations
  generateInitialEquationsFromStart 
  buildWhenConditionChecks3
  buildWhenConditionChecks2
  buildWhenConditionChecks4
  buildWhenConditionCheckForEquation 
  getConditionList
  addMissingEquations 
  buildDiscreteVarChangesVar2
  zeroCrossingsContainIndex 
  buildDiscreteVarChangesAddEvent
  mixedCollectRelations 
  mixedCollectRelations2 
  generateMixedDiscreteCombinationValues 
  generateMixedDiscreteCombinationValues1
  generateMixedDiscreteCombinationValues2 
  generateMixedDiscretePossibleValues2 
  splitMixedEquations 
  findDiscreteEquation 
  isMixedSystem 
  solveTrivialArrayEquation
  getVectorizedCrefFromExp
  getVectorizedCrefFromExpMatrix
  singleAlgorithmSection
  singleAlgorithmSection2
  singleArrayEquation
  singleArrayEquation2
  makeResidualReplacements 
  makeResidualReplacements2 
  skipPreOperator 
  transformXToXd 
  getEquationAndSolvedVar
  isPartOfMixedSystem
  getZcMixedSystem
  splitOutputBlocks
  splitOutputBlocks2
  blockSolvesDiscrete
  getCalledFunctionsInFunctions
  getCallPath
  getFunctionElementsList
  removeDuplicatePaths
  removePathFromList
  generateEquationOrder
  isVarQ
  isVarVarOrConstant
  isDirectionNotInput
  filterNg
  useZerocrossing
  isNonState
  hasDiscreteVar
  hasContinousVar
  getCrefFromExp
  isVarDiscrete
  isVarAlg
  isVarStringAlg
  isVarIntAlg
  isVarBoolAlg
  isVarParam
  isVarStringParam
  isVarIntParam
  isVarBoolParam
  indexSubscriptToExp
  isNotBuiltinCall
  typesVar
  dlowvarToSimvar
  subsToScalar
  generateFunctions3
  appendNonpresentPaths
  getMatchingExps
  matchCalls
  matchMetarecordCalls
  generateExtFunctionIncludes
  getLibraryStringInGccFormat
  generateExtFunctionIncludesLibstr
  generateExtFunctionIncludesIncludestr
  matchFnRefs
  addDivExpErrorMsgtosimJac
  addDivExpErrorMsgtoSimEqSystem
  generateParameterDivisionbyZeroTestEqn 
  solve
  crefIsDerivative
  extractVarUnit
  getInitialValue
</y:MethodLabel>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
  </graph>
  <data key="d0">
    <y:Resources/>
  </data>
</graphml>
