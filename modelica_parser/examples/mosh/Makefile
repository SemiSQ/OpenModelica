CC=gcc
CXX=g++

ANTLR_HOME = /home/pelab/pub/pkg/antlr-2.7.1
ANTLR_CPP = $(ANTLR_HOME)/lib/cpp/gcc-2.95.2

ANTLR_INCP = -I$(ANTLR_CPP)/include
ANTLR_LIBP = -L$(ANTLR_CPP)/lib

PARSE_INCP = -I../../src
PARSE_LIBP = -L../../src

INCP = $(ANTLR_INCP) $(PARSE_INCP)
LIBP = $(ANTLR_LIBP) $(PARSE_LIBP)

CFLAGS = $(INCP) -g -Wall -DDEBUG
CXXFLAGS = $(CFLAGS)
LINKFLAGS = $(LIBP)

LIBS = -lantlr -lmodelica_parser -lreadline -ltermcap

PARSER_OBJS = ../../src/modelica_lexer.o ../../src/token_names.o ../../src/parse_tree_dumper.o

HELPER_OBJS = value.o modelica_runtime_error.o 

parsergen= modelica_expression_parser.cpp modelica_expression_parser.hpp \
	   modelica_expression_parserTokenTypes.hpp modelica_expression_parserTokenTypes.txt

walkergen= modelica_tree_parser.cpp modelica_tree_parser.hpp \
	   modelica_tree_parserTokenTypes.hpp modelica_tree_parserTokenTypes.txt

parsersrcs=$(filter %.cpp,$(parsergen))
parserobjs=$(parsersrcs:.cpp=.o)

walkersrcs=$(filter %.cpp,$(walkergen))
walkerobjs=$(walkersrcs:.cpp=.o)

OBJS += $(parserobjs) $(walkerobjs) $(HELPER_OBJS) mosh.o $(PARSER_OBJS) 

ANTLR = java -cp $(ANTLR_HOME) antlr.Tool

all : parser mosh

parser:
	cd ../../src; $(MAKE) -f Makefile

mosh : $(OBJS) 
	$(CXX) -o $@ $(OBJS) $(LINKFLAGS) $(LIBS)

.cpp.o:
	$(CXX) $(CXXFLAGS) -c $<

$(parsergen): expandedexpression_parser.g
	java antlr.Tool $(ANTLRFLAGS) expandedexpression_parser.g

$(walkergen): walker.g modelica_expression_parserTokenTypes.txt
	java antlr.Tool $(ANTLRFLAGS) walker.g
#$<

expandedexpression_parser.g: expression_parser.g
	java antlr.Tool -glib ../../src/modelica_parser.g expression_parser.g

#modelica_parserTokenTypes.txt : ../../src/modelica_parserTokenTypes.txt
#	cp ../../src/modelica_parserTokenTypes.txt .


clean:
	-rm -f *.o *~ core *.core mosh

reallyclean: clean
	-rm -f $(parsergen) $(walkergen) modelica_expression_parserTokenTypes.txt expandedexpression_parser.g modelica_parserTokenTypes.txt


mosh.o : mosh.cpp ../../src/modelica_lexer.hpp ../../src/modelica_parser.hpp


