# Adrian Pop, adrpo@ida.liu.se, 2006-02-01
# Makefile for compilation of OMC using OMDev-mingw
# OMDev-mingw: http://www.ida.liu.se/~adrpo/omc/omdev/
#
# $Id: Makefile.omdev.mingw.in 1817 2006-02-01 12:21:26Z adrpo $
#

# The path to the OMDev-mingw package MUST BE SET!
#OMDEV=$OMDEV 
# Test if the needed variables are there... 
.testvariables:
ifndef OMDEV
	@echo You have to set the OMDEV variabile pointing to your OMDev package root! Exiting....
	@echo Take the OMDev package from: http://www.ida.liu.se/~adrpo/omc/omdev/
	@echo For questions or problems email Adrian Pop, adrpo@ida.liu.se
	ABORT
endif

CC=gcc
CXX=g++
AR=ar -r

ANTLR_HOME=$(OMDEV)/

INCLUDES=-I$(ANTLR_HOME)/include/

LIBP=-L$(OMDEV)/lib/antlr-msys-mingw

CFLAGS =-g -Wall $(INCLUDES) -D DEBUG
CXXFLAGS = $(CFLAGS)

ANTLRFLAGS=

LIB = $(LIBP) -lantlr


lexergen= modelica_lexer.cpp modelica_lexer.hpp \
	  modelicaTokenTypes.hpp modelicaTokenTypes.txt

parsergen= modelica_parser.cpp modelica_parser.hpp \
	   modelica_parserTokenTypes.hpp modelica_parserTokenTypes.txt

lexersrcs=$(filter %.cpp,$(lexergen))
parsersrcs=$(filter %.cpp,$(parsergen))

lexerobjs=$(lexersrcs:.cpp=.o)
parserobjs=$(parsersrcs:.cpp=.o)

helperobjs = token_names.o parse_tree_dumper.o

OBJS += $(lexerobjs) $(parserobjs) $(helperobjs)

all: libmodelica_parser.a

vctarget: $(lexergen) $(parsergen)

libmodelica_parser.a: $(OBJS)
	$(AR) $@ $(OBJS)

$(lexergen): modelica_lexer.g
	java antlr.Tool $(ANTLRFLAGS) $<

$(parsergen): modelica_parser.g modelica_lexer.g
	java antlr.Tool $(ANTLRFLAGS) $<

.c.o:
	$(CC) $(CFLAGS) -c $<

.cpp.o:
	$(CXX) $(CXXFLAGS) -c $<

test: test.o libmodelica_parser.a
	$(CXX) -o test test.o libmodelica_parser.a  $(LIB)

depend: $(DFILES)

clean:
	-rm -f *.o *~ core *.core libmodelica_parser.a

reallyclean: clean
	-rm -f $(lexergen) $(parsergen)

modelica_lexer.o:modelica_lexer.cpp modelica_lexer.hpp
modelica_parser.o:modelica_parser.cpp modelica_parser.hpp
token_names.o:token_names.cpp
parse_tree_dumper.o:parse_tree_dumper.cpp parse_tree_dumper.hpp
#include $(DFILES)

