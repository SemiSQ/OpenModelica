top_builddir= ../..
builddir_bin=$(top_builddir)/build/bin
builddir_lib=$(top_builddir)/build/lib
builddir_inc=$(top_builddir)/build/include
builddir_doc=$(top_builddir)/build/doc


CC=gcc
CXX=g++

ANTLR_HOME = @antlrhome@

ANTLR_INCP = -I@antlrinc@
ANTLR_LIBP = -L@antlrlib@

PARSE_INCP = -I$(top_builddir)/src
PARSE_LIBP = -L$(top_builddir)/src

INCP = $(ANTLR_INCP) $(PARSE_INCP)
LIBP = $(ANTLR_LIBP) $(PARSE_LIBP)

CFLAGS = $(INCP) -g -Wall -DDEBUG
CXXFLAGS = $(CFLAGS)
LINKFLAGS = $(LIBP)

LIBS = -lantlr -lmodelica_parser

PARSER_OBJS = $(top_builddir)/src/modelica_parser.o $(top_builddir)/src/modelica_lexer.o $(top_builddir)/src/token_names.o $(top_builddir)/src/parse_tree_dumper.o
OBJS = test_lexer.o $(PARSER_OBJS)

ANTLR = java -cp $(ANTLR_HOME) antlr.Tool

all : parser test_lexer modelicaTokenTypes.txt

parser:
	cd $(top_builddir)/src; $(MAKE) -f Makefile

test_lexer : $(OBJS)
	$(CXX) -o $@ $(OBJS) $(LINKFLAGS) $(LIBS)



modelicaTokenTypes.txt : $(top_builddir)/src/modelicaTokenTypes.txt
	cp $(top_builddir)/src/modelicaTokenTypes.txt .

clean:
	-rm -f *.o modelicaTokenTypes.txt *~ test_lexer


test_lexer.o : test_lexer.cpp $(top_builddir)/src/modelica_lexer.hpp $(top_builddir)/src/token_names.hpp


