#
# Makefile for modeq
#
# David Kågedal <x97davka@ida.liu.se>
#
# $Id$
#

srcdir= .
top_builddir= ..

ANTLR_HOME = @antlrhome@
EXEEXT = @EXEEXT@

ANTLR_INCP = -I@antlrinc@
ANTLR_LIBP = -L@antlrlib@
LIBSOCKET = @LIBSOCKET@

SHELL	= /bin/sh
CC	= gcc
CFLAGS	= $(USE_CORBA)
RMLHOME	= @rmlhome@
#RML	= @rmlc_bin@ -g -Wc,-O3 -Wr,-East,-Ecps,-Efol
RML	= @rmlc_bin@ -Wc,-O3
RMLINC  = -I$(RMLHOME)/include/plain

USE_CORBA = @USE_CORBA@
CORBAHOME = @CORBAHOME@

#LDFLAGS = -L$(RMLHOME)/lib/plain $(ANTLR_LIBP) -lrml_g -lm -lantlr $(LIBSOCKET) $(CORBALIB) -lm -lpthread -lreadline
#LDFLAGS = -L$(RMLHOME)/lib/plain $(ANTLR_LIBP) -lrml -lm -lantlr $(LIBSOCKET) $(CORBALIB) -lm -lpthread 

include Makefile.common

PROG = modeq
PROGD = modeqd

#SUBDIRS= ast runtime
SUBDIRS	= runtime absyn_builder modpar

.SUFFIXES:
.SUFFIXES: .o .rml .h
.PHONY: all subdirs report vctarget absyn_subdir debug release depend clean dclean test reallyclean modeq_release modeq_debug

all : debug #release

debug:	$(PROGD) $(SRCRDB)

release: $(PROG)

%.rdb:	modeq_debug/%.rdb 
	cp $< $@

#	@for x in $(SRCRDB); do \
#		echo $$x;
#		cp modeq_debug/$$x .; \
#	done

$(PROG): modeq_release
	cp modeq_release/$(PROG)$(EXEEXT) .

$(PROGD): modeq_debug
	cp modeq_debug/$(PROGD)$(EXEEXT) .

modeq_release:
	(cd modeq_release && $(MAKE))

modeq_debug:
	(cd modeq_debug && $(MAKE))


vctarget: $(SRCC) absyn_subdir

absyn_subdir:
	@(cd absyn_builder ; $(MAKE) vctarget)

test:
	@(cd testsuite ; $(MAKE))


#ast/libast.a:
#	@(cd ast ; $(MAKE) libast.a)

#subdirs:
#	@for d in $(SUBDIRS); do \
#		(cd $$d ; $(MAKE)) \
#	done

clean:
	@for d in $(SUBDIRS); do \
		(cd $$d ; $(MAKE) clean) \
	done
	(cd modeq_release; $(MAKE) clean)
	-$(RM) -f $(SRCH)
	-$(RM) -f $(PROG)$(EXEEXT)

dclean:
	@for d in $(SUBDIRS); do \
		(cd $$d ; $(MAKE) clean) \
	done
	(cd modeq_debug; $(MAKE) clean)
	-$(RM) -f $(SRCRDB)
	-$(RM) -f $(SRCH)
	-$(RM) -f $(PROGD)$(EXEEXT)


reallyclean: clean dclean

report:
	@(cd report ; $(MAKE))

depend:	
	-$(RM) .depend
	for f in $(SRCRML); do \
	  echo `echo $$f | sed "s/\.rml/.o/"`: $$f `sed -n -e 's/.*with "\(.*\)\.rml".*/\1.sig/p' < $$f | egrep -v 'nothing'` >> .depend ; \
	done

.PRECIOUS: Makefile

Makefile: Makefile.in
	$(top_builddir)/config.status Makefile
