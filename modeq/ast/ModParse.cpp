/*
 * ModParse: P a r s e r  S u p p o r t
 *
 * Generated from: modgram.g
 *
 * Terence Parr, Russell Quong, Will Cohen, and Hank Dietz: 1989-1995
 * Parr Research Corporation
 * with Purdue University Electrical Engineering
 * with AHPCRC, University of Minnesota
 * ANTLR Version 1.33
 */

#include <stdio.h>
#define ANTLR_VERSION	133
#define ANTLR_SUPPORT_CODE
#include "tokens.h"
#include "ModParse.h"

ANTLRChar *ModParse::_token_tbl[]={
	/* 00 */	"Invalid",
	/* 01 */	"@",
	/* 02 */	"/\\*",
	/* 03 */	"IMPORT",
	/* 04 */	"CLASS_",
	/* 05 */	"BOUNDARY",
	/* 06 */	"MODEL",
	/* 07 */	"FUNCTION",
	/* 08 */	"PACKAGE",
	/* 09 */	"RECORD",
	/* 10 */	"BLOCK",
	/* 11 */	"CONNECTOR",
	/* 12 */	"TYPE",
	/* 13 */	"END",
	/* 14 */	"ANNOTATION",
	/* 15 */	"EXTERNAL",
	/* 16 */	"EXTENDS",
	/* 17 */	"PARAMETER",
	/* 18 */	"CONSTANT",
	/* 19 */	"VIRTUAL",
	/* 20 */	"PARTIAL",
	/* 21 */	"REDECLARE",
	/* 22 */	"INPUT",
	/* 23 */	"OUTPUT",
	/* 24 */	"FLOW",
	/* 25 */	"EQUATION",
	/* 26 */	"ALGORITHM",
	/* 27 */	"RESULTS",
	/* 28 */	"FINAL",
	/* 29 */	"PUBLIC",
	/* 30 */	"PROTECTED",
	/* 31 */	"LPAR",
	/* 32 */	"RPAR",
	/* 33 */	"LBRACK",
	/* 34 */	"RBRACK",
	/* 35 */	"IF",
	/* 36 */	"THEN",
	/* 37 */	"ELSE",
	/* 38 */	"ELSEIF",
	/* 39 */	"OR",
	/* 40 */	"AND",
	/* 41 */	"NOT",
	/* 42 */	"TIME",
	/* 43 */	"FALS",
	/* 44 */	"TRU",
	/* 45 */	"IN",
	/* 46 */	"FOR",
	/* 47 */	"WHILE",
	/* 48 */	"LOOP",
	/* 49 */	"DER",
	/* 50 */	"REL_OP",
	/* 51 */	"<",
	/* 52 */	"<=",
	/* 53 */	">",
	/* 54 */	">=",
	/* 55 */	"==",
	/* 56 */	"<>",
	/* 57 */	"ADD_OP",
	/* 58 */	"\\+",
	/* 59 */	"\\-",
	/* 60 */	"MUL_OP",
	/* 61 */	"\\*",
	/* 62 */	"/",
	/* 63 */	"ASSIGN",
	/* 64 */	"=",
	/* 65 */	":=",
	/* 66 */	"EXTRA_TOKEN",
	/* 67 */	"//(~[\\n])*",
	/* 68 */	"IDENT",
	/* 69 */	"STRING",
	/* 70 */	"UNSIGNED_NUMBER",
	/* 71 */	"[\\ \\t]+",
	/* 72 */	"\\n",
	/* 73 */	"[\\n\\r]",
	/* 74 */	"\\*/",
	/* 75 */	"\\*",
	/* 76 */	"~[\\*\\n\\r]+",
	/* 77 */	";",
	/* 78 */	",",
	/* 79 */	":",
	/* 80 */	"^",
	/* 81 */	"."
};

ModParse::ModParse(ANTLRTokenBuffer *input) : ANTLRParser(input,1,1,0,12)
{
	token_tbl = _token_tbl;
}

SetWordType ModParse::err1[12] = {0xda,0x9f,0x10,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType ModParse::err2[12] = {0xd0,0x9f,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType ModParse::err3[12] = {0xd0,0xff,0xdf,0x77, 0x0,0x0,0x0,0x0, 0x11,0x0,0x0,0x0
	};
SetWordType ModParse::setwd1[82] = {0x0,0x6,0x0,0x4,0x15,0x0,0x15,
	0x1d,0x15,0x15,0x15,0x15,0x15,0x90,0x10,
	0x1d,0x10,0x10,0x10,0x10,0x15,0x0,0x10,
	0x10,0x10,0x50,0x50,0x0,0x10,0x50,0x50,
	0x0,0x20,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x10,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20,
	0x0,0x0,0x0};
SetWordType ModParse::err4[12] = {0xd0,0x9f,0xdf,0x1, 0x0,0x0,0x0,0x0, 0x10,0x0,0x0,0x0
	};
SetWordType ModParse::setwd2[82] = {0x0,0x0,0x0,0x0,0x58,0x0,0x58,
	0x58,0x58,0x58,0x58,0x58,0x58,0x27,0x8,
	0x58,0x18,0x98,0x98,0x58,0x58,0x0,0x98,
	0x98,0x98,0x27,0x27,0x0,0x18,0x27,0x27,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x98,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0};
SetWordType ModParse::setwd3[82] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x80,0x42,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x80,0x0,0x0,0x0,0x18,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x67,0x42,
	0x0,0x0,0x0};
SetWordType ModParse::err5[12] = {0x0,0x0,0x0,0x80, 0xa,0x1e,0x2,0xc, 0x70,0x80,0x0,0x0
	};
SetWordType ModParse::err6[12] = {0x0,0x0,0x0,0x80, 0x0,0x0,0x0,0x0, 0x1,0x0,0x0,0x0
	};
SetWordType ModParse::setwd4[82] = {0x0,0x2,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x7a,0x3,0x78,0x84,0x78,0x0,0x0,0x0,
	0x0,0x0,0x78,0x78,0x78,0x78,0x0,0x0,
	0x0,0x0,0x78,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x78,0x78,0x0,0x0,0x0,
	0x0,0x2,0x0,0x0,0x0,0x78,0x7b,0x78,
	0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x83,
	0x0,0x0,0x2};
SetWordType ModParse::err7[12] = {0x0,0x0,0x20,0x10, 0x0,0x0,0x0,0x0, 0x10,0x0,0x0,0x0
	};
SetWordType ModParse::err8[12] = {0xd0,0x9f,0xd7,0x1, 0x0,0x0,0x0,0x0, 0x10,0x0,0x0,0x0
	};
SetWordType ModParse::setwd5[82] = {0x0,0x0,0x0,0x0,0x42,0x0,0x42,
	0x42,0x42,0x42,0x42,0x42,0x42,0x2,0x3,
	0x42,0x2,0x82,0x82,0x2,0x42,0x0,0x82,
	0x82,0x82,0x2,0x2,0x0,0xa,0x2,0x2,
	0x0,0x37,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x2,0x0,0x0,0x0,0x8a,0x3,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x33,
	0x0,0x0,0x0};
SetWordType ModParse::setwd6[82] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x90,0x24,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x90,0x90,0x0,0x0,0x90,0x90,
	0x6c,0x3,0x6c,0x0,0x6c,0x0,0x0,0x0,
	0x0,0x0,0x6c,0x6c,0x6c,0x6c,0x0,0x6c,
	0x6c,0x0,0x6c,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x6c,0x6c,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x6c,0x6c,0x6c,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3,
	0x0,0x0,0x0};
SetWordType ModParse::ASSIGN_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x3,0x0,0x0,0x0
	};
SetWordType ModParse::err10[12] = {0x0,0x0,0x0,0x80, 0xa,0xde,0x2,0xc, 0x70,0x0,0x0,0x0
	};
SetWordType ModParse::err11[12] = {0x0,0x0,0x0,0x0, 0x20,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType ModParse::setwd7[82] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x80,0x38,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x41,0x0,0x41,0x0,0x40,0x0,0x80,0x80,
	0x0,0x0,0x41,0x41,0x41,0x41,0x0,0x40,
	0x40,0x0,0x41,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x41,0x41,0x0,0x0,0x0,
	0x0,0x2,0x2,0x0,0x0,0x41,0x79,0x41,
	0x0,0x0,0x0,0x0,0x0,0x0,0x3c,0x0,
	0x0,0x0,0x0};
SetWordType ModParse::err12[12] = {0x0,0x0,0x0,0x80, 0xa,0x1e,0x2,0xc, 0x70,0x0,0x0,0x0
	};
SetWordType ModParse::err13[12] = {0x0,0x0,0x0,0x80, 0x2,0x1e,0x2,0xc, 0x70,0x0,0x0,0x0
	};
SetWordType ModParse::REL_OP_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0xf8,0x1};
SetWordType ModParse::setwd8[82] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xae,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x11,0xae,0x11,0xae,0x0,0xae,0xac,0x0,
	0xa8,0xa0,0x1,0x11,0x11,0x11,0x0,0x0,
	0x0,0xae,0x11,0x0,0x40,0x40,0x40,0x40,
	0x40,0x40,0x0,0x11,0x11,0x0,0x0,0x0,
	0x0,0xac,0xac,0x0,0x0,0x11,0xbf,0x11,
	0x0,0x0,0x0,0x0,0x0,0x0,0xae,0xae,
	0xae,0x0,0x0};
SetWordType ModParse::ADD_OP_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0xc};
SetWordType ModParse::err16[12] = {0x0,0x0,0x0,0x80, 0x2,0x1c,0x2,0xc, 0x70,0x0,0x0,0x0
	};
SetWordType ModParse::MUL_OP_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x60};
SetWordType ModParse::err18[12] = {0x0,0x0,0x0,0x80, 0x2,0x1c,0x2,0x0, 0x70,0x0,0x0,0x0
	};
SetWordType ModParse::err19[12] = {0x0,0x0,0x0,0x80, 0x2,0x1c,0x0,0x0, 0x70,0x0,0x0,0x0
	};
SetWordType ModParse::setwd9[82] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xaa,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x44,0xaa,0x44,0xaa,0x0,0xaa,0xaa,0x0,
	0xaa,0xaa,0x0,0x44,0x44,0x44,0x0,0x0,
	0x0,0xaa,0x4,0x0,0xaa,0xaa,0xaa,0xaa,
	0xaa,0xaa,0x0,0xa9,0xa9,0x0,0x90,0x90,
	0x0,0xaa,0xaa,0x0,0x0,0x44,0xee,0x44,
	0x0,0x0,0x0,0x0,0x0,0x0,0xaa,0xaa,
	0xaa,0x0,0x0};
SetWordType ModParse::err20[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x10,0x0,0x0,0x0
	};
SetWordType ModParse::setwd10[82] = {0x0,0xc8,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x37,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x4,0x37,0x4,0x37,0x0,0x37,0x37,0x0,
	0x37,0x37,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x37,0x0,0x0,0x37,0x37,0x37,0x37,
	0x37,0x37,0x0,0x37,0x37,0x0,0x37,0x37,
	0x0,0x37,0x37,0x0,0x0,0x6,0x37,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x37,0x37,
	0x37,0x37,0x60};
SetWordType ModParse::setwd11[82] = {0x0,0x0,0x0,0x0,0x18,0x0,0x18,
	0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1c,
	0x18,0x18,0x18,0x18,0x18,0x18,0x0,0x18,
	0x18,0x18,0x18,0x18,0x0,0x18,0x18,0x18,
	0x0,0x1c,0x0,0x7,0x0,0x4,0x4,0x0,
	0x4,0x4,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x4,0x0,0x0,0x4,0x4,0x4,0x4,
	0x4,0x4,0x0,0x4,0x4,0x0,0x4,0x4,
	0x0,0x1c,0x4,0x0,0x0,0x1c,0x4,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x1e,0x1c,
	0x4,0x4,0x0};
