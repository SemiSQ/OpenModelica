(**
 ** file:        main.rml
 ** description: Modelica main program
 **
 ** RCS: $Id$
 **
 ** This is the main program in the Modelica specification.  It
 ** only contains the `main' relation which is invoked by the RML
 ** runtime system.
 **)

module Main:
	relation main: string list => ()
end

with "parse.rml"
with "dump.rml"
with "explode.rml"
with "dae.rml"
with "inst.rml"
with "rtopts.rml"

(** relation: translate_file
 **
 ** The only relation in this module is the `main' relation, which is
 ** the starting point in all RML specifications.  It is invoked with
 ** a list containing the command-line arguments.
 **)

relation translate_file : string list => () =

  rule	(* print "\n = Parsing\n\n" & *)
	Parser.parse f => p &
	(* Dump.dump p & *)
	
	(* print "\n = Exploding\n\n" & *)
	SCode.elaborate(p) => p' &
	(* Dump.dump p' & *)

	(* print "\n = Instantiating\n\n" & *)
	Inst.instantiate(p') => d &
	print "\n[result]\n\n" &
	DAE.dump d &
	
	print "\n[end result]\n"
	----------------
	translate_file [f]
	
  rule	print "Too many arguments\n"
	----------------------------
	translate_file _::_::_

  rule	print "Supply a file name\n"
	----------------------------
	translate_file []

  rule	print "# An error occured\n"
	----------------------------
	translate_file _

end

relation main : string list => () =

  rule	RTOpts.args args => args' &
	translate_file args'
	--------------------
	main args

end
