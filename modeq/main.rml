(* main.rml - Modelica main program *)
module Main:
	relation main: string list => ()
end

with "class.rml"
with "absyn.rml"
with "parse.rml"
(* with "test.rml" *)
with "dump.rml"
with "lform.rml"
with "dae.rml"
(* with "modelica.rml" *)

relation main =
(*
		rule	Modelica.test1 &
		Modelica.test2 &
		Modelica.test3
		------------------------
		main _
*)

	rule	print "Jahaja\n\n" &
		Parser.parse f => p &
		Dump.dump p &
		print "\n = Exploding\n\n" &
		Absyn.explode_components(p) => p' &
		Dump.dump p' &
		(* & Dump.dump Test.prog1 *)
		print "\n = Translating\n\n" &
		Lform.convert p' => p'' &
		(* Modelica.progDAE p => d & *)
		(*DAE.dump d & *)
		print "\n[slut]\n"
		----------------
		main [f]

	rule	print "Supply a file name\n"
		----------------------------
		main []

end
