(*
    Copyright PELAB, Linkoping University

    This file is part of Open Source Modelica (OSM).

    OSM is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    OSM is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Foobar; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*)

(**
 ** file:        mod.rml
 ** module:      Mod
 ** description: Modification handling
 **
 ** RCS: $Id$
 **
 ** Modifications are simply the same kind of modifications used in
 ** the `Absyn' module.
 **
 **)

module Mod:

  with "absyn.rml"
  with "dae.rml"
  with "env.rml"
  with "exp.rml"
  with "prefix.rml"
  with "explode.rml"
  with "types.rml"
  with "staticexp.rml"
  with "values.rml"

  type Ident = string

  (** - Modification datatype *)
  datatype EqMod = TYPED of Exp.Exp * Types.Properties |
		   UNTYPED of Absyn.Exp
  datatype SubMod = NAMEMOD of Ident * Mod
		  | IDXMOD of int list * Mod
  and Mod = MOD of bool * (SubMod list) * EqMod option
  	  | REDECL of bool * SCode.Element list
	  | NOMOD
  (** This type is very similar to `SCode.Mod'.  The main difference is
   ** that it uses `Exp.Exp' for the expressions.  Expressions stored
   ** here are prefixed and typechecked.
   **)

  relation elab_mod : (Env.Env, Prefix.Prefix, SCode.Mod) => Mod
  relation unelab_mod : (Mod) => SCode.Mod
  relation update_mod: (Env.Env, Prefix.Prefix, Mod) => Mod 
  relation elab_untyped_mod : (SCode.Mod) => Mod

  relation lookup_comp_modification: (Mod, Absyn.Ident) => Mod
  relation lookup_idx_modification: (Mod, int) => Mod
  relation lookup_modification_p: (Mod,Absyn.Path) => Mod
  relation merge : (Mod, Mod) => Mod
  relation mod_equation : Mod => EqMod option

  relation print_mod : Mod => ()

end

