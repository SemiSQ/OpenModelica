Semantik-noteringar	-*- outline -*-

* redeclare extends

Vad betyder "redeclare extends ..."

* Typer i ekvationer

Vilka variabler får man ha i ekvationer? Bara Real(Type) och
Integer(type)? Exakt hur fungerar connect()?

* connect

Sista raden i connect-semantiken (B.2) måste vara fel.

* Kvalificerade identifierare

Vilka olika saker kan foo vara i "foo.bar"?

** En variabel (eller konstant) i scopet

    module Resistor
      Pin p,n;
      parameter Real r;
    equation
      p.i = n.i;
      (p.v - n.v) = p.i * r;
    end Resistor;

** En klass i scopet

Klassen kommer ofta att vara ett package.

    package Foo
      constant Real x = 17.0;
    end Foo;

    model Bar
      Real y = Foo.x;
    end Bar;

Men t.ex. i specialiseringar kan det vara vanligt med andra klasser.

    model Foo

      type Bar
        constant Real x = 17.0;
      end Bar;

      Bar b;
    end Foo;

    model Baz
      extends Foo(Bar.x = 4711.0);
    end Baz;

** Ett package i en fil "foo.mdc"

    module Foo
      Modelica.SIunit.Area a;
    end Foo;

* Hur funkar = i deklarationer

Om man deklarerar

    model M
      Foo x = y;
    end M;

Är det samma sak som:

    model M
      Foo x;
    equation
      x = y;
    end M;

eller är det bara startvärdet på x som påverkas?

* FOO

    model M
      Real x;
    equation
      x = 17;
    end M;

    model N
      M a(x=15);
    end N;
