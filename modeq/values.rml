(*
    Copyright PELAB, Linkoping University

    This file is part of Open Source Modelica (OSM).

    OSM is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    OSM is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Foobar; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*)

(**
 ** file:        values.rml
 ** module:      Values
 ** description: Evaluated expression values
 **
 ** RCS: $Id$
 ** 
 ** The module `Values' contains data structures for representing
 ** constant Modelica values.  These include integer, real, string and
 ** boolean values, and also arrays of any dimensionality and type.
 ** Multidimensional arrays are represented as arrays of arrays.
 **
 ** The code is excluded from the report, since they convey no
 ** semantic information.
 **)

module Values :
with "exp.rml"
  datatype Value = INTEGER of int
		 | REAL of real
		 | STRING of string
		 | BOOL of bool
		 | ENUM of string
		 | ARRAY of Value list
		 | TUPLE of Value list 
  relation val_string : Value => string
  relation print_val : Value => ()
  relation add_elementwise_arrayelt: (Value list, Value list) => Value list
  relation sub_elementwise_arrayelt: (Value list, Value list) => Value list
  relation mult_scalar_arrayelt: (Value, Value list) => Value list
  relation mult_scalar_product: (Value list, Value list) => Value
  relation mult_matrix: (Value list,Value list) => Value list
  relation is_array :Value => bool
  relation write_to_file_as_args: (Value list,string) => ()
  relation type_convert: (Exp.Type, Exp.Type,Value list) => Value list
end
