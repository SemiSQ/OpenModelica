// name:     PlanarMechanicsForTesting.Examples.DoublePendulum.mos [simulation checking]
// keywords: simulation PlanarMechanicsForTesting.Examples
// status: correct
// teardown_command: rm -rf _PlanarMechanicsForTesting.Examples.DoublePendulum.* PlanarMechanicsForTesting.Examples.DoublePendulum_* PlanarMechanicsForTesting.Examples.DoublePendulum PlanarMechanicsForTesting.Examples.DoublePendulum.exe PlanarMechanicsForTesting.Examples.DoublePendulum.cpp PlanarMechanicsForTesting.Examples.DoublePendulum.makefile PlanarMechanicsForTesting.Examples.DoublePendulum.libs PlanarMechanicsForTesting.Examples.DoublePendulum.log PlanarMechanicsForTesting.Examples.DoublePendulum.c PlanarMechanicsForTesting.Examples.DoublePendulum.o output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"}); getErrorString();
loadFile("PlanarMechanicsForTesting.mo"); getErrorString();

// adrpo: stopTime=3 is got from the experiment annotation in the model
simulate(PlanarMechanicsForTesting.Examples.DoublePendulum, tolerance=0.0001, stopTime=9.5); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("PlanarMechanicsForTesting.Examples.DoublePendulum_res.mat",
  "simulation/DoublePendulum.mat","PlanarMechanicsForTesting.Examples.DoublePendulum_diff.csv",0.01,0.4,
  {"revolute1.phi", "revolute.phi", "revolute.w", "revolute1.w"});

// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "PlanarMechanicsForTesting.Examples.DoublePendulum_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 9.5, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'PlanarMechanicsForTesting.Examples.DoublePendulum', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// "Files Equal!"
// endResult
