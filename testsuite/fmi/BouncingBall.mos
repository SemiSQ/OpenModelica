// name:     BouncingBall
// keywords: fmu export
// status: correct
// teardown_command: rm -rf binaries sources modelDescription.xml BouncingBall.fmu BouncingBallFMUImport.mo fmu*.log FMUImport_* BouncingBall_* BouncingBall.log BouncingBall.libs BouncingBall BouncingBall.exe BouncingBall.cpp BouncingBall.makefile output.log BouncingBall/*
//
// Event handling in FMU Import
//
loadFile("BouncingBall.mo");
translateModelFMU(BouncingBall);
getErrorString();
importFMU("BouncingBall.fmu");
loadFile("BouncingBallFMUImport.mo");
getErrorString();
simulate(FMUImport_BouncingBall.FMUBlock);
val(h,0);
val(h,1);
val(h,3);

// Result:
// true
// "SimCode: The model BouncingBall has been translated to FMU"
// ""
// Archive:  BouncingBall.fmu
//    creating: .//binaries/          
//    creating: .//binaries/win32/    
//   inflating: .//binaries/win32/BouncingBall.dll  
//   inflating: .//binaries/win32/BouncingBall.lib  
//   inflating: .//binaries/win32/libexpat-1.dll  
//   inflating: .//modelDescription.xml  
//    creating: .//sources/           
//   inflating: .//sources/BouncingBall.c  
//   inflating: .//sources/BouncingBall_FMU.c  
//   inflating: .//sources/BouncingBall_functions.c  
//   inflating: .//sources/BouncingBall_functions.h  
//   inflating: .//sources/BouncingBall_records.c  
// 
// 
// false
// true
// ""
// record SimulationResult
//     resultFile = "FMUImport_BouncingBall.FMUBlock_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 3.0, numberOfIntervals = 500, tolerance = 1e-005, method = 'dassl', fileNamePrefix = 'FMUImport_BouncingBall.FMUBlock', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// 1.0
// 0.291428261319518
// 0.00292382051359584
// endResult
