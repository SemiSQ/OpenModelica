// name:     externalFMUs
// keywords: fmu import
// status: correct
// teardown_command: rm -rf rm -rf dsres.mat CPUCooling_04b_CoolingFinFMUImport.mo vanDerPolFMUImport.mo documentation model.png binaries sources modelDescription.xml bouncingBall.fmu bouncingBallFMUImport.mo fmu*.log FMUImport_* bouncingBall_* bouncingBall.log bouncingBall.libs bouncingBall bouncingBall.exe bouncingBall.cpp bouncingBall.makefile output.log bouncingBall/* _FMUImport_bouncingBall.FMUBlock.h _FMUImport_CPUCooling_04b_CoolingFin.FMUBlock.h  _FMUImport_vanDerPol.FMUBlock.h
//
// 

importFMU("testedFMU/fmusdk1.0.2/bouncingBall.fmu");
loadFile("BouncingBallFMUImport.mo");
getErrorString();
simulate(FMUImport_bouncingBall.FMUBlock);
val(h,0);
val(h,1);
val(h,3);

importFMU("testedFMU/fmusdk1.0.2/vanDerPol.fmu");
loadFile("vanDerPolFMUImport.mo");
getErrorString();
simulate(FMUImport_vanDerPol.FMUBlock);
val(x0,0);
val(x0,1);
val(x1,0);
val(x1,1);

importFMU("testedFMU/dymola7.4/CPUCooling.fmu");
loadFile("CPUCooling_04b_CoolingFinFMUImport.mo");
getErrorString();
simulate(FMUImport_CPUCooling_04b_CoolingFin.FMUBlock);
val(heatCapacitor1_T,0);
val(heatCapacitor1_T,10);
val(heatCapacitor2_T,0);
val(heatCapacitor2_T,10);


importFMU("testedFMU/dymola7.4/bouncingBall.fmu");
loadFile("bouncingBallFMUImport.mo");
getErrorString();
simulate(FMUImport_bouncingBall.FMUBlock);
val(height,0);
val(height,1);
val(height,3);


// Result:
// 
// 
// true
// true
// ""
// record SimulationResult
//     resultFile = "FMUImport_bouncingBall.FMUBlock_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 3.0, numberOfIntervals = 500, tolerance = 1e-005, method = 'dassl', fileNamePrefix = 'FMUImport_bouncingBall.FMUBlock', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '',  simflags = ''",
//     messages = ""
// end SimulationResult;
// 1.0
// 0.224975001527131
// -1.05872763610797
// 
// 
// true
// true
// ""
// record SimulationResult
//     resultFile = "FMUImport_vanDerPol.FMUBlock_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 3.0, numberOfIntervals = 500, tolerance = 1e-005, method = 'dassl', fileNamePrefix = 'FMUImport_vanDerPol.FMUBlock', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// 2.0
// 1.5081399596562
// 0.0
// -0.78022602085592
// 
// 
// true
// true
// ""
// record SimulationResult
//     resultFile = "FMUImport_CPUCooling_04b_CoolingFin.FMUBlock_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'FMUImport_CPUCooling_04b_CoolingFin.FMUBlock', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '',  simflags = ''",
//     messages = ""
// end SimulationResult;
// 300.0
// 371.282977790392
// 300.0
// 371.996037499657
// 
// 
// true
// true
// ""
// record SimulationResult
//     resultFile = "FMUImport_bouncingBall.FMUBlock_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'FMUImport_bouncingBall.FMUBlock', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '',  simflags = ''",
//     messages = ""
// end SimulationResult;
// 1.0
// 0.658292670604326
// 0.284825656529661
// endResult
