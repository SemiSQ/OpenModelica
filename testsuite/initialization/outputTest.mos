// name: outputTest
// keywords: initialization, output, ipopt
// status: correct
// cflags:
// teardown_command: rm -rf initializationTests.outputTest* _initializationTests.outputTest* output.log
//
//  case for initialization with min-values
//

loadString("
within ;
package initializationTests
  model outputTest
    output Real x;
    output Real y;
    output Real z;
  initial equation
    2*x + y = z;
  equation
    x = sin(y);
    der(y) = x + y;
    z = der(y) + 1;
  end outputTest;
end initializationTests;
");
getErrorString();

simulate(initializationTests.outputTest, startTime=0.0, stopTime=0.0, simflags="-iom ipopt");
val(y, 0);

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "initializationTests.outputTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 0.000001, method = 'dassl', fileNamePrefix = 'initializationTests.outputTest', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = '-iom ipopt'",
//     messages = "
// ******************************************************************************
// This program contains Ipopt, a library for large-scale nonlinear optimization.
// Ipopt is released as open source code under the Eclipse Public License (EPL).
// For more information visit http://projects.coin-or.org/Ipopt
// ******************************************************************************
// 
// NOTE: You are using Ipopt by default with the MUMPS linear solver.
// Other linear solvers might be more efficient (see Ipopt documentation).
// 
// 
// "
// end SimulationResult;
// 1.570526187582744
// endResult
