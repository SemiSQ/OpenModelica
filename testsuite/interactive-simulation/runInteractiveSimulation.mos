//name:         Interactive Simulation Testing
//keyword:      testing interactive simulation
//status:       correct
//teardown_command: rm -f trace-client.txt trace-server.txt sorted-trace-client.txt sorted-trace-server.txt out.log
//
// interactive simulation test
//

// remove the traces
system("rm -f trace-client.txt trace-server.txt sorted-trace-client.txt sorted-trace-server.txt out.log");
// clean the test area
system("make -f Makefile.run clean");
// run the interactive simulation
system("make -f Makefile.run > out.log");
// maybe we should sort the files?
// system("cat trace-server.txt | sort | uniq > sorted-trace-server.txt"); 
// system("cat trace-client.txt | sort | uniq > sorted-trace-client.txt");
system("cat trace-server.txt > sorted-trace-server.txt"); 
system("cat trace-client.txt > sorted-trace-client.txt");
"Trace of the client (sorted alphabetically):";
readFile("sorted-trace-client.txt");
"Trace of server (simulation) (sorted alphabetically):";
readFile("sorted-trace-server.txt");

// Result:
// 0
// rm -f TwoTanks.TanksConnectedPI* client.* 
// 0
// 0
// 0
// 0
// "Trace of the client (sorted alphabetically):"
// "Control server on: 127.0.0.1:10500

// Transfer server on: 127.0.0.1:10502

// Enter operation to be sent to server: 

// Message to be send: setcontrolclienturl#1#127.0.0.1#10500#end

// Enter operation to be sent to server: 

// Command to delay the client for: 2 seconds.

// End delay of 2 seconds.

// Enter operation to be sent to server: 

// Message to be send: settransferclienturl#2#127.0.0.1#10502#end

// Enter operation to be sent to server: 

// Command to delay the client for: 2 seconds.

// End delay of 2 seconds.

// Enter operation to be sent to server: 

// Message to be send: setfilter#3#tank1.h#source.flowLevel#end

// Enter operation to be sent to server: 

// Command to delay the client for: 2 seconds.

// Server recieved message: done#3#end

// End delay of 2 seconds.

// Enter operation to be sent to server: 

// Message to be send: start#4#end

// Enter operation to be sent to server: 

// Command to delay the client for: 3 seconds.

// Server recieved message: done#4#end

// Server recieved message: result#1.00142e-10#tank1.h=4.44089e-15#source.flowLevel=0.02#end

// Server recieved message: result#1#tank1.h=0.376613#source.flowLevel=0.02#end

// Server recieved message: result#2#tank1.h=0.368666#source.flowLevel=0.02#end

// End delay of 3 seconds.

// Enter operation to be sent to server: 

// Message to be send: changevalue#5#3.6#source.flowLevel=0.0004#end

// Enter operation to be sent to server: 

// Command to delay the client for: 10 seconds.

// Server recieved message: result#3#tank1.h=0.358301#source.flowLevel=0.02#end

// Server recieved message: done#5#end

// Server recieved message: result#24#tank1.h=0.258609#source.flowLevel=0.0004#end

// Server recieved message: result#4#tank1.h=0.257693#source.flowLevel=0.0004#end

// Server recieved message: result#5#tank1.h=0.256874#source.flowLevel=0.0004#end

// Server recieved message: result#6#tank1.h=0.256143#source.flowLevel=0.0004#end

// Server recieved message: result#7#tank1.h=0.255489#source.flowLevel=0.0004#end

// Server recieved message: result#8#tank1.h=0.254905#source.flowLevel=0.0004#end

// Server recieved message: result#9#tank1.h=0.254384#source.flowLevel=0.0004#end

// Server recieved message: result#10#tank1.h=0.253918#source.flowLevel=0.0004#end

// Server recieved message: result#11#tank1.h=0.253501#source.flowLevel=0.0004#end

// End delay of 10 seconds.

// Enter operation to be sent to server: 

// Message to be send: shutdown#6#end

// Shuting down in 3 seconds .... due to shutdown message: shutdown#6#end

// "
// "Trace of server (simulation) (sorted alphabetically):"
// "***** Store the DataNames *****

// ***** End store the DataNames *****

// initialize done...

// Client Message: setcontrolclienturl#1#127.0.0.1#10500#end

// Operation: setcontrolclienturl

// 127.0.0.1

// 10500

// Control Client IP and Port: 127.0.0.1:10500

// create client done...

// Connect to server with user specific ip and port, ip = 127.0.0.1, port = 10500

// Client Message: settransferclienturl#2#127.0.0.1#10502#end

// Operation: settransferclienturl

// Creating producers and consumers!

// create producer and consumer done...

// Client Message: setfilter#3#tank1.h#source.flowLevel#end

// Operation: setfilter

// filterstring: tank1.h#source.flowLevel

// tank1.h#source.flowLevel

// Type: v Name: tank1.h

// STATENAME: tank1.h

// VARFILTERNAME: tank1.h

// Type: p Name: source.flowLevel

// PARFILTERNAME: source.flowLevel

// Message send: done#3#end

// Client Message: start#4#end

// Operation: start

// start done

// Message send: done#4#end

// 

// Client Message: changevalue#5#3.6#source.flowLevel=0.0004#end

// Operation: changevalue

// changeParameterValues --> time: 3.6 parameter: source.flowLevel=0.0004

// pause done

// [-1 - 23]

// p_ssdAtChangedSimulationTime->forTimeStep: 3

// globalData->lastEmittedTime: 3

// start done

// Message send: done#5#end

// Client Message: shutdown#6#end

// Operation: shutdown

// Message send: done#6#end

// simulation finished!

// "
// endResult
