// name:     DifferentialAmplifier 
// keywords: instantiate, bondlib
// status:   correct
// 
//  instantiate DifferentialAmplifier BondLib Spice example
//

loadFile("DifferentialAmplifierTotal.mo");
instantiateModel(BondLib_Examples_ModelicaSpice_DifferentialAmplifier);
getErrorString();

// Result:
// true
// "function BondLib.Spice.Utilities.JFETeq1 \"Computation of injected drain-source current for Level = 1\"
//   input Real vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   input Real Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   input Real sig \"sign(vds)\";
//   input Real Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Reference temperature\";
//   input Real VT0(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage at reference temperature\";
//   input Real BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at reference temperature\";
//   input Real LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") \"Channel length modulation\";
//   input Real TCV(unit = \"V/K\") \"Linear temperature coefficient of threshold voltage\";
//   input Real BEX \"Mobility temperature exponent\";
//   output Real ids0(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   protected Real DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Temperature difference\";
//   protected Real RTemp \"Temperature quotient\";
//   protected Real VT0val(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage at device temperature\";
//   protected Real BETAval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Beta(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Adjusted transconductance at device temperature\";
//   protected Real cdlin(unit = \"V2\") \"Linear region current factor\";
//   protected Real cdsat(unit = \"V2\") \"Saturation region current factor\";
//   protected Real Vgst(quantity = \"ElectricPotential\", unit = \"V\") \"vgs - VT0\";
// algorithm
//   DTemp := Tdev - Tnom;
//   RTemp := Tdev / Tnom;
//   VT0val := VT0 - TCV * DTemp;
//   BETAval := BETA * RTemp ^ BEX;
//   Vgst := vgs - VT0val;
//   vdsat := if Vgst > 0.0 then Vgst else 0.0;
//   Beta := BETAval * (1.0 + LAMBDA * vds);
//   cdlin := vds * (2.0 * Vgst - vds);
//   cdsat := Vgst ^ 2.0;
//   ids0 := sig * Beta * if Vgst > 0.0 and vds <= vdsat then cdlin else if Vgst > 0.0 and vds > vdsat then cdsat else 0.0;
// end BondLib.Spice.Utilities.JFETeq1;
// 
// function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\");
// 
//   external \"C\";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\");
//   output Real y;
// 
//   external \"C\";
// end Modelica.Math.sin;
// 
// class BondLib_Examples_ModelicaSpice_DifferentialAmplifier
//   output Real vin(quantity = \"ElectricPotential\", unit = \"V\");
//   output Real vout(quantity = \"ElectricPotential\", unit = \"V\");
//   Real Gnd1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd1.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd1.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd1.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd1.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd1.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd1.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd1.V0.e \"Bondgraphic effort\";
//   Real Gnd1.V0.f \"Bondgraphic flow\";
//   Real Gnd1.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd1.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd1.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd1.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd1.El2BG1.BondCon1.d \"Directional variable\";
//   parameter Integer Jp1.Level(min = 1, max = 3) = 1 \"JFET modeling level\";
//   parameter Real Jp1.Area = 1.0 \"Relative area occupied by capacitor\";
//   parameter Real Jp1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = -1.1 \"Threshold voltage at reference temperature (VT0<0: enhancement type, VT0>0: depletion type)\";
//   parameter Real Jp1.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\", min = 0.0) = 0.001 \"Channel length modulation\";
//   parameter Real Jp1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") = 0.015 \"Transconductance parameter at reference temperature\";
//   parameter Real Jp1.N = 1.0 \"Current emission coefficient\";
//   parameter Real Jp1.IS(quantity = \"ElectricCurrent\", unit = \"A\", min = 1e-60) = 1e-15 \"Transport saturation current at reference temperature\";
//   parameter Real Jp1.PB(quantity = \"ElectricPotential\", unit = \"V\") = 0.2 \"Built-in potential at reference temperature\";
//   parameter Real Jp1.RS(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 0.5 \"Source resistance\";
//   parameter Real Jp1.RD(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 1.5 \"Drain resistance\";
//   parameter Real Jp1.RG(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 0.0 \"Gate resistance\";
//   parameter Real Jp1.CGS(quantity = \"Capacitance\", unit = \"F\", min = 1e-60) = 5e-14 \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp1.CGD(quantity = \"Capacitance\", unit = \"F\", min = 1e-60) = 5e-14 \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp1.FC(min = 0.0, max = 0.95) = 0.5 \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp1.TT(quantity = \"Time\", unit = \"s\", min = 0.0) = 1e-12 \"Ideal transit time\";
//   parameter Real Jp1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   parameter Real Jp1.BEX = 0.0 \"Mobility temperature exponent\";
//   parameter Real Jp1.TCV(unit = \"V/K\") = 0.0 \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp1.TRS(unit = \"1/K\") = 0.0 \"Linear temperature coefficient of source resistance\";
//   parameter Real Jp1.TRD(unit = \"1/K\") = 0.0 \"Linear temperature coefficient of drain resistance\";
//   parameter Real Jp1.TRG(unit = \"1/K\") = 0.0 \"Linear temperature coefficient of gate resistance\";
//   parameter Real Jp1.LAM1(quantity = \"InversePotential\", unit = \"1/V\") = 0.0 \"Channel length modulation gate voltage parameter\";
//   parameter Real Jp1.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = 1.0 \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp1.B(quantity = \"InversePotential\", unit = \"1/V\") = 0.0 \"Measure of doping profile\";
//   parameter Real Jp1.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = 0.2 \"Voltage range for transition\";
//   parameter Real Jp1.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = 0.5 \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp1.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real Jp1.GminDC(quantity = \"Conductance\", unit = \"S\") = 1e-16 \"Leakage conductance\";
//   parameter Boolean Jp1.enforceStates = true \"State selector\";
//   Real Jp1.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Rg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Rg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Rg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Rg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Tnom \"Reference temperature\";
//   Real Jp1.Rg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Rg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Rg.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.RG \"Resistance at reference temperature\";
//   parameter Real Jp1.Rg.TR1(unit = \"1/K\") = Jp1.TRG \"Linear temperature coefficient\";
//   parameter Real Jp1.Rg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Rg.Area = Jp1.Area \"Relative area occupied by resistor\";
//   Real Jp1.Rg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp1.Rg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rg.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp1.Rg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rg.B6.fBondCon1.d \"Direction variable\";
//   Real Jp1.Rg.T_nom.e \"Bondgraphic effort\";
//   Real Jp1.Rg.T_nom.f \"Bondgraphic flow\";
//   Real Jp1.Rg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp1.Rg.T_nom.e0 = Jp1.Rg.Tnom \"Bondgraphic Effort Source\";
//   Real Jp1.Rg.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rg.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.R1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.Rg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Rg.Tnom \"Reference temperature\";
//   Real Jp1.Rg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp1.Rg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp1.Rg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.Rg.R \"Resistance at reference temperature\";
//   parameter Real Jp1.Rg.R1.TR1(unit = \"1/K\") = Jp1.Rg.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp1.Rg.R1.TR2(unit = \"1/K2\") = Jp1.Rg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Rg.R1.Area = Jp1.Rg.Area \"Relative area occupied by resistor\";
//   Real Jp1.Rg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp1.Rg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rg.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Rg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rg.B4.eBondCon1.d \"Direction variable\";
//   Real Jp1.Rg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.p.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.n2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp1.Rg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp1.Rg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp1.Rg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp1.Rg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp1.Rg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp1.Rg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp1.Rg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp1.Rg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rg.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Rg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rg.B5.eBondCon1.d \"Direction variable\";
//   Real Jp1.Rg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Rg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Tnom \"Reference temperature\";
//   Real Jp1.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.RD \"Resistance at reference temperature\";
//   parameter Real Jp1.Rd.TR1(unit = \"1/K\") = Jp1.TRD \"Linear temperature coefficient\";
//   parameter Real Jp1.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Rd.Area = Jp1.Area \"Relative area occupied by resistor\";
//   Real Jp1.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp1.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp1.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Jp1.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Jp1.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Jp1.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp1.Rd.T_nom.e0 = Jp1.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Jp1.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Rd.Tnom \"Reference temperature\";
//   Real Jp1.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp1.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp1.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.Rd.R \"Resistance at reference temperature\";
//   parameter Real Jp1.Rd.R1.TR1(unit = \"1/K\") = Jp1.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp1.Rd.R1.TR2(unit = \"1/K2\") = Jp1.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Rd.R1.Area = Jp1.Rd.Area \"Relative area occupied by resistor\";
//   Real Jp1.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp1.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Jp1.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.p.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.n2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp1.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp1.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp1.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp1.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp1.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp1.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp1.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp1.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Jp1.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Rs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Rs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Rs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Rs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Tnom \"Reference temperature\";
//   Real Jp1.Rs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Rs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Rs.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.RS \"Resistance at reference temperature\";
//   parameter Real Jp1.Rs.TR1(unit = \"1/K\") = Jp1.TRS \"Linear temperature coefficient\";
//   parameter Real Jp1.Rs.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Rs.Area = Jp1.Area \"Relative area occupied by resistor\";
//   Real Jp1.Rs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Rs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Rs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp1.Rs.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rs.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rs.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp1.Rs.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rs.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rs.B6.fBondCon1.d \"Direction variable\";
//   Real Jp1.Rs.T_nom.e \"Bondgraphic effort\";
//   Real Jp1.Rs.T_nom.f \"Bondgraphic flow\";
//   Real Jp1.Rs.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp1.Rs.T_nom.e0 = Jp1.Rs.Tnom \"Bondgraphic Effort Source\";
//   Real Jp1.Rs.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rs.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rs.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rs.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rs.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.R1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.Rs.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Rs.Tnom \"Reference temperature\";
//   Real Jp1.Rs.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp1.Rs.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp1.Rs.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.Rs.R \"Resistance at reference temperature\";
//   parameter Real Jp1.Rs.R1.TR1(unit = \"1/K\") = Jp1.Rs.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp1.Rs.R1.TR2(unit = \"1/K2\") = Jp1.Rs.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Rs.R1.Area = Jp1.Rs.Area \"Relative area occupied by resistor\";
//   Real Jp1.Rs.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp1.Rs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rs.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Rs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rs.B4.eBondCon1.d \"Direction variable\";
//   Real Jp1.Rs.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.p.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.n2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp1.Rs.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp1.Rs.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Rs.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rs.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rs.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rs.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rs.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Rs.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Rs.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Rs.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Rs.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp1.Rs.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp1.Rs.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp1.Rs.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp1.Rs.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp1.Rs.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp1.Rs.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Rs.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rs.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Rs.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Rs.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Rs.B5.eBondCon1.d \"Direction variable\";
//   Real Jp1.Rs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Rs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Rs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Rs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Rs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp1.Jpi1.Level = Jp1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Tnom \"Reference temperature\";
//   parameter Real Jp1.Jpi1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp1.Jpi1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.IS \"Transport saturation current at reference temperature\";
//   parameter Real Jp1.Jpi1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Jp1.BETA \"Transconductance parameter at reference temperature\";
//   parameter Real Jp1.Jpi1.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.LAMBDA \"Channel length modulation\";
//   parameter Real Jp1.Jpi1.TCV(unit = \"V/K\") = Jp1.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp1.Jpi1.N = Jp1.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp1.Jpi1.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.FC = Jp1.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp1.Jpi1.TT(quantity = \"Time\", unit = \"s\") = Jp1.TT \"Ideal transit time\";
//   parameter Real Jp1.Jpi1.BEX = Jp1.BEX \"Mobility temperature exponent\";
//   parameter Real Jp1.Jpi1.LAM1(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.LAM1 \"Channel length modulation gate voltage parameter\";
//   parameter Real Jp1.Jpi1.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp1.Jpi1.B(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.B \"Measure of doping profile\";
//   parameter Real Jp1.Jpi1.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.DELTA \"Voltage range for transition\";
//   parameter Real Jp1.Jpi1.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp1.Jpi1.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp1.GminDC \"Leakage conductance\";
//   parameter Real Jp1.Jpi1.Area = Jp1.Area \"Relative area occupied by capacitor\";
//   parameter Real Jp1.Jpi1.EMin = Jp1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.EMax = Jp1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Jp1.Jpi1.enforceStates = Jp1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Jp1.Jpi1.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Jp1.Jpi1.ISD.u1 \"Connector of Real input signal 1\";
//   input Real Jp1.Jpi1.ISD.u2 \"Connector of Real input signal 2\";
//   output Real Jp1.Jpi1.ISD.y \"Connector of Real output signal\";
//   parameter Integer Jp1.Jpi1.ISD.Level = Jp1.Jpi1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.ISD.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Tnom \"Reference temperature\";
//   parameter Real Jp1.Jpi1.ISD.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp1.Jpi1.ISD.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Jp1.Jpi1.BETA \"Transconductance parameter at reference temperature\";
//   parameter Real Jp1.Jpi1.ISD.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.LAMBDA \"Channel length modulation\";
//   parameter Real Jp1.Jpi1.ISD.TCV(unit = \"V/K\") = Jp1.Jpi1.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp1.Jpi1.ISD.BEX = Jp1.Jpi1.BEX \"Mobility temperature exponent\";
//   parameter Real Jp1.Jpi1.ISD.LAM1(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.LAM1 \"Channel length modulation gate voltage parameter\";
//   parameter Real Jp1.Jpi1.ISD.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp1.Jpi1.ISD.B(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.B \"Measure of doping profile\";
//   output Real Jp1.Jpi1.ISD.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   output Real Jp1.Jpi1.ISD.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Jp1.Jpi1.ISD.ids(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real Jp1.Jpi1.ISD.vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   input Real Jp1.Jpi1.ISD.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Jp1.Jpi1.ISD.sig \"sign(vds)\";
//   output Real Jp1.Jpi1.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Jp1.Jpi1.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Jpi1.Ddg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Ddg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Ddg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Jpi1.Ddg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Ddg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.Ddg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp1.Jpi1.Ddg.Level = Jp1.Jpi1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Ddg.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.IS \"Transport saturation current at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.TCV(unit = \"V/K\") = Jp1.Jpi1.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp1.Jpi1.Ddg.N = Jp1.Jpi1.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.FC = Jp1.Jpi1.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp1.Jpi1.Ddg.TT(quantity = \"Time\", unit = \"s\") = Jp1.Jpi1.TT \"Ideal transit time\";
//   parameter Real Jp1.Jpi1.Ddg.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp1.Jpi1.Ddg.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.DELTA \"Voltage range for transition\";
//   parameter Real Jp1.Jpi1.Ddg.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp1.Jpi1.Ddg.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp1.Jpi1.GminDC \"Leakage conductance\";
//   parameter Real Jp1.Jpi1.Ddg.Area = Jp1.Jpi1.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp1.Jpi1.Ddg.GS = false \"True if gate-source junction\";
//   parameter Real Jp1.Jpi1.Ddg.EMin = Jp1.Jpi1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Ddg.EMax = Jp1.Jpi1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Jp1.Jpi1.Ddg.enforceStates = Jp1.Jpi1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   output Real Jp1.Jpi1.Ddg.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Jp1.Jpi1.Ddg.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Ddg.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Jpi1.Ddg.DjJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Ddg.DjJ1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Ddg.DjJ1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.DjJ1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.DjJ1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.DjJ1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Ddg.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Ddg.DjJ1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.Ddg.DjJ1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp1.Jpi1.Ddg.DjJ1.Level = Jp1.Jpi1.Ddg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.Ddg.IS \"Saturation current at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.N = Jp1.Jpi1.Ddg.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.Area = Jp1.Jpi1.Ddg.Area \"Relative area occupied by diode\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.EMin = Jp1.Jpi1.Ddg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.EMax = Jp1.Jpi1.Ddg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.DjJ1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Ddg.DjJ1.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.DTempSq \"Square of DTemp\";
//   constant Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp1.Jpi1.Ddg.DjJ1.DjJ1.Level = Jp1.Jpi1.Ddg.DjJ1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.Ddg.DjJ1.IS \"Saturation current at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.N = Jp1.Jpi1.Ddg.DjJ1.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.Area = Jp1.Jpi1.Ddg.DjJ1.Area \"Relative area occupied by diode\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMin = Jp1.Jpi1.Ddg.DjJ1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMax = Jp1.Jpi1.Ddg.DjJ1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   protected Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.RTemp \"Temperature quotient\";
//   protected Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.et;
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Ddg.DjJ1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.XTI = Jp1.Jpi1.Ddg.DjJ1.XTI \"Saturation current temperature exponent\";
//   protected parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.ExMin = exp(Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMin);
//   protected parameter Real Jp1.Jpi1.Ddg.DjJ1.DjJ1.ExMax = exp(Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMax);
//   Real Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Ddg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Ddg.DjJ1.XTI = Jp1.Jpi1.Ddg.XTI \"Saturation current temperature exponent\";
//   Real Jp1.Jpi1.Ddg.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Ddg.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Ddg.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Ddg.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Ddg.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.Ddg.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Jp1.Jpi1.Ddg.GminDC \"Resistance at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Ddg.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Ddg.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.T_nom.e0 = Jp1.Jpi1.Ddg.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Ddg.Rd.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.Jpi1.Ddg.Rd.R \"Resistance at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.R1.TR1(unit = \"1/K\") = Jp1.Jpi1.Ddg.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.R1.TR2(unit = \"1/K2\") = Jp1.Jpi1.Ddg.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.Rd.R1.Area = Jp1.Jpi1.Ddg.Rd.Area \"Relative area occupied by resistor\";
//   Real Jp1.Jpi1.Ddg.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.p.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.n2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp1.Jpi1.Ddg.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Ddg.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Jpi1.Ddg.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Jp1.Jpi1.Ddg.VarC1.enforceStates = Jp1.Jpi1.Ddg.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Jp1.Jpi1.Ddg.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Jp1.Jpi1.Ddg.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Ddg.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Ddg.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Jp1.Jpi1.Ddg.VarC1.u \"Modulation signal\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Ddg.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.mC1.e(start = Jp1.Jpi1.Ddg.VarC1.u0) \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Ddg.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Jp1.Jpi1.Ddg.VarC1.mC1.s \"Signal input\";
//   Real Jp1.Jpi1.Ddg.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   input Real Jp1.Jpi1.Ddg.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Jp1.Jpi1.Ddg.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   input Real Jp1.Jpi1.Ddg.nlCJ1.u1 \"Connector of Real input signal 1\";
//   input Real Jp1.Jpi1.Ddg.nlCJ1.u2 \"Connector of Real input signal 2\";
//   output Real Jp1.Jpi1.Ddg.nlCJ1.y \"Connector of Real output signal\";
//   constant Real Jp1.Jpi1.Ddg.nlCJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp1.Jpi1.Ddg.nlCJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp1.Jpi1.Ddg.nlCJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp1.Jpi1.Ddg.nlCJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp1.Jpi1.Ddg.nlCJ1.Level = Jp1.Jpi1.Ddg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Ddg.Tnom \"Reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Ddg.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.TCV(unit = \"V/K\") = Jp1.Jpi1.Ddg.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.Ddg.IS \"Transport saturation current\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.N = Jp1.Jpi1.Ddg.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Ddg.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.Ddg.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.Ddg.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.FC = Jp1.Jpi1.Ddg.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.TT(quantity = \"Time\", unit = \"s\") = Jp1.Jpi1.Ddg.TT \"Ideal transit time\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.Ddg.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Ddg.DELTA \"Voltage range for transition\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Ddg.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp1.Jpi1.Ddg.GminDC \"Leakage conductance\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.Area = Jp1.Jpi1.Ddg.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp1.Jpi1.Ddg.nlCJ1.GS = Jp1.Jpi1.Ddg.GS \"True if gate-source junction\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.EMin = Jp1.Jpi1.Ddg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.EMax = Jp1.Jpi1.Ddg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Jp1.Jpi1.Ddg.nlCJ1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Jp1.Jpi1.Ddg.nlCJ1.vgd(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-drain voltage\";
//   output Real Jp1.Jpi1.Ddg.nlCJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Diode voltage\";
//   output Real Jp1.Jpi1.Ddg.nlCJ1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diode capacitance\";
//   input Real Jp1.Jpi1.Ddg.nlCJ1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.RTemp \"Temperature quotient\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.VT0val(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.CGSval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-source depletion capacitance at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.CGDval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-drain depletion capacitance at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.CJval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias depletion capacitance at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Cdiff(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diffusion capacitance\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Cdepl(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Depletion capacitance\";
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.et;
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Vfac1(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Vfac2(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Ve(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Vn(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.VNval(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.sig2;
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Cfac1;
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Cfac2;
//   protected Real Jp1.Jpi1.Ddg.nlCJ1.Cfac3;
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Ddg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.XTI = Jp1.Jpi1.Ddg.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp1.Jpi1.Ddg.nlCJ1.M = Jp1.Jpi1.Ddg.M \"Junction grading coefficient\";
//   protected parameter Real Jp1.Jpi1.Ddg.nlCJ1.ExMin = exp(Jp1.Jpi1.Ddg.nlCJ1.EMin);
//   protected parameter Real Jp1.Jpi1.Ddg.nlCJ1.ExMax = exp(Jp1.Jpi1.Ddg.nlCJ1.EMax);
//   parameter Real Jp1.Jpi1.Ddg.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Ddg.XTI = Jp1.Jpi1.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp1.Jpi1.Ddg.M = Jp1.Jpi1.M \"Junction grading coefficient\";
//   Real Jp1.Jpi1.Dsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Dsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Dsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Jpi1.Dsg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Dsg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.Dsg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp1.Jpi1.Dsg.Level = Jp1.Jpi1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Dsg.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.IS \"Transport saturation current at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.TCV(unit = \"V/K\") = Jp1.Jpi1.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp1.Jpi1.Dsg.N = Jp1.Jpi1.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.FC = Jp1.Jpi1.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp1.Jpi1.Dsg.TT(quantity = \"Time\", unit = \"s\") = Jp1.Jpi1.TT \"Ideal transit time\";
//   parameter Real Jp1.Jpi1.Dsg.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp1.Jpi1.Dsg.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.DELTA \"Voltage range for transition\";
//   parameter Real Jp1.Jpi1.Dsg.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp1.Jpi1.Dsg.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp1.Jpi1.GminDC \"Leakage conductance\";
//   parameter Real Jp1.Jpi1.Dsg.Area = Jp1.Jpi1.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp1.Jpi1.Dsg.GS = true \"True if gate-source junction\";
//   parameter Real Jp1.Jpi1.Dsg.EMin = Jp1.Jpi1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Dsg.EMax = Jp1.Jpi1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Jp1.Jpi1.Dsg.enforceStates = Jp1.Jpi1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   output Real Jp1.Jpi1.Dsg.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Jp1.Jpi1.Dsg.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Dsg.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Jpi1.Dsg.DjJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Dsg.DjJ1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Dsg.DjJ1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.DjJ1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.DjJ1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.DjJ1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Dsg.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Dsg.DjJ1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.Dsg.DjJ1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp1.Jpi1.Dsg.DjJ1.Level = Jp1.Jpi1.Dsg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.Dsg.IS \"Saturation current at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.N = Jp1.Jpi1.Dsg.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.Area = Jp1.Jpi1.Dsg.Area \"Relative area occupied by diode\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.EMin = Jp1.Jpi1.Dsg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.EMax = Jp1.Jpi1.Dsg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.DjJ1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Dsg.DjJ1.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.DTempSq \"Square of DTemp\";
//   constant Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp1.Jpi1.Dsg.DjJ1.DjJ1.Level = Jp1.Jpi1.Dsg.DjJ1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.Dsg.DjJ1.IS \"Saturation current at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.N = Jp1.Jpi1.Dsg.DjJ1.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.Area = Jp1.Jpi1.Dsg.DjJ1.Area \"Relative area occupied by diode\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMin = Jp1.Jpi1.Dsg.DjJ1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMax = Jp1.Jpi1.Dsg.DjJ1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   protected Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.RTemp \"Temperature quotient\";
//   protected Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.et;
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Dsg.DjJ1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.XTI = Jp1.Jpi1.Dsg.DjJ1.XTI \"Saturation current temperature exponent\";
//   protected parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.ExMin = exp(Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMin);
//   protected parameter Real Jp1.Jpi1.Dsg.DjJ1.DjJ1.ExMax = exp(Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMax);
//   Real Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Dsg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Dsg.DjJ1.XTI = Jp1.Jpi1.Dsg.XTI \"Saturation current temperature exponent\";
//   Real Jp1.Jpi1.Dsg.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Dsg.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Dsg.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Dsg.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Dsg.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.Dsg.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Jp1.Jpi1.Dsg.GminDC \"Resistance at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Dsg.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Dsg.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.T_nom.e0 = Jp1.Jpi1.Dsg.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Dsg.Rd.Tnom \"Reference temperature\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp1.Jpi1.Dsg.Rd.R \"Resistance at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.R1.TR1(unit = \"1/K\") = Jp1.Jpi1.Dsg.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.R1.TR2(unit = \"1/K2\") = Jp1.Jpi1.Dsg.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.Rd.R1.Area = Jp1.Jpi1.Dsg.Rd.Area \"Relative area occupied by resistor\";
//   Real Jp1.Jpi1.Dsg.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.p.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.n2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp1.Jpi1.Dsg.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Dsg.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.Jpi1.Dsg.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Jp1.Jpi1.Dsg.VarC1.enforceStates = Jp1.Jpi1.Dsg.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Jp1.Jpi1.Dsg.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Jp1.Jpi1.Dsg.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Dsg.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Dsg.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Jp1.Jpi1.Dsg.VarC1.u \"Modulation signal\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Dsg.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.mC1.e(start = Jp1.Jpi1.Dsg.VarC1.u0) \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Dsg.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Jp1.Jpi1.Dsg.VarC1.mC1.s \"Signal input\";
//   Real Jp1.Jpi1.Dsg.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   input Real Jp1.Jpi1.Dsg.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Jp1.Jpi1.Dsg.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   input Real Jp1.Jpi1.Dsg.nlCJ1.u1 \"Connector of Real input signal 1\";
//   input Real Jp1.Jpi1.Dsg.nlCJ1.u2 \"Connector of Real input signal 2\";
//   output Real Jp1.Jpi1.Dsg.nlCJ1.y \"Connector of Real output signal\";
//   constant Real Jp1.Jpi1.Dsg.nlCJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp1.Jpi1.Dsg.nlCJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp1.Jpi1.Dsg.nlCJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp1.Jpi1.Dsg.nlCJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp1.Jpi1.Dsg.nlCJ1.Level = Jp1.Jpi1.Dsg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Jpi1.Dsg.Tnom \"Reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Dsg.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.TCV(unit = \"V/K\") = Jp1.Jpi1.Dsg.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp1.Jpi1.Dsg.IS \"Transport saturation current\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.N = Jp1.Jpi1.Dsg.N \"Current emission coefficient\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Dsg.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.Dsg.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp1.Jpi1.Dsg.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.FC = Jp1.Jpi1.Dsg.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.TT(quantity = \"Time\", unit = \"s\") = Jp1.Jpi1.Dsg.TT \"Ideal transit time\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp1.Jpi1.Dsg.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Dsg.DELTA \"Voltage range for transition\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Dsg.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp1.Jpi1.Dsg.GminDC \"Leakage conductance\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.Area = Jp1.Jpi1.Dsg.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp1.Jpi1.Dsg.nlCJ1.GS = Jp1.Jpi1.Dsg.GS \"True if gate-source junction\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.EMin = Jp1.Jpi1.Dsg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.EMax = Jp1.Jpi1.Dsg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Jp1.Jpi1.Dsg.nlCJ1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Jp1.Jpi1.Dsg.nlCJ1.vgd(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-drain voltage\";
//   output Real Jp1.Jpi1.Dsg.nlCJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Diode voltage\";
//   output Real Jp1.Jpi1.Dsg.nlCJ1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diode capacitance\";
//   input Real Jp1.Jpi1.Dsg.nlCJ1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.RTemp \"Temperature quotient\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.VT0val(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.CGSval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-source depletion capacitance at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.CGDval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-drain depletion capacitance at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.CJval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias depletion capacitance at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Cdiff(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diffusion capacitance\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Cdepl(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Depletion capacitance\";
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.et;
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Vfac1(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Vfac2(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Ve(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Vn(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.VNval(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.sig2;
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Cfac1;
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Cfac2;
//   protected Real Jp1.Jpi1.Dsg.nlCJ1.Cfac3;
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.Dsg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.XTI = Jp1.Jpi1.Dsg.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp1.Jpi1.Dsg.nlCJ1.M = Jp1.Jpi1.Dsg.M \"Junction grading coefficient\";
//   protected parameter Real Jp1.Jpi1.Dsg.nlCJ1.ExMin = exp(Jp1.Jpi1.Dsg.nlCJ1.EMin);
//   protected parameter Real Jp1.Jpi1.Dsg.nlCJ1.ExMax = exp(Jp1.Jpi1.Dsg.nlCJ1.EMax);
//   parameter Real Jp1.Jpi1.Dsg.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.Jpi1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.Dsg.XTI = Jp1.Jpi1.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp1.Jpi1.Dsg.M = Jp1.Jpi1.M \"Junction grading coefficient\";
//   Real Jp1.Jpi1.Vsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Vsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Vsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Vsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Jp1.Jpi1.Vsg.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Vsg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Vsg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.De1.e \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Vsg.De1.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Vsg.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.De1.BondCon1.d \"Directional variable\";
//   output Real Jp1.Jpi1.Vsg.De1.OutPort1 \"Connector of Real output signal\";
//   Real Jp1.Jpi1.Vsg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsg.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Vsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Vsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Vsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Jp1.Jpi1.Vsd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Vsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Vsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Vsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.De1.e \"Bondgraphic effort\";
//   Real Jp1.Jpi1.Vsd.De1.f \"Bondgraphic flow\";
//   Real Jp1.Jpi1.Vsd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.De1.BondCon1.d \"Directional variable\";
//   output Real Jp1.Jpi1.Vsd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Jp1.Jpi1.Vsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Vsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Vsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Vsd.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp1.Jpi1.Isd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp1.Jpi1.Isd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Isd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Isd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Isd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Isd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp1.Jpi1.Isd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Jp1.Jpi1.Isd.InPort1(quantity = \"ElectricCurrent\", unit = \"A\") \"Current source\";
//   Real Jp1.Jpi1.Isd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Isd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Isd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp1.Jpi1.Isd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp1.Jpi1.Isd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Isd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Isd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Jpi1.Isd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Isd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Isd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Jpi1.Isd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Jp1.Jpi1.Isd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Isd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Isd.B4.eBondCon1.d \"Direction variable\";
//   output Real Jp1.Jpi1.Isd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Isd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Isd.B4.fBondCon1.d \"Direction variable\";
//   output Real Jp1.Jpi1.Isd.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.Jpi1.Isd.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Isd.B3.fBondCon1.d \"Direction variable\";
//   input Real Jp1.Jpi1.Isd.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.Jpi1.Isd.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.Jpi1.Isd.B3.eBondCon1.d \"Direction variable\";
//   Real Jp1.Jpi1.Isd.I1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Jpi1.Isd.I1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Jpi1.Isd.I1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Jpi1.Isd.I1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Jpi1.Isd.I1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.I1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.I1.BondCon1.d \"Directional variable\";
//   Real Jp1.Jpi1.Isd.I1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Jpi1.Isd.I1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Jpi1.Isd.I1.BondCon2.d \"Directional variable\";
//   input Real Jp1.Jpi1.Isd.I1.s \"Signal input\";
//   Real Jp1.Jpi1.Isd.I1.f0 \"Bondgraphic Flow Source\";
//   parameter Real Jp1.Jpi1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp1.Jpi1.XTI = Jp1.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp1.Jpi1.M = Jp1.M \"Junction grading coefficient\";
//   Real Jp1.T_nom.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.T_nom.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.T_nom.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.T_nom.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.T_nom.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.T_nom.Tabs.e \"Bondgraphic effort\";
//   Real Jp1.T_nom.Tabs.f \"Bondgraphic flow\";
//   Real Jp1.T_nom.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.T_nom.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.T_nom.Tabs.BondCon1.d \"Directional variable\";
//   input Real Jp1.T_nom.Tabs.s \"Signal input\";
//   Real Jp1.T_nom.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real Jp1.T_nom.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp1.T_nom.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.T_nom.B1.eBondCon1.d \"Direction variable\";
//   output Real Jp1.T_nom.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp1.T_nom.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp1.T_nom.B1.fBondCon1.d \"Direction variable\";
//   Real Jp1.T_nom.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.T_nom.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp1.T_nom.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp1.Tnom \"Fixed temperature at port\";
//   Real Jp1.Sw1.p.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Sw1.p.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Sw1.n1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Sw1.n1.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Sw1.n2.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Sw1.n2.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Boolean Jp1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Heat2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Heat2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Heat2BG1.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Heat2BG1.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Sw1.Heat2BG1.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Sw1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Sw1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Sw1.BG2Heat2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.BG2Heat2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.BG2Heat2.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.BG2Heat2.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp1.Sw1.BG2Heat2.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp1.Sw1.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.p.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.n2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp1.Sw1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp1.Sw1.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Sw1.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Sw1.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Sw1.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Sw1.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Sw1.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp1.Sw1.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp1.Sw1.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp1.Sw1.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp1.Sw1.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp1.Sw1.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Sw1.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Sw1.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Sw1.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Sw1.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp1.Sw1.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp1.Sw1.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp1.Sw1.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp1.Sw1.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp1.Sw1.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp1.Sw1.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp1.Sw1.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp1.Sw1.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp1.Sw1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp1.Sw1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp1.Sw1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp1.Sw1.Sw1.B3.BondCon2.d \"Directional variable\";
//   parameter Real Jp1.M(min = 0.1, max = 0.9) = 0.5 \"Junction grading coefficient\";
//   parameter Real Jp1.XTI = 3.0 \"Saturation current temperature exponent\";
//   parameter Real Jp1.EG(quantity = \"ElectricPotential\", unit = \"V\", min = 0.1) = 1.11 \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Integer Jp2.Level(min = 1, max = 3) = 1 \"JFET modeling level\";
//   parameter Real Jp2.Area = 1.0 \"Relative area occupied by capacitor\";
//   parameter Real Jp2.VT0(quantity = \"ElectricPotential\", unit = \"V\") = -1.1 \"Threshold voltage at reference temperature (VT0<0: enhancement type, VT0>0: depletion type)\";
//   parameter Real Jp2.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\", min = 0.0) = 0.001 \"Channel length modulation\";
//   parameter Real Jp2.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") = 0.015 \"Transconductance parameter at reference temperature\";
//   parameter Real Jp2.N = 1.0 \"Current emission coefficient\";
//   parameter Real Jp2.IS(quantity = \"ElectricCurrent\", unit = \"A\", min = 1e-60) = 1e-15 \"Transport saturation current at reference temperature\";
//   parameter Real Jp2.PB(quantity = \"ElectricPotential\", unit = \"V\") = 0.2 \"Built-in potential at reference temperature\";
//   parameter Real Jp2.RS(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 0.5 \"Source resistance\";
//   parameter Real Jp2.RD(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 1.5 \"Drain resistance\";
//   parameter Real Jp2.RG(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 0.0 \"Gate resistance\";
//   parameter Real Jp2.CGS(quantity = \"Capacitance\", unit = \"F\", min = 1e-60) = 5e-14 \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp2.CGD(quantity = \"Capacitance\", unit = \"F\", min = 1e-60) = 5e-14 \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp2.FC(min = 0.0, max = 0.95) = 0.5 \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp2.TT(quantity = \"Time\", unit = \"s\", min = 0.0) = 1e-12 \"Ideal transit time\";
//   parameter Real Jp2.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   parameter Real Jp2.BEX = 0.0 \"Mobility temperature exponent\";
//   parameter Real Jp2.TCV(unit = \"V/K\") = 0.0 \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp2.TRS(unit = \"1/K\") = 0.0 \"Linear temperature coefficient of source resistance\";
//   parameter Real Jp2.TRD(unit = \"1/K\") = 0.0 \"Linear temperature coefficient of drain resistance\";
//   parameter Real Jp2.TRG(unit = \"1/K\") = 0.0 \"Linear temperature coefficient of gate resistance\";
//   parameter Real Jp2.LAM1(quantity = \"InversePotential\", unit = \"1/V\") = 0.0 \"Channel length modulation gate voltage parameter\";
//   parameter Real Jp2.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = 1.0 \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp2.B(quantity = \"InversePotential\", unit = \"1/V\") = 0.0 \"Measure of doping profile\";
//   parameter Real Jp2.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = 0.2 \"Voltage range for transition\";
//   parameter Real Jp2.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = 0.5 \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp2.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real Jp2.GminDC(quantity = \"Conductance\", unit = \"S\") = 1e-16 \"Leakage conductance\";
//   parameter Boolean Jp2.enforceStates = true \"State selector\";
//   Real Jp2.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Rg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Rg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Rg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Rg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Tnom \"Reference temperature\";
//   Real Jp2.Rg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Rg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Rg.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.RG \"Resistance at reference temperature\";
//   parameter Real Jp2.Rg.TR1(unit = \"1/K\") = Jp2.TRG \"Linear temperature coefficient\";
//   parameter Real Jp2.Rg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Rg.Area = Jp2.Area \"Relative area occupied by resistor\";
//   Real Jp2.Rg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp2.Rg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rg.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp2.Rg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rg.B6.fBondCon1.d \"Direction variable\";
//   Real Jp2.Rg.T_nom.e \"Bondgraphic effort\";
//   Real Jp2.Rg.T_nom.f \"Bondgraphic flow\";
//   Real Jp2.Rg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp2.Rg.T_nom.e0 = Jp2.Rg.Tnom \"Bondgraphic Effort Source\";
//   Real Jp2.Rg.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rg.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.R1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.Rg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Rg.Tnom \"Reference temperature\";
//   Real Jp2.Rg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp2.Rg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp2.Rg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.Rg.R \"Resistance at reference temperature\";
//   parameter Real Jp2.Rg.R1.TR1(unit = \"1/K\") = Jp2.Rg.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp2.Rg.R1.TR2(unit = \"1/K2\") = Jp2.Rg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Rg.R1.Area = Jp2.Rg.Area \"Relative area occupied by resistor\";
//   Real Jp2.Rg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp2.Rg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rg.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Rg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rg.B4.eBondCon1.d \"Direction variable\";
//   Real Jp2.Rg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.p.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.n2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp2.Rg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp2.Rg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp2.Rg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp2.Rg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp2.Rg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp2.Rg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp2.Rg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp2.Rg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rg.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Rg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rg.B5.eBondCon1.d \"Direction variable\";
//   Real Jp2.Rg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Rg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Tnom \"Reference temperature\";
//   Real Jp2.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.RD \"Resistance at reference temperature\";
//   parameter Real Jp2.Rd.TR1(unit = \"1/K\") = Jp2.TRD \"Linear temperature coefficient\";
//   parameter Real Jp2.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Rd.Area = Jp2.Area \"Relative area occupied by resistor\";
//   Real Jp2.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp2.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp2.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Jp2.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Jp2.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Jp2.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp2.Rd.T_nom.e0 = Jp2.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Jp2.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Rd.Tnom \"Reference temperature\";
//   Real Jp2.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp2.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp2.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.Rd.R \"Resistance at reference temperature\";
//   parameter Real Jp2.Rd.R1.TR1(unit = \"1/K\") = Jp2.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp2.Rd.R1.TR2(unit = \"1/K2\") = Jp2.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Rd.R1.Area = Jp2.Rd.Area \"Relative area occupied by resistor\";
//   Real Jp2.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp2.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Jp2.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.p.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.n2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp2.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp2.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp2.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp2.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp2.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp2.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp2.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp2.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Jp2.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Rs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Rs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Rs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Rs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Tnom \"Reference temperature\";
//   Real Jp2.Rs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Rs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Rs.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.RS \"Resistance at reference temperature\";
//   parameter Real Jp2.Rs.TR1(unit = \"1/K\") = Jp2.TRS \"Linear temperature coefficient\";
//   parameter Real Jp2.Rs.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Rs.Area = Jp2.Area \"Relative area occupied by resistor\";
//   Real Jp2.Rs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Rs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Rs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp2.Rs.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rs.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rs.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp2.Rs.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rs.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rs.B6.fBondCon1.d \"Direction variable\";
//   Real Jp2.Rs.T_nom.e \"Bondgraphic effort\";
//   Real Jp2.Rs.T_nom.f \"Bondgraphic flow\";
//   Real Jp2.Rs.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp2.Rs.T_nom.e0 = Jp2.Rs.Tnom \"Bondgraphic Effort Source\";
//   Real Jp2.Rs.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rs.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rs.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rs.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rs.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.R1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.Rs.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Rs.Tnom \"Reference temperature\";
//   Real Jp2.Rs.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp2.Rs.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp2.Rs.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.Rs.R \"Resistance at reference temperature\";
//   parameter Real Jp2.Rs.R1.TR1(unit = \"1/K\") = Jp2.Rs.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp2.Rs.R1.TR2(unit = \"1/K2\") = Jp2.Rs.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Rs.R1.Area = Jp2.Rs.Area \"Relative area occupied by resistor\";
//   Real Jp2.Rs.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp2.Rs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rs.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Rs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rs.B4.eBondCon1.d \"Direction variable\";
//   Real Jp2.Rs.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.p.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.n2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp2.Rs.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp2.Rs.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Rs.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rs.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rs.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rs.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rs.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Rs.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Rs.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Rs.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Rs.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp2.Rs.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp2.Rs.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp2.Rs.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp2.Rs.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp2.Rs.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp2.Rs.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Rs.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rs.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Rs.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Rs.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Rs.B5.eBondCon1.d \"Direction variable\";
//   Real Jp2.Rs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Rs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Rs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Rs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Rs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp2.Jpi1.Level = Jp2.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Tnom \"Reference temperature\";
//   parameter Real Jp2.Jpi1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp2.Jpi1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.IS \"Transport saturation current at reference temperature\";
//   parameter Real Jp2.Jpi1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Jp2.BETA \"Transconductance parameter at reference temperature\";
//   parameter Real Jp2.Jpi1.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.LAMBDA \"Channel length modulation\";
//   parameter Real Jp2.Jpi1.TCV(unit = \"V/K\") = Jp2.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp2.Jpi1.N = Jp2.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp2.Jpi1.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.FC = Jp2.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp2.Jpi1.TT(quantity = \"Time\", unit = \"s\") = Jp2.TT \"Ideal transit time\";
//   parameter Real Jp2.Jpi1.BEX = Jp2.BEX \"Mobility temperature exponent\";
//   parameter Real Jp2.Jpi1.LAM1(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.LAM1 \"Channel length modulation gate voltage parameter\";
//   parameter Real Jp2.Jpi1.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp2.Jpi1.B(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.B \"Measure of doping profile\";
//   parameter Real Jp2.Jpi1.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.DELTA \"Voltage range for transition\";
//   parameter Real Jp2.Jpi1.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp2.Jpi1.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp2.GminDC \"Leakage conductance\";
//   parameter Real Jp2.Jpi1.Area = Jp2.Area \"Relative area occupied by capacitor\";
//   parameter Real Jp2.Jpi1.EMin = Jp2.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.EMax = Jp2.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Jp2.Jpi1.enforceStates = Jp2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Jp2.Jpi1.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Jp2.Jpi1.ISD.u1 \"Connector of Real input signal 1\";
//   input Real Jp2.Jpi1.ISD.u2 \"Connector of Real input signal 2\";
//   output Real Jp2.Jpi1.ISD.y \"Connector of Real output signal\";
//   parameter Integer Jp2.Jpi1.ISD.Level = Jp2.Jpi1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.ISD.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Tnom \"Reference temperature\";
//   parameter Real Jp2.Jpi1.ISD.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp2.Jpi1.ISD.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Jp2.Jpi1.BETA \"Transconductance parameter at reference temperature\";
//   parameter Real Jp2.Jpi1.ISD.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.LAMBDA \"Channel length modulation\";
//   parameter Real Jp2.Jpi1.ISD.TCV(unit = \"V/K\") = Jp2.Jpi1.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp2.Jpi1.ISD.BEX = Jp2.Jpi1.BEX \"Mobility temperature exponent\";
//   parameter Real Jp2.Jpi1.ISD.LAM1(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.LAM1 \"Channel length modulation gate voltage parameter\";
//   parameter Real Jp2.Jpi1.ISD.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp2.Jpi1.ISD.B(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.B \"Measure of doping profile\";
//   output Real Jp2.Jpi1.ISD.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   output Real Jp2.Jpi1.ISD.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Jp2.Jpi1.ISD.ids(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real Jp2.Jpi1.ISD.vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   input Real Jp2.Jpi1.ISD.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Jp2.Jpi1.ISD.sig \"sign(vds)\";
//   output Real Jp2.Jpi1.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Jp2.Jpi1.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Jpi1.Ddg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Ddg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Ddg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Jpi1.Ddg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Ddg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.Ddg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp2.Jpi1.Ddg.Level = Jp2.Jpi1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Ddg.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.IS \"Transport saturation current at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.TCV(unit = \"V/K\") = Jp2.Jpi1.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp2.Jpi1.Ddg.N = Jp2.Jpi1.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.FC = Jp2.Jpi1.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp2.Jpi1.Ddg.TT(quantity = \"Time\", unit = \"s\") = Jp2.Jpi1.TT \"Ideal transit time\";
//   parameter Real Jp2.Jpi1.Ddg.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp2.Jpi1.Ddg.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.DELTA \"Voltage range for transition\";
//   parameter Real Jp2.Jpi1.Ddg.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp2.Jpi1.Ddg.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp2.Jpi1.GminDC \"Leakage conductance\";
//   parameter Real Jp2.Jpi1.Ddg.Area = Jp2.Jpi1.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp2.Jpi1.Ddg.GS = false \"True if gate-source junction\";
//   parameter Real Jp2.Jpi1.Ddg.EMin = Jp2.Jpi1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Ddg.EMax = Jp2.Jpi1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Jp2.Jpi1.Ddg.enforceStates = Jp2.Jpi1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   output Real Jp2.Jpi1.Ddg.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Jp2.Jpi1.Ddg.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Ddg.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Jpi1.Ddg.DjJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Ddg.DjJ1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Ddg.DjJ1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.DjJ1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.DjJ1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.DjJ1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Ddg.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Ddg.DjJ1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.Ddg.DjJ1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp2.Jpi1.Ddg.DjJ1.Level = Jp2.Jpi1.Ddg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.Ddg.IS \"Saturation current at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.N = Jp2.Jpi1.Ddg.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.Area = Jp2.Jpi1.Ddg.Area \"Relative area occupied by diode\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.EMin = Jp2.Jpi1.Ddg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.EMax = Jp2.Jpi1.Ddg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.DjJ1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Ddg.DjJ1.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.DTempSq \"Square of DTemp\";
//   constant Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp2.Jpi1.Ddg.DjJ1.DjJ1.Level = Jp2.Jpi1.Ddg.DjJ1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.Ddg.DjJ1.IS \"Saturation current at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.N = Jp2.Jpi1.Ddg.DjJ1.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.Area = Jp2.Jpi1.Ddg.DjJ1.Area \"Relative area occupied by diode\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMin = Jp2.Jpi1.Ddg.DjJ1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMax = Jp2.Jpi1.Ddg.DjJ1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   protected Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.RTemp \"Temperature quotient\";
//   protected Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.et;
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Ddg.DjJ1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.XTI = Jp2.Jpi1.Ddg.DjJ1.XTI \"Saturation current temperature exponent\";
//   protected parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.ExMin = exp(Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMin);
//   protected parameter Real Jp2.Jpi1.Ddg.DjJ1.DjJ1.ExMax = exp(Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMax);
//   Real Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Ddg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Ddg.DjJ1.XTI = Jp2.Jpi1.Ddg.XTI \"Saturation current temperature exponent\";
//   Real Jp2.Jpi1.Ddg.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Ddg.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Ddg.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Ddg.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Ddg.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.Ddg.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Jp2.Jpi1.Ddg.GminDC \"Resistance at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Ddg.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Ddg.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.T_nom.e0 = Jp2.Jpi1.Ddg.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Ddg.Rd.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.Jpi1.Ddg.Rd.R \"Resistance at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.R1.TR1(unit = \"1/K\") = Jp2.Jpi1.Ddg.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.R1.TR2(unit = \"1/K2\") = Jp2.Jpi1.Ddg.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.Rd.R1.Area = Jp2.Jpi1.Ddg.Rd.Area \"Relative area occupied by resistor\";
//   Real Jp2.Jpi1.Ddg.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.p.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.n2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp2.Jpi1.Ddg.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Ddg.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Jpi1.Ddg.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Jp2.Jpi1.Ddg.VarC1.enforceStates = Jp2.Jpi1.Ddg.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Jp2.Jpi1.Ddg.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Jp2.Jpi1.Ddg.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Ddg.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Ddg.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Jp2.Jpi1.Ddg.VarC1.u \"Modulation signal\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Ddg.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.mC1.e(start = Jp2.Jpi1.Ddg.VarC1.u0) \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Ddg.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Jp2.Jpi1.Ddg.VarC1.mC1.s \"Signal input\";
//   Real Jp2.Jpi1.Ddg.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   input Real Jp2.Jpi1.Ddg.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Jp2.Jpi1.Ddg.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   input Real Jp2.Jpi1.Ddg.nlCJ1.u1 \"Connector of Real input signal 1\";
//   input Real Jp2.Jpi1.Ddg.nlCJ1.u2 \"Connector of Real input signal 2\";
//   output Real Jp2.Jpi1.Ddg.nlCJ1.y \"Connector of Real output signal\";
//   constant Real Jp2.Jpi1.Ddg.nlCJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp2.Jpi1.Ddg.nlCJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp2.Jpi1.Ddg.nlCJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp2.Jpi1.Ddg.nlCJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp2.Jpi1.Ddg.nlCJ1.Level = Jp2.Jpi1.Ddg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Ddg.Tnom \"Reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Ddg.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.TCV(unit = \"V/K\") = Jp2.Jpi1.Ddg.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.Ddg.IS \"Transport saturation current\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.N = Jp2.Jpi1.Ddg.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Ddg.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.Ddg.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.Ddg.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.FC = Jp2.Jpi1.Ddg.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.TT(quantity = \"Time\", unit = \"s\") = Jp2.Jpi1.Ddg.TT \"Ideal transit time\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.Ddg.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Ddg.DELTA \"Voltage range for transition\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Ddg.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp2.Jpi1.Ddg.GminDC \"Leakage conductance\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.Area = Jp2.Jpi1.Ddg.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp2.Jpi1.Ddg.nlCJ1.GS = Jp2.Jpi1.Ddg.GS \"True if gate-source junction\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.EMin = Jp2.Jpi1.Ddg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.EMax = Jp2.Jpi1.Ddg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Jp2.Jpi1.Ddg.nlCJ1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Jp2.Jpi1.Ddg.nlCJ1.vgd(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-drain voltage\";
//   output Real Jp2.Jpi1.Ddg.nlCJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Diode voltage\";
//   output Real Jp2.Jpi1.Ddg.nlCJ1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diode capacitance\";
//   input Real Jp2.Jpi1.Ddg.nlCJ1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.RTemp \"Temperature quotient\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.VT0val(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.CGSval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-source depletion capacitance at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.CGDval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-drain depletion capacitance at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.CJval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias depletion capacitance at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Cdiff(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diffusion capacitance\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Cdepl(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Depletion capacitance\";
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.et;
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Vfac1(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Vfac2(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Ve(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Vn(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.VNval(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.sig2;
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Cfac1;
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Cfac2;
//   protected Real Jp2.Jpi1.Ddg.nlCJ1.Cfac3;
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Ddg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.XTI = Jp2.Jpi1.Ddg.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp2.Jpi1.Ddg.nlCJ1.M = Jp2.Jpi1.Ddg.M \"Junction grading coefficient\";
//   protected parameter Real Jp2.Jpi1.Ddg.nlCJ1.ExMin = exp(Jp2.Jpi1.Ddg.nlCJ1.EMin);
//   protected parameter Real Jp2.Jpi1.Ddg.nlCJ1.ExMax = exp(Jp2.Jpi1.Ddg.nlCJ1.EMax);
//   parameter Real Jp2.Jpi1.Ddg.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Ddg.XTI = Jp2.Jpi1.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp2.Jpi1.Ddg.M = Jp2.Jpi1.M \"Junction grading coefficient\";
//   Real Jp2.Jpi1.Dsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Dsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Dsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Jpi1.Dsg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Dsg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.Dsg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp2.Jpi1.Dsg.Level = Jp2.Jpi1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Dsg.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.IS \"Transport saturation current at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.TCV(unit = \"V/K\") = Jp2.Jpi1.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp2.Jpi1.Dsg.N = Jp2.Jpi1.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.FC = Jp2.Jpi1.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp2.Jpi1.Dsg.TT(quantity = \"Time\", unit = \"s\") = Jp2.Jpi1.TT \"Ideal transit time\";
//   parameter Real Jp2.Jpi1.Dsg.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp2.Jpi1.Dsg.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.DELTA \"Voltage range for transition\";
//   parameter Real Jp2.Jpi1.Dsg.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp2.Jpi1.Dsg.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp2.Jpi1.GminDC \"Leakage conductance\";
//   parameter Real Jp2.Jpi1.Dsg.Area = Jp2.Jpi1.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp2.Jpi1.Dsg.GS = true \"True if gate-source junction\";
//   parameter Real Jp2.Jpi1.Dsg.EMin = Jp2.Jpi1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Dsg.EMax = Jp2.Jpi1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Jp2.Jpi1.Dsg.enforceStates = Jp2.Jpi1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   output Real Jp2.Jpi1.Dsg.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Jp2.Jpi1.Dsg.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Dsg.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Jpi1.Dsg.DjJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Dsg.DjJ1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Dsg.DjJ1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.DjJ1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.DjJ1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.DjJ1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Dsg.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Dsg.DjJ1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.Dsg.DjJ1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Jp2.Jpi1.Dsg.DjJ1.Level = Jp2.Jpi1.Dsg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.Dsg.IS \"Saturation current at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.N = Jp2.Jpi1.Dsg.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.Area = Jp2.Jpi1.Dsg.Area \"Relative area occupied by diode\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.EMin = Jp2.Jpi1.Dsg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.EMax = Jp2.Jpi1.Dsg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.DjJ1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Dsg.DjJ1.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.DTempSq \"Square of DTemp\";
//   constant Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp2.Jpi1.Dsg.DjJ1.DjJ1.Level = Jp2.Jpi1.Dsg.DjJ1.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.Dsg.DjJ1.IS \"Saturation current at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.N = Jp2.Jpi1.Dsg.DjJ1.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.Area = Jp2.Jpi1.Dsg.DjJ1.Area \"Relative area occupied by diode\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMin = Jp2.Jpi1.Dsg.DjJ1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMax = Jp2.Jpi1.Dsg.DjJ1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   protected Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.RTemp \"Temperature quotient\";
//   protected Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.et;
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Dsg.DjJ1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.XTI = Jp2.Jpi1.Dsg.DjJ1.XTI \"Saturation current temperature exponent\";
//   protected parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.ExMin = exp(Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMin);
//   protected parameter Real Jp2.Jpi1.Dsg.DjJ1.DjJ1.ExMax = exp(Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMax);
//   Real Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Dsg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Dsg.DjJ1.XTI = Jp2.Jpi1.Dsg.XTI \"Saturation current temperature exponent\";
//   Real Jp2.Jpi1.Dsg.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Dsg.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Dsg.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Dsg.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Dsg.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.Dsg.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Jp2.Jpi1.Dsg.GminDC \"Resistance at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Dsg.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Dsg.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.T_nom.e0 = Jp2.Jpi1.Dsg.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Dsg.Rd.Tnom \"Reference temperature\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Jp2.Jpi1.Dsg.Rd.R \"Resistance at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.R1.TR1(unit = \"1/K\") = Jp2.Jpi1.Dsg.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.R1.TR2(unit = \"1/K2\") = Jp2.Jpi1.Dsg.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.Rd.R1.Area = Jp2.Jpi1.Dsg.Rd.Area \"Relative area occupied by resistor\";
//   Real Jp2.Jpi1.Dsg.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.p.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.n2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp2.Jpi1.Dsg.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Dsg.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.Jpi1.Dsg.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Jp2.Jpi1.Dsg.VarC1.enforceStates = Jp2.Jpi1.Dsg.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Jp2.Jpi1.Dsg.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Jp2.Jpi1.Dsg.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Dsg.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Dsg.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Jp2.Jpi1.Dsg.VarC1.u \"Modulation signal\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Dsg.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.mC1.e(start = Jp2.Jpi1.Dsg.VarC1.u0) \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Dsg.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Jp2.Jpi1.Dsg.VarC1.mC1.s \"Signal input\";
//   Real Jp2.Jpi1.Dsg.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   input Real Jp2.Jpi1.Dsg.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Jp2.Jpi1.Dsg.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   input Real Jp2.Jpi1.Dsg.nlCJ1.u1 \"Connector of Real input signal 1\";
//   input Real Jp2.Jpi1.Dsg.nlCJ1.u2 \"Connector of Real input signal 2\";
//   output Real Jp2.Jpi1.Dsg.nlCJ1.y \"Connector of Real output signal\";
//   constant Real Jp2.Jpi1.Dsg.nlCJ1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Jp2.Jpi1.Dsg.nlCJ1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Jp2.Jpi1.Dsg.nlCJ1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Jp2.Jpi1.Dsg.nlCJ1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Jp2.Jpi1.Dsg.nlCJ1.Level = Jp2.Jpi1.Dsg.Level \"JFET modeling level (check documentation layer for details)\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Jpi1.Dsg.Tnom \"Reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Dsg.VT0 \"Threshold voltage at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.TCV(unit = \"V/K\") = Jp2.Jpi1.Dsg.TCV \"Linear temperature coefficient of threshold voltage\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Jp2.Jpi1.Dsg.IS \"Transport saturation current\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.N = Jp2.Jpi1.Dsg.N \"Current emission coefficient\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Dsg.PB \"Built-in potential at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.CGS(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.Dsg.CGS \"Zero-bias gate-source depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.CGD(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Jp2.Jpi1.Dsg.CGD \"Zero-bias gate-drain depletion capacitance at reference temperature\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.FC = Jp2.Jpi1.Dsg.FC \"Factor for linearization of depletion capacitance formula\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.TT(quantity = \"Time\", unit = \"s\") = Jp2.Jpi1.Dsg.TT \"Ideal transit time\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.ALPHA(quantity = \"InversePotential\", unit = \"1/V\") = Jp2.Jpi1.Dsg.ALPHA \"Hyperbolic tangient fitting parameter\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.DELTA(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Dsg.DELTA \"Voltage range for transition\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.VMAX(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Dsg.VMAX \"Limit voltage for carrier velocity saturation\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.GminDC(quantity = \"Conductance\", unit = \"S\") = Jp2.Jpi1.Dsg.GminDC \"Leakage conductance\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.Area = Jp2.Jpi1.Dsg.Area \"Relative area occupied by capacitor\";
//   parameter Boolean Jp2.Jpi1.Dsg.nlCJ1.GS = Jp2.Jpi1.Dsg.GS \"True if gate-source junction\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.EMin = Jp2.Jpi1.Dsg.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.EMax = Jp2.Jpi1.Dsg.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Jp2.Jpi1.Dsg.nlCJ1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Jp2.Jpi1.Dsg.nlCJ1.vgd(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-drain voltage\";
//   output Real Jp2.Jpi1.Dsg.nlCJ1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Diode voltage\";
//   output Real Jp2.Jpi1.Dsg.nlCJ1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diode capacitance\";
//   input Real Jp2.Jpi1.Dsg.nlCJ1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.RTemp \"Temperature quotient\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.VT0val(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.CGSval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-source depletion capacitance at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.CGDval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias gate-drain depletion capacitance at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.CJval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias depletion capacitance at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Cdiff(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diffusion capacitance\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Cdepl(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Depletion capacitance\";
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.et;
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Vfac1(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Vfac2(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Ve(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Vn(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.VNval(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.sig2;
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Cfac1;
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Cfac2;
//   protected Real Jp2.Jpi1.Dsg.nlCJ1.Cfac3;
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.Dsg.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.XTI = Jp2.Jpi1.Dsg.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp2.Jpi1.Dsg.nlCJ1.M = Jp2.Jpi1.Dsg.M \"Junction grading coefficient\";
//   protected parameter Real Jp2.Jpi1.Dsg.nlCJ1.ExMin = exp(Jp2.Jpi1.Dsg.nlCJ1.EMin);
//   protected parameter Real Jp2.Jpi1.Dsg.nlCJ1.ExMax = exp(Jp2.Jpi1.Dsg.nlCJ1.EMax);
//   parameter Real Jp2.Jpi1.Dsg.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.Jpi1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.Dsg.XTI = Jp2.Jpi1.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp2.Jpi1.Dsg.M = Jp2.Jpi1.M \"Junction grading coefficient\";
//   Real Jp2.Jpi1.Vsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Vsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Vsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Vsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Jp2.Jpi1.Vsg.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Vsg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Vsg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.De1.e \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Vsg.De1.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Vsg.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.De1.BondCon1.d \"Directional variable\";
//   output Real Jp2.Jpi1.Vsg.De1.OutPort1 \"Connector of Real output signal\";
//   Real Jp2.Jpi1.Vsg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsg.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Vsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Vsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Vsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Jp2.Jpi1.Vsd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Vsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Vsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Vsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.De1.e \"Bondgraphic effort\";
//   Real Jp2.Jpi1.Vsd.De1.f \"Bondgraphic flow\";
//   Real Jp2.Jpi1.Vsd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.De1.BondCon1.d \"Directional variable\";
//   output Real Jp2.Jpi1.Vsd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Jp2.Jpi1.Vsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Vsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Vsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Vsd.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Jp2.Jpi1.Isd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Jp2.Jpi1.Isd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Isd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Isd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Isd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Isd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Jp2.Jpi1.Isd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Jp2.Jpi1.Isd.InPort1(quantity = \"ElectricCurrent\", unit = \"A\") \"Current source\";
//   Real Jp2.Jpi1.Isd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Isd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Isd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Jp2.Jpi1.Isd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Jp2.Jpi1.Isd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Isd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Isd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Jpi1.Isd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Isd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Isd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Jpi1.Isd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Jp2.Jpi1.Isd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Isd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Isd.B4.eBondCon1.d \"Direction variable\";
//   output Real Jp2.Jpi1.Isd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Isd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Isd.B4.fBondCon1.d \"Direction variable\";
//   output Real Jp2.Jpi1.Isd.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.Jpi1.Isd.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Isd.B3.fBondCon1.d \"Direction variable\";
//   input Real Jp2.Jpi1.Isd.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.Jpi1.Isd.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.Jpi1.Isd.B3.eBondCon1.d \"Direction variable\";
//   Real Jp2.Jpi1.Isd.I1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Jpi1.Isd.I1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Jpi1.Isd.I1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Jpi1.Isd.I1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Jpi1.Isd.I1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.I1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.I1.BondCon1.d \"Directional variable\";
//   Real Jp2.Jpi1.Isd.I1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Jpi1.Isd.I1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Jpi1.Isd.I1.BondCon2.d \"Directional variable\";
//   input Real Jp2.Jpi1.Isd.I1.s \"Signal input\";
//   Real Jp2.Jpi1.Isd.I1.f0 \"Bondgraphic Flow Source\";
//   parameter Real Jp2.Jpi1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Jp2.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Jp2.Jpi1.XTI = Jp2.XTI \"Saturation current temperature exponent\";
//   parameter Real Jp2.Jpi1.M = Jp2.M \"Junction grading coefficient\";
//   Real Jp2.T_nom.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.T_nom.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.T_nom.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.T_nom.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.T_nom.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.T_nom.Tabs.e \"Bondgraphic effort\";
//   Real Jp2.T_nom.Tabs.f \"Bondgraphic flow\";
//   Real Jp2.T_nom.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.T_nom.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.T_nom.Tabs.BondCon1.d \"Directional variable\";
//   input Real Jp2.T_nom.Tabs.s \"Signal input\";
//   Real Jp2.T_nom.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real Jp2.T_nom.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Jp2.T_nom.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.T_nom.B1.eBondCon1.d \"Direction variable\";
//   output Real Jp2.T_nom.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Jp2.T_nom.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Jp2.T_nom.B1.fBondCon1.d \"Direction variable\";
//   Real Jp2.T_nom.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.T_nom.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Jp2.T_nom.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Jp2.Tnom \"Fixed temperature at port\";
//   Real Jp2.Sw1.p.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Sw1.p.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Sw1.n1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Sw1.n1.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Sw1.n2.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Sw1.n2.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Boolean Jp2.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp2.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Heat2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Heat2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Heat2BG1.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Heat2BG1.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Sw1.Heat2BG1.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Sw1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Sw1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Sw1.BG2Heat2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.BG2Heat2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.BG2Heat2.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.BG2Heat2.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Jp2.Sw1.BG2Heat2.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Jp2.Sw1.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.p.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.n2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.n1.d \"Directional variable\";
//   input Boolean Jp2.Sw1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Jp2.Sw1.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Sw1.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Sw1.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Sw1.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Sw1.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Sw1.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Jp2.Sw1.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Jp2.Sw1.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Jp2.Sw1.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Jp2.Sw1.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Jp2.Sw1.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Sw1.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Sw1.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Sw1.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Sw1.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Jp2.Sw1.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Jp2.Sw1.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Jp2.Sw1.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Jp2.Sw1.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Jp2.Sw1.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Jp2.Sw1.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Jp2.Sw1.Sw1.Sw1.open \"Switch position\";
//   input Boolean Jp2.Sw1.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Jp2.Sw1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Jp2.Sw1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Jp2.Sw1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Jp2.Sw1.Sw1.B3.BondCon2.d \"Directional variable\";
//   parameter Real Jp2.M(min = 0.1, max = 0.9) = 0.5 \"Junction grading coefficient\";
//   parameter Real Jp2.XTI = 3.0 \"Saturation current temperature exponent\";
//   parameter Real Jp2.EG(quantity = \"ElectricPotential\", unit = \"V\", min = 0.1) = 1.11 \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Rd1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Rd1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Rd1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rd1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Rd1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real Rd1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Rd1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Rd1.R(quantity = \"Resistance\", unit = \"Ohm\") = 150000.0 \"Resistance at reference temperature\";
//   parameter Real Rd1.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Rd1.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Rd1.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Rd1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rd1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rd1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rd1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rd1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rd1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rd1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Rd1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Rd1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rd1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rd1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Rd1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.B1.BondCon1.d \"Directional variable\";
//   Real Rd1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.B1.BondCon2.d \"Directional variable\";
//   Real Rd1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.B2.BondCon1.d \"Directional variable\";
//   Real Rd1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.B2.BondCon2.d \"Directional variable\";
//   Real Rd1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.B3.BondCon1.d \"Directional variable\";
//   Real Rd1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.B3.BondCon2.d \"Directional variable\";
//   Real Rd1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rd1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Rd1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rd1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Rd1.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rd1.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd1.B6.eBondCon1.d \"Direction variable\";
//   output Real Rd1.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rd1.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd1.B6.fBondCon1.d \"Direction variable\";
//   Real Rd1.T_nom.e \"Bondgraphic effort\";
//   Real Rd1.T_nom.f \"Bondgraphic flow\";
//   Real Rd1.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Rd1.T_nom.e0 = Rd1.Tnom \"Bondgraphic Effort Source\";
//   Real Rd1.R1.e1 \"Bondgraphic primary effort\";
//   Real Rd1.R1.f1 \"Bondgraphic primary flow\";
//   Real Rd1.R1.e2 \"Bondgraphic secondary effort\";
//   Real Rd1.R1.f2 \"Bondgraphic secondary flow\";
//   Real Rd1.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.R1.BondCon1.d \"Directional variable\";
//   Real Rd1.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.R1.BondCon2.d \"Directional variable\";
//   parameter Real Rd1.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Rd1.Tnom \"Reference temperature\";
//   Real Rd1.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Rd1.R1.DTempSq \"Square of DTemp\";
//   parameter Real Rd1.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Rd1.R \"Resistance at reference temperature\";
//   parameter Real Rd1.R1.TR1(unit = \"1/K\") = Rd1.TR1 \"Linear temperature coefficient\";
//   parameter Real Rd1.R1.TR2(unit = \"1/K2\") = Rd1.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Rd1.R1.Area = Rd1.Area \"Relative area occupied by resistor\";
//   Real Rd1.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Rd1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rd1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd1.B4.fBondCon1.d \"Direction variable\";
//   input Real Rd1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rd1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd1.B4.eBondCon1.d \"Direction variable\";
//   Real Rd1.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.p.d \"Directional variable\";
//   Real Rd1.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.n2.d \"Directional variable\";
//   Real Rd1.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.n1.d \"Directional variable\";
//   input Boolean Rd1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Rd1.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rd1.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rd1.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rd1.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rd1.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rd1.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rd1.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Rd1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Rd1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Rd1.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rd1.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rd1.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rd1.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rd1.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rd1.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rd1.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Rd1.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Rd1.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Rd1.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Rd1.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Rd1.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Rd1.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Rd1.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Rd1.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Rd1.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Rd1.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Rd1.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Rd1.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Rd1.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Rd1.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Rd1.Sw1.Sw1.open \"Switch position\";
//   input Boolean Rd1.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Rd1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Rd1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd1.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Rd1.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rd1.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd1.B5.fBondCon1.d \"Direction variable\";
//   input Real Rd1.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rd1.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd1.B5.eBondCon1.d \"Direction variable\";
//   Real Rd1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Rd1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Rd1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Gnd2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd2.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd2.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd2.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd2.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd2.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd2.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd2.V0.e \"Bondgraphic effort\";
//   Real Gnd2.V0.f \"Bondgraphic flow\";
//   Real Gnd2.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd2.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd2.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd2.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd2.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd2.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd2.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd2.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd2.El2BG1.BondCon1.d \"Directional variable\";
//   Real Gnd3.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd3.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd3.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd3.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd3.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd3.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd3.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd3.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd3.V0.e \"Bondgraphic effort\";
//   Real Gnd3.V0.f \"Bondgraphic flow\";
//   Real Gnd3.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd3.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd3.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd3.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd3.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd3.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd3.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd3.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd3.El2BG1.BondCon1.d \"Directional variable\";
//   Real Vin.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Vin.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Vin.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vin.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vin.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vin.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Vin.V(quantity = \"ElectricPotential\", unit = \"V\") = 0.02 \"Amplitude of sine wave\";
//   parameter Real Vin.freqHz(quantity = \"Frequency\", unit = \"Hz\") = 1000.0 \"Frequency of sine wave\";
//   parameter Real Vin.offset(quantity = \"ElectricPotential\", unit = \"V\") = 0.5 \"Voltage offset\";
//   parameter Real Vin.rampTime(quantity = \"Time\", unit = \"s\") = 0.001 \"Ramping period\";
//   parameter Real Vin.settleTime(quantity = \"Time\", unit = \"s\") = 0.001 \"Settling period\";
//   Real Vin.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vin.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vin.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vin.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vin.El2BG1.BondCon1.d \"Directional variable\";
//   Real Vin.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vin.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vin.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vin.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vin.BG2El1.BondCon1.d \"Directional variable\";
//   Real Vin.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vin.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vin.B1.BondCon1.d \"Directional variable\";
//   Real Vin.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vin.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vin.B1.BondCon2.d \"Directional variable\";
//   Real Vin.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vin.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vin.B2.BondCon1.d \"Directional variable\";
//   Real Vin.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vin.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vin.B2.BondCon2.d \"Directional variable\";
//   Real Vin.J1p4_1.e[1] \"Bondgraphic effort vector\";
//   Real Vin.J1p4_1.e[2] \"Bondgraphic effort vector\";
//   Real Vin.J1p4_1.e[3] \"Bondgraphic effort vector\";
//   Real Vin.J1p4_1.e[4] \"Bondgraphic effort vector\";
//   Real Vin.J1p4_1.f[1] \"Bondgraphic flow vector\";
//   Real Vin.J1p4_1.f[2] \"Bondgraphic flow vector\";
//   Real Vin.J1p4_1.f[3] \"Bondgraphic flow vector\";
//   Real Vin.J1p4_1.f[4] \"Bondgraphic flow vector\";
//   Real Vin.J1p4_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vin.J1p4_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vin.J1p4_1.BondCon1.d \"Directional variable\";
//   Real Vin.J1p4_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vin.J1p4_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vin.J1p4_1.BondCon2.d \"Directional variable\";
//   Real Vin.J1p4_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Vin.J1p4_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Vin.J1p4_1.BondCon3.d \"Directional variable\";
//   Real Vin.J1p4_1.BondCon4.e \"Bondgraphic effort variable\";
//   Real Vin.J1p4_1.BondCon4.f \"Bondgraphic flow variable\";
//   Real Vin.J1p4_1.BondCon4.d \"Directional variable\";
//   input Real Vin.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Vin.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Vin.B3.eBondCon1.d \"Direction variable\";
//   output Real Vin.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Vin.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Vin.B3.fBondCon1.d \"Direction variable\";
//   Real Vin.V1.e \"Bondgraphic effort\";
//   Real Vin.V1.f \"Bondgraphic flow\";
//   Real Vin.V1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vin.V1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vin.V1.BondCon1.d \"Directional variable\";
//   parameter Real Vin.V1.e0 = Vin.V \"Amplitude of sine wave\";
//   parameter Real Vin.V1.phase(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\") = 0.0 \"Phase of sine wave\";
//   parameter Real Vin.V1.freqHz(quantity = \"Frequency\", unit = \"Hz\") = Vin.freqHz \"Frequency of sine wave\";
//   parameter Real Vin.V1.offset = 0.0 \"Offset of sine wave\";
//   parameter Real Vin.V1.startTime(quantity = \"Time\", unit = \"s\") = Vin.rampTime + Vin.settleTime \"Start time of sine wave\";
//   output Real Vin.V1.Sine1.y \"Connector of Real output signal\";
//   parameter Real Vin.V1.Sine1.amplitude = Vin.V1.e0 \"Amplitude of sine wave\";
//   parameter Real Vin.V1.Sine1.freqHz(quantity = \"Frequency\", unit = \"Hz\") = Vin.V1.freqHz \"Frequency of sine wave\";
//   parameter Real Vin.V1.Sine1.phase(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\") = Vin.V1.phase \"Phase of sine wave\";
//   parameter Real Vin.V1.Sine1.offset = Vin.V1.offset \"Offset of output signal\";
//   parameter Real Vin.V1.Sine1.startTime(quantity = \"Time\", unit = \"s\") = Vin.V1.startTime \"Output = offset for time < startTime\";
//   protected constant Real Vin.V1.Sine1.pi = 3.14159265358979;
//   Real Vin.Vramp.e \"Bondgraphic effort\";
//   Real Vin.Vramp.f \"Bondgraphic flow\";
//   Real Vin.Vramp.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vin.Vramp.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vin.Vramp.BondCon1.d \"Directional variable\";
//   parameter Real Vin.Vramp.e0 = Vin.offset \"Height of ramp\";
//   parameter Real Vin.Vramp.duration(quantity = \"Time\", unit = \"s\") = Vin.rampTime \"Duration of ramp\";
//   parameter Real Vin.Vramp.offset = 0.0 \"Offset of ramp\";
//   parameter Real Vin.Vramp.startTime(quantity = \"Time\", unit = \"s\") = 0.0 \"Start time of ramp\";
//   output Real Vin.Vramp.Ramp1.y \"Connector of Real output signal\";
//   parameter Real Vin.Vramp.Ramp1.height = Vin.Vramp.e0 \"Height of ramps\";
//   parameter Real Vin.Vramp.Ramp1.duration(min = 1e-60) = Vin.Vramp.duration \"Durations of ramp\";
//   parameter Real Vin.Vramp.Ramp1.offset = Vin.Vramp.offset \"Offset of output signal\";
//   parameter Real Vin.Vramp.Ramp1.startTime(quantity = \"Time\", unit = \"s\") = Vin.Vramp.startTime \"Output = offset for time < startTime\";
//   input Real Vin.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Vin.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Vin.B4.eBondCon1.d \"Direction variable\";
//   output Real Vin.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Vin.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Vin.B4.fBondCon1.d \"Direction variable\";
//   Real Gnd4.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd4.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd4.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd4.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd4.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd4.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd4.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd4.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd4.V0.e \"Bondgraphic effort\";
//   Real Gnd4.V0.f \"Bondgraphic flow\";
//   Real Gnd4.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd4.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd4.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd4.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd4.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd4.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd4.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd4.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd4.El2BG1.BondCon1.d \"Directional variable\";
//   Real Vout.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Vout.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Vout.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vout.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vout.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vout.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Vout.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Vout.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Vout.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Vout.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Vout.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Vout.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Vout.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Vout.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Vout.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vout.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vout.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Vout.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Vout.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Vout.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Vout.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.B1.BondCon1.d \"Directional variable\";
//   Real Vout.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vout.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vout.B1.BondCon2.d \"Directional variable\";
//   Real Vout.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.B2.BondCon1.d \"Directional variable\";
//   Real Vout.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vout.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vout.B2.BondCon2.d \"Directional variable\";
//   Real Vout.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vout.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vout.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.El2BG1.BondCon1.d \"Directional variable\";
//   Real Vout.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vout.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vout.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.BG2El1.BondCon1.d \"Directional variable\";
//   Real Vout.De1.e \"Bondgraphic effort\";
//   Real Vout.De1.f \"Bondgraphic flow\";
//   Real Vout.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.De1.BondCon1.d \"Directional variable\";
//   output Real Vout.De1.OutPort1 \"Connector of Real output signal\";
//   Real Vout.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.B3.BondCon1.d \"Directional variable\";
//   Real Vout.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vout.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vout.B3.BondCon2.d \"Directional variable\";
//   Real FixedTemperature1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real FixedTemperature1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real FixedTemperature1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real FixedTemperature1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real FixedTemperature1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real FixedTemperature1.Tabs.e \"Bondgraphic effort\";
//   Real FixedTemperature1.Tabs.f \"Bondgraphic flow\";
//   Real FixedTemperature1.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real FixedTemperature1.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real FixedTemperature1.Tabs.BondCon1.d \"Directional variable\";
//   input Real FixedTemperature1.Tabs.s \"Signal input\";
//   Real FixedTemperature1.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real FixedTemperature1.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real FixedTemperature1.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real FixedTemperature1.B1.eBondCon1.d \"Direction variable\";
//   output Real FixedTemperature1.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real FixedTemperature1.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real FixedTemperature1.B1.fBondCon1.d \"Direction variable\";
//   Real FixedTemperature1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real FixedTemperature1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real FixedTemperature1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Fixed temperature at port\";
//   Real Rd2.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Rd2.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Rd2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rd2.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd2.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Rd2.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real Rd2.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Rd2.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Rd2.R(quantity = \"Resistance\", unit = \"Ohm\") = 150000.0 \"Resistance at reference temperature\";
//   parameter Real Rd2.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Rd2.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Rd2.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Rd2.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rd2.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rd2.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rd2.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rd2.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rd2.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rd2.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Rd2.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Rd2.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rd2.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rd2.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Rd2.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.B1.BondCon1.d \"Directional variable\";
//   Real Rd2.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.B1.BondCon2.d \"Directional variable\";
//   Real Rd2.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.B2.BondCon1.d \"Directional variable\";
//   Real Rd2.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.B2.BondCon2.d \"Directional variable\";
//   Real Rd2.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.B3.BondCon1.d \"Directional variable\";
//   Real Rd2.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.B3.BondCon2.d \"Directional variable\";
//   Real Rd2.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd2.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rd2.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.El2BG1.BondCon1.d \"Directional variable\";
//   Real Rd2.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rd2.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rd2.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Rd2.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rd2.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd2.B6.eBondCon1.d \"Direction variable\";
//   output Real Rd2.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rd2.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd2.B6.fBondCon1.d \"Direction variable\";
//   Real Rd2.T_nom.e \"Bondgraphic effort\";
//   Real Rd2.T_nom.f \"Bondgraphic flow\";
//   Real Rd2.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Rd2.T_nom.e0 = Rd2.Tnom \"Bondgraphic Effort Source\";
//   Real Rd2.R1.e1 \"Bondgraphic primary effort\";
//   Real Rd2.R1.f1 \"Bondgraphic primary flow\";
//   Real Rd2.R1.e2 \"Bondgraphic secondary effort\";
//   Real Rd2.R1.f2 \"Bondgraphic secondary flow\";
//   Real Rd2.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.R1.BondCon1.d \"Directional variable\";
//   Real Rd2.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.R1.BondCon2.d \"Directional variable\";
//   parameter Real Rd2.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Rd2.Tnom \"Reference temperature\";
//   Real Rd2.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Rd2.R1.DTempSq \"Square of DTemp\";
//   parameter Real Rd2.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Rd2.R \"Resistance at reference temperature\";
//   parameter Real Rd2.R1.TR1(unit = \"1/K\") = Rd2.TR1 \"Linear temperature coefficient\";
//   parameter Real Rd2.R1.TR2(unit = \"1/K2\") = Rd2.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Rd2.R1.Area = Rd2.Area \"Relative area occupied by resistor\";
//   Real Rd2.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Rd2.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rd2.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd2.B4.fBondCon1.d \"Direction variable\";
//   input Real Rd2.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rd2.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd2.B4.eBondCon1.d \"Direction variable\";
//   Real Rd2.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.p.d \"Directional variable\";
//   Real Rd2.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.n2.d \"Directional variable\";
//   Real Rd2.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.n1.d \"Directional variable\";
//   input Boolean Rd2.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Rd2.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rd2.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rd2.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rd2.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rd2.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rd2.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rd2.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Rd2.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Rd2.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Rd2.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rd2.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rd2.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rd2.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rd2.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rd2.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rd2.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Rd2.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Rd2.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Rd2.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Rd2.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Rd2.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Rd2.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Rd2.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Rd2.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Rd2.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Rd2.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Rd2.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Rd2.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Rd2.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Rd2.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Rd2.Sw1.Sw1.open \"Switch position\";
//   input Boolean Rd2.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Rd2.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Rd2.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rd2.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rd2.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Rd2.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rd2.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd2.B5.fBondCon1.d \"Direction variable\";
//   input Real Rd2.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rd2.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rd2.B5.eBondCon1.d \"Direction variable\";
//   Real Rd2.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rd2.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rd2.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Rd2.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Rd2.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real V1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real V1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real V1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real V1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real V1.V(quantity = \"ElectricPotential\", unit = \"V\") = -5.0 \"Constant voltage\";
//   parameter Real V1.rampTime(quantity = \"Time\", unit = \"s\") = 0.001 \"Ramping time\";
//   Real V1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real V1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V1.El2BG1.BondCon1.d \"Directional variable\";
//   Real V1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real V1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V1.BG2El1.BondCon1.d \"Directional variable\";
//   Real V1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real V1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real V1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real V1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real V1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real V1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real V1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real V1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real V1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real V1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real V1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real V1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real V1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real V1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V1.B1.BondCon1.d \"Directional variable\";
//   Real V1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real V1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real V1.B1.BondCon2.d \"Directional variable\";
//   Real V1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real V1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real V1.B2.BondCon1.d \"Directional variable\";
//   Real V1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real V1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real V1.B2.BondCon2.d \"Directional variable\";
//   input Real V1.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real V1.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real V1.B3.eBondCon1.d \"Direction variable\";
//   output Real V1.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real V1.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real V1.B3.fBondCon1.d \"Direction variable\";
//   Real V1.V1.e \"Bondgraphic effort\";
//   Real V1.V1.f \"Bondgraphic flow\";
//   Real V1.V1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V1.V1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V1.V1.BondCon1.d \"Directional variable\";
//   parameter Real V1.V1.e0 = V1.V \"Height of ramp\";
//   parameter Real V1.V1.duration(quantity = \"Time\", unit = \"s\") = V1.rampTime \"Duration of ramp\";
//   parameter Real V1.V1.offset = 0.0 \"Offset of ramp\";
//   parameter Real V1.V1.startTime(quantity = \"Time\", unit = \"s\") = 0.0 \"Start time of ramp\";
//   output Real V1.V1.Ramp1.y \"Connector of Real output signal\";
//   parameter Real V1.V1.Ramp1.height = V1.V1.e0 \"Height of ramps\";
//   parameter Real V1.V1.Ramp1.duration(min = 1e-60) = V1.V1.duration \"Durations of ramp\";
//   parameter Real V1.V1.Ramp1.offset = V1.V1.offset \"Offset of output signal\";
//   parameter Real V1.V1.Ramp1.startTime(quantity = \"Time\", unit = \"s\") = V1.V1.startTime \"Output = offset for time < startTime\";
//   Real Rg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Rg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Rg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Rg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real Rg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Rg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Rg.R(quantity = \"Resistance\", unit = \"Ohm\") = 75000.0 \"Resistance at reference temperature\";
//   parameter Real Rg.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Rg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Rg.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Rg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Rg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Rg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Rg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.B1.BondCon1.d \"Directional variable\";
//   Real Rg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.B1.BondCon2.d \"Directional variable\";
//   Real Rg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.B2.BondCon1.d \"Directional variable\";
//   Real Rg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.B2.BondCon2.d \"Directional variable\";
//   Real Rg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.B3.BondCon1.d \"Directional variable\";
//   Real Rg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.B3.BondCon2.d \"Directional variable\";
//   Real Rg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Rg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Rg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Rg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Rg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rg.B6.eBondCon1.d \"Direction variable\";
//   output Real Rg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rg.B6.fBondCon1.d \"Direction variable\";
//   Real Rg.T_nom.e \"Bondgraphic effort\";
//   Real Rg.T_nom.f \"Bondgraphic flow\";
//   Real Rg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Rg.T_nom.e0 = Rg.Tnom \"Bondgraphic Effort Source\";
//   Real Rg.R1.e1 \"Bondgraphic primary effort\";
//   Real Rg.R1.f1 \"Bondgraphic primary flow\";
//   Real Rg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Rg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Rg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.R1.BondCon1.d \"Directional variable\";
//   Real Rg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Rg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Rg.Tnom \"Reference temperature\";
//   Real Rg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Rg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Rg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Rg.R \"Resistance at reference temperature\";
//   parameter Real Rg.R1.TR1(unit = \"1/K\") = Rg.TR1 \"Linear temperature coefficient\";
//   parameter Real Rg.R1.TR2(unit = \"1/K2\") = Rg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Rg.R1.Area = Rg.Area \"Relative area occupied by resistor\";
//   Real Rg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Rg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rg.B4.fBondCon1.d \"Direction variable\";
//   input Real Rg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rg.B4.eBondCon1.d \"Direction variable\";
//   Real Rg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.p.d \"Directional variable\";
//   Real Rg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.n2.d \"Directional variable\";
//   Real Rg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.n1.d \"Directional variable\";
//   input Boolean Rg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Rg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Rg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Rg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Rg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Rg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Rg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Rg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Rg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Rg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Rg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Rg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Rg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Rg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Rg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Rg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Rg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Rg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Rg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Rg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Rg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Rg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Rg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Rg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Rg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Rg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Rg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Rg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Rg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Rg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Rg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Rg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Rg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Rg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Rg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rg.B5.fBondCon1.d \"Direction variable\";
//   input Real Rg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Rg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Rg.B5.eBondCon1.d \"Direction variable\";
//   Real Rg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Rg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Rg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Rg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Rg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real V2.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real V2.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real V2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real V2.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V2.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real V2.V(quantity = \"ElectricPotential\", unit = \"V\") = 0.5 \"Constant voltage\";
//   parameter Real V2.rampTime(quantity = \"Time\", unit = \"s\") = 0.001 \"Ramping time\";
//   Real V2.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V2.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real V2.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V2.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V2.El2BG1.BondCon1.d \"Directional variable\";
//   Real V2.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real V2.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real V2.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V2.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V2.BG2El1.BondCon1.d \"Directional variable\";
//   Real V2.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real V2.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real V2.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real V2.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real V2.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real V2.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real V2.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V2.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V2.J1p3_1.BondCon1.d \"Directional variable\";
//   Real V2.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real V2.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real V2.J1p3_1.BondCon2.d \"Directional variable\";
//   Real V2.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real V2.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real V2.J1p3_1.BondCon3.d \"Directional variable\";
//   Real V2.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V2.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V2.B1.BondCon1.d \"Directional variable\";
//   Real V2.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real V2.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real V2.B1.BondCon2.d \"Directional variable\";
//   Real V2.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real V2.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real V2.B2.BondCon1.d \"Directional variable\";
//   Real V2.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real V2.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real V2.B2.BondCon2.d \"Directional variable\";
//   input Real V2.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real V2.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real V2.B3.eBondCon1.d \"Direction variable\";
//   output Real V2.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real V2.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real V2.B3.fBondCon1.d \"Direction variable\";
//   Real V2.V1.e \"Bondgraphic effort\";
//   Real V2.V1.f \"Bondgraphic flow\";
//   Real V2.V1.BondCon1.e \"Bondgraphic effort variable\";
//   Real V2.V1.BondCon1.f \"Bondgraphic flow variable\";
//   Real V2.V1.BondCon1.d \"Directional variable\";
//   parameter Real V2.V1.e0 = V2.V \"Height of ramp\";
//   parameter Real V2.V1.duration(quantity = \"Time\", unit = \"s\") = V2.rampTime \"Duration of ramp\";
//   parameter Real V2.V1.offset = 0.0 \"Offset of ramp\";
//   parameter Real V2.V1.startTime(quantity = \"Time\", unit = \"s\") = 0.0 \"Start time of ramp\";
//   output Real V2.V1.Ramp1.y \"Connector of Real output signal\";
//   parameter Real V2.V1.Ramp1.height = V2.V1.e0 \"Height of ramps\";
//   parameter Real V2.V1.Ramp1.duration(min = 1e-60) = V2.V1.duration \"Durations of ramp\";
//   parameter Real V2.V1.Ramp1.offset = V2.V1.offset \"Offset of output signal\";
//   parameter Real V2.V1.Ramp1.startTime(quantity = \"Time\", unit = \"s\") = V2.V1.startTime \"Output = offset for time < startTime\";
// equation
//   Gnd1.B1.fBondCon1.e = Gnd1.B1.eBondCon1.e;
//   Gnd1.B1.eBondCon1.f = Gnd1.B1.fBondCon1.f;
//   Gnd1.B1.eBondCon1.d = -1.0;
//   Gnd1.B1.fBondCon1.d = 1.0;
//   Gnd1.V0.e = Gnd1.V0.e0;
//   Gnd1.V0.e = Gnd1.V0.BondCon1.e;
//   Gnd1.V0.f = (-Gnd1.V0.BondCon1.d) * Gnd1.V0.BondCon1.f;
//   Gnd1.El2BG1.BondCon1.e = Gnd1.El2BG1.p.v;
//   Gnd1.El2BG1.BondCon1.f = Gnd1.El2BG1.p.i;
//   Jp1.Rg.J1p3_1.f[2] = Jp1.Rg.J1p3_1.f[1];
//   Jp1.Rg.J1p3_1.f[3] = Jp1.Rg.J1p3_1.f[2];
//   Jp1.Rg.J1p3_1.e[1] + (Jp1.Rg.J1p3_1.e[2] + Jp1.Rg.J1p3_1.e[3]) = 0.0;
//   Jp1.Rg.J1p3_1.e[1] = Jp1.Rg.J1p3_1.BondCon1.d * Jp1.Rg.J1p3_1.BondCon1.e;
//   Jp1.Rg.J1p3_1.f[1] = Jp1.Rg.J1p3_1.BondCon1.f;
//   Jp1.Rg.J1p3_1.e[2] = Jp1.Rg.J1p3_1.BondCon2.d * Jp1.Rg.J1p3_1.BondCon2.e;
//   Jp1.Rg.J1p3_1.f[2] = Jp1.Rg.J1p3_1.BondCon2.f;
//   Jp1.Rg.J1p3_1.e[3] = Jp1.Rg.J1p3_1.BondCon3.d * Jp1.Rg.J1p3_1.BondCon3.e;
//   Jp1.Rg.J1p3_1.f[3] = Jp1.Rg.J1p3_1.BondCon3.f;
//   Jp1.Rg.B1.BondCon2.e = Jp1.Rg.B1.BondCon1.e;
//   Jp1.Rg.B1.BondCon2.f = Jp1.Rg.B1.BondCon1.f;
//   Jp1.Rg.B1.BondCon1.d = -1.0;
//   Jp1.Rg.B1.BondCon2.d = 1.0;
//   Jp1.Rg.B2.BondCon2.e = Jp1.Rg.B2.BondCon1.e;
//   Jp1.Rg.B2.BondCon2.f = Jp1.Rg.B2.BondCon1.f;
//   Jp1.Rg.B2.BondCon1.d = -1.0;
//   Jp1.Rg.B2.BondCon2.d = 1.0;
//   Jp1.Rg.B3.BondCon2.e = Jp1.Rg.B3.BondCon1.e;
//   Jp1.Rg.B3.BondCon2.f = Jp1.Rg.B3.BondCon1.f;
//   Jp1.Rg.B3.BondCon1.d = -1.0;
//   Jp1.Rg.B3.BondCon2.d = 1.0;
//   Jp1.Rg.El2BG1.BondCon1.e = Jp1.Rg.El2BG1.p.v;
//   Jp1.Rg.El2BG1.BondCon1.f = Jp1.Rg.El2BG1.p.i;
//   Jp1.Rg.BG2El1.BondCon1.e = Jp1.Rg.BG2El1.n.v;
//   Jp1.Rg.BG2El1.BondCon1.f = -Jp1.Rg.BG2El1.n.i;
//   Jp1.Rg.B6.fBondCon1.e = Jp1.Rg.B6.eBondCon1.e;
//   Jp1.Rg.B6.eBondCon1.f = Jp1.Rg.B6.fBondCon1.f;
//   Jp1.Rg.B6.eBondCon1.d = -1.0;
//   Jp1.Rg.B6.fBondCon1.d = 1.0;
//   Jp1.Rg.T_nom.e = Jp1.Rg.T_nom.e0;
//   Jp1.Rg.T_nom.e = Jp1.Rg.T_nom.BondCon1.e;
//   Jp1.Rg.T_nom.f = (-Jp1.Rg.T_nom.BondCon1.d) * Jp1.Rg.T_nom.BondCon1.f;
//   Jp1.Rg.R1.Rval = 0.0;
//   Jp1.Rg.R1.e1 = Jp1.Rg.R1.Rval * Jp1.Rg.R1.f1;
//   Jp1.Rg.R1.e1 * Jp1.Rg.R1.f1 = Jp1.Rg.R1.e2 * Jp1.Rg.R1.f2;
//   Jp1.Rg.R1.DTempSq = Jp1.Rg.R1.DTemp ^ 2.0;
//   Jp1.Rg.R1.DTemp = Jp1.Rg.R1.e2 - Jp1.Rg.R1.Tnom;
//   Jp1.Rg.R1.e1 = Jp1.Rg.R1.BondCon1.e;
//   Jp1.Rg.R1.f1 = Jp1.Rg.R1.BondCon1.d * Jp1.Rg.R1.BondCon1.f;
//   Jp1.Rg.R1.e2 = Jp1.Rg.R1.BondCon2.e;
//   Jp1.Rg.R1.f2 = (-Jp1.Rg.R1.BondCon2.d) * Jp1.Rg.R1.BondCon2.f;
//   Jp1.Rg.B4.fBondCon1.e = Jp1.Rg.B4.eBondCon1.e;
//   Jp1.Rg.B4.eBondCon1.f = Jp1.Rg.B4.fBondCon1.f;
//   Jp1.Rg.B4.fBondCon1.d = -1.0;
//   Jp1.Rg.B4.eBondCon1.d = 1.0;
//   Jp1.Rg.Sw1.J1p3_1.f[2] = Jp1.Rg.Sw1.J1p3_1.f[1];
//   Jp1.Rg.Sw1.J1p3_1.f[3] = Jp1.Rg.Sw1.J1p3_1.f[2];
//   Jp1.Rg.Sw1.J1p3_1.e[1] + (Jp1.Rg.Sw1.J1p3_1.e[2] + Jp1.Rg.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp1.Rg.Sw1.J1p3_1.e[1] = Jp1.Rg.Sw1.J1p3_1.BondCon1.d * Jp1.Rg.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Rg.Sw1.J1p3_1.f[1] = Jp1.Rg.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Rg.Sw1.J1p3_1.e[2] = Jp1.Rg.Sw1.J1p3_1.BondCon2.d * Jp1.Rg.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Rg.Sw1.J1p3_1.f[2] = Jp1.Rg.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Rg.Sw1.J1p3_1.e[3] = Jp1.Rg.Sw1.J1p3_1.BondCon3.d * Jp1.Rg.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Rg.Sw1.J1p3_1.f[3] = Jp1.Rg.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Rg.Sw1.B1.BondCon2.e = Jp1.Rg.Sw1.B1.BondCon1.e;
//   Jp1.Rg.Sw1.B1.BondCon2.f = Jp1.Rg.Sw1.B1.BondCon1.f;
//   Jp1.Rg.Sw1.B1.BondCon1.d = -1.0;
//   Jp1.Rg.Sw1.B1.BondCon2.d = 1.0;
//   Jp1.Rg.Sw1.B2.BondCon2.e = Jp1.Rg.Sw1.B2.BondCon1.e;
//   Jp1.Rg.Sw1.B2.BondCon2.f = Jp1.Rg.Sw1.B2.BondCon1.f;
//   Jp1.Rg.Sw1.B2.BondCon1.d = -1.0;
//   Jp1.Rg.Sw1.B2.BondCon2.d = 1.0;
//   Jp1.Rg.Sw1.J0p3_1.e[2] = Jp1.Rg.Sw1.J0p3_1.e[1];
//   Jp1.Rg.Sw1.J0p3_1.e[3] = Jp1.Rg.Sw1.J0p3_1.e[2];
//   Jp1.Rg.Sw1.J0p3_1.f[1] + (Jp1.Rg.Sw1.J0p3_1.f[2] + Jp1.Rg.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp1.Rg.Sw1.J0p3_1.e[1] = Jp1.Rg.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Rg.Sw1.J0p3_1.f[1] = Jp1.Rg.Sw1.J0p3_1.BondCon1.d * Jp1.Rg.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Rg.Sw1.J0p3_1.e[2] = Jp1.Rg.Sw1.J0p3_1.BondCon2.e;
//   Jp1.Rg.Sw1.J0p3_1.f[2] = Jp1.Rg.Sw1.J0p3_1.BondCon2.d * Jp1.Rg.Sw1.J0p3_1.BondCon2.f;
//   Jp1.Rg.Sw1.J0p3_1.e[3] = Jp1.Rg.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Rg.Sw1.J0p3_1.f[3] = Jp1.Rg.Sw1.J0p3_1.BondCon3.d * Jp1.Rg.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Rg.Sw1.B4.BondCon2.e = Jp1.Rg.Sw1.B4.BondCon1.e;
//   Jp1.Rg.Sw1.B4.BondCon2.f = Jp1.Rg.Sw1.B4.BondCon1.f;
//   Jp1.Rg.Sw1.B4.BondCon1.d = -1.0;
//   Jp1.Rg.Sw1.B4.BondCon2.d = 1.0;
//   Jp1.Rg.Sw1.j0p2_1.e2 = Jp1.Rg.Sw1.j0p2_1.e1;
//   Jp1.Rg.Sw1.j0p2_1.f1 + Jp1.Rg.Sw1.j0p2_1.f2 = 0.0;
//   Jp1.Rg.Sw1.j0p2_1.e1 = Jp1.Rg.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Rg.Sw1.j0p2_1.f1 = Jp1.Rg.Sw1.j0p2_1.BondCon1.d * Jp1.Rg.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Rg.Sw1.j0p2_1.e2 = Jp1.Rg.Sw1.j0p2_1.BondCon2.e;
//   Jp1.Rg.Sw1.j0p2_1.f2 = Jp1.Rg.Sw1.j0p2_1.BondCon2.d * Jp1.Rg.Sw1.j0p2_1.BondCon2.f;
//   Jp1.Rg.Sw1.j0p2_2.e2 = Jp1.Rg.Sw1.j0p2_2.e1;
//   Jp1.Rg.Sw1.j0p2_2.f1 + Jp1.Rg.Sw1.j0p2_2.f2 = 0.0;
//   Jp1.Rg.Sw1.j0p2_2.e1 = Jp1.Rg.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Rg.Sw1.j0p2_2.f1 = Jp1.Rg.Sw1.j0p2_2.BondCon1.d * Jp1.Rg.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Rg.Sw1.j0p2_2.e2 = Jp1.Rg.Sw1.j0p2_2.BondCon2.e;
//   Jp1.Rg.Sw1.j0p2_2.f2 = Jp1.Rg.Sw1.j0p2_2.BondCon2.d * Jp1.Rg.Sw1.j0p2_2.BondCon2.f;
//   Jp1.Rg.Sw1.Sw1.open = Jp1.Rg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp1.Rg.Sw1.Sw1.open then Jp1.Rg.Sw1.Sw1.f else Jp1.Rg.Sw1.Sw1.e;
//   Jp1.Rg.Sw1.Sw1.e = Jp1.Rg.Sw1.Sw1.BondCon1.e;
//   Jp1.Rg.Sw1.Sw1.f = Jp1.Rg.Sw1.Sw1.BondCon1.d * Jp1.Rg.Sw1.Sw1.BondCon1.f;
//   Jp1.Rg.Sw1.B3.BondCon2.e = Jp1.Rg.Sw1.B3.BondCon1.e;
//   Jp1.Rg.Sw1.B3.BondCon2.f = Jp1.Rg.Sw1.B3.BondCon1.f;
//   Jp1.Rg.Sw1.B3.BondCon1.d = -1.0;
//   Jp1.Rg.Sw1.B3.BondCon2.d = 1.0;
//   Jp1.Rg.B5.fBondCon1.e = Jp1.Rg.B5.eBondCon1.e;
//   Jp1.Rg.B5.eBondCon1.f = Jp1.Rg.B5.fBondCon1.f;
//   Jp1.Rg.B5.fBondCon1.d = -1.0;
//   Jp1.Rg.B5.eBondCon1.d = 1.0;
//   Jp1.Rg.BG2Heat1.BondCon1.e = Jp1.Rg.BG2Heat1.port_b.T;
//   Jp1.Rg.BG2Heat1.BondCon1.e * Jp1.Rg.BG2Heat1.BondCon1.f = -Jp1.Rg.BG2Heat1.port_b.Q_flow;
//   Jp1.Rg.Sw1.control = true;
//   Jp1.Rg.v = Jp1.Rg.p.v - Jp1.Rg.n.v;
//   Jp1.Rg.i = Jp1.Rg.p.i;
//   Jp1.Rd.J1p3_1.f[2] = Jp1.Rd.J1p3_1.f[1];
//   Jp1.Rd.J1p3_1.f[3] = Jp1.Rd.J1p3_1.f[2];
//   Jp1.Rd.J1p3_1.e[1] + (Jp1.Rd.J1p3_1.e[2] + Jp1.Rd.J1p3_1.e[3]) = 0.0;
//   Jp1.Rd.J1p3_1.e[1] = Jp1.Rd.J1p3_1.BondCon1.d * Jp1.Rd.J1p3_1.BondCon1.e;
//   Jp1.Rd.J1p3_1.f[1] = Jp1.Rd.J1p3_1.BondCon1.f;
//   Jp1.Rd.J1p3_1.e[2] = Jp1.Rd.J1p3_1.BondCon2.d * Jp1.Rd.J1p3_1.BondCon2.e;
//   Jp1.Rd.J1p3_1.f[2] = Jp1.Rd.J1p3_1.BondCon2.f;
//   Jp1.Rd.J1p3_1.e[3] = Jp1.Rd.J1p3_1.BondCon3.d * Jp1.Rd.J1p3_1.BondCon3.e;
//   Jp1.Rd.J1p3_1.f[3] = Jp1.Rd.J1p3_1.BondCon3.f;
//   Jp1.Rd.B1.BondCon2.e = Jp1.Rd.B1.BondCon1.e;
//   Jp1.Rd.B1.BondCon2.f = Jp1.Rd.B1.BondCon1.f;
//   Jp1.Rd.B1.BondCon1.d = -1.0;
//   Jp1.Rd.B1.BondCon2.d = 1.0;
//   Jp1.Rd.B2.BondCon2.e = Jp1.Rd.B2.BondCon1.e;
//   Jp1.Rd.B2.BondCon2.f = Jp1.Rd.B2.BondCon1.f;
//   Jp1.Rd.B2.BondCon1.d = -1.0;
//   Jp1.Rd.B2.BondCon2.d = 1.0;
//   Jp1.Rd.B3.BondCon2.e = Jp1.Rd.B3.BondCon1.e;
//   Jp1.Rd.B3.BondCon2.f = Jp1.Rd.B3.BondCon1.f;
//   Jp1.Rd.B3.BondCon1.d = -1.0;
//   Jp1.Rd.B3.BondCon2.d = 1.0;
//   Jp1.Rd.El2BG1.BondCon1.e = Jp1.Rd.El2BG1.p.v;
//   Jp1.Rd.El2BG1.BondCon1.f = Jp1.Rd.El2BG1.p.i;
//   Jp1.Rd.BG2El1.BondCon1.e = Jp1.Rd.BG2El1.n.v;
//   Jp1.Rd.BG2El1.BondCon1.f = -Jp1.Rd.BG2El1.n.i;
//   Jp1.Rd.B6.fBondCon1.e = Jp1.Rd.B6.eBondCon1.e;
//   Jp1.Rd.B6.eBondCon1.f = Jp1.Rd.B6.fBondCon1.f;
//   Jp1.Rd.B6.eBondCon1.d = -1.0;
//   Jp1.Rd.B6.fBondCon1.d = 1.0;
//   Jp1.Rd.T_nom.e = Jp1.Rd.T_nom.e0;
//   Jp1.Rd.T_nom.e = Jp1.Rd.T_nom.BondCon1.e;
//   Jp1.Rd.T_nom.f = (-Jp1.Rd.T_nom.BondCon1.d) * Jp1.Rd.T_nom.BondCon1.f;
//   Jp1.Rd.R1.Rval = (Jp1.Rd.R1.R * (1.0 + (Jp1.Rd.R1.TR1 * Jp1.Rd.R1.DTemp + Jp1.Rd.R1.TR2 * Jp1.Rd.R1.DTempSq))) / Jp1.Rd.R1.Area;
//   Jp1.Rd.R1.e1 = Jp1.Rd.R1.Rval * Jp1.Rd.R1.f1;
//   Jp1.Rd.R1.e1 * Jp1.Rd.R1.f1 = Jp1.Rd.R1.e2 * Jp1.Rd.R1.f2;
//   Jp1.Rd.R1.DTempSq = Jp1.Rd.R1.DTemp ^ 2.0;
//   Jp1.Rd.R1.DTemp = Jp1.Rd.R1.e2 - Jp1.Rd.R1.Tnom;
//   Jp1.Rd.R1.e1 = Jp1.Rd.R1.BondCon1.e;
//   Jp1.Rd.R1.f1 = Jp1.Rd.R1.BondCon1.d * Jp1.Rd.R1.BondCon1.f;
//   Jp1.Rd.R1.e2 = Jp1.Rd.R1.BondCon2.e;
//   Jp1.Rd.R1.f2 = (-Jp1.Rd.R1.BondCon2.d) * Jp1.Rd.R1.BondCon2.f;
//   Jp1.Rd.B4.fBondCon1.e = Jp1.Rd.B4.eBondCon1.e;
//   Jp1.Rd.B4.eBondCon1.f = Jp1.Rd.B4.fBondCon1.f;
//   Jp1.Rd.B4.fBondCon1.d = -1.0;
//   Jp1.Rd.B4.eBondCon1.d = 1.0;
//   Jp1.Rd.Sw1.J1p3_1.f[2] = Jp1.Rd.Sw1.J1p3_1.f[1];
//   Jp1.Rd.Sw1.J1p3_1.f[3] = Jp1.Rd.Sw1.J1p3_1.f[2];
//   Jp1.Rd.Sw1.J1p3_1.e[1] + (Jp1.Rd.Sw1.J1p3_1.e[2] + Jp1.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp1.Rd.Sw1.J1p3_1.e[1] = Jp1.Rd.Sw1.J1p3_1.BondCon1.d * Jp1.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Rd.Sw1.J1p3_1.f[1] = Jp1.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Rd.Sw1.J1p3_1.e[2] = Jp1.Rd.Sw1.J1p3_1.BondCon2.d * Jp1.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Rd.Sw1.J1p3_1.f[2] = Jp1.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Rd.Sw1.J1p3_1.e[3] = Jp1.Rd.Sw1.J1p3_1.BondCon3.d * Jp1.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Rd.Sw1.J1p3_1.f[3] = Jp1.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Rd.Sw1.B1.BondCon2.e = Jp1.Rd.Sw1.B1.BondCon1.e;
//   Jp1.Rd.Sw1.B1.BondCon2.f = Jp1.Rd.Sw1.B1.BondCon1.f;
//   Jp1.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Jp1.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Jp1.Rd.Sw1.B2.BondCon2.e = Jp1.Rd.Sw1.B2.BondCon1.e;
//   Jp1.Rd.Sw1.B2.BondCon2.f = Jp1.Rd.Sw1.B2.BondCon1.f;
//   Jp1.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Jp1.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Jp1.Rd.Sw1.J0p3_1.e[2] = Jp1.Rd.Sw1.J0p3_1.e[1];
//   Jp1.Rd.Sw1.J0p3_1.e[3] = Jp1.Rd.Sw1.J0p3_1.e[2];
//   Jp1.Rd.Sw1.J0p3_1.f[1] + (Jp1.Rd.Sw1.J0p3_1.f[2] + Jp1.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp1.Rd.Sw1.J0p3_1.e[1] = Jp1.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Rd.Sw1.J0p3_1.f[1] = Jp1.Rd.Sw1.J0p3_1.BondCon1.d * Jp1.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Rd.Sw1.J0p3_1.e[2] = Jp1.Rd.Sw1.J0p3_1.BondCon2.e;
//   Jp1.Rd.Sw1.J0p3_1.f[2] = Jp1.Rd.Sw1.J0p3_1.BondCon2.d * Jp1.Rd.Sw1.J0p3_1.BondCon2.f;
//   Jp1.Rd.Sw1.J0p3_1.e[3] = Jp1.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Rd.Sw1.J0p3_1.f[3] = Jp1.Rd.Sw1.J0p3_1.BondCon3.d * Jp1.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Rd.Sw1.B4.BondCon2.e = Jp1.Rd.Sw1.B4.BondCon1.e;
//   Jp1.Rd.Sw1.B4.BondCon2.f = Jp1.Rd.Sw1.B4.BondCon1.f;
//   Jp1.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Jp1.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Jp1.Rd.Sw1.j0p2_1.e2 = Jp1.Rd.Sw1.j0p2_1.e1;
//   Jp1.Rd.Sw1.j0p2_1.f1 + Jp1.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Jp1.Rd.Sw1.j0p2_1.e1 = Jp1.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Rd.Sw1.j0p2_1.f1 = Jp1.Rd.Sw1.j0p2_1.BondCon1.d * Jp1.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Rd.Sw1.j0p2_1.e2 = Jp1.Rd.Sw1.j0p2_1.BondCon2.e;
//   Jp1.Rd.Sw1.j0p2_1.f2 = Jp1.Rd.Sw1.j0p2_1.BondCon2.d * Jp1.Rd.Sw1.j0p2_1.BondCon2.f;
//   Jp1.Rd.Sw1.j0p2_2.e2 = Jp1.Rd.Sw1.j0p2_2.e1;
//   Jp1.Rd.Sw1.j0p2_2.f1 + Jp1.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Jp1.Rd.Sw1.j0p2_2.e1 = Jp1.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Rd.Sw1.j0p2_2.f1 = Jp1.Rd.Sw1.j0p2_2.BondCon1.d * Jp1.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Rd.Sw1.j0p2_2.e2 = Jp1.Rd.Sw1.j0p2_2.BondCon2.e;
//   Jp1.Rd.Sw1.j0p2_2.f2 = Jp1.Rd.Sw1.j0p2_2.BondCon2.d * Jp1.Rd.Sw1.j0p2_2.BondCon2.f;
//   Jp1.Rd.Sw1.Sw1.open = Jp1.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp1.Rd.Sw1.Sw1.open then Jp1.Rd.Sw1.Sw1.f else Jp1.Rd.Sw1.Sw1.e;
//   Jp1.Rd.Sw1.Sw1.e = Jp1.Rd.Sw1.Sw1.BondCon1.e;
//   Jp1.Rd.Sw1.Sw1.f = Jp1.Rd.Sw1.Sw1.BondCon1.d * Jp1.Rd.Sw1.Sw1.BondCon1.f;
//   Jp1.Rd.Sw1.B3.BondCon2.e = Jp1.Rd.Sw1.B3.BondCon1.e;
//   Jp1.Rd.Sw1.B3.BondCon2.f = Jp1.Rd.Sw1.B3.BondCon1.f;
//   Jp1.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Jp1.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Jp1.Rd.B5.fBondCon1.e = Jp1.Rd.B5.eBondCon1.e;
//   Jp1.Rd.B5.eBondCon1.f = Jp1.Rd.B5.fBondCon1.f;
//   Jp1.Rd.B5.fBondCon1.d = -1.0;
//   Jp1.Rd.B5.eBondCon1.d = 1.0;
//   Jp1.Rd.BG2Heat1.BondCon1.e = Jp1.Rd.BG2Heat1.port_b.T;
//   Jp1.Rd.BG2Heat1.BondCon1.e * Jp1.Rd.BG2Heat1.BondCon1.f = -Jp1.Rd.BG2Heat1.port_b.Q_flow;
//   Jp1.Rd.Sw1.control = true;
//   Jp1.Rd.v = Jp1.Rd.p.v - Jp1.Rd.n.v;
//   Jp1.Rd.i = Jp1.Rd.p.i;
//   Jp1.Rs.J1p3_1.f[2] = Jp1.Rs.J1p3_1.f[1];
//   Jp1.Rs.J1p3_1.f[3] = Jp1.Rs.J1p3_1.f[2];
//   Jp1.Rs.J1p3_1.e[1] + (Jp1.Rs.J1p3_1.e[2] + Jp1.Rs.J1p3_1.e[3]) = 0.0;
//   Jp1.Rs.J1p3_1.e[1] = Jp1.Rs.J1p3_1.BondCon1.d * Jp1.Rs.J1p3_1.BondCon1.e;
//   Jp1.Rs.J1p3_1.f[1] = Jp1.Rs.J1p3_1.BondCon1.f;
//   Jp1.Rs.J1p3_1.e[2] = Jp1.Rs.J1p3_1.BondCon2.d * Jp1.Rs.J1p3_1.BondCon2.e;
//   Jp1.Rs.J1p3_1.f[2] = Jp1.Rs.J1p3_1.BondCon2.f;
//   Jp1.Rs.J1p3_1.e[3] = Jp1.Rs.J1p3_1.BondCon3.d * Jp1.Rs.J1p3_1.BondCon3.e;
//   Jp1.Rs.J1p3_1.f[3] = Jp1.Rs.J1p3_1.BondCon3.f;
//   Jp1.Rs.B1.BondCon2.e = Jp1.Rs.B1.BondCon1.e;
//   Jp1.Rs.B1.BondCon2.f = Jp1.Rs.B1.BondCon1.f;
//   Jp1.Rs.B1.BondCon1.d = -1.0;
//   Jp1.Rs.B1.BondCon2.d = 1.0;
//   Jp1.Rs.B2.BondCon2.e = Jp1.Rs.B2.BondCon1.e;
//   Jp1.Rs.B2.BondCon2.f = Jp1.Rs.B2.BondCon1.f;
//   Jp1.Rs.B2.BondCon1.d = -1.0;
//   Jp1.Rs.B2.BondCon2.d = 1.0;
//   Jp1.Rs.B3.BondCon2.e = Jp1.Rs.B3.BondCon1.e;
//   Jp1.Rs.B3.BondCon2.f = Jp1.Rs.B3.BondCon1.f;
//   Jp1.Rs.B3.BondCon1.d = -1.0;
//   Jp1.Rs.B3.BondCon2.d = 1.0;
//   Jp1.Rs.El2BG1.BondCon1.e = Jp1.Rs.El2BG1.p.v;
//   Jp1.Rs.El2BG1.BondCon1.f = Jp1.Rs.El2BG1.p.i;
//   Jp1.Rs.BG2El1.BondCon1.e = Jp1.Rs.BG2El1.n.v;
//   Jp1.Rs.BG2El1.BondCon1.f = -Jp1.Rs.BG2El1.n.i;
//   Jp1.Rs.B6.fBondCon1.e = Jp1.Rs.B6.eBondCon1.e;
//   Jp1.Rs.B6.eBondCon1.f = Jp1.Rs.B6.fBondCon1.f;
//   Jp1.Rs.B6.eBondCon1.d = -1.0;
//   Jp1.Rs.B6.fBondCon1.d = 1.0;
//   Jp1.Rs.T_nom.e = Jp1.Rs.T_nom.e0;
//   Jp1.Rs.T_nom.e = Jp1.Rs.T_nom.BondCon1.e;
//   Jp1.Rs.T_nom.f = (-Jp1.Rs.T_nom.BondCon1.d) * Jp1.Rs.T_nom.BondCon1.f;
//   Jp1.Rs.R1.Rval = (Jp1.Rs.R1.R * (1.0 + (Jp1.Rs.R1.TR1 * Jp1.Rs.R1.DTemp + Jp1.Rs.R1.TR2 * Jp1.Rs.R1.DTempSq))) / Jp1.Rs.R1.Area;
//   Jp1.Rs.R1.e1 = Jp1.Rs.R1.Rval * Jp1.Rs.R1.f1;
//   Jp1.Rs.R1.e1 * Jp1.Rs.R1.f1 = Jp1.Rs.R1.e2 * Jp1.Rs.R1.f2;
//   Jp1.Rs.R1.DTempSq = Jp1.Rs.R1.DTemp ^ 2.0;
//   Jp1.Rs.R1.DTemp = Jp1.Rs.R1.e2 - Jp1.Rs.R1.Tnom;
//   Jp1.Rs.R1.e1 = Jp1.Rs.R1.BondCon1.e;
//   Jp1.Rs.R1.f1 = Jp1.Rs.R1.BondCon1.d * Jp1.Rs.R1.BondCon1.f;
//   Jp1.Rs.R1.e2 = Jp1.Rs.R1.BondCon2.e;
//   Jp1.Rs.R1.f2 = (-Jp1.Rs.R1.BondCon2.d) * Jp1.Rs.R1.BondCon2.f;
//   Jp1.Rs.B4.fBondCon1.e = Jp1.Rs.B4.eBondCon1.e;
//   Jp1.Rs.B4.eBondCon1.f = Jp1.Rs.B4.fBondCon1.f;
//   Jp1.Rs.B4.fBondCon1.d = -1.0;
//   Jp1.Rs.B4.eBondCon1.d = 1.0;
//   Jp1.Rs.Sw1.J1p3_1.f[2] = Jp1.Rs.Sw1.J1p3_1.f[1];
//   Jp1.Rs.Sw1.J1p3_1.f[3] = Jp1.Rs.Sw1.J1p3_1.f[2];
//   Jp1.Rs.Sw1.J1p3_1.e[1] + (Jp1.Rs.Sw1.J1p3_1.e[2] + Jp1.Rs.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp1.Rs.Sw1.J1p3_1.e[1] = Jp1.Rs.Sw1.J1p3_1.BondCon1.d * Jp1.Rs.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Rs.Sw1.J1p3_1.f[1] = Jp1.Rs.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Rs.Sw1.J1p3_1.e[2] = Jp1.Rs.Sw1.J1p3_1.BondCon2.d * Jp1.Rs.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Rs.Sw1.J1p3_1.f[2] = Jp1.Rs.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Rs.Sw1.J1p3_1.e[3] = Jp1.Rs.Sw1.J1p3_1.BondCon3.d * Jp1.Rs.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Rs.Sw1.J1p3_1.f[3] = Jp1.Rs.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Rs.Sw1.B1.BondCon2.e = Jp1.Rs.Sw1.B1.BondCon1.e;
//   Jp1.Rs.Sw1.B1.BondCon2.f = Jp1.Rs.Sw1.B1.BondCon1.f;
//   Jp1.Rs.Sw1.B1.BondCon1.d = -1.0;
//   Jp1.Rs.Sw1.B1.BondCon2.d = 1.0;
//   Jp1.Rs.Sw1.B2.BondCon2.e = Jp1.Rs.Sw1.B2.BondCon1.e;
//   Jp1.Rs.Sw1.B2.BondCon2.f = Jp1.Rs.Sw1.B2.BondCon1.f;
//   Jp1.Rs.Sw1.B2.BondCon1.d = -1.0;
//   Jp1.Rs.Sw1.B2.BondCon2.d = 1.0;
//   Jp1.Rs.Sw1.J0p3_1.e[2] = Jp1.Rs.Sw1.J0p3_1.e[1];
//   Jp1.Rs.Sw1.J0p3_1.e[3] = Jp1.Rs.Sw1.J0p3_1.e[2];
//   Jp1.Rs.Sw1.J0p3_1.f[1] + (Jp1.Rs.Sw1.J0p3_1.f[2] + Jp1.Rs.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp1.Rs.Sw1.J0p3_1.e[1] = Jp1.Rs.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Rs.Sw1.J0p3_1.f[1] = Jp1.Rs.Sw1.J0p3_1.BondCon1.d * Jp1.Rs.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Rs.Sw1.J0p3_1.e[2] = Jp1.Rs.Sw1.J0p3_1.BondCon2.e;
//   Jp1.Rs.Sw1.J0p3_1.f[2] = Jp1.Rs.Sw1.J0p3_1.BondCon2.d * Jp1.Rs.Sw1.J0p3_1.BondCon2.f;
//   Jp1.Rs.Sw1.J0p3_1.e[3] = Jp1.Rs.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Rs.Sw1.J0p3_1.f[3] = Jp1.Rs.Sw1.J0p3_1.BondCon3.d * Jp1.Rs.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Rs.Sw1.B4.BondCon2.e = Jp1.Rs.Sw1.B4.BondCon1.e;
//   Jp1.Rs.Sw1.B4.BondCon2.f = Jp1.Rs.Sw1.B4.BondCon1.f;
//   Jp1.Rs.Sw1.B4.BondCon1.d = -1.0;
//   Jp1.Rs.Sw1.B4.BondCon2.d = 1.0;
//   Jp1.Rs.Sw1.j0p2_1.e2 = Jp1.Rs.Sw1.j0p2_1.e1;
//   Jp1.Rs.Sw1.j0p2_1.f1 + Jp1.Rs.Sw1.j0p2_1.f2 = 0.0;
//   Jp1.Rs.Sw1.j0p2_1.e1 = Jp1.Rs.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Rs.Sw1.j0p2_1.f1 = Jp1.Rs.Sw1.j0p2_1.BondCon1.d * Jp1.Rs.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Rs.Sw1.j0p2_1.e2 = Jp1.Rs.Sw1.j0p2_1.BondCon2.e;
//   Jp1.Rs.Sw1.j0p2_1.f2 = Jp1.Rs.Sw1.j0p2_1.BondCon2.d * Jp1.Rs.Sw1.j0p2_1.BondCon2.f;
//   Jp1.Rs.Sw1.j0p2_2.e2 = Jp1.Rs.Sw1.j0p2_2.e1;
//   Jp1.Rs.Sw1.j0p2_2.f1 + Jp1.Rs.Sw1.j0p2_2.f2 = 0.0;
//   Jp1.Rs.Sw1.j0p2_2.e1 = Jp1.Rs.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Rs.Sw1.j0p2_2.f1 = Jp1.Rs.Sw1.j0p2_2.BondCon1.d * Jp1.Rs.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Rs.Sw1.j0p2_2.e2 = Jp1.Rs.Sw1.j0p2_2.BondCon2.e;
//   Jp1.Rs.Sw1.j0p2_2.f2 = Jp1.Rs.Sw1.j0p2_2.BondCon2.d * Jp1.Rs.Sw1.j0p2_2.BondCon2.f;
//   Jp1.Rs.Sw1.Sw1.open = Jp1.Rs.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp1.Rs.Sw1.Sw1.open then Jp1.Rs.Sw1.Sw1.f else Jp1.Rs.Sw1.Sw1.e;
//   Jp1.Rs.Sw1.Sw1.e = Jp1.Rs.Sw1.Sw1.BondCon1.e;
//   Jp1.Rs.Sw1.Sw1.f = Jp1.Rs.Sw1.Sw1.BondCon1.d * Jp1.Rs.Sw1.Sw1.BondCon1.f;
//   Jp1.Rs.Sw1.B3.BondCon2.e = Jp1.Rs.Sw1.B3.BondCon1.e;
//   Jp1.Rs.Sw1.B3.BondCon2.f = Jp1.Rs.Sw1.B3.BondCon1.f;
//   Jp1.Rs.Sw1.B3.BondCon1.d = -1.0;
//   Jp1.Rs.Sw1.B3.BondCon2.d = 1.0;
//   Jp1.Rs.B5.fBondCon1.e = Jp1.Rs.B5.eBondCon1.e;
//   Jp1.Rs.B5.eBondCon1.f = Jp1.Rs.B5.fBondCon1.f;
//   Jp1.Rs.B5.fBondCon1.d = -1.0;
//   Jp1.Rs.B5.eBondCon1.d = 1.0;
//   Jp1.Rs.BG2Heat1.BondCon1.e = Jp1.Rs.BG2Heat1.port_b.T;
//   Jp1.Rs.BG2Heat1.BondCon1.e * Jp1.Rs.BG2Heat1.BondCon1.f = -Jp1.Rs.BG2Heat1.port_b.Q_flow;
//   Jp1.Rs.Sw1.control = true;
//   Jp1.Rs.v = Jp1.Rs.p.v - Jp1.Rs.n.v;
//   Jp1.Rs.i = Jp1.Rs.p.i;
//   if noEvent(Jp1.Jpi1.ISD.u1 > 0.0) then
//   Jp1.Jpi1.ISD.sig = 1.0;
//   Jp1.Jpi1.ISD.vds = Jp1.Jpi1.ISD.u1;
//   Jp1.Jpi1.ISD.vgs = Jp1.Jpi1.ISD.u2;
//   else
//   Jp1.Jpi1.ISD.sig = -1.0;
//   Jp1.Jpi1.ISD.vds = -Jp1.Jpi1.ISD.u1;
//   Jp1.Jpi1.ISD.vgs = Jp1.Jpi1.ISD.u2 - Jp1.Jpi1.ISD.u1;
//   end if;
//   (Jp1.Jpi1.ISD.ids,Jp1.Jpi1.ISD.vdsat) = BondLib.Spice.Utilities.JFETeq1(Jp1.Jpi1.ISD.vds,Jp1.Jpi1.ISD.vgs,Jp1.Jpi1.ISD.Tdev,Jp1.Jpi1.ISD.sig,Jp1.Jpi1.ISD.Tnom,Jp1.Jpi1.ISD.VT0,Jp1.Jpi1.ISD.BETA,Jp1.Jpi1.ISD.LAMBDA,Jp1.Jpi1.ISD.TCV,Jp1.Jpi1.ISD.BEX);
//   Jp1.Jpi1.ISD.y = Jp1.Jpi1.ISD.ids;
//   Jp1.Jpi1.Tdev1.T = Jp1.Jpi1.Tdev1.port.T;
//   Jp1.Jpi1.Tdev1.port.Q_flow = 0.0;
//   Jp1.Jpi1.Ddg.Tdev1.T = Jp1.Jpi1.Ddg.Tdev1.port.T;
//   Jp1.Jpi1.Ddg.Tdev1.port.Q_flow = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[2] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[1];
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[3] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[2];
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[1] + (Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[2] + Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[1] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.d * Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[1] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[2] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.d * Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[2] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.e[3] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.d * Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.DjJ1.J1p3_1.f[3] = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.e = Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.f = Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.e = Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.f = Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.e = Jp1.Jpi1.Ddg.DjJ1.El2BG1.p.v;
//   Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.f = Jp1.Jpi1.Ddg.DjJ1.El2BG1.p.i;
//   Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.e = Jp1.Jpi1.Ddg.DjJ1.BG2El1.n.v;
//   Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.f = -Jp1.Jpi1.Ddg.DjJ1.BG2El1.n.i;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.Vt = 8.61727503842867e-05 * Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.et = Jp1.Jpi1.Ddg.DjJ1.DjJ1.e1 / (Jp1.Jpi1.Ddg.DjJ1.DjJ1.Vt * Jp1.Jpi1.Ddg.DjJ1.DjJ1.N);
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.RTemp = Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2 / Jp1.Jpi1.Ddg.DjJ1.DjJ1.Tnom;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.EGval = Jp1.Jpi1.Ddg.DjJ1.DjJ1.EG + (-0.000702 * Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2 ^ 2.0) / (1108.0 + Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2);
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.ISval = Jp1.Jpi1.Ddg.DjJ1.DjJ1.IS * exp(((-1.0 + Jp1.Jpi1.Ddg.DjJ1.DjJ1.RTemp) * Jp1.Jpi1.Ddg.DjJ1.DjJ1.EGval) / Jp1.Jpi1.Ddg.DjJ1.DjJ1.Vt + Jp1.Jpi1.Ddg.DjJ1.DjJ1.XTI * log(Jp1.Jpi1.Ddg.DjJ1.DjJ1.RTemp));
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.f1 = Jp1.Jpi1.Ddg.DjJ1.DjJ1.ISval * (Jp1.Jpi1.Ddg.DjJ1.DjJ1.Area * (if noEvent(Jp1.Jpi1.Ddg.DjJ1.DjJ1.et < Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMin) then Jp1.Jpi1.Ddg.DjJ1.DjJ1.ExMin * (1.0 + (Jp1.Jpi1.Ddg.DjJ1.DjJ1.et - Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMin)) + -1.0 else if noEvent(Jp1.Jpi1.Ddg.DjJ1.DjJ1.et > Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMax) then Jp1.Jpi1.Ddg.DjJ1.DjJ1.ExMax * (1.0 + (Jp1.Jpi1.Ddg.DjJ1.DjJ1.et - Jp1.Jpi1.Ddg.DjJ1.DjJ1.EMax)) + -1.0 else exp(Jp1.Jpi1.Ddg.DjJ1.DjJ1.et) + -1.0));
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2 * Jp1.Jpi1.Ddg.DjJ1.DjJ1.f2 = Jp1.Jpi1.Ddg.DjJ1.DjJ1.e1 * Jp1.Jpi1.Ddg.DjJ1.DjJ1.f1;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.DTempSq = Jp1.Jpi1.Ddg.DjJ1.DjJ1.DTemp ^ 2.0;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.DTemp = Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2 - Jp1.Jpi1.Ddg.DjJ1.DjJ1.Tnom;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.e1 = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.f1 = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.d * Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.e2 = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.e;
//   Jp1.Jpi1.Ddg.DjJ1.DjJ1.f2 = (-Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.d) * Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.f;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.e = Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.f = Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.e = Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.f = Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.d = 1.0;
//   Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e = Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.T;
//   Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e * Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.f = -Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.Q_flow;
//   Jp1.Jpi1.Ddg.DjJ1.v = Jp1.Jpi1.Ddg.DjJ1.p.v - Jp1.Jpi1.Ddg.DjJ1.n.v;
//   Jp1.Jpi1.Ddg.DjJ1.i = Jp1.Jpi1.Ddg.DjJ1.p.i;
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.f[2] = Jp1.Jpi1.Ddg.Rd.J1p3_1.f[1];
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.f[3] = Jp1.Jpi1.Ddg.Rd.J1p3_1.f[2];
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.e[1] + (Jp1.Jpi1.Ddg.Rd.J1p3_1.e[2] + Jp1.Jpi1.Ddg.Rd.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.e[1] = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.d * Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.f[1] = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.e[2] = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.d * Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.f[2] = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.e[3] = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.d * Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.Rd.J1p3_1.f[3] = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon2.e = Jp1.Jpi1.Ddg.Rd.B1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon2.f = Jp1.Jpi1.Ddg.Rd.B1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon2.e = Jp1.Jpi1.Ddg.Rd.B2.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon2.f = Jp1.Jpi1.Ddg.Rd.B2.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon2.e = Jp1.Jpi1.Ddg.Rd.B3.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon2.f = Jp1.Jpi1.Ddg.Rd.B3.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.e = Jp1.Jpi1.Ddg.Rd.El2BG1.p.v;
//   Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.f = Jp1.Jpi1.Ddg.Rd.El2BG1.p.i;
//   Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.e = Jp1.Jpi1.Ddg.Rd.BG2El1.n.v;
//   Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.f = -Jp1.Jpi1.Ddg.Rd.BG2El1.n.i;
//   Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.e = Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.f = Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.T_nom.e = Jp1.Jpi1.Ddg.Rd.T_nom.e0;
//   Jp1.Jpi1.Ddg.Rd.T_nom.e = Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.T_nom.f = (-Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.d) * Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.R1.Rval = (Jp1.Jpi1.Ddg.Rd.R1.R * (1.0 + (Jp1.Jpi1.Ddg.Rd.R1.TR1 * Jp1.Jpi1.Ddg.Rd.R1.DTemp + Jp1.Jpi1.Ddg.Rd.R1.TR2 * Jp1.Jpi1.Ddg.Rd.R1.DTempSq))) / Jp1.Jpi1.Ddg.Rd.R1.Area;
//   Jp1.Jpi1.Ddg.Rd.R1.e1 = Jp1.Jpi1.Ddg.Rd.R1.Rval * Jp1.Jpi1.Ddg.Rd.R1.f1;
//   Jp1.Jpi1.Ddg.Rd.R1.e1 * Jp1.Jpi1.Ddg.Rd.R1.f1 = Jp1.Jpi1.Ddg.Rd.R1.e2 * Jp1.Jpi1.Ddg.Rd.R1.f2;
//   Jp1.Jpi1.Ddg.Rd.R1.DTempSq = Jp1.Jpi1.Ddg.Rd.R1.DTemp ^ 2.0;
//   Jp1.Jpi1.Ddg.Rd.R1.DTemp = Jp1.Jpi1.Ddg.Rd.R1.e2 - Jp1.Jpi1.Ddg.Rd.R1.Tnom;
//   Jp1.Jpi1.Ddg.Rd.R1.e1 = Jp1.Jpi1.Ddg.Rd.R1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.R1.f1 = Jp1.Jpi1.Ddg.Rd.R1.BondCon1.d * Jp1.Jpi1.Ddg.Rd.R1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.R1.e2 = Jp1.Jpi1.Ddg.Rd.R1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.R1.f2 = (-Jp1.Jpi1.Ddg.Rd.R1.BondCon2.d) * Jp1.Jpi1.Ddg.Rd.R1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.e = Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.f = Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[1];
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[3] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2];
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[1] + (Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[2] + Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[1] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.d * Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[1] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[2] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.d * Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[3] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.d * Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[3] = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[1];
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[3] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2];
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[1] + (Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[2] + Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[1] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[1] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.d * Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[2] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.d * Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[3] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[3] = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.d * Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.e2 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.e1;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.f1 + Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.e1 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.f1 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.d * Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.e2 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.f2 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.d * Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.e2 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.e1;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.f1 + Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.e1 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.f1 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.d * Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.e2 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.f2 = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.d * Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.open = Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.open then Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.f else Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.e = Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.f = Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.d * Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.e = Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.f = Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.d = 1.0;
//   Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e = Jp1.Jpi1.Ddg.Rd.BG2Heat1.port_b.T;
//   Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e * Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.f = -Jp1.Jpi1.Ddg.Rd.BG2Heat1.port_b.Q_flow;
//   Jp1.Jpi1.Ddg.Rd.Sw1.control = true;
//   Jp1.Jpi1.Ddg.Rd.v = Jp1.Jpi1.Ddg.Rd.p.v - Jp1.Jpi1.Ddg.Rd.n.v;
//   Jp1.Jpi1.Ddg.Rd.i = Jp1.Jpi1.Ddg.Rd.p.i;
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[2] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[1];
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[3] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[2];
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[1] + (Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[2] + Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[1] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.d * Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[1] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[2] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.d * Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[2] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.e[3] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.d * Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.VarC1.J1p3_1.f[3] = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.e = Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.f = Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.e = Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.f = Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.e = Jp1.Jpi1.Ddg.VarC1.El2BG1.p.v;
//   Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.f = Jp1.Jpi1.Ddg.VarC1.El2BG1.p.i;
//   Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.e = Jp1.Jpi1.Ddg.VarC1.BG2El1.n.v;
//   Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.f = -Jp1.Jpi1.Ddg.VarC1.BG2El1.n.i;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.e = Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.f = Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Ddg.VarC1.mC1.C = Jp1.Jpi1.Ddg.VarC1.mC1.s;
//   Jp1.Jpi1.Ddg.VarC1.mC1.f = Jp1.Jpi1.Ddg.VarC1.mC1.C * der(Jp1.Jpi1.Ddg.VarC1.mC1.e);
//   Jp1.Jpi1.Ddg.VarC1.mC1.e = Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.mC1.f = Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.d * Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.v = Jp1.Jpi1.Ddg.VarC1.p.v - Jp1.Jpi1.Ddg.VarC1.n.v;
//   Jp1.Jpi1.Ddg.VarC1.i = Jp1.Jpi1.Ddg.VarC1.p.i;
//   Jp1.Jpi1.Ddg.nlCJ1.vgs = Jp1.Jpi1.Ddg.nlCJ1.u1;
//   Jp1.Jpi1.Ddg.nlCJ1.vgd = Jp1.Jpi1.Ddg.nlCJ1.u2;
//   Jp1.Jpi1.Ddg.nlCJ1.v = if Jp1.Jpi1.Ddg.nlCJ1.GS then Jp1.Jpi1.Ddg.nlCJ1.vgs else Jp1.Jpi1.Ddg.nlCJ1.vgd;
//   Jp1.Jpi1.Ddg.nlCJ1.Vt = 8.61727503842867e-05 * Jp1.Jpi1.Ddg.nlCJ1.Tdev;
//   Jp1.Jpi1.Ddg.nlCJ1.et = Jp1.Jpi1.Ddg.nlCJ1.v / (Jp1.Jpi1.Ddg.nlCJ1.Vt * Jp1.Jpi1.Ddg.nlCJ1.N);
//   Jp1.Jpi1.Ddg.nlCJ1.DTemp = Jp1.Jpi1.Ddg.nlCJ1.Tdev - Jp1.Jpi1.Ddg.nlCJ1.Tnom;
//   Jp1.Jpi1.Ddg.nlCJ1.RTemp = Jp1.Jpi1.Ddg.nlCJ1.Tdev / Jp1.Jpi1.Ddg.nlCJ1.Tnom;
//   Jp1.Jpi1.Ddg.nlCJ1.VT0val = Jp1.Jpi1.Ddg.nlCJ1.VT0 - Jp1.Jpi1.Ddg.nlCJ1.TCV * Jp1.Jpi1.Ddg.nlCJ1.DTemp;
//   Jp1.Jpi1.Ddg.nlCJ1.EGval = Jp1.Jpi1.Ddg.nlCJ1.EG + (-0.000702 * Jp1.Jpi1.Ddg.nlCJ1.Tdev ^ 2.0) / (1108.0 + Jp1.Jpi1.Ddg.nlCJ1.Tdev);
//   Jp1.Jpi1.Ddg.nlCJ1.EGnom = Jp1.Jpi1.Ddg.nlCJ1.EG + (-0.000702 * Jp1.Jpi1.Ddg.nlCJ1.Tnom ^ 2.0) / (1108.0 + Jp1.Jpi1.Ddg.nlCJ1.Tnom);
//   Jp1.Jpi1.Ddg.nlCJ1.PBval = Jp1.Jpi1.Ddg.nlCJ1.PB * Jp1.Jpi1.Ddg.nlCJ1.RTemp + (Jp1.Jpi1.Ddg.nlCJ1.EGval + (-3.0 * (Jp1.Jpi1.Ddg.nlCJ1.Vt * log(Jp1.Jpi1.Ddg.nlCJ1.RTemp)) - Jp1.Jpi1.Ddg.nlCJ1.EGnom * Jp1.Jpi1.Ddg.nlCJ1.RTemp));
//   Jp1.Jpi1.Ddg.nlCJ1.CGSval = Jp1.Jpi1.Ddg.nlCJ1.CGS * (1.0 + Jp1.Jpi1.Ddg.nlCJ1.M * (1.0 + ((-Jp1.Jpi1.Ddg.nlCJ1.PBval) / Jp1.Jpi1.Ddg.nlCJ1.PB + 0.0004 * Jp1.Jpi1.Ddg.nlCJ1.DTemp)));
//   Jp1.Jpi1.Ddg.nlCJ1.CGDval = Jp1.Jpi1.Ddg.nlCJ1.CGD * (1.0 + Jp1.Jpi1.Ddg.nlCJ1.M * (1.0 + ((-Jp1.Jpi1.Ddg.nlCJ1.PBval) / Jp1.Jpi1.Ddg.nlCJ1.PB + 0.0004 * Jp1.Jpi1.Ddg.nlCJ1.DTemp)));
//   Jp1.Jpi1.Ddg.nlCJ1.CJval = if Jp1.Jpi1.Ddg.nlCJ1.GS then Jp1.Jpi1.Ddg.nlCJ1.CGSval else Jp1.Jpi1.Ddg.nlCJ1.CGDval;
//   Jp1.Jpi1.Ddg.nlCJ1.ISval = Jp1.Jpi1.Ddg.nlCJ1.IS * exp(((-1.0 + Jp1.Jpi1.Ddg.nlCJ1.RTemp) * Jp1.Jpi1.Ddg.nlCJ1.EGval) / Jp1.Jpi1.Ddg.nlCJ1.Vt + Jp1.Jpi1.Ddg.nlCJ1.XTI * log(Jp1.Jpi1.Ddg.nlCJ1.RTemp));
//   Jp1.Jpi1.Ddg.nlCJ1.Cdiff = Jp1.Jpi1.Ddg.nlCJ1.Area * (Jp1.Jpi1.Ddg.nlCJ1.TT * (Jp1.Jpi1.Ddg.nlCJ1.GminDC + ((if Jp1.Jpi1.Ddg.nlCJ1.et < Jp1.Jpi1.Ddg.nlCJ1.EMin then Jp1.Jpi1.Ddg.nlCJ1.ExMin * (1.0 + (Jp1.Jpi1.Ddg.nlCJ1.et - Jp1.Jpi1.Ddg.nlCJ1.EMin)) else if Jp1.Jpi1.Ddg.nlCJ1.et > Jp1.Jpi1.Ddg.nlCJ1.EMax then Jp1.Jpi1.Ddg.nlCJ1.ExMax * (1.0 + (Jp1.Jpi1.Ddg.nlCJ1.et - Jp1.Jpi1.Ddg.nlCJ1.EMax)) else exp(Jp1.Jpi1.Ddg.nlCJ1.et)) * Jp1.Jpi1.Ddg.nlCJ1.ISval) / (Jp1.Jpi1.Ddg.nlCJ1.N * Jp1.Jpi1.Ddg.nlCJ1.Vt)));
//   Jp1.Jpi1.Ddg.nlCJ1.Vfac1 = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.Vfac2 = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.Ve = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.Vn = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.VNval = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.sig2 = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.Cfac1 = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.Cfac2 = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.Cfac3 = 0.0;
//   Jp1.Jpi1.Ddg.nlCJ1.Cdepl = Jp1.Jpi1.Ddg.nlCJ1.Area * (Jp1.Jpi1.Ddg.nlCJ1.CJval * (if Jp1.Jpi1.Ddg.nlCJ1.v > Jp1.Jpi1.Ddg.nlCJ1.FC * Jp1.Jpi1.Ddg.nlCJ1.PBval then (1.0 + ((Jp1.Jpi1.Ddg.nlCJ1.M * Jp1.Jpi1.Ddg.nlCJ1.v) / Jp1.Jpi1.Ddg.nlCJ1.PBval - Jp1.Jpi1.Ddg.nlCJ1.FC * (1.0 + Jp1.Jpi1.Ddg.nlCJ1.M))) * (1.0 - Jp1.Jpi1.Ddg.nlCJ1.FC) ^ (-1.0 - Jp1.Jpi1.Ddg.nlCJ1.M) else abs(1.0 + (-Jp1.Jpi1.Ddg.nlCJ1.v) / Jp1.Jpi1.Ddg.nlCJ1.PBval) ^ (-Jp1.Jpi1.Ddg.nlCJ1.M)));
//   Jp1.Jpi1.Ddg.nlCJ1.Cval = Jp1.Jpi1.Ddg.nlCJ1.Cdiff + Jp1.Jpi1.Ddg.nlCJ1.Cdepl;
//   Jp1.Jpi1.Ddg.nlCJ1.y = Jp1.Jpi1.Ddg.nlCJ1.Cval;
//   Jp1.Jpi1.Ddg.v = Jp1.Jpi1.Ddg.p.v - Jp1.Jpi1.Ddg.n.v;
//   Jp1.Jpi1.Ddg.i = Jp1.Jpi1.Ddg.p.i;
//   Jp1.Jpi1.Dsg.Tdev1.T = Jp1.Jpi1.Dsg.Tdev1.port.T;
//   Jp1.Jpi1.Dsg.Tdev1.port.Q_flow = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[2] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[1];
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[3] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[2];
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[1] + (Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[2] + Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[1] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.d * Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[1] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[2] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.d * Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[2] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.e[3] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.d * Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.DjJ1.J1p3_1.f[3] = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.e = Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.f = Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.e = Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.f = Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.e = Jp1.Jpi1.Dsg.DjJ1.El2BG1.p.v;
//   Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.f = Jp1.Jpi1.Dsg.DjJ1.El2BG1.p.i;
//   Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.e = Jp1.Jpi1.Dsg.DjJ1.BG2El1.n.v;
//   Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.f = -Jp1.Jpi1.Dsg.DjJ1.BG2El1.n.i;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.Vt = 8.61727503842867e-05 * Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.et = Jp1.Jpi1.Dsg.DjJ1.DjJ1.e1 / (Jp1.Jpi1.Dsg.DjJ1.DjJ1.Vt * Jp1.Jpi1.Dsg.DjJ1.DjJ1.N);
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.RTemp = Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2 / Jp1.Jpi1.Dsg.DjJ1.DjJ1.Tnom;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.EGval = Jp1.Jpi1.Dsg.DjJ1.DjJ1.EG + (-0.000702 * Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2 ^ 2.0) / (1108.0 + Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2);
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.ISval = Jp1.Jpi1.Dsg.DjJ1.DjJ1.IS * exp(((-1.0 + Jp1.Jpi1.Dsg.DjJ1.DjJ1.RTemp) * Jp1.Jpi1.Dsg.DjJ1.DjJ1.EGval) / Jp1.Jpi1.Dsg.DjJ1.DjJ1.Vt + Jp1.Jpi1.Dsg.DjJ1.DjJ1.XTI * log(Jp1.Jpi1.Dsg.DjJ1.DjJ1.RTemp));
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.f1 = Jp1.Jpi1.Dsg.DjJ1.DjJ1.ISval * (Jp1.Jpi1.Dsg.DjJ1.DjJ1.Area * (if noEvent(Jp1.Jpi1.Dsg.DjJ1.DjJ1.et < Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMin) then Jp1.Jpi1.Dsg.DjJ1.DjJ1.ExMin * (1.0 + (Jp1.Jpi1.Dsg.DjJ1.DjJ1.et - Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMin)) + -1.0 else if noEvent(Jp1.Jpi1.Dsg.DjJ1.DjJ1.et > Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMax) then Jp1.Jpi1.Dsg.DjJ1.DjJ1.ExMax * (1.0 + (Jp1.Jpi1.Dsg.DjJ1.DjJ1.et - Jp1.Jpi1.Dsg.DjJ1.DjJ1.EMax)) + -1.0 else exp(Jp1.Jpi1.Dsg.DjJ1.DjJ1.et) + -1.0));
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2 * Jp1.Jpi1.Dsg.DjJ1.DjJ1.f2 = Jp1.Jpi1.Dsg.DjJ1.DjJ1.e1 * Jp1.Jpi1.Dsg.DjJ1.DjJ1.f1;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.DTempSq = Jp1.Jpi1.Dsg.DjJ1.DjJ1.DTemp ^ 2.0;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.DTemp = Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2 - Jp1.Jpi1.Dsg.DjJ1.DjJ1.Tnom;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.e1 = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.f1 = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.d * Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.e2 = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.e;
//   Jp1.Jpi1.Dsg.DjJ1.DjJ1.f2 = (-Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.d) * Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.f;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.e = Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.f = Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.e = Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.f = Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.d = 1.0;
//   Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e = Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.T;
//   Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e * Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.f = -Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.Q_flow;
//   Jp1.Jpi1.Dsg.DjJ1.v = Jp1.Jpi1.Dsg.DjJ1.p.v - Jp1.Jpi1.Dsg.DjJ1.n.v;
//   Jp1.Jpi1.Dsg.DjJ1.i = Jp1.Jpi1.Dsg.DjJ1.p.i;
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.f[2] = Jp1.Jpi1.Dsg.Rd.J1p3_1.f[1];
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.f[3] = Jp1.Jpi1.Dsg.Rd.J1p3_1.f[2];
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.e[1] + (Jp1.Jpi1.Dsg.Rd.J1p3_1.e[2] + Jp1.Jpi1.Dsg.Rd.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.e[1] = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.d * Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.f[1] = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.e[2] = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.d * Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.f[2] = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.e[3] = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.d * Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.Rd.J1p3_1.f[3] = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon2.e = Jp1.Jpi1.Dsg.Rd.B1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon2.f = Jp1.Jpi1.Dsg.Rd.B1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon2.e = Jp1.Jpi1.Dsg.Rd.B2.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon2.f = Jp1.Jpi1.Dsg.Rd.B2.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon2.e = Jp1.Jpi1.Dsg.Rd.B3.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon2.f = Jp1.Jpi1.Dsg.Rd.B3.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.e = Jp1.Jpi1.Dsg.Rd.El2BG1.p.v;
//   Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.f = Jp1.Jpi1.Dsg.Rd.El2BG1.p.i;
//   Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.e = Jp1.Jpi1.Dsg.Rd.BG2El1.n.v;
//   Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.f = -Jp1.Jpi1.Dsg.Rd.BG2El1.n.i;
//   Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.e = Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.f = Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.T_nom.e = Jp1.Jpi1.Dsg.Rd.T_nom.e0;
//   Jp1.Jpi1.Dsg.Rd.T_nom.e = Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.T_nom.f = (-Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.d) * Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.R1.Rval = (Jp1.Jpi1.Dsg.Rd.R1.R * (1.0 + (Jp1.Jpi1.Dsg.Rd.R1.TR1 * Jp1.Jpi1.Dsg.Rd.R1.DTemp + Jp1.Jpi1.Dsg.Rd.R1.TR2 * Jp1.Jpi1.Dsg.Rd.R1.DTempSq))) / Jp1.Jpi1.Dsg.Rd.R1.Area;
//   Jp1.Jpi1.Dsg.Rd.R1.e1 = Jp1.Jpi1.Dsg.Rd.R1.Rval * Jp1.Jpi1.Dsg.Rd.R1.f1;
//   Jp1.Jpi1.Dsg.Rd.R1.e1 * Jp1.Jpi1.Dsg.Rd.R1.f1 = Jp1.Jpi1.Dsg.Rd.R1.e2 * Jp1.Jpi1.Dsg.Rd.R1.f2;
//   Jp1.Jpi1.Dsg.Rd.R1.DTempSq = Jp1.Jpi1.Dsg.Rd.R1.DTemp ^ 2.0;
//   Jp1.Jpi1.Dsg.Rd.R1.DTemp = Jp1.Jpi1.Dsg.Rd.R1.e2 - Jp1.Jpi1.Dsg.Rd.R1.Tnom;
//   Jp1.Jpi1.Dsg.Rd.R1.e1 = Jp1.Jpi1.Dsg.Rd.R1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.R1.f1 = Jp1.Jpi1.Dsg.Rd.R1.BondCon1.d * Jp1.Jpi1.Dsg.Rd.R1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.R1.e2 = Jp1.Jpi1.Dsg.Rd.R1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.R1.f2 = (-Jp1.Jpi1.Dsg.Rd.R1.BondCon2.d) * Jp1.Jpi1.Dsg.Rd.R1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.e = Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.f = Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[1];
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[3] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2];
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[1] + (Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[2] + Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[1] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.d * Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[1] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[2] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.d * Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[3] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.d * Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[3] = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[1];
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[3] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2];
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[1] + (Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[2] + Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[1] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[1] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.d * Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[2] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.d * Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[3] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[3] = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.d * Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.e2 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.e1;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.f1 + Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.e1 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.f1 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.d * Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.e2 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.f2 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.d * Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.e2 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.e1;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.f1 + Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.e1 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.f1 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.d * Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.e2 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.f2 = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.d * Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.open = Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.open then Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.f else Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.e = Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.f = Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.d * Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.e = Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.f = Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.d = 1.0;
//   Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e = Jp1.Jpi1.Dsg.Rd.BG2Heat1.port_b.T;
//   Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e * Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.f = -Jp1.Jpi1.Dsg.Rd.BG2Heat1.port_b.Q_flow;
//   Jp1.Jpi1.Dsg.Rd.Sw1.control = true;
//   Jp1.Jpi1.Dsg.Rd.v = Jp1.Jpi1.Dsg.Rd.p.v - Jp1.Jpi1.Dsg.Rd.n.v;
//   Jp1.Jpi1.Dsg.Rd.i = Jp1.Jpi1.Dsg.Rd.p.i;
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[2] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[1];
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[3] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[2];
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[1] + (Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[2] + Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[1] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.d * Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[1] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[2] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.d * Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[2] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.e[3] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.d * Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.VarC1.J1p3_1.f[3] = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.e = Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.f = Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.e = Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.f = Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.e = Jp1.Jpi1.Dsg.VarC1.El2BG1.p.v;
//   Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.f = Jp1.Jpi1.Dsg.VarC1.El2BG1.p.i;
//   Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.e = Jp1.Jpi1.Dsg.VarC1.BG2El1.n.v;
//   Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.f = -Jp1.Jpi1.Dsg.VarC1.BG2El1.n.i;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.e = Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.f = Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Dsg.VarC1.mC1.C = Jp1.Jpi1.Dsg.VarC1.mC1.s;
//   Jp1.Jpi1.Dsg.VarC1.mC1.f = Jp1.Jpi1.Dsg.VarC1.mC1.C * der(Jp1.Jpi1.Dsg.VarC1.mC1.e);
//   Jp1.Jpi1.Dsg.VarC1.mC1.e = Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.mC1.f = Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.d * Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.v = Jp1.Jpi1.Dsg.VarC1.p.v - Jp1.Jpi1.Dsg.VarC1.n.v;
//   Jp1.Jpi1.Dsg.VarC1.i = Jp1.Jpi1.Dsg.VarC1.p.i;
//   Jp1.Jpi1.Dsg.nlCJ1.vgs = Jp1.Jpi1.Dsg.nlCJ1.u1;
//   Jp1.Jpi1.Dsg.nlCJ1.vgd = Jp1.Jpi1.Dsg.nlCJ1.u2;
//   Jp1.Jpi1.Dsg.nlCJ1.v = if Jp1.Jpi1.Dsg.nlCJ1.GS then Jp1.Jpi1.Dsg.nlCJ1.vgs else Jp1.Jpi1.Dsg.nlCJ1.vgd;
//   Jp1.Jpi1.Dsg.nlCJ1.Vt = 8.61727503842867e-05 * Jp1.Jpi1.Dsg.nlCJ1.Tdev;
//   Jp1.Jpi1.Dsg.nlCJ1.et = Jp1.Jpi1.Dsg.nlCJ1.v / (Jp1.Jpi1.Dsg.nlCJ1.Vt * Jp1.Jpi1.Dsg.nlCJ1.N);
//   Jp1.Jpi1.Dsg.nlCJ1.DTemp = Jp1.Jpi1.Dsg.nlCJ1.Tdev - Jp1.Jpi1.Dsg.nlCJ1.Tnom;
//   Jp1.Jpi1.Dsg.nlCJ1.RTemp = Jp1.Jpi1.Dsg.nlCJ1.Tdev / Jp1.Jpi1.Dsg.nlCJ1.Tnom;
//   Jp1.Jpi1.Dsg.nlCJ1.VT0val = Jp1.Jpi1.Dsg.nlCJ1.VT0 - Jp1.Jpi1.Dsg.nlCJ1.TCV * Jp1.Jpi1.Dsg.nlCJ1.DTemp;
//   Jp1.Jpi1.Dsg.nlCJ1.EGval = Jp1.Jpi1.Dsg.nlCJ1.EG + (-0.000702 * Jp1.Jpi1.Dsg.nlCJ1.Tdev ^ 2.0) / (1108.0 + Jp1.Jpi1.Dsg.nlCJ1.Tdev);
//   Jp1.Jpi1.Dsg.nlCJ1.EGnom = Jp1.Jpi1.Dsg.nlCJ1.EG + (-0.000702 * Jp1.Jpi1.Dsg.nlCJ1.Tnom ^ 2.0) / (1108.0 + Jp1.Jpi1.Dsg.nlCJ1.Tnom);
//   Jp1.Jpi1.Dsg.nlCJ1.PBval = Jp1.Jpi1.Dsg.nlCJ1.PB * Jp1.Jpi1.Dsg.nlCJ1.RTemp + (Jp1.Jpi1.Dsg.nlCJ1.EGval + (-3.0 * (Jp1.Jpi1.Dsg.nlCJ1.Vt * log(Jp1.Jpi1.Dsg.nlCJ1.RTemp)) - Jp1.Jpi1.Dsg.nlCJ1.EGnom * Jp1.Jpi1.Dsg.nlCJ1.RTemp));
//   Jp1.Jpi1.Dsg.nlCJ1.CGSval = Jp1.Jpi1.Dsg.nlCJ1.CGS * (1.0 + Jp1.Jpi1.Dsg.nlCJ1.M * (1.0 + ((-Jp1.Jpi1.Dsg.nlCJ1.PBval) / Jp1.Jpi1.Dsg.nlCJ1.PB + 0.0004 * Jp1.Jpi1.Dsg.nlCJ1.DTemp)));
//   Jp1.Jpi1.Dsg.nlCJ1.CGDval = Jp1.Jpi1.Dsg.nlCJ1.CGD * (1.0 + Jp1.Jpi1.Dsg.nlCJ1.M * (1.0 + ((-Jp1.Jpi1.Dsg.nlCJ1.PBval) / Jp1.Jpi1.Dsg.nlCJ1.PB + 0.0004 * Jp1.Jpi1.Dsg.nlCJ1.DTemp)));
//   Jp1.Jpi1.Dsg.nlCJ1.CJval = if Jp1.Jpi1.Dsg.nlCJ1.GS then Jp1.Jpi1.Dsg.nlCJ1.CGSval else Jp1.Jpi1.Dsg.nlCJ1.CGDval;
//   Jp1.Jpi1.Dsg.nlCJ1.ISval = Jp1.Jpi1.Dsg.nlCJ1.IS * exp(((-1.0 + Jp1.Jpi1.Dsg.nlCJ1.RTemp) * Jp1.Jpi1.Dsg.nlCJ1.EGval) / Jp1.Jpi1.Dsg.nlCJ1.Vt + Jp1.Jpi1.Dsg.nlCJ1.XTI * log(Jp1.Jpi1.Dsg.nlCJ1.RTemp));
//   Jp1.Jpi1.Dsg.nlCJ1.Cdiff = Jp1.Jpi1.Dsg.nlCJ1.Area * (Jp1.Jpi1.Dsg.nlCJ1.TT * (Jp1.Jpi1.Dsg.nlCJ1.GminDC + ((if Jp1.Jpi1.Dsg.nlCJ1.et < Jp1.Jpi1.Dsg.nlCJ1.EMin then Jp1.Jpi1.Dsg.nlCJ1.ExMin * (1.0 + (Jp1.Jpi1.Dsg.nlCJ1.et - Jp1.Jpi1.Dsg.nlCJ1.EMin)) else if Jp1.Jpi1.Dsg.nlCJ1.et > Jp1.Jpi1.Dsg.nlCJ1.EMax then Jp1.Jpi1.Dsg.nlCJ1.ExMax * (1.0 + (Jp1.Jpi1.Dsg.nlCJ1.et - Jp1.Jpi1.Dsg.nlCJ1.EMax)) else exp(Jp1.Jpi1.Dsg.nlCJ1.et)) * Jp1.Jpi1.Dsg.nlCJ1.ISval) / (Jp1.Jpi1.Dsg.nlCJ1.N * Jp1.Jpi1.Dsg.nlCJ1.Vt)));
//   Jp1.Jpi1.Dsg.nlCJ1.Vfac1 = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.Vfac2 = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.Ve = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.Vn = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.VNval = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.sig2 = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.Cfac1 = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.Cfac2 = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.Cfac3 = 0.0;
//   Jp1.Jpi1.Dsg.nlCJ1.Cdepl = Jp1.Jpi1.Dsg.nlCJ1.Area * (Jp1.Jpi1.Dsg.nlCJ1.CJval * (if Jp1.Jpi1.Dsg.nlCJ1.v > Jp1.Jpi1.Dsg.nlCJ1.FC * Jp1.Jpi1.Dsg.nlCJ1.PBval then (1.0 + ((Jp1.Jpi1.Dsg.nlCJ1.M * Jp1.Jpi1.Dsg.nlCJ1.v) / Jp1.Jpi1.Dsg.nlCJ1.PBval - Jp1.Jpi1.Dsg.nlCJ1.FC * (1.0 + Jp1.Jpi1.Dsg.nlCJ1.M))) * (1.0 - Jp1.Jpi1.Dsg.nlCJ1.FC) ^ (-1.0 - Jp1.Jpi1.Dsg.nlCJ1.M) else abs(1.0 + (-Jp1.Jpi1.Dsg.nlCJ1.v) / Jp1.Jpi1.Dsg.nlCJ1.PBval) ^ (-Jp1.Jpi1.Dsg.nlCJ1.M)));
//   Jp1.Jpi1.Dsg.nlCJ1.Cval = Jp1.Jpi1.Dsg.nlCJ1.Cdiff + Jp1.Jpi1.Dsg.nlCJ1.Cdepl;
//   Jp1.Jpi1.Dsg.nlCJ1.y = Jp1.Jpi1.Dsg.nlCJ1.Cval;
//   Jp1.Jpi1.Dsg.v = Jp1.Jpi1.Dsg.p.v - Jp1.Jpi1.Dsg.n.v;
//   Jp1.Jpi1.Dsg.i = Jp1.Jpi1.Dsg.p.i;
//   Jp1.Jpi1.Vsg.J1p3_1.f[2] = Jp1.Jpi1.Vsg.J1p3_1.f[1];
//   Jp1.Jpi1.Vsg.J1p3_1.f[3] = Jp1.Jpi1.Vsg.J1p3_1.f[2];
//   Jp1.Jpi1.Vsg.J1p3_1.e[1] + (Jp1.Jpi1.Vsg.J1p3_1.e[2] + Jp1.Jpi1.Vsg.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Vsg.J1p3_1.e[1] = Jp1.Jpi1.Vsg.J1p3_1.BondCon1.d * Jp1.Jpi1.Vsg.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Vsg.J1p3_1.f[1] = Jp1.Jpi1.Vsg.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Vsg.J1p3_1.e[2] = Jp1.Jpi1.Vsg.J1p3_1.BondCon2.d * Jp1.Jpi1.Vsg.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Vsg.J1p3_1.f[2] = Jp1.Jpi1.Vsg.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Vsg.J1p3_1.e[3] = Jp1.Jpi1.Vsg.J1p3_1.BondCon3.d * Jp1.Jpi1.Vsg.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Vsg.J1p3_1.f[3] = Jp1.Jpi1.Vsg.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Vsg.B1.BondCon2.e = Jp1.Jpi1.Vsg.B1.BondCon1.e;
//   Jp1.Jpi1.Vsg.B1.BondCon2.f = Jp1.Jpi1.Vsg.B1.BondCon1.f;
//   Jp1.Jpi1.Vsg.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Vsg.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Vsg.B2.BondCon2.e = Jp1.Jpi1.Vsg.B2.BondCon1.e;
//   Jp1.Jpi1.Vsg.B2.BondCon2.f = Jp1.Jpi1.Vsg.B2.BondCon1.f;
//   Jp1.Jpi1.Vsg.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Vsg.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Vsg.El2BG1.BondCon1.e = Jp1.Jpi1.Vsg.El2BG1.p.v;
//   Jp1.Jpi1.Vsg.El2BG1.BondCon1.f = Jp1.Jpi1.Vsg.El2BG1.p.i;
//   Jp1.Jpi1.Vsg.BG2El1.BondCon1.e = Jp1.Jpi1.Vsg.BG2El1.n.v;
//   Jp1.Jpi1.Vsg.BG2El1.BondCon1.f = -Jp1.Jpi1.Vsg.BG2El1.n.i;
//   Jp1.Jpi1.Vsg.De1.OutPort1 = Jp1.Jpi1.Vsg.De1.e;
//   Jp1.Jpi1.Vsg.De1.f = 0.0;
//   Jp1.Jpi1.Vsg.De1.e = Jp1.Jpi1.Vsg.De1.BondCon1.e;
//   Jp1.Jpi1.Vsg.De1.f = Jp1.Jpi1.Vsg.De1.BondCon1.d * Jp1.Jpi1.Vsg.De1.BondCon1.f;
//   Jp1.Jpi1.Vsg.B3.BondCon2.e = Jp1.Jpi1.Vsg.B3.BondCon1.e;
//   Jp1.Jpi1.Vsg.B3.BondCon2.f = Jp1.Jpi1.Vsg.B3.BondCon1.f;
//   Jp1.Jpi1.Vsg.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Vsg.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Vsg.v = Jp1.Jpi1.Vsg.p.v - Jp1.Jpi1.Vsg.n.v;
//   Jp1.Jpi1.Vsg.i = Jp1.Jpi1.Vsg.p.i;
//   Jp1.Jpi1.Vsd.J1p3_1.f[2] = Jp1.Jpi1.Vsd.J1p3_1.f[1];
//   Jp1.Jpi1.Vsd.J1p3_1.f[3] = Jp1.Jpi1.Vsd.J1p3_1.f[2];
//   Jp1.Jpi1.Vsd.J1p3_1.e[1] + (Jp1.Jpi1.Vsd.J1p3_1.e[2] + Jp1.Jpi1.Vsd.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Vsd.J1p3_1.e[1] = Jp1.Jpi1.Vsd.J1p3_1.BondCon1.d * Jp1.Jpi1.Vsd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Vsd.J1p3_1.f[1] = Jp1.Jpi1.Vsd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Vsd.J1p3_1.e[2] = Jp1.Jpi1.Vsd.J1p3_1.BondCon2.d * Jp1.Jpi1.Vsd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Vsd.J1p3_1.f[2] = Jp1.Jpi1.Vsd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Vsd.J1p3_1.e[3] = Jp1.Jpi1.Vsd.J1p3_1.BondCon3.d * Jp1.Jpi1.Vsd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Vsd.J1p3_1.f[3] = Jp1.Jpi1.Vsd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Vsd.B1.BondCon2.e = Jp1.Jpi1.Vsd.B1.BondCon1.e;
//   Jp1.Jpi1.Vsd.B1.BondCon2.f = Jp1.Jpi1.Vsd.B1.BondCon1.f;
//   Jp1.Jpi1.Vsd.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Vsd.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Vsd.B2.BondCon2.e = Jp1.Jpi1.Vsd.B2.BondCon1.e;
//   Jp1.Jpi1.Vsd.B2.BondCon2.f = Jp1.Jpi1.Vsd.B2.BondCon1.f;
//   Jp1.Jpi1.Vsd.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Vsd.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Vsd.El2BG1.BondCon1.e = Jp1.Jpi1.Vsd.El2BG1.p.v;
//   Jp1.Jpi1.Vsd.El2BG1.BondCon1.f = Jp1.Jpi1.Vsd.El2BG1.p.i;
//   Jp1.Jpi1.Vsd.BG2El1.BondCon1.e = Jp1.Jpi1.Vsd.BG2El1.n.v;
//   Jp1.Jpi1.Vsd.BG2El1.BondCon1.f = -Jp1.Jpi1.Vsd.BG2El1.n.i;
//   Jp1.Jpi1.Vsd.De1.OutPort1 = Jp1.Jpi1.Vsd.De1.e;
//   Jp1.Jpi1.Vsd.De1.f = 0.0;
//   Jp1.Jpi1.Vsd.De1.e = Jp1.Jpi1.Vsd.De1.BondCon1.e;
//   Jp1.Jpi1.Vsd.De1.f = Jp1.Jpi1.Vsd.De1.BondCon1.d * Jp1.Jpi1.Vsd.De1.BondCon1.f;
//   Jp1.Jpi1.Vsd.B3.BondCon2.e = Jp1.Jpi1.Vsd.B3.BondCon1.e;
//   Jp1.Jpi1.Vsd.B3.BondCon2.f = Jp1.Jpi1.Vsd.B3.BondCon1.f;
//   Jp1.Jpi1.Vsd.B3.BondCon1.d = -1.0;
//   Jp1.Jpi1.Vsd.B3.BondCon2.d = 1.0;
//   Jp1.Jpi1.Vsd.v = Jp1.Jpi1.Vsd.p.v - Jp1.Jpi1.Vsd.n.v;
//   Jp1.Jpi1.Vsd.i = Jp1.Jpi1.Vsd.p.i;
//   Jp1.Jpi1.Isd.El2BG1.BondCon1.e = Jp1.Jpi1.Isd.El2BG1.p.v;
//   Jp1.Jpi1.Isd.El2BG1.BondCon1.f = Jp1.Jpi1.Isd.El2BG1.p.i;
//   Jp1.Jpi1.Isd.BG2El1.BondCon1.e = Jp1.Jpi1.Isd.BG2El1.n.v;
//   Jp1.Jpi1.Isd.BG2El1.BondCon1.f = -Jp1.Jpi1.Isd.BG2El1.n.i;
//   Jp1.Jpi1.Isd.J1p3_1.f[2] = Jp1.Jpi1.Isd.J1p3_1.f[1];
//   Jp1.Jpi1.Isd.J1p3_1.f[3] = Jp1.Jpi1.Isd.J1p3_1.f[2];
//   Jp1.Jpi1.Isd.J1p3_1.e[1] + (Jp1.Jpi1.Isd.J1p3_1.e[2] + Jp1.Jpi1.Isd.J1p3_1.e[3]) = 0.0;
//   Jp1.Jpi1.Isd.J1p3_1.e[1] = Jp1.Jpi1.Isd.J1p3_1.BondCon1.d * Jp1.Jpi1.Isd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Isd.J1p3_1.f[1] = Jp1.Jpi1.Isd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Isd.J1p3_1.e[2] = Jp1.Jpi1.Isd.J1p3_1.BondCon2.d * Jp1.Jpi1.Isd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Isd.J1p3_1.f[2] = Jp1.Jpi1.Isd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Isd.J1p3_1.e[3] = Jp1.Jpi1.Isd.J1p3_1.BondCon3.d * Jp1.Jpi1.Isd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Isd.J1p3_1.f[3] = Jp1.Jpi1.Isd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Isd.B1.BondCon2.e = Jp1.Jpi1.Isd.B1.BondCon1.e;
//   Jp1.Jpi1.Isd.B1.BondCon2.f = Jp1.Jpi1.Isd.B1.BondCon1.f;
//   Jp1.Jpi1.Isd.B1.BondCon1.d = -1.0;
//   Jp1.Jpi1.Isd.B1.BondCon2.d = 1.0;
//   Jp1.Jpi1.Isd.B2.BondCon2.e = Jp1.Jpi1.Isd.B2.BondCon1.e;
//   Jp1.Jpi1.Isd.B2.BondCon2.f = Jp1.Jpi1.Isd.B2.BondCon1.f;
//   Jp1.Jpi1.Isd.B2.BondCon1.d = -1.0;
//   Jp1.Jpi1.Isd.B2.BondCon2.d = 1.0;
//   Jp1.Jpi1.Isd.BG2Heat1.BondCon1.e = Jp1.Jpi1.Isd.BG2Heat1.port_b.T;
//   Jp1.Jpi1.Isd.BG2Heat1.BondCon1.e * Jp1.Jpi1.Isd.BG2Heat1.BondCon1.f = -Jp1.Jpi1.Isd.BG2Heat1.port_b.Q_flow;
//   Jp1.Jpi1.Isd.B4.fBondCon1.e = Jp1.Jpi1.Isd.B4.eBondCon1.e;
//   Jp1.Jpi1.Isd.B4.eBondCon1.f = Jp1.Jpi1.Isd.B4.fBondCon1.f;
//   Jp1.Jpi1.Isd.B4.eBondCon1.d = -1.0;
//   Jp1.Jpi1.Isd.B4.fBondCon1.d = 1.0;
//   Jp1.Jpi1.Isd.B3.fBondCon1.e = Jp1.Jpi1.Isd.B3.eBondCon1.e;
//   Jp1.Jpi1.Isd.B3.eBondCon1.f = Jp1.Jpi1.Isd.B3.fBondCon1.f;
//   Jp1.Jpi1.Isd.B3.fBondCon1.d = -1.0;
//   Jp1.Jpi1.Isd.B3.eBondCon1.d = 1.0;
//   Jp1.Jpi1.Isd.I1.f0 = Jp1.Jpi1.Isd.I1.s;
//   Jp1.Jpi1.Isd.I1.f2 = Jp1.Jpi1.Isd.I1.f0;
//   Jp1.Jpi1.Isd.I1.e1 * Jp1.Jpi1.Isd.I1.f1 = Jp1.Jpi1.Isd.I1.e2 * Jp1.Jpi1.Isd.I1.f2;
//   Jp1.Jpi1.Isd.I1.e1 = Jp1.Jpi1.Isd.I1.BondCon1.e;
//   Jp1.Jpi1.Isd.I1.f1 = Jp1.Jpi1.Isd.I1.BondCon1.d * Jp1.Jpi1.Isd.I1.BondCon1.f;
//   Jp1.Jpi1.Isd.I1.e2 = Jp1.Jpi1.Isd.I1.BondCon2.e;
//   Jp1.Jpi1.Isd.I1.f2 = (-Jp1.Jpi1.Isd.I1.BondCon2.d) * Jp1.Jpi1.Isd.I1.BondCon2.f;
//   Jp1.Jpi1.Isd.v = Jp1.Jpi1.Isd.p.v - Jp1.Jpi1.Isd.n.v;
//   Jp1.Jpi1.Isd.i = Jp1.Jpi1.Isd.p.i;
//   Jp1.T_nom.BG2Heat1.BondCon1.e = Jp1.T_nom.BG2Heat1.port_b.T;
//   Jp1.T_nom.BG2Heat1.BondCon1.e * Jp1.T_nom.BG2Heat1.BondCon1.f = -Jp1.T_nom.BG2Heat1.port_b.Q_flow;
//   Jp1.T_nom.Tabs.e0 = Jp1.T_nom.Tabs.s;
//   Jp1.T_nom.Tabs.e = Jp1.T_nom.Tabs.e0;
//   Jp1.T_nom.Tabs.e = Jp1.T_nom.Tabs.BondCon1.e;
//   Jp1.T_nom.Tabs.f = (-Jp1.T_nom.Tabs.BondCon1.d) * Jp1.T_nom.Tabs.BondCon1.f;
//   Jp1.T_nom.B1.fBondCon1.e = Jp1.T_nom.B1.eBondCon1.e;
//   Jp1.T_nom.B1.eBondCon1.f = Jp1.T_nom.B1.fBondCon1.f;
//   Jp1.T_nom.B1.eBondCon1.d = -1.0;
//   Jp1.T_nom.B1.fBondCon1.d = 1.0;
//   Jp1.T_nom.Tabs.s = Jp1.T_nom.T;
//   Jp1.Sw1.B1.BondCon2.e = Jp1.Sw1.B1.BondCon1.e;
//   Jp1.Sw1.B1.BondCon2.f = Jp1.Sw1.B1.BondCon1.f;
//   Jp1.Sw1.B1.BondCon1.d = -1.0;
//   Jp1.Sw1.B1.BondCon2.d = 1.0;
//   Jp1.Sw1.B2.BondCon2.e = Jp1.Sw1.B2.BondCon1.e;
//   Jp1.Sw1.B2.BondCon2.f = Jp1.Sw1.B2.BondCon1.f;
//   Jp1.Sw1.B2.BondCon1.d = -1.0;
//   Jp1.Sw1.B2.BondCon2.d = 1.0;
//   Jp1.Sw1.B3.BondCon2.e = Jp1.Sw1.B3.BondCon1.e;
//   Jp1.Sw1.B3.BondCon2.f = Jp1.Sw1.B3.BondCon1.f;
//   Jp1.Sw1.B3.BondCon1.d = -1.0;
//   Jp1.Sw1.B3.BondCon2.d = 1.0;
//   Jp1.Sw1.Heat2BG1.BondCon1.e = Jp1.Sw1.Heat2BG1.port_a.T;
//   Jp1.Sw1.Heat2BG1.BondCon1.e * Jp1.Sw1.Heat2BG1.BondCon1.f = Jp1.Sw1.Heat2BG1.port_a.Q_flow;
//   Jp1.Sw1.BG2Heat1.BondCon1.e = Jp1.Sw1.BG2Heat1.port_b.T;
//   Jp1.Sw1.BG2Heat1.BondCon1.e * Jp1.Sw1.BG2Heat1.BondCon1.f = -Jp1.Sw1.BG2Heat1.port_b.Q_flow;
//   Jp1.Sw1.BG2Heat2.BondCon1.e = Jp1.Sw1.BG2Heat2.port_b.T;
//   Jp1.Sw1.BG2Heat2.BondCon1.e * Jp1.Sw1.BG2Heat2.BondCon1.f = -Jp1.Sw1.BG2Heat2.port_b.Q_flow;
//   Jp1.Sw1.Sw1.J1p3_1.f[2] = Jp1.Sw1.Sw1.J1p3_1.f[1];
//   Jp1.Sw1.Sw1.J1p3_1.f[3] = Jp1.Sw1.Sw1.J1p3_1.f[2];
//   Jp1.Sw1.Sw1.J1p3_1.e[1] + (Jp1.Sw1.Sw1.J1p3_1.e[2] + Jp1.Sw1.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp1.Sw1.Sw1.J1p3_1.e[1] = Jp1.Sw1.Sw1.J1p3_1.BondCon1.d * Jp1.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Sw1.Sw1.J1p3_1.f[1] = Jp1.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Sw1.Sw1.J1p3_1.e[2] = Jp1.Sw1.Sw1.J1p3_1.BondCon2.d * Jp1.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Sw1.Sw1.J1p3_1.f[2] = Jp1.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Sw1.Sw1.J1p3_1.e[3] = Jp1.Sw1.Sw1.J1p3_1.BondCon3.d * Jp1.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Sw1.Sw1.J1p3_1.f[3] = Jp1.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Sw1.Sw1.B1.BondCon2.e = Jp1.Sw1.Sw1.B1.BondCon1.e;
//   Jp1.Sw1.Sw1.B1.BondCon2.f = Jp1.Sw1.Sw1.B1.BondCon1.f;
//   Jp1.Sw1.Sw1.B1.BondCon1.d = -1.0;
//   Jp1.Sw1.Sw1.B1.BondCon2.d = 1.0;
//   Jp1.Sw1.Sw1.B2.BondCon2.e = Jp1.Sw1.Sw1.B2.BondCon1.e;
//   Jp1.Sw1.Sw1.B2.BondCon2.f = Jp1.Sw1.Sw1.B2.BondCon1.f;
//   Jp1.Sw1.Sw1.B2.BondCon1.d = -1.0;
//   Jp1.Sw1.Sw1.B2.BondCon2.d = 1.0;
//   Jp1.Sw1.Sw1.J0p3_1.e[2] = Jp1.Sw1.Sw1.J0p3_1.e[1];
//   Jp1.Sw1.Sw1.J0p3_1.e[3] = Jp1.Sw1.Sw1.J0p3_1.e[2];
//   Jp1.Sw1.Sw1.J0p3_1.f[1] + (Jp1.Sw1.Sw1.J0p3_1.f[2] + Jp1.Sw1.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp1.Sw1.Sw1.J0p3_1.e[1] = Jp1.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Sw1.Sw1.J0p3_1.f[1] = Jp1.Sw1.Sw1.J0p3_1.BondCon1.d * Jp1.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Sw1.Sw1.J0p3_1.e[2] = Jp1.Sw1.Sw1.J0p3_1.BondCon2.e;
//   Jp1.Sw1.Sw1.J0p3_1.f[2] = Jp1.Sw1.Sw1.J0p3_1.BondCon2.d * Jp1.Sw1.Sw1.J0p3_1.BondCon2.f;
//   Jp1.Sw1.Sw1.J0p3_1.e[3] = Jp1.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Sw1.Sw1.J0p3_1.f[3] = Jp1.Sw1.Sw1.J0p3_1.BondCon3.d * Jp1.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Sw1.Sw1.B4.BondCon2.e = Jp1.Sw1.Sw1.B4.BondCon1.e;
//   Jp1.Sw1.Sw1.B4.BondCon2.f = Jp1.Sw1.Sw1.B4.BondCon1.f;
//   Jp1.Sw1.Sw1.B4.BondCon1.d = -1.0;
//   Jp1.Sw1.Sw1.B4.BondCon2.d = 1.0;
//   Jp1.Sw1.Sw1.j0p2_1.e2 = Jp1.Sw1.Sw1.j0p2_1.e1;
//   Jp1.Sw1.Sw1.j0p2_1.f1 + Jp1.Sw1.Sw1.j0p2_1.f2 = 0.0;
//   Jp1.Sw1.Sw1.j0p2_1.e1 = Jp1.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Sw1.Sw1.j0p2_1.f1 = Jp1.Sw1.Sw1.j0p2_1.BondCon1.d * Jp1.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Sw1.Sw1.j0p2_1.e2 = Jp1.Sw1.Sw1.j0p2_1.BondCon2.e;
//   Jp1.Sw1.Sw1.j0p2_1.f2 = Jp1.Sw1.Sw1.j0p2_1.BondCon2.d * Jp1.Sw1.Sw1.j0p2_1.BondCon2.f;
//   Jp1.Sw1.Sw1.j0p2_2.e2 = Jp1.Sw1.Sw1.j0p2_2.e1;
//   Jp1.Sw1.Sw1.j0p2_2.f1 + Jp1.Sw1.Sw1.j0p2_2.f2 = 0.0;
//   Jp1.Sw1.Sw1.j0p2_2.e1 = Jp1.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Sw1.Sw1.j0p2_2.f1 = Jp1.Sw1.Sw1.j0p2_2.BondCon1.d * Jp1.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Sw1.Sw1.j0p2_2.e2 = Jp1.Sw1.Sw1.j0p2_2.BondCon2.e;
//   Jp1.Sw1.Sw1.j0p2_2.f2 = Jp1.Sw1.Sw1.j0p2_2.BondCon2.d * Jp1.Sw1.Sw1.j0p2_2.BondCon2.f;
//   Jp1.Sw1.Sw1.Sw1.open = Jp1.Sw1.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp1.Sw1.Sw1.Sw1.open then Jp1.Sw1.Sw1.Sw1.f else Jp1.Sw1.Sw1.Sw1.e;
//   Jp1.Sw1.Sw1.Sw1.e = Jp1.Sw1.Sw1.Sw1.BondCon1.e;
//   Jp1.Sw1.Sw1.Sw1.f = Jp1.Sw1.Sw1.Sw1.BondCon1.d * Jp1.Sw1.Sw1.Sw1.BondCon1.f;
//   Jp1.Sw1.Sw1.B3.BondCon2.e = Jp1.Sw1.Sw1.B3.BondCon1.e;
//   Jp1.Sw1.Sw1.B3.BondCon2.f = Jp1.Sw1.Sw1.B3.BondCon1.f;
//   Jp1.Sw1.Sw1.B3.BondCon1.d = -1.0;
//   Jp1.Sw1.Sw1.B3.BondCon2.d = 1.0;
//   Jp1.Sw1.control = true;
//   Jp2.Rg.J1p3_1.f[2] = Jp2.Rg.J1p3_1.f[1];
//   Jp2.Rg.J1p3_1.f[3] = Jp2.Rg.J1p3_1.f[2];
//   Jp2.Rg.J1p3_1.e[1] + (Jp2.Rg.J1p3_1.e[2] + Jp2.Rg.J1p3_1.e[3]) = 0.0;
//   Jp2.Rg.J1p3_1.e[1] = Jp2.Rg.J1p3_1.BondCon1.d * Jp2.Rg.J1p3_1.BondCon1.e;
//   Jp2.Rg.J1p3_1.f[1] = Jp2.Rg.J1p3_1.BondCon1.f;
//   Jp2.Rg.J1p3_1.e[2] = Jp2.Rg.J1p3_1.BondCon2.d * Jp2.Rg.J1p3_1.BondCon2.e;
//   Jp2.Rg.J1p3_1.f[2] = Jp2.Rg.J1p3_1.BondCon2.f;
//   Jp2.Rg.J1p3_1.e[3] = Jp2.Rg.J1p3_1.BondCon3.d * Jp2.Rg.J1p3_1.BondCon3.e;
//   Jp2.Rg.J1p3_1.f[3] = Jp2.Rg.J1p3_1.BondCon3.f;
//   Jp2.Rg.B1.BondCon2.e = Jp2.Rg.B1.BondCon1.e;
//   Jp2.Rg.B1.BondCon2.f = Jp2.Rg.B1.BondCon1.f;
//   Jp2.Rg.B1.BondCon1.d = -1.0;
//   Jp2.Rg.B1.BondCon2.d = 1.0;
//   Jp2.Rg.B2.BondCon2.e = Jp2.Rg.B2.BondCon1.e;
//   Jp2.Rg.B2.BondCon2.f = Jp2.Rg.B2.BondCon1.f;
//   Jp2.Rg.B2.BondCon1.d = -1.0;
//   Jp2.Rg.B2.BondCon2.d = 1.0;
//   Jp2.Rg.B3.BondCon2.e = Jp2.Rg.B3.BondCon1.e;
//   Jp2.Rg.B3.BondCon2.f = Jp2.Rg.B3.BondCon1.f;
//   Jp2.Rg.B3.BondCon1.d = -1.0;
//   Jp2.Rg.B3.BondCon2.d = 1.0;
//   Jp2.Rg.El2BG1.BondCon1.e = Jp2.Rg.El2BG1.p.v;
//   Jp2.Rg.El2BG1.BondCon1.f = Jp2.Rg.El2BG1.p.i;
//   Jp2.Rg.BG2El1.BondCon1.e = Jp2.Rg.BG2El1.n.v;
//   Jp2.Rg.BG2El1.BondCon1.f = -Jp2.Rg.BG2El1.n.i;
//   Jp2.Rg.B6.fBondCon1.e = Jp2.Rg.B6.eBondCon1.e;
//   Jp2.Rg.B6.eBondCon1.f = Jp2.Rg.B6.fBondCon1.f;
//   Jp2.Rg.B6.eBondCon1.d = -1.0;
//   Jp2.Rg.B6.fBondCon1.d = 1.0;
//   Jp2.Rg.T_nom.e = Jp2.Rg.T_nom.e0;
//   Jp2.Rg.T_nom.e = Jp2.Rg.T_nom.BondCon1.e;
//   Jp2.Rg.T_nom.f = (-Jp2.Rg.T_nom.BondCon1.d) * Jp2.Rg.T_nom.BondCon1.f;
//   Jp2.Rg.R1.Rval = 0.0;
//   Jp2.Rg.R1.e1 = Jp2.Rg.R1.Rval * Jp2.Rg.R1.f1;
//   Jp2.Rg.R1.e1 * Jp2.Rg.R1.f1 = Jp2.Rg.R1.e2 * Jp2.Rg.R1.f2;
//   Jp2.Rg.R1.DTempSq = Jp2.Rg.R1.DTemp ^ 2.0;
//   Jp2.Rg.R1.DTemp = Jp2.Rg.R1.e2 - Jp2.Rg.R1.Tnom;
//   Jp2.Rg.R1.e1 = Jp2.Rg.R1.BondCon1.e;
//   Jp2.Rg.R1.f1 = Jp2.Rg.R1.BondCon1.d * Jp2.Rg.R1.BondCon1.f;
//   Jp2.Rg.R1.e2 = Jp2.Rg.R1.BondCon2.e;
//   Jp2.Rg.R1.f2 = (-Jp2.Rg.R1.BondCon2.d) * Jp2.Rg.R1.BondCon2.f;
//   Jp2.Rg.B4.fBondCon1.e = Jp2.Rg.B4.eBondCon1.e;
//   Jp2.Rg.B4.eBondCon1.f = Jp2.Rg.B4.fBondCon1.f;
//   Jp2.Rg.B4.fBondCon1.d = -1.0;
//   Jp2.Rg.B4.eBondCon1.d = 1.0;
//   Jp2.Rg.Sw1.J1p3_1.f[2] = Jp2.Rg.Sw1.J1p3_1.f[1];
//   Jp2.Rg.Sw1.J1p3_1.f[3] = Jp2.Rg.Sw1.J1p3_1.f[2];
//   Jp2.Rg.Sw1.J1p3_1.e[1] + (Jp2.Rg.Sw1.J1p3_1.e[2] + Jp2.Rg.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp2.Rg.Sw1.J1p3_1.e[1] = Jp2.Rg.Sw1.J1p3_1.BondCon1.d * Jp2.Rg.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Rg.Sw1.J1p3_1.f[1] = Jp2.Rg.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Rg.Sw1.J1p3_1.e[2] = Jp2.Rg.Sw1.J1p3_1.BondCon2.d * Jp2.Rg.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Rg.Sw1.J1p3_1.f[2] = Jp2.Rg.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Rg.Sw1.J1p3_1.e[3] = Jp2.Rg.Sw1.J1p3_1.BondCon3.d * Jp2.Rg.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Rg.Sw1.J1p3_1.f[3] = Jp2.Rg.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Rg.Sw1.B1.BondCon2.e = Jp2.Rg.Sw1.B1.BondCon1.e;
//   Jp2.Rg.Sw1.B1.BondCon2.f = Jp2.Rg.Sw1.B1.BondCon1.f;
//   Jp2.Rg.Sw1.B1.BondCon1.d = -1.0;
//   Jp2.Rg.Sw1.B1.BondCon2.d = 1.0;
//   Jp2.Rg.Sw1.B2.BondCon2.e = Jp2.Rg.Sw1.B2.BondCon1.e;
//   Jp2.Rg.Sw1.B2.BondCon2.f = Jp2.Rg.Sw1.B2.BondCon1.f;
//   Jp2.Rg.Sw1.B2.BondCon1.d = -1.0;
//   Jp2.Rg.Sw1.B2.BondCon2.d = 1.0;
//   Jp2.Rg.Sw1.J0p3_1.e[2] = Jp2.Rg.Sw1.J0p3_1.e[1];
//   Jp2.Rg.Sw1.J0p3_1.e[3] = Jp2.Rg.Sw1.J0p3_1.e[2];
//   Jp2.Rg.Sw1.J0p3_1.f[1] + (Jp2.Rg.Sw1.J0p3_1.f[2] + Jp2.Rg.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp2.Rg.Sw1.J0p3_1.e[1] = Jp2.Rg.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Rg.Sw1.J0p3_1.f[1] = Jp2.Rg.Sw1.J0p3_1.BondCon1.d * Jp2.Rg.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Rg.Sw1.J0p3_1.e[2] = Jp2.Rg.Sw1.J0p3_1.BondCon2.e;
//   Jp2.Rg.Sw1.J0p3_1.f[2] = Jp2.Rg.Sw1.J0p3_1.BondCon2.d * Jp2.Rg.Sw1.J0p3_1.BondCon2.f;
//   Jp2.Rg.Sw1.J0p3_1.e[3] = Jp2.Rg.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Rg.Sw1.J0p3_1.f[3] = Jp2.Rg.Sw1.J0p3_1.BondCon3.d * Jp2.Rg.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Rg.Sw1.B4.BondCon2.e = Jp2.Rg.Sw1.B4.BondCon1.e;
//   Jp2.Rg.Sw1.B4.BondCon2.f = Jp2.Rg.Sw1.B4.BondCon1.f;
//   Jp2.Rg.Sw1.B4.BondCon1.d = -1.0;
//   Jp2.Rg.Sw1.B4.BondCon2.d = 1.0;
//   Jp2.Rg.Sw1.j0p2_1.e2 = Jp2.Rg.Sw1.j0p2_1.e1;
//   Jp2.Rg.Sw1.j0p2_1.f1 + Jp2.Rg.Sw1.j0p2_1.f2 = 0.0;
//   Jp2.Rg.Sw1.j0p2_1.e1 = Jp2.Rg.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Rg.Sw1.j0p2_1.f1 = Jp2.Rg.Sw1.j0p2_1.BondCon1.d * Jp2.Rg.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Rg.Sw1.j0p2_1.e2 = Jp2.Rg.Sw1.j0p2_1.BondCon2.e;
//   Jp2.Rg.Sw1.j0p2_1.f2 = Jp2.Rg.Sw1.j0p2_1.BondCon2.d * Jp2.Rg.Sw1.j0p2_1.BondCon2.f;
//   Jp2.Rg.Sw1.j0p2_2.e2 = Jp2.Rg.Sw1.j0p2_2.e1;
//   Jp2.Rg.Sw1.j0p2_2.f1 + Jp2.Rg.Sw1.j0p2_2.f2 = 0.0;
//   Jp2.Rg.Sw1.j0p2_2.e1 = Jp2.Rg.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Rg.Sw1.j0p2_2.f1 = Jp2.Rg.Sw1.j0p2_2.BondCon1.d * Jp2.Rg.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Rg.Sw1.j0p2_2.e2 = Jp2.Rg.Sw1.j0p2_2.BondCon2.e;
//   Jp2.Rg.Sw1.j0p2_2.f2 = Jp2.Rg.Sw1.j0p2_2.BondCon2.d * Jp2.Rg.Sw1.j0p2_2.BondCon2.f;
//   Jp2.Rg.Sw1.Sw1.open = Jp2.Rg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp2.Rg.Sw1.Sw1.open then Jp2.Rg.Sw1.Sw1.f else Jp2.Rg.Sw1.Sw1.e;
//   Jp2.Rg.Sw1.Sw1.e = Jp2.Rg.Sw1.Sw1.BondCon1.e;
//   Jp2.Rg.Sw1.Sw1.f = Jp2.Rg.Sw1.Sw1.BondCon1.d * Jp2.Rg.Sw1.Sw1.BondCon1.f;
//   Jp2.Rg.Sw1.B3.BondCon2.e = Jp2.Rg.Sw1.B3.BondCon1.e;
//   Jp2.Rg.Sw1.B3.BondCon2.f = Jp2.Rg.Sw1.B3.BondCon1.f;
//   Jp2.Rg.Sw1.B3.BondCon1.d = -1.0;
//   Jp2.Rg.Sw1.B3.BondCon2.d = 1.0;
//   Jp2.Rg.B5.fBondCon1.e = Jp2.Rg.B5.eBondCon1.e;
//   Jp2.Rg.B5.eBondCon1.f = Jp2.Rg.B5.fBondCon1.f;
//   Jp2.Rg.B5.fBondCon1.d = -1.0;
//   Jp2.Rg.B5.eBondCon1.d = 1.0;
//   Jp2.Rg.BG2Heat1.BondCon1.e = Jp2.Rg.BG2Heat1.port_b.T;
//   Jp2.Rg.BG2Heat1.BondCon1.e * Jp2.Rg.BG2Heat1.BondCon1.f = -Jp2.Rg.BG2Heat1.port_b.Q_flow;
//   Jp2.Rg.Sw1.control = true;
//   Jp2.Rg.v = Jp2.Rg.p.v - Jp2.Rg.n.v;
//   Jp2.Rg.i = Jp2.Rg.p.i;
//   Jp2.Rd.J1p3_1.f[2] = Jp2.Rd.J1p3_1.f[1];
//   Jp2.Rd.J1p3_1.f[3] = Jp2.Rd.J1p3_1.f[2];
//   Jp2.Rd.J1p3_1.e[1] + (Jp2.Rd.J1p3_1.e[2] + Jp2.Rd.J1p3_1.e[3]) = 0.0;
//   Jp2.Rd.J1p3_1.e[1] = Jp2.Rd.J1p3_1.BondCon1.d * Jp2.Rd.J1p3_1.BondCon1.e;
//   Jp2.Rd.J1p3_1.f[1] = Jp2.Rd.J1p3_1.BondCon1.f;
//   Jp2.Rd.J1p3_1.e[2] = Jp2.Rd.J1p3_1.BondCon2.d * Jp2.Rd.J1p3_1.BondCon2.e;
//   Jp2.Rd.J1p3_1.f[2] = Jp2.Rd.J1p3_1.BondCon2.f;
//   Jp2.Rd.J1p3_1.e[3] = Jp2.Rd.J1p3_1.BondCon3.d * Jp2.Rd.J1p3_1.BondCon3.e;
//   Jp2.Rd.J1p3_1.f[3] = Jp2.Rd.J1p3_1.BondCon3.f;
//   Jp2.Rd.B1.BondCon2.e = Jp2.Rd.B1.BondCon1.e;
//   Jp2.Rd.B1.BondCon2.f = Jp2.Rd.B1.BondCon1.f;
//   Jp2.Rd.B1.BondCon1.d = -1.0;
//   Jp2.Rd.B1.BondCon2.d = 1.0;
//   Jp2.Rd.B2.BondCon2.e = Jp2.Rd.B2.BondCon1.e;
//   Jp2.Rd.B2.BondCon2.f = Jp2.Rd.B2.BondCon1.f;
//   Jp2.Rd.B2.BondCon1.d = -1.0;
//   Jp2.Rd.B2.BondCon2.d = 1.0;
//   Jp2.Rd.B3.BondCon2.e = Jp2.Rd.B3.BondCon1.e;
//   Jp2.Rd.B3.BondCon2.f = Jp2.Rd.B3.BondCon1.f;
//   Jp2.Rd.B3.BondCon1.d = -1.0;
//   Jp2.Rd.B3.BondCon2.d = 1.0;
//   Jp2.Rd.El2BG1.BondCon1.e = Jp2.Rd.El2BG1.p.v;
//   Jp2.Rd.El2BG1.BondCon1.f = Jp2.Rd.El2BG1.p.i;
//   Jp2.Rd.BG2El1.BondCon1.e = Jp2.Rd.BG2El1.n.v;
//   Jp2.Rd.BG2El1.BondCon1.f = -Jp2.Rd.BG2El1.n.i;
//   Jp2.Rd.B6.fBondCon1.e = Jp2.Rd.B6.eBondCon1.e;
//   Jp2.Rd.B6.eBondCon1.f = Jp2.Rd.B6.fBondCon1.f;
//   Jp2.Rd.B6.eBondCon1.d = -1.0;
//   Jp2.Rd.B6.fBondCon1.d = 1.0;
//   Jp2.Rd.T_nom.e = Jp2.Rd.T_nom.e0;
//   Jp2.Rd.T_nom.e = Jp2.Rd.T_nom.BondCon1.e;
//   Jp2.Rd.T_nom.f = (-Jp2.Rd.T_nom.BondCon1.d) * Jp2.Rd.T_nom.BondCon1.f;
//   Jp2.Rd.R1.Rval = (Jp2.Rd.R1.R * (1.0 + (Jp2.Rd.R1.TR1 * Jp2.Rd.R1.DTemp + Jp2.Rd.R1.TR2 * Jp2.Rd.R1.DTempSq))) / Jp2.Rd.R1.Area;
//   Jp2.Rd.R1.e1 = Jp2.Rd.R1.Rval * Jp2.Rd.R1.f1;
//   Jp2.Rd.R1.e1 * Jp2.Rd.R1.f1 = Jp2.Rd.R1.e2 * Jp2.Rd.R1.f2;
//   Jp2.Rd.R1.DTempSq = Jp2.Rd.R1.DTemp ^ 2.0;
//   Jp2.Rd.R1.DTemp = Jp2.Rd.R1.e2 - Jp2.Rd.R1.Tnom;
//   Jp2.Rd.R1.e1 = Jp2.Rd.R1.BondCon1.e;
//   Jp2.Rd.R1.f1 = Jp2.Rd.R1.BondCon1.d * Jp2.Rd.R1.BondCon1.f;
//   Jp2.Rd.R1.e2 = Jp2.Rd.R1.BondCon2.e;
//   Jp2.Rd.R1.f2 = (-Jp2.Rd.R1.BondCon2.d) * Jp2.Rd.R1.BondCon2.f;
//   Jp2.Rd.B4.fBondCon1.e = Jp2.Rd.B4.eBondCon1.e;
//   Jp2.Rd.B4.eBondCon1.f = Jp2.Rd.B4.fBondCon1.f;
//   Jp2.Rd.B4.fBondCon1.d = -1.0;
//   Jp2.Rd.B4.eBondCon1.d = 1.0;
//   Jp2.Rd.Sw1.J1p3_1.f[2] = Jp2.Rd.Sw1.J1p3_1.f[1];
//   Jp2.Rd.Sw1.J1p3_1.f[3] = Jp2.Rd.Sw1.J1p3_1.f[2];
//   Jp2.Rd.Sw1.J1p3_1.e[1] + (Jp2.Rd.Sw1.J1p3_1.e[2] + Jp2.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp2.Rd.Sw1.J1p3_1.e[1] = Jp2.Rd.Sw1.J1p3_1.BondCon1.d * Jp2.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Rd.Sw1.J1p3_1.f[1] = Jp2.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Rd.Sw1.J1p3_1.e[2] = Jp2.Rd.Sw1.J1p3_1.BondCon2.d * Jp2.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Rd.Sw1.J1p3_1.f[2] = Jp2.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Rd.Sw1.J1p3_1.e[3] = Jp2.Rd.Sw1.J1p3_1.BondCon3.d * Jp2.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Rd.Sw1.J1p3_1.f[3] = Jp2.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Rd.Sw1.B1.BondCon2.e = Jp2.Rd.Sw1.B1.BondCon1.e;
//   Jp2.Rd.Sw1.B1.BondCon2.f = Jp2.Rd.Sw1.B1.BondCon1.f;
//   Jp2.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Jp2.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Jp2.Rd.Sw1.B2.BondCon2.e = Jp2.Rd.Sw1.B2.BondCon1.e;
//   Jp2.Rd.Sw1.B2.BondCon2.f = Jp2.Rd.Sw1.B2.BondCon1.f;
//   Jp2.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Jp2.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Jp2.Rd.Sw1.J0p3_1.e[2] = Jp2.Rd.Sw1.J0p3_1.e[1];
//   Jp2.Rd.Sw1.J0p3_1.e[3] = Jp2.Rd.Sw1.J0p3_1.e[2];
//   Jp2.Rd.Sw1.J0p3_1.f[1] + (Jp2.Rd.Sw1.J0p3_1.f[2] + Jp2.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp2.Rd.Sw1.J0p3_1.e[1] = Jp2.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Rd.Sw1.J0p3_1.f[1] = Jp2.Rd.Sw1.J0p3_1.BondCon1.d * Jp2.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Rd.Sw1.J0p3_1.e[2] = Jp2.Rd.Sw1.J0p3_1.BondCon2.e;
//   Jp2.Rd.Sw1.J0p3_1.f[2] = Jp2.Rd.Sw1.J0p3_1.BondCon2.d * Jp2.Rd.Sw1.J0p3_1.BondCon2.f;
//   Jp2.Rd.Sw1.J0p3_1.e[3] = Jp2.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Rd.Sw1.J0p3_1.f[3] = Jp2.Rd.Sw1.J0p3_1.BondCon3.d * Jp2.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Rd.Sw1.B4.BondCon2.e = Jp2.Rd.Sw1.B4.BondCon1.e;
//   Jp2.Rd.Sw1.B4.BondCon2.f = Jp2.Rd.Sw1.B4.BondCon1.f;
//   Jp2.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Jp2.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Jp2.Rd.Sw1.j0p2_1.e2 = Jp2.Rd.Sw1.j0p2_1.e1;
//   Jp2.Rd.Sw1.j0p2_1.f1 + Jp2.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Jp2.Rd.Sw1.j0p2_1.e1 = Jp2.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Rd.Sw1.j0p2_1.f1 = Jp2.Rd.Sw1.j0p2_1.BondCon1.d * Jp2.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Rd.Sw1.j0p2_1.e2 = Jp2.Rd.Sw1.j0p2_1.BondCon2.e;
//   Jp2.Rd.Sw1.j0p2_1.f2 = Jp2.Rd.Sw1.j0p2_1.BondCon2.d * Jp2.Rd.Sw1.j0p2_1.BondCon2.f;
//   Jp2.Rd.Sw1.j0p2_2.e2 = Jp2.Rd.Sw1.j0p2_2.e1;
//   Jp2.Rd.Sw1.j0p2_2.f1 + Jp2.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Jp2.Rd.Sw1.j0p2_2.e1 = Jp2.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Rd.Sw1.j0p2_2.f1 = Jp2.Rd.Sw1.j0p2_2.BondCon1.d * Jp2.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Rd.Sw1.j0p2_2.e2 = Jp2.Rd.Sw1.j0p2_2.BondCon2.e;
//   Jp2.Rd.Sw1.j0p2_2.f2 = Jp2.Rd.Sw1.j0p2_2.BondCon2.d * Jp2.Rd.Sw1.j0p2_2.BondCon2.f;
//   Jp2.Rd.Sw1.Sw1.open = Jp2.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp2.Rd.Sw1.Sw1.open then Jp2.Rd.Sw1.Sw1.f else Jp2.Rd.Sw1.Sw1.e;
//   Jp2.Rd.Sw1.Sw1.e = Jp2.Rd.Sw1.Sw1.BondCon1.e;
//   Jp2.Rd.Sw1.Sw1.f = Jp2.Rd.Sw1.Sw1.BondCon1.d * Jp2.Rd.Sw1.Sw1.BondCon1.f;
//   Jp2.Rd.Sw1.B3.BondCon2.e = Jp2.Rd.Sw1.B3.BondCon1.e;
//   Jp2.Rd.Sw1.B3.BondCon2.f = Jp2.Rd.Sw1.B3.BondCon1.f;
//   Jp2.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Jp2.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Jp2.Rd.B5.fBondCon1.e = Jp2.Rd.B5.eBondCon1.e;
//   Jp2.Rd.B5.eBondCon1.f = Jp2.Rd.B5.fBondCon1.f;
//   Jp2.Rd.B5.fBondCon1.d = -1.0;
//   Jp2.Rd.B5.eBondCon1.d = 1.0;
//   Jp2.Rd.BG2Heat1.BondCon1.e = Jp2.Rd.BG2Heat1.port_b.T;
//   Jp2.Rd.BG2Heat1.BondCon1.e * Jp2.Rd.BG2Heat1.BondCon1.f = -Jp2.Rd.BG2Heat1.port_b.Q_flow;
//   Jp2.Rd.Sw1.control = true;
//   Jp2.Rd.v = Jp2.Rd.p.v - Jp2.Rd.n.v;
//   Jp2.Rd.i = Jp2.Rd.p.i;
//   Jp2.Rs.J1p3_1.f[2] = Jp2.Rs.J1p3_1.f[1];
//   Jp2.Rs.J1p3_1.f[3] = Jp2.Rs.J1p3_1.f[2];
//   Jp2.Rs.J1p3_1.e[1] + (Jp2.Rs.J1p3_1.e[2] + Jp2.Rs.J1p3_1.e[3]) = 0.0;
//   Jp2.Rs.J1p3_1.e[1] = Jp2.Rs.J1p3_1.BondCon1.d * Jp2.Rs.J1p3_1.BondCon1.e;
//   Jp2.Rs.J1p3_1.f[1] = Jp2.Rs.J1p3_1.BondCon1.f;
//   Jp2.Rs.J1p3_1.e[2] = Jp2.Rs.J1p3_1.BondCon2.d * Jp2.Rs.J1p3_1.BondCon2.e;
//   Jp2.Rs.J1p3_1.f[2] = Jp2.Rs.J1p3_1.BondCon2.f;
//   Jp2.Rs.J1p3_1.e[3] = Jp2.Rs.J1p3_1.BondCon3.d * Jp2.Rs.J1p3_1.BondCon3.e;
//   Jp2.Rs.J1p3_1.f[3] = Jp2.Rs.J1p3_1.BondCon3.f;
//   Jp2.Rs.B1.BondCon2.e = Jp2.Rs.B1.BondCon1.e;
//   Jp2.Rs.B1.BondCon2.f = Jp2.Rs.B1.BondCon1.f;
//   Jp2.Rs.B1.BondCon1.d = -1.0;
//   Jp2.Rs.B1.BondCon2.d = 1.0;
//   Jp2.Rs.B2.BondCon2.e = Jp2.Rs.B2.BondCon1.e;
//   Jp2.Rs.B2.BondCon2.f = Jp2.Rs.B2.BondCon1.f;
//   Jp2.Rs.B2.BondCon1.d = -1.0;
//   Jp2.Rs.B2.BondCon2.d = 1.0;
//   Jp2.Rs.B3.BondCon2.e = Jp2.Rs.B3.BondCon1.e;
//   Jp2.Rs.B3.BondCon2.f = Jp2.Rs.B3.BondCon1.f;
//   Jp2.Rs.B3.BondCon1.d = -1.0;
//   Jp2.Rs.B3.BondCon2.d = 1.0;
//   Jp2.Rs.El2BG1.BondCon1.e = Jp2.Rs.El2BG1.p.v;
//   Jp2.Rs.El2BG1.BondCon1.f = Jp2.Rs.El2BG1.p.i;
//   Jp2.Rs.BG2El1.BondCon1.e = Jp2.Rs.BG2El1.n.v;
//   Jp2.Rs.BG2El1.BondCon1.f = -Jp2.Rs.BG2El1.n.i;
//   Jp2.Rs.B6.fBondCon1.e = Jp2.Rs.B6.eBondCon1.e;
//   Jp2.Rs.B6.eBondCon1.f = Jp2.Rs.B6.fBondCon1.f;
//   Jp2.Rs.B6.eBondCon1.d = -1.0;
//   Jp2.Rs.B6.fBondCon1.d = 1.0;
//   Jp2.Rs.T_nom.e = Jp2.Rs.T_nom.e0;
//   Jp2.Rs.T_nom.e = Jp2.Rs.T_nom.BondCon1.e;
//   Jp2.Rs.T_nom.f = (-Jp2.Rs.T_nom.BondCon1.d) * Jp2.Rs.T_nom.BondCon1.f;
//   Jp2.Rs.R1.Rval = (Jp2.Rs.R1.R * (1.0 + (Jp2.Rs.R1.TR1 * Jp2.Rs.R1.DTemp + Jp2.Rs.R1.TR2 * Jp2.Rs.R1.DTempSq))) / Jp2.Rs.R1.Area;
//   Jp2.Rs.R1.e1 = Jp2.Rs.R1.Rval * Jp2.Rs.R1.f1;
//   Jp2.Rs.R1.e1 * Jp2.Rs.R1.f1 = Jp2.Rs.R1.e2 * Jp2.Rs.R1.f2;
//   Jp2.Rs.R1.DTempSq = Jp2.Rs.R1.DTemp ^ 2.0;
//   Jp2.Rs.R1.DTemp = Jp2.Rs.R1.e2 - Jp2.Rs.R1.Tnom;
//   Jp2.Rs.R1.e1 = Jp2.Rs.R1.BondCon1.e;
//   Jp2.Rs.R1.f1 = Jp2.Rs.R1.BondCon1.d * Jp2.Rs.R1.BondCon1.f;
//   Jp2.Rs.R1.e2 = Jp2.Rs.R1.BondCon2.e;
//   Jp2.Rs.R1.f2 = (-Jp2.Rs.R1.BondCon2.d) * Jp2.Rs.R1.BondCon2.f;
//   Jp2.Rs.B4.fBondCon1.e = Jp2.Rs.B4.eBondCon1.e;
//   Jp2.Rs.B4.eBondCon1.f = Jp2.Rs.B4.fBondCon1.f;
//   Jp2.Rs.B4.fBondCon1.d = -1.0;
//   Jp2.Rs.B4.eBondCon1.d = 1.0;
//   Jp2.Rs.Sw1.J1p3_1.f[2] = Jp2.Rs.Sw1.J1p3_1.f[1];
//   Jp2.Rs.Sw1.J1p3_1.f[3] = Jp2.Rs.Sw1.J1p3_1.f[2];
//   Jp2.Rs.Sw1.J1p3_1.e[1] + (Jp2.Rs.Sw1.J1p3_1.e[2] + Jp2.Rs.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp2.Rs.Sw1.J1p3_1.e[1] = Jp2.Rs.Sw1.J1p3_1.BondCon1.d * Jp2.Rs.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Rs.Sw1.J1p3_1.f[1] = Jp2.Rs.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Rs.Sw1.J1p3_1.e[2] = Jp2.Rs.Sw1.J1p3_1.BondCon2.d * Jp2.Rs.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Rs.Sw1.J1p3_1.f[2] = Jp2.Rs.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Rs.Sw1.J1p3_1.e[3] = Jp2.Rs.Sw1.J1p3_1.BondCon3.d * Jp2.Rs.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Rs.Sw1.J1p3_1.f[3] = Jp2.Rs.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Rs.Sw1.B1.BondCon2.e = Jp2.Rs.Sw1.B1.BondCon1.e;
//   Jp2.Rs.Sw1.B1.BondCon2.f = Jp2.Rs.Sw1.B1.BondCon1.f;
//   Jp2.Rs.Sw1.B1.BondCon1.d = -1.0;
//   Jp2.Rs.Sw1.B1.BondCon2.d = 1.0;
//   Jp2.Rs.Sw1.B2.BondCon2.e = Jp2.Rs.Sw1.B2.BondCon1.e;
//   Jp2.Rs.Sw1.B2.BondCon2.f = Jp2.Rs.Sw1.B2.BondCon1.f;
//   Jp2.Rs.Sw1.B2.BondCon1.d = -1.0;
//   Jp2.Rs.Sw1.B2.BondCon2.d = 1.0;
//   Jp2.Rs.Sw1.J0p3_1.e[2] = Jp2.Rs.Sw1.J0p3_1.e[1];
//   Jp2.Rs.Sw1.J0p3_1.e[3] = Jp2.Rs.Sw1.J0p3_1.e[2];
//   Jp2.Rs.Sw1.J0p3_1.f[1] + (Jp2.Rs.Sw1.J0p3_1.f[2] + Jp2.Rs.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp2.Rs.Sw1.J0p3_1.e[1] = Jp2.Rs.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Rs.Sw1.J0p3_1.f[1] = Jp2.Rs.Sw1.J0p3_1.BondCon1.d * Jp2.Rs.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Rs.Sw1.J0p3_1.e[2] = Jp2.Rs.Sw1.J0p3_1.BondCon2.e;
//   Jp2.Rs.Sw1.J0p3_1.f[2] = Jp2.Rs.Sw1.J0p3_1.BondCon2.d * Jp2.Rs.Sw1.J0p3_1.BondCon2.f;
//   Jp2.Rs.Sw1.J0p3_1.e[3] = Jp2.Rs.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Rs.Sw1.J0p3_1.f[3] = Jp2.Rs.Sw1.J0p3_1.BondCon3.d * Jp2.Rs.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Rs.Sw1.B4.BondCon2.e = Jp2.Rs.Sw1.B4.BondCon1.e;
//   Jp2.Rs.Sw1.B4.BondCon2.f = Jp2.Rs.Sw1.B4.BondCon1.f;
//   Jp2.Rs.Sw1.B4.BondCon1.d = -1.0;
//   Jp2.Rs.Sw1.B4.BondCon2.d = 1.0;
//   Jp2.Rs.Sw1.j0p2_1.e2 = Jp2.Rs.Sw1.j0p2_1.e1;
//   Jp2.Rs.Sw1.j0p2_1.f1 + Jp2.Rs.Sw1.j0p2_1.f2 = 0.0;
//   Jp2.Rs.Sw1.j0p2_1.e1 = Jp2.Rs.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Rs.Sw1.j0p2_1.f1 = Jp2.Rs.Sw1.j0p2_1.BondCon1.d * Jp2.Rs.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Rs.Sw1.j0p2_1.e2 = Jp2.Rs.Sw1.j0p2_1.BondCon2.e;
//   Jp2.Rs.Sw1.j0p2_1.f2 = Jp2.Rs.Sw1.j0p2_1.BondCon2.d * Jp2.Rs.Sw1.j0p2_1.BondCon2.f;
//   Jp2.Rs.Sw1.j0p2_2.e2 = Jp2.Rs.Sw1.j0p2_2.e1;
//   Jp2.Rs.Sw1.j0p2_2.f1 + Jp2.Rs.Sw1.j0p2_2.f2 = 0.0;
//   Jp2.Rs.Sw1.j0p2_2.e1 = Jp2.Rs.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Rs.Sw1.j0p2_2.f1 = Jp2.Rs.Sw1.j0p2_2.BondCon1.d * Jp2.Rs.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Rs.Sw1.j0p2_2.e2 = Jp2.Rs.Sw1.j0p2_2.BondCon2.e;
//   Jp2.Rs.Sw1.j0p2_2.f2 = Jp2.Rs.Sw1.j0p2_2.BondCon2.d * Jp2.Rs.Sw1.j0p2_2.BondCon2.f;
//   Jp2.Rs.Sw1.Sw1.open = Jp2.Rs.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp2.Rs.Sw1.Sw1.open then Jp2.Rs.Sw1.Sw1.f else Jp2.Rs.Sw1.Sw1.e;
//   Jp2.Rs.Sw1.Sw1.e = Jp2.Rs.Sw1.Sw1.BondCon1.e;
//   Jp2.Rs.Sw1.Sw1.f = Jp2.Rs.Sw1.Sw1.BondCon1.d * Jp2.Rs.Sw1.Sw1.BondCon1.f;
//   Jp2.Rs.Sw1.B3.BondCon2.e = Jp2.Rs.Sw1.B3.BondCon1.e;
//   Jp2.Rs.Sw1.B3.BondCon2.f = Jp2.Rs.Sw1.B3.BondCon1.f;
//   Jp2.Rs.Sw1.B3.BondCon1.d = -1.0;
//   Jp2.Rs.Sw1.B3.BondCon2.d = 1.0;
//   Jp2.Rs.B5.fBondCon1.e = Jp2.Rs.B5.eBondCon1.e;
//   Jp2.Rs.B5.eBondCon1.f = Jp2.Rs.B5.fBondCon1.f;
//   Jp2.Rs.B5.fBondCon1.d = -1.0;
//   Jp2.Rs.B5.eBondCon1.d = 1.0;
//   Jp2.Rs.BG2Heat1.BondCon1.e = Jp2.Rs.BG2Heat1.port_b.T;
//   Jp2.Rs.BG2Heat1.BondCon1.e * Jp2.Rs.BG2Heat1.BondCon1.f = -Jp2.Rs.BG2Heat1.port_b.Q_flow;
//   Jp2.Rs.Sw1.control = true;
//   Jp2.Rs.v = Jp2.Rs.p.v - Jp2.Rs.n.v;
//   Jp2.Rs.i = Jp2.Rs.p.i;
//   if noEvent(Jp2.Jpi1.ISD.u1 > 0.0) then
//   Jp2.Jpi1.ISD.sig = 1.0;
//   Jp2.Jpi1.ISD.vds = Jp2.Jpi1.ISD.u1;
//   Jp2.Jpi1.ISD.vgs = Jp2.Jpi1.ISD.u2;
//   else
//   Jp2.Jpi1.ISD.sig = -1.0;
//   Jp2.Jpi1.ISD.vds = -Jp2.Jpi1.ISD.u1;
//   Jp2.Jpi1.ISD.vgs = Jp2.Jpi1.ISD.u2 - Jp2.Jpi1.ISD.u1;
//   end if;
//   (Jp2.Jpi1.ISD.ids,Jp2.Jpi1.ISD.vdsat) = BondLib.Spice.Utilities.JFETeq1(Jp2.Jpi1.ISD.vds,Jp2.Jpi1.ISD.vgs,Jp2.Jpi1.ISD.Tdev,Jp2.Jpi1.ISD.sig,Jp2.Jpi1.ISD.Tnom,Jp2.Jpi1.ISD.VT0,Jp2.Jpi1.ISD.BETA,Jp2.Jpi1.ISD.LAMBDA,Jp2.Jpi1.ISD.TCV,Jp2.Jpi1.ISD.BEX);
//   Jp2.Jpi1.ISD.y = Jp2.Jpi1.ISD.ids;
//   Jp2.Jpi1.Tdev1.T = Jp2.Jpi1.Tdev1.port.T;
//   Jp2.Jpi1.Tdev1.port.Q_flow = 0.0;
//   Jp2.Jpi1.Ddg.Tdev1.T = Jp2.Jpi1.Ddg.Tdev1.port.T;
//   Jp2.Jpi1.Ddg.Tdev1.port.Q_flow = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[2] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[1];
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[3] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[2];
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[1] + (Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[2] + Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[1] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.d * Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[1] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[2] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.d * Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[2] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.e[3] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.d * Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.DjJ1.J1p3_1.f[3] = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.e = Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.f = Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.e = Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.f = Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.e = Jp2.Jpi1.Ddg.DjJ1.El2BG1.p.v;
//   Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.f = Jp2.Jpi1.Ddg.DjJ1.El2BG1.p.i;
//   Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.e = Jp2.Jpi1.Ddg.DjJ1.BG2El1.n.v;
//   Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.f = -Jp2.Jpi1.Ddg.DjJ1.BG2El1.n.i;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.Vt = 8.61727503842867e-05 * Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.et = Jp2.Jpi1.Ddg.DjJ1.DjJ1.e1 / (Jp2.Jpi1.Ddg.DjJ1.DjJ1.Vt * Jp2.Jpi1.Ddg.DjJ1.DjJ1.N);
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.RTemp = Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2 / Jp2.Jpi1.Ddg.DjJ1.DjJ1.Tnom;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.EGval = Jp2.Jpi1.Ddg.DjJ1.DjJ1.EG + (-0.000702 * Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2 ^ 2.0) / (1108.0 + Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2);
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.ISval = Jp2.Jpi1.Ddg.DjJ1.DjJ1.IS * exp(((-1.0 + Jp2.Jpi1.Ddg.DjJ1.DjJ1.RTemp) * Jp2.Jpi1.Ddg.DjJ1.DjJ1.EGval) / Jp2.Jpi1.Ddg.DjJ1.DjJ1.Vt + Jp2.Jpi1.Ddg.DjJ1.DjJ1.XTI * log(Jp2.Jpi1.Ddg.DjJ1.DjJ1.RTemp));
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.f1 = Jp2.Jpi1.Ddg.DjJ1.DjJ1.ISval * (Jp2.Jpi1.Ddg.DjJ1.DjJ1.Area * (if noEvent(Jp2.Jpi1.Ddg.DjJ1.DjJ1.et < Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMin) then Jp2.Jpi1.Ddg.DjJ1.DjJ1.ExMin * (1.0 + (Jp2.Jpi1.Ddg.DjJ1.DjJ1.et - Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMin)) + -1.0 else if noEvent(Jp2.Jpi1.Ddg.DjJ1.DjJ1.et > Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMax) then Jp2.Jpi1.Ddg.DjJ1.DjJ1.ExMax * (1.0 + (Jp2.Jpi1.Ddg.DjJ1.DjJ1.et - Jp2.Jpi1.Ddg.DjJ1.DjJ1.EMax)) + -1.0 else exp(Jp2.Jpi1.Ddg.DjJ1.DjJ1.et) + -1.0));
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2 * Jp2.Jpi1.Ddg.DjJ1.DjJ1.f2 = Jp2.Jpi1.Ddg.DjJ1.DjJ1.e1 * Jp2.Jpi1.Ddg.DjJ1.DjJ1.f1;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.DTempSq = Jp2.Jpi1.Ddg.DjJ1.DjJ1.DTemp ^ 2.0;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.DTemp = Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2 - Jp2.Jpi1.Ddg.DjJ1.DjJ1.Tnom;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.e1 = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.f1 = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.d * Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.e2 = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.e;
//   Jp2.Jpi1.Ddg.DjJ1.DjJ1.f2 = (-Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.d) * Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.f;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.e = Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.f = Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.e = Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.f = Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.d = 1.0;
//   Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e = Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.T;
//   Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e * Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.f = -Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.Q_flow;
//   Jp2.Jpi1.Ddg.DjJ1.v = Jp2.Jpi1.Ddg.DjJ1.p.v - Jp2.Jpi1.Ddg.DjJ1.n.v;
//   Jp2.Jpi1.Ddg.DjJ1.i = Jp2.Jpi1.Ddg.DjJ1.p.i;
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.f[2] = Jp2.Jpi1.Ddg.Rd.J1p3_1.f[1];
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.f[3] = Jp2.Jpi1.Ddg.Rd.J1p3_1.f[2];
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.e[1] + (Jp2.Jpi1.Ddg.Rd.J1p3_1.e[2] + Jp2.Jpi1.Ddg.Rd.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.e[1] = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.d * Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.f[1] = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.e[2] = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.d * Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.f[2] = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.e[3] = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.d * Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.Rd.J1p3_1.f[3] = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon2.e = Jp2.Jpi1.Ddg.Rd.B1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon2.f = Jp2.Jpi1.Ddg.Rd.B1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon2.e = Jp2.Jpi1.Ddg.Rd.B2.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon2.f = Jp2.Jpi1.Ddg.Rd.B2.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon2.e = Jp2.Jpi1.Ddg.Rd.B3.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon2.f = Jp2.Jpi1.Ddg.Rd.B3.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.e = Jp2.Jpi1.Ddg.Rd.El2BG1.p.v;
//   Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.f = Jp2.Jpi1.Ddg.Rd.El2BG1.p.i;
//   Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.e = Jp2.Jpi1.Ddg.Rd.BG2El1.n.v;
//   Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.f = -Jp2.Jpi1.Ddg.Rd.BG2El1.n.i;
//   Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.e = Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.f = Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.T_nom.e = Jp2.Jpi1.Ddg.Rd.T_nom.e0;
//   Jp2.Jpi1.Ddg.Rd.T_nom.e = Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.T_nom.f = (-Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.d) * Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.R1.Rval = (Jp2.Jpi1.Ddg.Rd.R1.R * (1.0 + (Jp2.Jpi1.Ddg.Rd.R1.TR1 * Jp2.Jpi1.Ddg.Rd.R1.DTemp + Jp2.Jpi1.Ddg.Rd.R1.TR2 * Jp2.Jpi1.Ddg.Rd.R1.DTempSq))) / Jp2.Jpi1.Ddg.Rd.R1.Area;
//   Jp2.Jpi1.Ddg.Rd.R1.e1 = Jp2.Jpi1.Ddg.Rd.R1.Rval * Jp2.Jpi1.Ddg.Rd.R1.f1;
//   Jp2.Jpi1.Ddg.Rd.R1.e1 * Jp2.Jpi1.Ddg.Rd.R1.f1 = Jp2.Jpi1.Ddg.Rd.R1.e2 * Jp2.Jpi1.Ddg.Rd.R1.f2;
//   Jp2.Jpi1.Ddg.Rd.R1.DTempSq = Jp2.Jpi1.Ddg.Rd.R1.DTemp ^ 2.0;
//   Jp2.Jpi1.Ddg.Rd.R1.DTemp = Jp2.Jpi1.Ddg.Rd.R1.e2 - Jp2.Jpi1.Ddg.Rd.R1.Tnom;
//   Jp2.Jpi1.Ddg.Rd.R1.e1 = Jp2.Jpi1.Ddg.Rd.R1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.R1.f1 = Jp2.Jpi1.Ddg.Rd.R1.BondCon1.d * Jp2.Jpi1.Ddg.Rd.R1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.R1.e2 = Jp2.Jpi1.Ddg.Rd.R1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.R1.f2 = (-Jp2.Jpi1.Ddg.Rd.R1.BondCon2.d) * Jp2.Jpi1.Ddg.Rd.R1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.e = Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.f = Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[1];
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[3] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2];
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[1] + (Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[2] + Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[1] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.d * Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[1] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[2] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.d * Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[2] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.e[3] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.d * Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.f[3] = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[1];
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[3] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2];
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[1] + (Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[2] + Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[1] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[1] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.d * Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[2] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[2] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.d * Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.e[3] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.f[3] = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.d * Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.e2 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.e1;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.f1 + Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.e1 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.f1 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.d * Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.e2 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.f2 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.d * Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.e2 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.e1;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.f1 + Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.e1 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.f1 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.d * Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.e2 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.f2 = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.d * Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.open = Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.open then Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.f else Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.e = Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.f = Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.d * Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.e = Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.f = Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.d = 1.0;
//   Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e = Jp2.Jpi1.Ddg.Rd.BG2Heat1.port_b.T;
//   Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e * Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.f = -Jp2.Jpi1.Ddg.Rd.BG2Heat1.port_b.Q_flow;
//   Jp2.Jpi1.Ddg.Rd.Sw1.control = true;
//   Jp2.Jpi1.Ddg.Rd.v = Jp2.Jpi1.Ddg.Rd.p.v - Jp2.Jpi1.Ddg.Rd.n.v;
//   Jp2.Jpi1.Ddg.Rd.i = Jp2.Jpi1.Ddg.Rd.p.i;
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[2] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[1];
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[3] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[2];
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[1] + (Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[2] + Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[1] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.d * Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[1] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[2] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.d * Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[2] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.e[3] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.d * Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.VarC1.J1p3_1.f[3] = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.e = Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.f = Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.e = Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.f = Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.e = Jp2.Jpi1.Ddg.VarC1.El2BG1.p.v;
//   Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.f = Jp2.Jpi1.Ddg.VarC1.El2BG1.p.i;
//   Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.e = Jp2.Jpi1.Ddg.VarC1.BG2El1.n.v;
//   Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.f = -Jp2.Jpi1.Ddg.VarC1.BG2El1.n.i;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.e = Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.f = Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Ddg.VarC1.mC1.C = Jp2.Jpi1.Ddg.VarC1.mC1.s;
//   Jp2.Jpi1.Ddg.VarC1.mC1.f = Jp2.Jpi1.Ddg.VarC1.mC1.C * der(Jp2.Jpi1.Ddg.VarC1.mC1.e);
//   Jp2.Jpi1.Ddg.VarC1.mC1.e = Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.mC1.f = Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.d * Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.v = Jp2.Jpi1.Ddg.VarC1.p.v - Jp2.Jpi1.Ddg.VarC1.n.v;
//   Jp2.Jpi1.Ddg.VarC1.i = Jp2.Jpi1.Ddg.VarC1.p.i;
//   Jp2.Jpi1.Ddg.nlCJ1.vgs = Jp2.Jpi1.Ddg.nlCJ1.u1;
//   Jp2.Jpi1.Ddg.nlCJ1.vgd = Jp2.Jpi1.Ddg.nlCJ1.u2;
//   Jp2.Jpi1.Ddg.nlCJ1.v = if Jp2.Jpi1.Ddg.nlCJ1.GS then Jp2.Jpi1.Ddg.nlCJ1.vgs else Jp2.Jpi1.Ddg.nlCJ1.vgd;
//   Jp2.Jpi1.Ddg.nlCJ1.Vt = 8.61727503842867e-05 * Jp2.Jpi1.Ddg.nlCJ1.Tdev;
//   Jp2.Jpi1.Ddg.nlCJ1.et = Jp2.Jpi1.Ddg.nlCJ1.v / (Jp2.Jpi1.Ddg.nlCJ1.Vt * Jp2.Jpi1.Ddg.nlCJ1.N);
//   Jp2.Jpi1.Ddg.nlCJ1.DTemp = Jp2.Jpi1.Ddg.nlCJ1.Tdev - Jp2.Jpi1.Ddg.nlCJ1.Tnom;
//   Jp2.Jpi1.Ddg.nlCJ1.RTemp = Jp2.Jpi1.Ddg.nlCJ1.Tdev / Jp2.Jpi1.Ddg.nlCJ1.Tnom;
//   Jp2.Jpi1.Ddg.nlCJ1.VT0val = Jp2.Jpi1.Ddg.nlCJ1.VT0 - Jp2.Jpi1.Ddg.nlCJ1.TCV * Jp2.Jpi1.Ddg.nlCJ1.DTemp;
//   Jp2.Jpi1.Ddg.nlCJ1.EGval = Jp2.Jpi1.Ddg.nlCJ1.EG + (-0.000702 * Jp2.Jpi1.Ddg.nlCJ1.Tdev ^ 2.0) / (1108.0 + Jp2.Jpi1.Ddg.nlCJ1.Tdev);
//   Jp2.Jpi1.Ddg.nlCJ1.EGnom = Jp2.Jpi1.Ddg.nlCJ1.EG + (-0.000702 * Jp2.Jpi1.Ddg.nlCJ1.Tnom ^ 2.0) / (1108.0 + Jp2.Jpi1.Ddg.nlCJ1.Tnom);
//   Jp2.Jpi1.Ddg.nlCJ1.PBval = Jp2.Jpi1.Ddg.nlCJ1.PB * Jp2.Jpi1.Ddg.nlCJ1.RTemp + (Jp2.Jpi1.Ddg.nlCJ1.EGval + (-3.0 * (Jp2.Jpi1.Ddg.nlCJ1.Vt * log(Jp2.Jpi1.Ddg.nlCJ1.RTemp)) - Jp2.Jpi1.Ddg.nlCJ1.EGnom * Jp2.Jpi1.Ddg.nlCJ1.RTemp));
//   Jp2.Jpi1.Ddg.nlCJ1.CGSval = Jp2.Jpi1.Ddg.nlCJ1.CGS * (1.0 + Jp2.Jpi1.Ddg.nlCJ1.M * (1.0 + ((-Jp2.Jpi1.Ddg.nlCJ1.PBval) / Jp2.Jpi1.Ddg.nlCJ1.PB + 0.0004 * Jp2.Jpi1.Ddg.nlCJ1.DTemp)));
//   Jp2.Jpi1.Ddg.nlCJ1.CGDval = Jp2.Jpi1.Ddg.nlCJ1.CGD * (1.0 + Jp2.Jpi1.Ddg.nlCJ1.M * (1.0 + ((-Jp2.Jpi1.Ddg.nlCJ1.PBval) / Jp2.Jpi1.Ddg.nlCJ1.PB + 0.0004 * Jp2.Jpi1.Ddg.nlCJ1.DTemp)));
//   Jp2.Jpi1.Ddg.nlCJ1.CJval = if Jp2.Jpi1.Ddg.nlCJ1.GS then Jp2.Jpi1.Ddg.nlCJ1.CGSval else Jp2.Jpi1.Ddg.nlCJ1.CGDval;
//   Jp2.Jpi1.Ddg.nlCJ1.ISval = Jp2.Jpi1.Ddg.nlCJ1.IS * exp(((-1.0 + Jp2.Jpi1.Ddg.nlCJ1.RTemp) * Jp2.Jpi1.Ddg.nlCJ1.EGval) / Jp2.Jpi1.Ddg.nlCJ1.Vt + Jp2.Jpi1.Ddg.nlCJ1.XTI * log(Jp2.Jpi1.Ddg.nlCJ1.RTemp));
//   Jp2.Jpi1.Ddg.nlCJ1.Cdiff = Jp2.Jpi1.Ddg.nlCJ1.Area * (Jp2.Jpi1.Ddg.nlCJ1.TT * (Jp2.Jpi1.Ddg.nlCJ1.GminDC + ((if Jp2.Jpi1.Ddg.nlCJ1.et < Jp2.Jpi1.Ddg.nlCJ1.EMin then Jp2.Jpi1.Ddg.nlCJ1.ExMin * (1.0 + (Jp2.Jpi1.Ddg.nlCJ1.et - Jp2.Jpi1.Ddg.nlCJ1.EMin)) else if Jp2.Jpi1.Ddg.nlCJ1.et > Jp2.Jpi1.Ddg.nlCJ1.EMax then Jp2.Jpi1.Ddg.nlCJ1.ExMax * (1.0 + (Jp2.Jpi1.Ddg.nlCJ1.et - Jp2.Jpi1.Ddg.nlCJ1.EMax)) else exp(Jp2.Jpi1.Ddg.nlCJ1.et)) * Jp2.Jpi1.Ddg.nlCJ1.ISval) / (Jp2.Jpi1.Ddg.nlCJ1.N * Jp2.Jpi1.Ddg.nlCJ1.Vt)));
//   Jp2.Jpi1.Ddg.nlCJ1.Vfac1 = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.Vfac2 = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.Ve = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.Vn = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.VNval = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.sig2 = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.Cfac1 = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.Cfac2 = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.Cfac3 = 0.0;
//   Jp2.Jpi1.Ddg.nlCJ1.Cdepl = Jp2.Jpi1.Ddg.nlCJ1.Area * (Jp2.Jpi1.Ddg.nlCJ1.CJval * (if Jp2.Jpi1.Ddg.nlCJ1.v > Jp2.Jpi1.Ddg.nlCJ1.FC * Jp2.Jpi1.Ddg.nlCJ1.PBval then (1.0 + ((Jp2.Jpi1.Ddg.nlCJ1.M * Jp2.Jpi1.Ddg.nlCJ1.v) / Jp2.Jpi1.Ddg.nlCJ1.PBval - Jp2.Jpi1.Ddg.nlCJ1.FC * (1.0 + Jp2.Jpi1.Ddg.nlCJ1.M))) * (1.0 - Jp2.Jpi1.Ddg.nlCJ1.FC) ^ (-1.0 - Jp2.Jpi1.Ddg.nlCJ1.M) else abs(1.0 + (-Jp2.Jpi1.Ddg.nlCJ1.v) / Jp2.Jpi1.Ddg.nlCJ1.PBval) ^ (-Jp2.Jpi1.Ddg.nlCJ1.M)));
//   Jp2.Jpi1.Ddg.nlCJ1.Cval = Jp2.Jpi1.Ddg.nlCJ1.Cdiff + Jp2.Jpi1.Ddg.nlCJ1.Cdepl;
//   Jp2.Jpi1.Ddg.nlCJ1.y = Jp2.Jpi1.Ddg.nlCJ1.Cval;
//   Jp2.Jpi1.Ddg.v = Jp2.Jpi1.Ddg.p.v - Jp2.Jpi1.Ddg.n.v;
//   Jp2.Jpi1.Ddg.i = Jp2.Jpi1.Ddg.p.i;
//   Jp2.Jpi1.Dsg.Tdev1.T = Jp2.Jpi1.Dsg.Tdev1.port.T;
//   Jp2.Jpi1.Dsg.Tdev1.port.Q_flow = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[2] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[1];
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[3] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[2];
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[1] + (Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[2] + Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[1] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.d * Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[1] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[2] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.d * Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[2] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.e[3] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.d * Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.DjJ1.J1p3_1.f[3] = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.e = Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.f = Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.e = Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.f = Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.e = Jp2.Jpi1.Dsg.DjJ1.El2BG1.p.v;
//   Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.f = Jp2.Jpi1.Dsg.DjJ1.El2BG1.p.i;
//   Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.e = Jp2.Jpi1.Dsg.DjJ1.BG2El1.n.v;
//   Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.f = -Jp2.Jpi1.Dsg.DjJ1.BG2El1.n.i;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.Vt = 8.61727503842867e-05 * Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.et = Jp2.Jpi1.Dsg.DjJ1.DjJ1.e1 / (Jp2.Jpi1.Dsg.DjJ1.DjJ1.Vt * Jp2.Jpi1.Dsg.DjJ1.DjJ1.N);
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.RTemp = Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2 / Jp2.Jpi1.Dsg.DjJ1.DjJ1.Tnom;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.EGval = Jp2.Jpi1.Dsg.DjJ1.DjJ1.EG + (-0.000702 * Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2 ^ 2.0) / (1108.0 + Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2);
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.ISval = Jp2.Jpi1.Dsg.DjJ1.DjJ1.IS * exp(((-1.0 + Jp2.Jpi1.Dsg.DjJ1.DjJ1.RTemp) * Jp2.Jpi1.Dsg.DjJ1.DjJ1.EGval) / Jp2.Jpi1.Dsg.DjJ1.DjJ1.Vt + Jp2.Jpi1.Dsg.DjJ1.DjJ1.XTI * log(Jp2.Jpi1.Dsg.DjJ1.DjJ1.RTemp));
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.f1 = Jp2.Jpi1.Dsg.DjJ1.DjJ1.ISval * (Jp2.Jpi1.Dsg.DjJ1.DjJ1.Area * (if noEvent(Jp2.Jpi1.Dsg.DjJ1.DjJ1.et < Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMin) then Jp2.Jpi1.Dsg.DjJ1.DjJ1.ExMin * (1.0 + (Jp2.Jpi1.Dsg.DjJ1.DjJ1.et - Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMin)) + -1.0 else if noEvent(Jp2.Jpi1.Dsg.DjJ1.DjJ1.et > Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMax) then Jp2.Jpi1.Dsg.DjJ1.DjJ1.ExMax * (1.0 + (Jp2.Jpi1.Dsg.DjJ1.DjJ1.et - Jp2.Jpi1.Dsg.DjJ1.DjJ1.EMax)) + -1.0 else exp(Jp2.Jpi1.Dsg.DjJ1.DjJ1.et) + -1.0));
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2 * Jp2.Jpi1.Dsg.DjJ1.DjJ1.f2 = Jp2.Jpi1.Dsg.DjJ1.DjJ1.e1 * Jp2.Jpi1.Dsg.DjJ1.DjJ1.f1;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.DTempSq = Jp2.Jpi1.Dsg.DjJ1.DjJ1.DTemp ^ 2.0;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.DTemp = Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2 - Jp2.Jpi1.Dsg.DjJ1.DjJ1.Tnom;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.e1 = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.f1 = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.d * Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.e2 = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.e;
//   Jp2.Jpi1.Dsg.DjJ1.DjJ1.f2 = (-Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.d) * Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.f;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.e = Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.f = Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.e = Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.f = Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.d = 1.0;
//   Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e = Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.T;
//   Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e * Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.f = -Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.Q_flow;
//   Jp2.Jpi1.Dsg.DjJ1.v = Jp2.Jpi1.Dsg.DjJ1.p.v - Jp2.Jpi1.Dsg.DjJ1.n.v;
//   Jp2.Jpi1.Dsg.DjJ1.i = Jp2.Jpi1.Dsg.DjJ1.p.i;
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.f[2] = Jp2.Jpi1.Dsg.Rd.J1p3_1.f[1];
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.f[3] = Jp2.Jpi1.Dsg.Rd.J1p3_1.f[2];
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.e[1] + (Jp2.Jpi1.Dsg.Rd.J1p3_1.e[2] + Jp2.Jpi1.Dsg.Rd.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.e[1] = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.d * Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.f[1] = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.e[2] = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.d * Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.f[2] = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.e[3] = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.d * Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.Rd.J1p3_1.f[3] = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon2.e = Jp2.Jpi1.Dsg.Rd.B1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon2.f = Jp2.Jpi1.Dsg.Rd.B1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon2.e = Jp2.Jpi1.Dsg.Rd.B2.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon2.f = Jp2.Jpi1.Dsg.Rd.B2.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon2.e = Jp2.Jpi1.Dsg.Rd.B3.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon2.f = Jp2.Jpi1.Dsg.Rd.B3.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.e = Jp2.Jpi1.Dsg.Rd.El2BG1.p.v;
//   Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.f = Jp2.Jpi1.Dsg.Rd.El2BG1.p.i;
//   Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.e = Jp2.Jpi1.Dsg.Rd.BG2El1.n.v;
//   Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.f = -Jp2.Jpi1.Dsg.Rd.BG2El1.n.i;
//   Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.e = Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.f = Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.T_nom.e = Jp2.Jpi1.Dsg.Rd.T_nom.e0;
//   Jp2.Jpi1.Dsg.Rd.T_nom.e = Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.T_nom.f = (-Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.d) * Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.R1.Rval = (Jp2.Jpi1.Dsg.Rd.R1.R * (1.0 + (Jp2.Jpi1.Dsg.Rd.R1.TR1 * Jp2.Jpi1.Dsg.Rd.R1.DTemp + Jp2.Jpi1.Dsg.Rd.R1.TR2 * Jp2.Jpi1.Dsg.Rd.R1.DTempSq))) / Jp2.Jpi1.Dsg.Rd.R1.Area;
//   Jp2.Jpi1.Dsg.Rd.R1.e1 = Jp2.Jpi1.Dsg.Rd.R1.Rval * Jp2.Jpi1.Dsg.Rd.R1.f1;
//   Jp2.Jpi1.Dsg.Rd.R1.e1 * Jp2.Jpi1.Dsg.Rd.R1.f1 = Jp2.Jpi1.Dsg.Rd.R1.e2 * Jp2.Jpi1.Dsg.Rd.R1.f2;
//   Jp2.Jpi1.Dsg.Rd.R1.DTempSq = Jp2.Jpi1.Dsg.Rd.R1.DTemp ^ 2.0;
//   Jp2.Jpi1.Dsg.Rd.R1.DTemp = Jp2.Jpi1.Dsg.Rd.R1.e2 - Jp2.Jpi1.Dsg.Rd.R1.Tnom;
//   Jp2.Jpi1.Dsg.Rd.R1.e1 = Jp2.Jpi1.Dsg.Rd.R1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.R1.f1 = Jp2.Jpi1.Dsg.Rd.R1.BondCon1.d * Jp2.Jpi1.Dsg.Rd.R1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.R1.e2 = Jp2.Jpi1.Dsg.Rd.R1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.R1.f2 = (-Jp2.Jpi1.Dsg.Rd.R1.BondCon2.d) * Jp2.Jpi1.Dsg.Rd.R1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.e = Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.f = Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[1];
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[3] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2];
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[1] + (Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[2] + Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[1] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.d * Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[1] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[2] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.d * Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[2] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.e[3] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.d * Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.f[3] = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[1];
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[3] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2];
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[1] + (Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[2] + Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[1] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[1] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.d * Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[2] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[2] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.d * Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.e[3] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.f[3] = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.d * Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.e2 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.e1;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.f1 + Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.e1 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.f1 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.d * Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.e2 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.f2 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.d * Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.e2 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.e1;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.f1 + Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.e1 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.f1 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.d * Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.e2 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.f2 = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.d * Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.open = Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.open then Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.f else Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.e = Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.f = Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.d * Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.e = Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.f = Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.d = 1.0;
//   Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e = Jp2.Jpi1.Dsg.Rd.BG2Heat1.port_b.T;
//   Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e * Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.f = -Jp2.Jpi1.Dsg.Rd.BG2Heat1.port_b.Q_flow;
//   Jp2.Jpi1.Dsg.Rd.Sw1.control = true;
//   Jp2.Jpi1.Dsg.Rd.v = Jp2.Jpi1.Dsg.Rd.p.v - Jp2.Jpi1.Dsg.Rd.n.v;
//   Jp2.Jpi1.Dsg.Rd.i = Jp2.Jpi1.Dsg.Rd.p.i;
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[2] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[1];
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[3] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[2];
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[1] + (Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[2] + Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[1] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.d * Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[1] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[2] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.d * Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[2] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.e[3] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.d * Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.VarC1.J1p3_1.f[3] = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.e = Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.f = Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.e = Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.f = Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.e = Jp2.Jpi1.Dsg.VarC1.El2BG1.p.v;
//   Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.f = Jp2.Jpi1.Dsg.VarC1.El2BG1.p.i;
//   Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.e = Jp2.Jpi1.Dsg.VarC1.BG2El1.n.v;
//   Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.f = -Jp2.Jpi1.Dsg.VarC1.BG2El1.n.i;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.e = Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.f = Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Dsg.VarC1.mC1.C = Jp2.Jpi1.Dsg.VarC1.mC1.s;
//   Jp2.Jpi1.Dsg.VarC1.mC1.f = Jp2.Jpi1.Dsg.VarC1.mC1.C * der(Jp2.Jpi1.Dsg.VarC1.mC1.e);
//   Jp2.Jpi1.Dsg.VarC1.mC1.e = Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.mC1.f = Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.d * Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.v = Jp2.Jpi1.Dsg.VarC1.p.v - Jp2.Jpi1.Dsg.VarC1.n.v;
//   Jp2.Jpi1.Dsg.VarC1.i = Jp2.Jpi1.Dsg.VarC1.p.i;
//   Jp2.Jpi1.Dsg.nlCJ1.vgs = Jp2.Jpi1.Dsg.nlCJ1.u1;
//   Jp2.Jpi1.Dsg.nlCJ1.vgd = Jp2.Jpi1.Dsg.nlCJ1.u2;
//   Jp2.Jpi1.Dsg.nlCJ1.v = if Jp2.Jpi1.Dsg.nlCJ1.GS then Jp2.Jpi1.Dsg.nlCJ1.vgs else Jp2.Jpi1.Dsg.nlCJ1.vgd;
//   Jp2.Jpi1.Dsg.nlCJ1.Vt = 8.61727503842867e-05 * Jp2.Jpi1.Dsg.nlCJ1.Tdev;
//   Jp2.Jpi1.Dsg.nlCJ1.et = Jp2.Jpi1.Dsg.nlCJ1.v / (Jp2.Jpi1.Dsg.nlCJ1.Vt * Jp2.Jpi1.Dsg.nlCJ1.N);
//   Jp2.Jpi1.Dsg.nlCJ1.DTemp = Jp2.Jpi1.Dsg.nlCJ1.Tdev - Jp2.Jpi1.Dsg.nlCJ1.Tnom;
//   Jp2.Jpi1.Dsg.nlCJ1.RTemp = Jp2.Jpi1.Dsg.nlCJ1.Tdev / Jp2.Jpi1.Dsg.nlCJ1.Tnom;
//   Jp2.Jpi1.Dsg.nlCJ1.VT0val = Jp2.Jpi1.Dsg.nlCJ1.VT0 - Jp2.Jpi1.Dsg.nlCJ1.TCV * Jp2.Jpi1.Dsg.nlCJ1.DTemp;
//   Jp2.Jpi1.Dsg.nlCJ1.EGval = Jp2.Jpi1.Dsg.nlCJ1.EG + (-0.000702 * Jp2.Jpi1.Dsg.nlCJ1.Tdev ^ 2.0) / (1108.0 + Jp2.Jpi1.Dsg.nlCJ1.Tdev);
//   Jp2.Jpi1.Dsg.nlCJ1.EGnom = Jp2.Jpi1.Dsg.nlCJ1.EG + (-0.000702 * Jp2.Jpi1.Dsg.nlCJ1.Tnom ^ 2.0) / (1108.0 + Jp2.Jpi1.Dsg.nlCJ1.Tnom);
//   Jp2.Jpi1.Dsg.nlCJ1.PBval = Jp2.Jpi1.Dsg.nlCJ1.PB * Jp2.Jpi1.Dsg.nlCJ1.RTemp + (Jp2.Jpi1.Dsg.nlCJ1.EGval + (-3.0 * (Jp2.Jpi1.Dsg.nlCJ1.Vt * log(Jp2.Jpi1.Dsg.nlCJ1.RTemp)) - Jp2.Jpi1.Dsg.nlCJ1.EGnom * Jp2.Jpi1.Dsg.nlCJ1.RTemp));
//   Jp2.Jpi1.Dsg.nlCJ1.CGSval = Jp2.Jpi1.Dsg.nlCJ1.CGS * (1.0 + Jp2.Jpi1.Dsg.nlCJ1.M * (1.0 + ((-Jp2.Jpi1.Dsg.nlCJ1.PBval) / Jp2.Jpi1.Dsg.nlCJ1.PB + 0.0004 * Jp2.Jpi1.Dsg.nlCJ1.DTemp)));
//   Jp2.Jpi1.Dsg.nlCJ1.CGDval = Jp2.Jpi1.Dsg.nlCJ1.CGD * (1.0 + Jp2.Jpi1.Dsg.nlCJ1.M * (1.0 + ((-Jp2.Jpi1.Dsg.nlCJ1.PBval) / Jp2.Jpi1.Dsg.nlCJ1.PB + 0.0004 * Jp2.Jpi1.Dsg.nlCJ1.DTemp)));
//   Jp2.Jpi1.Dsg.nlCJ1.CJval = if Jp2.Jpi1.Dsg.nlCJ1.GS then Jp2.Jpi1.Dsg.nlCJ1.CGSval else Jp2.Jpi1.Dsg.nlCJ1.CGDval;
//   Jp2.Jpi1.Dsg.nlCJ1.ISval = Jp2.Jpi1.Dsg.nlCJ1.IS * exp(((-1.0 + Jp2.Jpi1.Dsg.nlCJ1.RTemp) * Jp2.Jpi1.Dsg.nlCJ1.EGval) / Jp2.Jpi1.Dsg.nlCJ1.Vt + Jp2.Jpi1.Dsg.nlCJ1.XTI * log(Jp2.Jpi1.Dsg.nlCJ1.RTemp));
//   Jp2.Jpi1.Dsg.nlCJ1.Cdiff = Jp2.Jpi1.Dsg.nlCJ1.Area * (Jp2.Jpi1.Dsg.nlCJ1.TT * (Jp2.Jpi1.Dsg.nlCJ1.GminDC + ((if Jp2.Jpi1.Dsg.nlCJ1.et < Jp2.Jpi1.Dsg.nlCJ1.EMin then Jp2.Jpi1.Dsg.nlCJ1.ExMin * (1.0 + (Jp2.Jpi1.Dsg.nlCJ1.et - Jp2.Jpi1.Dsg.nlCJ1.EMin)) else if Jp2.Jpi1.Dsg.nlCJ1.et > Jp2.Jpi1.Dsg.nlCJ1.EMax then Jp2.Jpi1.Dsg.nlCJ1.ExMax * (1.0 + (Jp2.Jpi1.Dsg.nlCJ1.et - Jp2.Jpi1.Dsg.nlCJ1.EMax)) else exp(Jp2.Jpi1.Dsg.nlCJ1.et)) * Jp2.Jpi1.Dsg.nlCJ1.ISval) / (Jp2.Jpi1.Dsg.nlCJ1.N * Jp2.Jpi1.Dsg.nlCJ1.Vt)));
//   Jp2.Jpi1.Dsg.nlCJ1.Vfac1 = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.Vfac2 = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.Ve = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.Vn = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.VNval = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.sig2 = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.Cfac1 = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.Cfac2 = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.Cfac3 = 0.0;
//   Jp2.Jpi1.Dsg.nlCJ1.Cdepl = Jp2.Jpi1.Dsg.nlCJ1.Area * (Jp2.Jpi1.Dsg.nlCJ1.CJval * (if Jp2.Jpi1.Dsg.nlCJ1.v > Jp2.Jpi1.Dsg.nlCJ1.FC * Jp2.Jpi1.Dsg.nlCJ1.PBval then (1.0 + ((Jp2.Jpi1.Dsg.nlCJ1.M * Jp2.Jpi1.Dsg.nlCJ1.v) / Jp2.Jpi1.Dsg.nlCJ1.PBval - Jp2.Jpi1.Dsg.nlCJ1.FC * (1.0 + Jp2.Jpi1.Dsg.nlCJ1.M))) * (1.0 - Jp2.Jpi1.Dsg.nlCJ1.FC) ^ (-1.0 - Jp2.Jpi1.Dsg.nlCJ1.M) else abs(1.0 + (-Jp2.Jpi1.Dsg.nlCJ1.v) / Jp2.Jpi1.Dsg.nlCJ1.PBval) ^ (-Jp2.Jpi1.Dsg.nlCJ1.M)));
//   Jp2.Jpi1.Dsg.nlCJ1.Cval = Jp2.Jpi1.Dsg.nlCJ1.Cdiff + Jp2.Jpi1.Dsg.nlCJ1.Cdepl;
//   Jp2.Jpi1.Dsg.nlCJ1.y = Jp2.Jpi1.Dsg.nlCJ1.Cval;
//   Jp2.Jpi1.Dsg.v = Jp2.Jpi1.Dsg.p.v - Jp2.Jpi1.Dsg.n.v;
//   Jp2.Jpi1.Dsg.i = Jp2.Jpi1.Dsg.p.i;
//   Jp2.Jpi1.Vsg.J1p3_1.f[2] = Jp2.Jpi1.Vsg.J1p3_1.f[1];
//   Jp2.Jpi1.Vsg.J1p3_1.f[3] = Jp2.Jpi1.Vsg.J1p3_1.f[2];
//   Jp2.Jpi1.Vsg.J1p3_1.e[1] + (Jp2.Jpi1.Vsg.J1p3_1.e[2] + Jp2.Jpi1.Vsg.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Vsg.J1p3_1.e[1] = Jp2.Jpi1.Vsg.J1p3_1.BondCon1.d * Jp2.Jpi1.Vsg.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Vsg.J1p3_1.f[1] = Jp2.Jpi1.Vsg.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Vsg.J1p3_1.e[2] = Jp2.Jpi1.Vsg.J1p3_1.BondCon2.d * Jp2.Jpi1.Vsg.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Vsg.J1p3_1.f[2] = Jp2.Jpi1.Vsg.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Vsg.J1p3_1.e[3] = Jp2.Jpi1.Vsg.J1p3_1.BondCon3.d * Jp2.Jpi1.Vsg.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Vsg.J1p3_1.f[3] = Jp2.Jpi1.Vsg.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Vsg.B1.BondCon2.e = Jp2.Jpi1.Vsg.B1.BondCon1.e;
//   Jp2.Jpi1.Vsg.B1.BondCon2.f = Jp2.Jpi1.Vsg.B1.BondCon1.f;
//   Jp2.Jpi1.Vsg.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Vsg.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Vsg.B2.BondCon2.e = Jp2.Jpi1.Vsg.B2.BondCon1.e;
//   Jp2.Jpi1.Vsg.B2.BondCon2.f = Jp2.Jpi1.Vsg.B2.BondCon1.f;
//   Jp2.Jpi1.Vsg.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Vsg.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Vsg.El2BG1.BondCon1.e = Jp2.Jpi1.Vsg.El2BG1.p.v;
//   Jp2.Jpi1.Vsg.El2BG1.BondCon1.f = Jp2.Jpi1.Vsg.El2BG1.p.i;
//   Jp2.Jpi1.Vsg.BG2El1.BondCon1.e = Jp2.Jpi1.Vsg.BG2El1.n.v;
//   Jp2.Jpi1.Vsg.BG2El1.BondCon1.f = -Jp2.Jpi1.Vsg.BG2El1.n.i;
//   Jp2.Jpi1.Vsg.De1.OutPort1 = Jp2.Jpi1.Vsg.De1.e;
//   Jp2.Jpi1.Vsg.De1.f = 0.0;
//   Jp2.Jpi1.Vsg.De1.e = Jp2.Jpi1.Vsg.De1.BondCon1.e;
//   Jp2.Jpi1.Vsg.De1.f = Jp2.Jpi1.Vsg.De1.BondCon1.d * Jp2.Jpi1.Vsg.De1.BondCon1.f;
//   Jp2.Jpi1.Vsg.B3.BondCon2.e = Jp2.Jpi1.Vsg.B3.BondCon1.e;
//   Jp2.Jpi1.Vsg.B3.BondCon2.f = Jp2.Jpi1.Vsg.B3.BondCon1.f;
//   Jp2.Jpi1.Vsg.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Vsg.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Vsg.v = Jp2.Jpi1.Vsg.p.v - Jp2.Jpi1.Vsg.n.v;
//   Jp2.Jpi1.Vsg.i = Jp2.Jpi1.Vsg.p.i;
//   Jp2.Jpi1.Vsd.J1p3_1.f[2] = Jp2.Jpi1.Vsd.J1p3_1.f[1];
//   Jp2.Jpi1.Vsd.J1p3_1.f[3] = Jp2.Jpi1.Vsd.J1p3_1.f[2];
//   Jp2.Jpi1.Vsd.J1p3_1.e[1] + (Jp2.Jpi1.Vsd.J1p3_1.e[2] + Jp2.Jpi1.Vsd.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Vsd.J1p3_1.e[1] = Jp2.Jpi1.Vsd.J1p3_1.BondCon1.d * Jp2.Jpi1.Vsd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Vsd.J1p3_1.f[1] = Jp2.Jpi1.Vsd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Vsd.J1p3_1.e[2] = Jp2.Jpi1.Vsd.J1p3_1.BondCon2.d * Jp2.Jpi1.Vsd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Vsd.J1p3_1.f[2] = Jp2.Jpi1.Vsd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Vsd.J1p3_1.e[3] = Jp2.Jpi1.Vsd.J1p3_1.BondCon3.d * Jp2.Jpi1.Vsd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Vsd.J1p3_1.f[3] = Jp2.Jpi1.Vsd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Vsd.B1.BondCon2.e = Jp2.Jpi1.Vsd.B1.BondCon1.e;
//   Jp2.Jpi1.Vsd.B1.BondCon2.f = Jp2.Jpi1.Vsd.B1.BondCon1.f;
//   Jp2.Jpi1.Vsd.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Vsd.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Vsd.B2.BondCon2.e = Jp2.Jpi1.Vsd.B2.BondCon1.e;
//   Jp2.Jpi1.Vsd.B2.BondCon2.f = Jp2.Jpi1.Vsd.B2.BondCon1.f;
//   Jp2.Jpi1.Vsd.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Vsd.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Vsd.El2BG1.BondCon1.e = Jp2.Jpi1.Vsd.El2BG1.p.v;
//   Jp2.Jpi1.Vsd.El2BG1.BondCon1.f = Jp2.Jpi1.Vsd.El2BG1.p.i;
//   Jp2.Jpi1.Vsd.BG2El1.BondCon1.e = Jp2.Jpi1.Vsd.BG2El1.n.v;
//   Jp2.Jpi1.Vsd.BG2El1.BondCon1.f = -Jp2.Jpi1.Vsd.BG2El1.n.i;
//   Jp2.Jpi1.Vsd.De1.OutPort1 = Jp2.Jpi1.Vsd.De1.e;
//   Jp2.Jpi1.Vsd.De1.f = 0.0;
//   Jp2.Jpi1.Vsd.De1.e = Jp2.Jpi1.Vsd.De1.BondCon1.e;
//   Jp2.Jpi1.Vsd.De1.f = Jp2.Jpi1.Vsd.De1.BondCon1.d * Jp2.Jpi1.Vsd.De1.BondCon1.f;
//   Jp2.Jpi1.Vsd.B3.BondCon2.e = Jp2.Jpi1.Vsd.B3.BondCon1.e;
//   Jp2.Jpi1.Vsd.B3.BondCon2.f = Jp2.Jpi1.Vsd.B3.BondCon1.f;
//   Jp2.Jpi1.Vsd.B3.BondCon1.d = -1.0;
//   Jp2.Jpi1.Vsd.B3.BondCon2.d = 1.0;
//   Jp2.Jpi1.Vsd.v = Jp2.Jpi1.Vsd.p.v - Jp2.Jpi1.Vsd.n.v;
//   Jp2.Jpi1.Vsd.i = Jp2.Jpi1.Vsd.p.i;
//   Jp2.Jpi1.Isd.El2BG1.BondCon1.e = Jp2.Jpi1.Isd.El2BG1.p.v;
//   Jp2.Jpi1.Isd.El2BG1.BondCon1.f = Jp2.Jpi1.Isd.El2BG1.p.i;
//   Jp2.Jpi1.Isd.BG2El1.BondCon1.e = Jp2.Jpi1.Isd.BG2El1.n.v;
//   Jp2.Jpi1.Isd.BG2El1.BondCon1.f = -Jp2.Jpi1.Isd.BG2El1.n.i;
//   Jp2.Jpi1.Isd.J1p3_1.f[2] = Jp2.Jpi1.Isd.J1p3_1.f[1];
//   Jp2.Jpi1.Isd.J1p3_1.f[3] = Jp2.Jpi1.Isd.J1p3_1.f[2];
//   Jp2.Jpi1.Isd.J1p3_1.e[1] + (Jp2.Jpi1.Isd.J1p3_1.e[2] + Jp2.Jpi1.Isd.J1p3_1.e[3]) = 0.0;
//   Jp2.Jpi1.Isd.J1p3_1.e[1] = Jp2.Jpi1.Isd.J1p3_1.BondCon1.d * Jp2.Jpi1.Isd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Isd.J1p3_1.f[1] = Jp2.Jpi1.Isd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Isd.J1p3_1.e[2] = Jp2.Jpi1.Isd.J1p3_1.BondCon2.d * Jp2.Jpi1.Isd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Isd.J1p3_1.f[2] = Jp2.Jpi1.Isd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Isd.J1p3_1.e[3] = Jp2.Jpi1.Isd.J1p3_1.BondCon3.d * Jp2.Jpi1.Isd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Isd.J1p3_1.f[3] = Jp2.Jpi1.Isd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Isd.B1.BondCon2.e = Jp2.Jpi1.Isd.B1.BondCon1.e;
//   Jp2.Jpi1.Isd.B1.BondCon2.f = Jp2.Jpi1.Isd.B1.BondCon1.f;
//   Jp2.Jpi1.Isd.B1.BondCon1.d = -1.0;
//   Jp2.Jpi1.Isd.B1.BondCon2.d = 1.0;
//   Jp2.Jpi1.Isd.B2.BondCon2.e = Jp2.Jpi1.Isd.B2.BondCon1.e;
//   Jp2.Jpi1.Isd.B2.BondCon2.f = Jp2.Jpi1.Isd.B2.BondCon1.f;
//   Jp2.Jpi1.Isd.B2.BondCon1.d = -1.0;
//   Jp2.Jpi1.Isd.B2.BondCon2.d = 1.0;
//   Jp2.Jpi1.Isd.BG2Heat1.BondCon1.e = Jp2.Jpi1.Isd.BG2Heat1.port_b.T;
//   Jp2.Jpi1.Isd.BG2Heat1.BondCon1.e * Jp2.Jpi1.Isd.BG2Heat1.BondCon1.f = -Jp2.Jpi1.Isd.BG2Heat1.port_b.Q_flow;
//   Jp2.Jpi1.Isd.B4.fBondCon1.e = Jp2.Jpi1.Isd.B4.eBondCon1.e;
//   Jp2.Jpi1.Isd.B4.eBondCon1.f = Jp2.Jpi1.Isd.B4.fBondCon1.f;
//   Jp2.Jpi1.Isd.B4.eBondCon1.d = -1.0;
//   Jp2.Jpi1.Isd.B4.fBondCon1.d = 1.0;
//   Jp2.Jpi1.Isd.B3.fBondCon1.e = Jp2.Jpi1.Isd.B3.eBondCon1.e;
//   Jp2.Jpi1.Isd.B3.eBondCon1.f = Jp2.Jpi1.Isd.B3.fBondCon1.f;
//   Jp2.Jpi1.Isd.B3.fBondCon1.d = -1.0;
//   Jp2.Jpi1.Isd.B3.eBondCon1.d = 1.0;
//   Jp2.Jpi1.Isd.I1.f0 = Jp2.Jpi1.Isd.I1.s;
//   Jp2.Jpi1.Isd.I1.f2 = Jp2.Jpi1.Isd.I1.f0;
//   Jp2.Jpi1.Isd.I1.e1 * Jp2.Jpi1.Isd.I1.f1 = Jp2.Jpi1.Isd.I1.e2 * Jp2.Jpi1.Isd.I1.f2;
//   Jp2.Jpi1.Isd.I1.e1 = Jp2.Jpi1.Isd.I1.BondCon1.e;
//   Jp2.Jpi1.Isd.I1.f1 = Jp2.Jpi1.Isd.I1.BondCon1.d * Jp2.Jpi1.Isd.I1.BondCon1.f;
//   Jp2.Jpi1.Isd.I1.e2 = Jp2.Jpi1.Isd.I1.BondCon2.e;
//   Jp2.Jpi1.Isd.I1.f2 = (-Jp2.Jpi1.Isd.I1.BondCon2.d) * Jp2.Jpi1.Isd.I1.BondCon2.f;
//   Jp2.Jpi1.Isd.v = Jp2.Jpi1.Isd.p.v - Jp2.Jpi1.Isd.n.v;
//   Jp2.Jpi1.Isd.i = Jp2.Jpi1.Isd.p.i;
//   Jp2.T_nom.BG2Heat1.BondCon1.e = Jp2.T_nom.BG2Heat1.port_b.T;
//   Jp2.T_nom.BG2Heat1.BondCon1.e * Jp2.T_nom.BG2Heat1.BondCon1.f = -Jp2.T_nom.BG2Heat1.port_b.Q_flow;
//   Jp2.T_nom.Tabs.e0 = Jp2.T_nom.Tabs.s;
//   Jp2.T_nom.Tabs.e = Jp2.T_nom.Tabs.e0;
//   Jp2.T_nom.Tabs.e = Jp2.T_nom.Tabs.BondCon1.e;
//   Jp2.T_nom.Tabs.f = (-Jp2.T_nom.Tabs.BondCon1.d) * Jp2.T_nom.Tabs.BondCon1.f;
//   Jp2.T_nom.B1.fBondCon1.e = Jp2.T_nom.B1.eBondCon1.e;
//   Jp2.T_nom.B1.eBondCon1.f = Jp2.T_nom.B1.fBondCon1.f;
//   Jp2.T_nom.B1.eBondCon1.d = -1.0;
//   Jp2.T_nom.B1.fBondCon1.d = 1.0;
//   Jp2.T_nom.Tabs.s = Jp2.T_nom.T;
//   Jp2.Sw1.B1.BondCon2.e = Jp2.Sw1.B1.BondCon1.e;
//   Jp2.Sw1.B1.BondCon2.f = Jp2.Sw1.B1.BondCon1.f;
//   Jp2.Sw1.B1.BondCon1.d = -1.0;
//   Jp2.Sw1.B1.BondCon2.d = 1.0;
//   Jp2.Sw1.B2.BondCon2.e = Jp2.Sw1.B2.BondCon1.e;
//   Jp2.Sw1.B2.BondCon2.f = Jp2.Sw1.B2.BondCon1.f;
//   Jp2.Sw1.B2.BondCon1.d = -1.0;
//   Jp2.Sw1.B2.BondCon2.d = 1.0;
//   Jp2.Sw1.B3.BondCon2.e = Jp2.Sw1.B3.BondCon1.e;
//   Jp2.Sw1.B3.BondCon2.f = Jp2.Sw1.B3.BondCon1.f;
//   Jp2.Sw1.B3.BondCon1.d = -1.0;
//   Jp2.Sw1.B3.BondCon2.d = 1.0;
//   Jp2.Sw1.Heat2BG1.BondCon1.e = Jp2.Sw1.Heat2BG1.port_a.T;
//   Jp2.Sw1.Heat2BG1.BondCon1.e * Jp2.Sw1.Heat2BG1.BondCon1.f = Jp2.Sw1.Heat2BG1.port_a.Q_flow;
//   Jp2.Sw1.BG2Heat1.BondCon1.e = Jp2.Sw1.BG2Heat1.port_b.T;
//   Jp2.Sw1.BG2Heat1.BondCon1.e * Jp2.Sw1.BG2Heat1.BondCon1.f = -Jp2.Sw1.BG2Heat1.port_b.Q_flow;
//   Jp2.Sw1.BG2Heat2.BondCon1.e = Jp2.Sw1.BG2Heat2.port_b.T;
//   Jp2.Sw1.BG2Heat2.BondCon1.e * Jp2.Sw1.BG2Heat2.BondCon1.f = -Jp2.Sw1.BG2Heat2.port_b.Q_flow;
//   Jp2.Sw1.Sw1.J1p3_1.f[2] = Jp2.Sw1.Sw1.J1p3_1.f[1];
//   Jp2.Sw1.Sw1.J1p3_1.f[3] = Jp2.Sw1.Sw1.J1p3_1.f[2];
//   Jp2.Sw1.Sw1.J1p3_1.e[1] + (Jp2.Sw1.Sw1.J1p3_1.e[2] + Jp2.Sw1.Sw1.J1p3_1.e[3]) = 0.0;
//   Jp2.Sw1.Sw1.J1p3_1.e[1] = Jp2.Sw1.Sw1.J1p3_1.BondCon1.d * Jp2.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Sw1.Sw1.J1p3_1.f[1] = Jp2.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Sw1.Sw1.J1p3_1.e[2] = Jp2.Sw1.Sw1.J1p3_1.BondCon2.d * Jp2.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Sw1.Sw1.J1p3_1.f[2] = Jp2.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Sw1.Sw1.J1p3_1.e[3] = Jp2.Sw1.Sw1.J1p3_1.BondCon3.d * Jp2.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Sw1.Sw1.J1p3_1.f[3] = Jp2.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Sw1.Sw1.B1.BondCon2.e = Jp2.Sw1.Sw1.B1.BondCon1.e;
//   Jp2.Sw1.Sw1.B1.BondCon2.f = Jp2.Sw1.Sw1.B1.BondCon1.f;
//   Jp2.Sw1.Sw1.B1.BondCon1.d = -1.0;
//   Jp2.Sw1.Sw1.B1.BondCon2.d = 1.0;
//   Jp2.Sw1.Sw1.B2.BondCon2.e = Jp2.Sw1.Sw1.B2.BondCon1.e;
//   Jp2.Sw1.Sw1.B2.BondCon2.f = Jp2.Sw1.Sw1.B2.BondCon1.f;
//   Jp2.Sw1.Sw1.B2.BondCon1.d = -1.0;
//   Jp2.Sw1.Sw1.B2.BondCon2.d = 1.0;
//   Jp2.Sw1.Sw1.J0p3_1.e[2] = Jp2.Sw1.Sw1.J0p3_1.e[1];
//   Jp2.Sw1.Sw1.J0p3_1.e[3] = Jp2.Sw1.Sw1.J0p3_1.e[2];
//   Jp2.Sw1.Sw1.J0p3_1.f[1] + (Jp2.Sw1.Sw1.J0p3_1.f[2] + Jp2.Sw1.Sw1.J0p3_1.f[3]) = 0.0;
//   Jp2.Sw1.Sw1.J0p3_1.e[1] = Jp2.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Sw1.Sw1.J0p3_1.f[1] = Jp2.Sw1.Sw1.J0p3_1.BondCon1.d * Jp2.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Sw1.Sw1.J0p3_1.e[2] = Jp2.Sw1.Sw1.J0p3_1.BondCon2.e;
//   Jp2.Sw1.Sw1.J0p3_1.f[2] = Jp2.Sw1.Sw1.J0p3_1.BondCon2.d * Jp2.Sw1.Sw1.J0p3_1.BondCon2.f;
//   Jp2.Sw1.Sw1.J0p3_1.e[3] = Jp2.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Sw1.Sw1.J0p3_1.f[3] = Jp2.Sw1.Sw1.J0p3_1.BondCon3.d * Jp2.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Sw1.Sw1.B4.BondCon2.e = Jp2.Sw1.Sw1.B4.BondCon1.e;
//   Jp2.Sw1.Sw1.B4.BondCon2.f = Jp2.Sw1.Sw1.B4.BondCon1.f;
//   Jp2.Sw1.Sw1.B4.BondCon1.d = -1.0;
//   Jp2.Sw1.Sw1.B4.BondCon2.d = 1.0;
//   Jp2.Sw1.Sw1.j0p2_1.e2 = Jp2.Sw1.Sw1.j0p2_1.e1;
//   Jp2.Sw1.Sw1.j0p2_1.f1 + Jp2.Sw1.Sw1.j0p2_1.f2 = 0.0;
//   Jp2.Sw1.Sw1.j0p2_1.e1 = Jp2.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Sw1.Sw1.j0p2_1.f1 = Jp2.Sw1.Sw1.j0p2_1.BondCon1.d * Jp2.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Sw1.Sw1.j0p2_1.e2 = Jp2.Sw1.Sw1.j0p2_1.BondCon2.e;
//   Jp2.Sw1.Sw1.j0p2_1.f2 = Jp2.Sw1.Sw1.j0p2_1.BondCon2.d * Jp2.Sw1.Sw1.j0p2_1.BondCon2.f;
//   Jp2.Sw1.Sw1.j0p2_2.e2 = Jp2.Sw1.Sw1.j0p2_2.e1;
//   Jp2.Sw1.Sw1.j0p2_2.f1 + Jp2.Sw1.Sw1.j0p2_2.f2 = 0.0;
//   Jp2.Sw1.Sw1.j0p2_2.e1 = Jp2.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Sw1.Sw1.j0p2_2.f1 = Jp2.Sw1.Sw1.j0p2_2.BondCon1.d * Jp2.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Sw1.Sw1.j0p2_2.e2 = Jp2.Sw1.Sw1.j0p2_2.BondCon2.e;
//   Jp2.Sw1.Sw1.j0p2_2.f2 = Jp2.Sw1.Sw1.j0p2_2.BondCon2.d * Jp2.Sw1.Sw1.j0p2_2.BondCon2.f;
//   Jp2.Sw1.Sw1.Sw1.open = Jp2.Sw1.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Jp2.Sw1.Sw1.Sw1.open then Jp2.Sw1.Sw1.Sw1.f else Jp2.Sw1.Sw1.Sw1.e;
//   Jp2.Sw1.Sw1.Sw1.e = Jp2.Sw1.Sw1.Sw1.BondCon1.e;
//   Jp2.Sw1.Sw1.Sw1.f = Jp2.Sw1.Sw1.Sw1.BondCon1.d * Jp2.Sw1.Sw1.Sw1.BondCon1.f;
//   Jp2.Sw1.Sw1.B3.BondCon2.e = Jp2.Sw1.Sw1.B3.BondCon1.e;
//   Jp2.Sw1.Sw1.B3.BondCon2.f = Jp2.Sw1.Sw1.B3.BondCon1.f;
//   Jp2.Sw1.Sw1.B3.BondCon1.d = -1.0;
//   Jp2.Sw1.Sw1.B3.BondCon2.d = 1.0;
//   Jp2.Sw1.control = true;
//   Rd1.J1p3_1.f[2] = Rd1.J1p3_1.f[1];
//   Rd1.J1p3_1.f[3] = Rd1.J1p3_1.f[2];
//   Rd1.J1p3_1.e[1] + (Rd1.J1p3_1.e[2] + Rd1.J1p3_1.e[3]) = 0.0;
//   Rd1.J1p3_1.e[1] = Rd1.J1p3_1.BondCon1.d * Rd1.J1p3_1.BondCon1.e;
//   Rd1.J1p3_1.f[1] = Rd1.J1p3_1.BondCon1.f;
//   Rd1.J1p3_1.e[2] = Rd1.J1p3_1.BondCon2.d * Rd1.J1p3_1.BondCon2.e;
//   Rd1.J1p3_1.f[2] = Rd1.J1p3_1.BondCon2.f;
//   Rd1.J1p3_1.e[3] = Rd1.J1p3_1.BondCon3.d * Rd1.J1p3_1.BondCon3.e;
//   Rd1.J1p3_1.f[3] = Rd1.J1p3_1.BondCon3.f;
//   Rd1.B1.BondCon2.e = Rd1.B1.BondCon1.e;
//   Rd1.B1.BondCon2.f = Rd1.B1.BondCon1.f;
//   Rd1.B1.BondCon1.d = -1.0;
//   Rd1.B1.BondCon2.d = 1.0;
//   Rd1.B2.BondCon2.e = Rd1.B2.BondCon1.e;
//   Rd1.B2.BondCon2.f = Rd1.B2.BondCon1.f;
//   Rd1.B2.BondCon1.d = -1.0;
//   Rd1.B2.BondCon2.d = 1.0;
//   Rd1.B3.BondCon2.e = Rd1.B3.BondCon1.e;
//   Rd1.B3.BondCon2.f = Rd1.B3.BondCon1.f;
//   Rd1.B3.BondCon1.d = -1.0;
//   Rd1.B3.BondCon2.d = 1.0;
//   Rd1.El2BG1.BondCon1.e = Rd1.El2BG1.p.v;
//   Rd1.El2BG1.BondCon1.f = Rd1.El2BG1.p.i;
//   Rd1.BG2El1.BondCon1.e = Rd1.BG2El1.n.v;
//   Rd1.BG2El1.BondCon1.f = -Rd1.BG2El1.n.i;
//   Rd1.B6.fBondCon1.e = Rd1.B6.eBondCon1.e;
//   Rd1.B6.eBondCon1.f = Rd1.B6.fBondCon1.f;
//   Rd1.B6.eBondCon1.d = -1.0;
//   Rd1.B6.fBondCon1.d = 1.0;
//   Rd1.T_nom.e = Rd1.T_nom.e0;
//   Rd1.T_nom.e = Rd1.T_nom.BondCon1.e;
//   Rd1.T_nom.f = (-Rd1.T_nom.BondCon1.d) * Rd1.T_nom.BondCon1.f;
//   Rd1.R1.Rval = (Rd1.R1.R * (1.0 + (Rd1.R1.TR1 * Rd1.R1.DTemp + Rd1.R1.TR2 * Rd1.R1.DTempSq))) / Rd1.R1.Area;
//   Rd1.R1.e1 = Rd1.R1.Rval * Rd1.R1.f1;
//   Rd1.R1.e1 * Rd1.R1.f1 = Rd1.R1.e2 * Rd1.R1.f2;
//   Rd1.R1.DTempSq = Rd1.R1.DTemp ^ 2.0;
//   Rd1.R1.DTemp = Rd1.R1.e2 - Rd1.R1.Tnom;
//   Rd1.R1.e1 = Rd1.R1.BondCon1.e;
//   Rd1.R1.f1 = Rd1.R1.BondCon1.d * Rd1.R1.BondCon1.f;
//   Rd1.R1.e2 = Rd1.R1.BondCon2.e;
//   Rd1.R1.f2 = (-Rd1.R1.BondCon2.d) * Rd1.R1.BondCon2.f;
//   Rd1.B4.fBondCon1.e = Rd1.B4.eBondCon1.e;
//   Rd1.B4.eBondCon1.f = Rd1.B4.fBondCon1.f;
//   Rd1.B4.fBondCon1.d = -1.0;
//   Rd1.B4.eBondCon1.d = 1.0;
//   Rd1.Sw1.J1p3_1.f[2] = Rd1.Sw1.J1p3_1.f[1];
//   Rd1.Sw1.J1p3_1.f[3] = Rd1.Sw1.J1p3_1.f[2];
//   Rd1.Sw1.J1p3_1.e[1] + (Rd1.Sw1.J1p3_1.e[2] + Rd1.Sw1.J1p3_1.e[3]) = 0.0;
//   Rd1.Sw1.J1p3_1.e[1] = Rd1.Sw1.J1p3_1.BondCon1.d * Rd1.Sw1.J1p3_1.BondCon1.e;
//   Rd1.Sw1.J1p3_1.f[1] = Rd1.Sw1.J1p3_1.BondCon1.f;
//   Rd1.Sw1.J1p3_1.e[2] = Rd1.Sw1.J1p3_1.BondCon2.d * Rd1.Sw1.J1p3_1.BondCon2.e;
//   Rd1.Sw1.J1p3_1.f[2] = Rd1.Sw1.J1p3_1.BondCon2.f;
//   Rd1.Sw1.J1p3_1.e[3] = Rd1.Sw1.J1p3_1.BondCon3.d * Rd1.Sw1.J1p3_1.BondCon3.e;
//   Rd1.Sw1.J1p3_1.f[3] = Rd1.Sw1.J1p3_1.BondCon3.f;
//   Rd1.Sw1.B1.BondCon2.e = Rd1.Sw1.B1.BondCon1.e;
//   Rd1.Sw1.B1.BondCon2.f = Rd1.Sw1.B1.BondCon1.f;
//   Rd1.Sw1.B1.BondCon1.d = -1.0;
//   Rd1.Sw1.B1.BondCon2.d = 1.0;
//   Rd1.Sw1.B2.BondCon2.e = Rd1.Sw1.B2.BondCon1.e;
//   Rd1.Sw1.B2.BondCon2.f = Rd1.Sw1.B2.BondCon1.f;
//   Rd1.Sw1.B2.BondCon1.d = -1.0;
//   Rd1.Sw1.B2.BondCon2.d = 1.0;
//   Rd1.Sw1.J0p3_1.e[2] = Rd1.Sw1.J0p3_1.e[1];
//   Rd1.Sw1.J0p3_1.e[3] = Rd1.Sw1.J0p3_1.e[2];
//   Rd1.Sw1.J0p3_1.f[1] + (Rd1.Sw1.J0p3_1.f[2] + Rd1.Sw1.J0p3_1.f[3]) = 0.0;
//   Rd1.Sw1.J0p3_1.e[1] = Rd1.Sw1.J0p3_1.BondCon1.e;
//   Rd1.Sw1.J0p3_1.f[1] = Rd1.Sw1.J0p3_1.BondCon1.d * Rd1.Sw1.J0p3_1.BondCon1.f;
//   Rd1.Sw1.J0p3_1.e[2] = Rd1.Sw1.J0p3_1.BondCon2.e;
//   Rd1.Sw1.J0p3_1.f[2] = Rd1.Sw1.J0p3_1.BondCon2.d * Rd1.Sw1.J0p3_1.BondCon2.f;
//   Rd1.Sw1.J0p3_1.e[3] = Rd1.Sw1.J0p3_1.BondCon3.e;
//   Rd1.Sw1.J0p3_1.f[3] = Rd1.Sw1.J0p3_1.BondCon3.d * Rd1.Sw1.J0p3_1.BondCon3.f;
//   Rd1.Sw1.B4.BondCon2.e = Rd1.Sw1.B4.BondCon1.e;
//   Rd1.Sw1.B4.BondCon2.f = Rd1.Sw1.B4.BondCon1.f;
//   Rd1.Sw1.B4.BondCon1.d = -1.0;
//   Rd1.Sw1.B4.BondCon2.d = 1.0;
//   Rd1.Sw1.j0p2_1.e2 = Rd1.Sw1.j0p2_1.e1;
//   Rd1.Sw1.j0p2_1.f1 + Rd1.Sw1.j0p2_1.f2 = 0.0;
//   Rd1.Sw1.j0p2_1.e1 = Rd1.Sw1.j0p2_1.BondCon1.e;
//   Rd1.Sw1.j0p2_1.f1 = Rd1.Sw1.j0p2_1.BondCon1.d * Rd1.Sw1.j0p2_1.BondCon1.f;
//   Rd1.Sw1.j0p2_1.e2 = Rd1.Sw1.j0p2_1.BondCon2.e;
//   Rd1.Sw1.j0p2_1.f2 = Rd1.Sw1.j0p2_1.BondCon2.d * Rd1.Sw1.j0p2_1.BondCon2.f;
//   Rd1.Sw1.j0p2_2.e2 = Rd1.Sw1.j0p2_2.e1;
//   Rd1.Sw1.j0p2_2.f1 + Rd1.Sw1.j0p2_2.f2 = 0.0;
//   Rd1.Sw1.j0p2_2.e1 = Rd1.Sw1.j0p2_2.BondCon1.e;
//   Rd1.Sw1.j0p2_2.f1 = Rd1.Sw1.j0p2_2.BondCon1.d * Rd1.Sw1.j0p2_2.BondCon1.f;
//   Rd1.Sw1.j0p2_2.e2 = Rd1.Sw1.j0p2_2.BondCon2.e;
//   Rd1.Sw1.j0p2_2.f2 = Rd1.Sw1.j0p2_2.BondCon2.d * Rd1.Sw1.j0p2_2.BondCon2.f;
//   Rd1.Sw1.Sw1.open = Rd1.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Rd1.Sw1.Sw1.open then Rd1.Sw1.Sw1.f else Rd1.Sw1.Sw1.e;
//   Rd1.Sw1.Sw1.e = Rd1.Sw1.Sw1.BondCon1.e;
//   Rd1.Sw1.Sw1.f = Rd1.Sw1.Sw1.BondCon1.d * Rd1.Sw1.Sw1.BondCon1.f;
//   Rd1.Sw1.B3.BondCon2.e = Rd1.Sw1.B3.BondCon1.e;
//   Rd1.Sw1.B3.BondCon2.f = Rd1.Sw1.B3.BondCon1.f;
//   Rd1.Sw1.B3.BondCon1.d = -1.0;
//   Rd1.Sw1.B3.BondCon2.d = 1.0;
//   Rd1.B5.fBondCon1.e = Rd1.B5.eBondCon1.e;
//   Rd1.B5.eBondCon1.f = Rd1.B5.fBondCon1.f;
//   Rd1.B5.fBondCon1.d = -1.0;
//   Rd1.B5.eBondCon1.d = 1.0;
//   Rd1.BG2Heat1.BondCon1.e = Rd1.BG2Heat1.port_b.T;
//   Rd1.BG2Heat1.BondCon1.e * Rd1.BG2Heat1.BondCon1.f = -Rd1.BG2Heat1.port_b.Q_flow;
//   Rd1.Sw1.control = true;
//   Rd1.v = Rd1.p.v - Rd1.n.v;
//   Rd1.i = Rd1.p.i;
//   Gnd2.B1.fBondCon1.e = Gnd2.B1.eBondCon1.e;
//   Gnd2.B1.eBondCon1.f = Gnd2.B1.fBondCon1.f;
//   Gnd2.B1.eBondCon1.d = -1.0;
//   Gnd2.B1.fBondCon1.d = 1.0;
//   Gnd2.V0.e = Gnd2.V0.e0;
//   Gnd2.V0.e = Gnd2.V0.BondCon1.e;
//   Gnd2.V0.f = (-Gnd2.V0.BondCon1.d) * Gnd2.V0.BondCon1.f;
//   Gnd2.El2BG1.BondCon1.e = Gnd2.El2BG1.p.v;
//   Gnd2.El2BG1.BondCon1.f = Gnd2.El2BG1.p.i;
//   Gnd3.B1.fBondCon1.e = Gnd3.B1.eBondCon1.e;
//   Gnd3.B1.eBondCon1.f = Gnd3.B1.fBondCon1.f;
//   Gnd3.B1.eBondCon1.d = -1.0;
//   Gnd3.B1.fBondCon1.d = 1.0;
//   Gnd3.V0.e = Gnd3.V0.e0;
//   Gnd3.V0.e = Gnd3.V0.BondCon1.e;
//   Gnd3.V0.f = (-Gnd3.V0.BondCon1.d) * Gnd3.V0.BondCon1.f;
//   Gnd3.El2BG1.BondCon1.e = Gnd3.El2BG1.p.v;
//   Gnd3.El2BG1.BondCon1.f = Gnd3.El2BG1.p.i;
//   Vin.El2BG1.BondCon1.e = Vin.El2BG1.p.v;
//   Vin.El2BG1.BondCon1.f = Vin.El2BG1.p.i;
//   Vin.BG2El1.BondCon1.e = Vin.BG2El1.n.v;
//   Vin.BG2El1.BondCon1.f = -Vin.BG2El1.n.i;
//   Vin.B1.BondCon2.e = Vin.B1.BondCon1.e;
//   Vin.B1.BondCon2.f = Vin.B1.BondCon1.f;
//   Vin.B1.BondCon1.d = -1.0;
//   Vin.B1.BondCon2.d = 1.0;
//   Vin.B2.BondCon2.e = Vin.B2.BondCon1.e;
//   Vin.B2.BondCon2.f = Vin.B2.BondCon1.f;
//   Vin.B2.BondCon1.d = -1.0;
//   Vin.B2.BondCon2.d = 1.0;
//   Vin.J1p4_1.f[2] = Vin.J1p4_1.f[1];
//   Vin.J1p4_1.f[3] = Vin.J1p4_1.f[2];
//   Vin.J1p4_1.f[4] = Vin.J1p4_1.f[3];
//   Vin.J1p4_1.e[1] + (Vin.J1p4_1.e[2] + (Vin.J1p4_1.e[3] + Vin.J1p4_1.e[4])) = 0.0;
//   Vin.J1p4_1.e[1] = Vin.J1p4_1.BondCon1.d * Vin.J1p4_1.BondCon1.e;
//   Vin.J1p4_1.f[1] = Vin.J1p4_1.BondCon1.f;
//   Vin.J1p4_1.e[2] = Vin.J1p4_1.BondCon2.d * Vin.J1p4_1.BondCon2.e;
//   Vin.J1p4_1.f[2] = Vin.J1p4_1.BondCon2.f;
//   Vin.J1p4_1.e[3] = Vin.J1p4_1.BondCon3.d * Vin.J1p4_1.BondCon3.e;
//   Vin.J1p4_1.f[3] = Vin.J1p4_1.BondCon3.f;
//   Vin.J1p4_1.e[4] = Vin.J1p4_1.BondCon4.d * Vin.J1p4_1.BondCon4.e;
//   Vin.J1p4_1.f[4] = Vin.J1p4_1.BondCon4.f;
//   Vin.B3.fBondCon1.e = Vin.B3.eBondCon1.e;
//   Vin.B3.eBondCon1.f = Vin.B3.fBondCon1.f;
//   Vin.B3.eBondCon1.d = -1.0;
//   Vin.B3.fBondCon1.d = 1.0;
//   Vin.V1.Sine1.y = Vin.V1.Sine1.offset + (if time < Vin.V1.Sine1.startTime then 0.0 else Vin.V1.Sine1.amplitude * sin(6.28318530717959 * (Vin.V1.Sine1.freqHz * (time - Vin.V1.Sine1.startTime)) + Vin.V1.Sine1.phase));
//   Vin.V1.e = Vin.V1.Sine1.y;
//   Vin.V1.e = Vin.V1.BondCon1.e;
//   Vin.V1.f = (-Vin.V1.BondCon1.d) * Vin.V1.BondCon1.f;
//   Vin.Vramp.Ramp1.y = Vin.Vramp.Ramp1.offset + (if time < Vin.Vramp.Ramp1.startTime then 0.0 else if time < Vin.Vramp.Ramp1.startTime + Vin.Vramp.Ramp1.duration then ((time - Vin.Vramp.Ramp1.startTime) * Vin.Vramp.Ramp1.height) / Vin.Vramp.Ramp1.duration else Vin.Vramp.Ramp1.height);
//   Vin.Vramp.e = Vin.Vramp.Ramp1.y;
//   Vin.Vramp.e = Vin.Vramp.BondCon1.e;
//   Vin.Vramp.f = (-Vin.Vramp.BondCon1.d) * Vin.Vramp.BondCon1.f;
//   Vin.B4.fBondCon1.e = Vin.B4.eBondCon1.e;
//   Vin.B4.eBondCon1.f = Vin.B4.fBondCon1.f;
//   Vin.B4.eBondCon1.d = -1.0;
//   Vin.B4.fBondCon1.d = 1.0;
//   Vin.v = Vin.p.v - Vin.n.v;
//   Vin.i = Vin.p.i;
//   Gnd4.B1.fBondCon1.e = Gnd4.B1.eBondCon1.e;
//   Gnd4.B1.eBondCon1.f = Gnd4.B1.fBondCon1.f;
//   Gnd4.B1.eBondCon1.d = -1.0;
//   Gnd4.B1.fBondCon1.d = 1.0;
//   Gnd4.V0.e = Gnd4.V0.e0;
//   Gnd4.V0.e = Gnd4.V0.BondCon1.e;
//   Gnd4.V0.f = (-Gnd4.V0.BondCon1.d) * Gnd4.V0.BondCon1.f;
//   Gnd4.El2BG1.BondCon1.e = Gnd4.El2BG1.p.v;
//   Gnd4.El2BG1.BondCon1.f = Gnd4.El2BG1.p.i;
//   Vout.J1p3_1.f[2] = Vout.J1p3_1.f[1];
//   Vout.J1p3_1.f[3] = Vout.J1p3_1.f[2];
//   Vout.J1p3_1.e[1] + (Vout.J1p3_1.e[2] + Vout.J1p3_1.e[3]) = 0.0;
//   Vout.J1p3_1.e[1] = Vout.J1p3_1.BondCon1.d * Vout.J1p3_1.BondCon1.e;
//   Vout.J1p3_1.f[1] = Vout.J1p3_1.BondCon1.f;
//   Vout.J1p3_1.e[2] = Vout.J1p3_1.BondCon2.d * Vout.J1p3_1.BondCon2.e;
//   Vout.J1p3_1.f[2] = Vout.J1p3_1.BondCon2.f;
//   Vout.J1p3_1.e[3] = Vout.J1p3_1.BondCon3.d * Vout.J1p3_1.BondCon3.e;
//   Vout.J1p3_1.f[3] = Vout.J1p3_1.BondCon3.f;
//   Vout.B1.BondCon2.e = Vout.B1.BondCon1.e;
//   Vout.B1.BondCon2.f = Vout.B1.BondCon1.f;
//   Vout.B1.BondCon1.d = -1.0;
//   Vout.B1.BondCon2.d = 1.0;
//   Vout.B2.BondCon2.e = Vout.B2.BondCon1.e;
//   Vout.B2.BondCon2.f = Vout.B2.BondCon1.f;
//   Vout.B2.BondCon1.d = -1.0;
//   Vout.B2.BondCon2.d = 1.0;
//   Vout.El2BG1.BondCon1.e = Vout.El2BG1.p.v;
//   Vout.El2BG1.BondCon1.f = Vout.El2BG1.p.i;
//   Vout.BG2El1.BondCon1.e = Vout.BG2El1.n.v;
//   Vout.BG2El1.BondCon1.f = -Vout.BG2El1.n.i;
//   Vout.De1.OutPort1 = Vout.De1.e;
//   Vout.De1.f = 0.0;
//   Vout.De1.e = Vout.De1.BondCon1.e;
//   Vout.De1.f = Vout.De1.BondCon1.d * Vout.De1.BondCon1.f;
//   Vout.B3.BondCon2.e = Vout.B3.BondCon1.e;
//   Vout.B3.BondCon2.f = Vout.B3.BondCon1.f;
//   Vout.B3.BondCon1.d = -1.0;
//   Vout.B3.BondCon2.d = 1.0;
//   Vout.v = Vout.p.v - Vout.n.v;
//   Vout.i = Vout.p.i;
//   FixedTemperature1.BG2Heat1.BondCon1.e = FixedTemperature1.BG2Heat1.port_b.T;
//   FixedTemperature1.BG2Heat1.BondCon1.e * FixedTemperature1.BG2Heat1.BondCon1.f = -FixedTemperature1.BG2Heat1.port_b.Q_flow;
//   FixedTemperature1.Tabs.e0 = FixedTemperature1.Tabs.s;
//   FixedTemperature1.Tabs.e = FixedTemperature1.Tabs.e0;
//   FixedTemperature1.Tabs.e = FixedTemperature1.Tabs.BondCon1.e;
//   FixedTemperature1.Tabs.f = (-FixedTemperature1.Tabs.BondCon1.d) * FixedTemperature1.Tabs.BondCon1.f;
//   FixedTemperature1.B1.fBondCon1.e = FixedTemperature1.B1.eBondCon1.e;
//   FixedTemperature1.B1.eBondCon1.f = FixedTemperature1.B1.fBondCon1.f;
//   FixedTemperature1.B1.eBondCon1.d = -1.0;
//   FixedTemperature1.B1.fBondCon1.d = 1.0;
//   FixedTemperature1.Tabs.s = FixedTemperature1.T;
//   Rd2.J1p3_1.f[2] = Rd2.J1p3_1.f[1];
//   Rd2.J1p3_1.f[3] = Rd2.J1p3_1.f[2];
//   Rd2.J1p3_1.e[1] + (Rd2.J1p3_1.e[2] + Rd2.J1p3_1.e[3]) = 0.0;
//   Rd2.J1p3_1.e[1] = Rd2.J1p3_1.BondCon1.d * Rd2.J1p3_1.BondCon1.e;
//   Rd2.J1p3_1.f[1] = Rd2.J1p3_1.BondCon1.f;
//   Rd2.J1p3_1.e[2] = Rd2.J1p3_1.BondCon2.d * Rd2.J1p3_1.BondCon2.e;
//   Rd2.J1p3_1.f[2] = Rd2.J1p3_1.BondCon2.f;
//   Rd2.J1p3_1.e[3] = Rd2.J1p3_1.BondCon3.d * Rd2.J1p3_1.BondCon3.e;
//   Rd2.J1p3_1.f[3] = Rd2.J1p3_1.BondCon3.f;
//   Rd2.B1.BondCon2.e = Rd2.B1.BondCon1.e;
//   Rd2.B1.BondCon2.f = Rd2.B1.BondCon1.f;
//   Rd2.B1.BondCon1.d = -1.0;
//   Rd2.B1.BondCon2.d = 1.0;
//   Rd2.B2.BondCon2.e = Rd2.B2.BondCon1.e;
//   Rd2.B2.BondCon2.f = Rd2.B2.BondCon1.f;
//   Rd2.B2.BondCon1.d = -1.0;
//   Rd2.B2.BondCon2.d = 1.0;
//   Rd2.B3.BondCon2.e = Rd2.B3.BondCon1.e;
//   Rd2.B3.BondCon2.f = Rd2.B3.BondCon1.f;
//   Rd2.B3.BondCon1.d = -1.0;
//   Rd2.B3.BondCon2.d = 1.0;
//   Rd2.El2BG1.BondCon1.e = Rd2.El2BG1.p.v;
//   Rd2.El2BG1.BondCon1.f = Rd2.El2BG1.p.i;
//   Rd2.BG2El1.BondCon1.e = Rd2.BG2El1.n.v;
//   Rd2.BG2El1.BondCon1.f = -Rd2.BG2El1.n.i;
//   Rd2.B6.fBondCon1.e = Rd2.B6.eBondCon1.e;
//   Rd2.B6.eBondCon1.f = Rd2.B6.fBondCon1.f;
//   Rd2.B6.eBondCon1.d = -1.0;
//   Rd2.B6.fBondCon1.d = 1.0;
//   Rd2.T_nom.e = Rd2.T_nom.e0;
//   Rd2.T_nom.e = Rd2.T_nom.BondCon1.e;
//   Rd2.T_nom.f = (-Rd2.T_nom.BondCon1.d) * Rd2.T_nom.BondCon1.f;
//   Rd2.R1.Rval = (Rd2.R1.R * (1.0 + (Rd2.R1.TR1 * Rd2.R1.DTemp + Rd2.R1.TR2 * Rd2.R1.DTempSq))) / Rd2.R1.Area;
//   Rd2.R1.e1 = Rd2.R1.Rval * Rd2.R1.f1;
//   Rd2.R1.e1 * Rd2.R1.f1 = Rd2.R1.e2 * Rd2.R1.f2;
//   Rd2.R1.DTempSq = Rd2.R1.DTemp ^ 2.0;
//   Rd2.R1.DTemp = Rd2.R1.e2 - Rd2.R1.Tnom;
//   Rd2.R1.e1 = Rd2.R1.BondCon1.e;
//   Rd2.R1.f1 = Rd2.R1.BondCon1.d * Rd2.R1.BondCon1.f;
//   Rd2.R1.e2 = Rd2.R1.BondCon2.e;
//   Rd2.R1.f2 = (-Rd2.R1.BondCon2.d) * Rd2.R1.BondCon2.f;
//   Rd2.B4.fBondCon1.e = Rd2.B4.eBondCon1.e;
//   Rd2.B4.eBondCon1.f = Rd2.B4.fBondCon1.f;
//   Rd2.B4.fBondCon1.d = -1.0;
//   Rd2.B4.eBondCon1.d = 1.0;
//   Rd2.Sw1.J1p3_1.f[2] = Rd2.Sw1.J1p3_1.f[1];
//   Rd2.Sw1.J1p3_1.f[3] = Rd2.Sw1.J1p3_1.f[2];
//   Rd2.Sw1.J1p3_1.e[1] + (Rd2.Sw1.J1p3_1.e[2] + Rd2.Sw1.J1p3_1.e[3]) = 0.0;
//   Rd2.Sw1.J1p3_1.e[1] = Rd2.Sw1.J1p3_1.BondCon1.d * Rd2.Sw1.J1p3_1.BondCon1.e;
//   Rd2.Sw1.J1p3_1.f[1] = Rd2.Sw1.J1p3_1.BondCon1.f;
//   Rd2.Sw1.J1p3_1.e[2] = Rd2.Sw1.J1p3_1.BondCon2.d * Rd2.Sw1.J1p3_1.BondCon2.e;
//   Rd2.Sw1.J1p3_1.f[2] = Rd2.Sw1.J1p3_1.BondCon2.f;
//   Rd2.Sw1.J1p3_1.e[3] = Rd2.Sw1.J1p3_1.BondCon3.d * Rd2.Sw1.J1p3_1.BondCon3.e;
//   Rd2.Sw1.J1p3_1.f[3] = Rd2.Sw1.J1p3_1.BondCon3.f;
//   Rd2.Sw1.B1.BondCon2.e = Rd2.Sw1.B1.BondCon1.e;
//   Rd2.Sw1.B1.BondCon2.f = Rd2.Sw1.B1.BondCon1.f;
//   Rd2.Sw1.B1.BondCon1.d = -1.0;
//   Rd2.Sw1.B1.BondCon2.d = 1.0;
//   Rd2.Sw1.B2.BondCon2.e = Rd2.Sw1.B2.BondCon1.e;
//   Rd2.Sw1.B2.BondCon2.f = Rd2.Sw1.B2.BondCon1.f;
//   Rd2.Sw1.B2.BondCon1.d = -1.0;
//   Rd2.Sw1.B2.BondCon2.d = 1.0;
//   Rd2.Sw1.J0p3_1.e[2] = Rd2.Sw1.J0p3_1.e[1];
//   Rd2.Sw1.J0p3_1.e[3] = Rd2.Sw1.J0p3_1.e[2];
//   Rd2.Sw1.J0p3_1.f[1] + (Rd2.Sw1.J0p3_1.f[2] + Rd2.Sw1.J0p3_1.f[3]) = 0.0;
//   Rd2.Sw1.J0p3_1.e[1] = Rd2.Sw1.J0p3_1.BondCon1.e;
//   Rd2.Sw1.J0p3_1.f[1] = Rd2.Sw1.J0p3_1.BondCon1.d * Rd2.Sw1.J0p3_1.BondCon1.f;
//   Rd2.Sw1.J0p3_1.e[2] = Rd2.Sw1.J0p3_1.BondCon2.e;
//   Rd2.Sw1.J0p3_1.f[2] = Rd2.Sw1.J0p3_1.BondCon2.d * Rd2.Sw1.J0p3_1.BondCon2.f;
//   Rd2.Sw1.J0p3_1.e[3] = Rd2.Sw1.J0p3_1.BondCon3.e;
//   Rd2.Sw1.J0p3_1.f[3] = Rd2.Sw1.J0p3_1.BondCon3.d * Rd2.Sw1.J0p3_1.BondCon3.f;
//   Rd2.Sw1.B4.BondCon2.e = Rd2.Sw1.B4.BondCon1.e;
//   Rd2.Sw1.B4.BondCon2.f = Rd2.Sw1.B4.BondCon1.f;
//   Rd2.Sw1.B4.BondCon1.d = -1.0;
//   Rd2.Sw1.B4.BondCon2.d = 1.0;
//   Rd2.Sw1.j0p2_1.e2 = Rd2.Sw1.j0p2_1.e1;
//   Rd2.Sw1.j0p2_1.f1 + Rd2.Sw1.j0p2_1.f2 = 0.0;
//   Rd2.Sw1.j0p2_1.e1 = Rd2.Sw1.j0p2_1.BondCon1.e;
//   Rd2.Sw1.j0p2_1.f1 = Rd2.Sw1.j0p2_1.BondCon1.d * Rd2.Sw1.j0p2_1.BondCon1.f;
//   Rd2.Sw1.j0p2_1.e2 = Rd2.Sw1.j0p2_1.BondCon2.e;
//   Rd2.Sw1.j0p2_1.f2 = Rd2.Sw1.j0p2_1.BondCon2.d * Rd2.Sw1.j0p2_1.BondCon2.f;
//   Rd2.Sw1.j0p2_2.e2 = Rd2.Sw1.j0p2_2.e1;
//   Rd2.Sw1.j0p2_2.f1 + Rd2.Sw1.j0p2_2.f2 = 0.0;
//   Rd2.Sw1.j0p2_2.e1 = Rd2.Sw1.j0p2_2.BondCon1.e;
//   Rd2.Sw1.j0p2_2.f1 = Rd2.Sw1.j0p2_2.BondCon1.d * Rd2.Sw1.j0p2_2.BondCon1.f;
//   Rd2.Sw1.j0p2_2.e2 = Rd2.Sw1.j0p2_2.BondCon2.e;
//   Rd2.Sw1.j0p2_2.f2 = Rd2.Sw1.j0p2_2.BondCon2.d * Rd2.Sw1.j0p2_2.BondCon2.f;
//   Rd2.Sw1.Sw1.open = Rd2.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Rd2.Sw1.Sw1.open then Rd2.Sw1.Sw1.f else Rd2.Sw1.Sw1.e;
//   Rd2.Sw1.Sw1.e = Rd2.Sw1.Sw1.BondCon1.e;
//   Rd2.Sw1.Sw1.f = Rd2.Sw1.Sw1.BondCon1.d * Rd2.Sw1.Sw1.BondCon1.f;
//   Rd2.Sw1.B3.BondCon2.e = Rd2.Sw1.B3.BondCon1.e;
//   Rd2.Sw1.B3.BondCon2.f = Rd2.Sw1.B3.BondCon1.f;
//   Rd2.Sw1.B3.BondCon1.d = -1.0;
//   Rd2.Sw1.B3.BondCon2.d = 1.0;
//   Rd2.B5.fBondCon1.e = Rd2.B5.eBondCon1.e;
//   Rd2.B5.eBondCon1.f = Rd2.B5.fBondCon1.f;
//   Rd2.B5.fBondCon1.d = -1.0;
//   Rd2.B5.eBondCon1.d = 1.0;
//   Rd2.BG2Heat1.BondCon1.e = Rd2.BG2Heat1.port_b.T;
//   Rd2.BG2Heat1.BondCon1.e * Rd2.BG2Heat1.BondCon1.f = -Rd2.BG2Heat1.port_b.Q_flow;
//   Rd2.Sw1.control = true;
//   Rd2.v = Rd2.p.v - Rd2.n.v;
//   Rd2.i = Rd2.p.i;
//   V1.El2BG1.BondCon1.e = V1.El2BG1.p.v;
//   V1.El2BG1.BondCon1.f = V1.El2BG1.p.i;
//   V1.BG2El1.BondCon1.e = V1.BG2El1.n.v;
//   V1.BG2El1.BondCon1.f = -V1.BG2El1.n.i;
//   V1.J1p3_1.f[2] = V1.J1p3_1.f[1];
//   V1.J1p3_1.f[3] = V1.J1p3_1.f[2];
//   V1.J1p3_1.e[1] + (V1.J1p3_1.e[2] + V1.J1p3_1.e[3]) = 0.0;
//   V1.J1p3_1.e[1] = V1.J1p3_1.BondCon1.d * V1.J1p3_1.BondCon1.e;
//   V1.J1p3_1.f[1] = V1.J1p3_1.BondCon1.f;
//   V1.J1p3_1.e[2] = V1.J1p3_1.BondCon2.d * V1.J1p3_1.BondCon2.e;
//   V1.J1p3_1.f[2] = V1.J1p3_1.BondCon2.f;
//   V1.J1p3_1.e[3] = V1.J1p3_1.BondCon3.d * V1.J1p3_1.BondCon3.e;
//   V1.J1p3_1.f[3] = V1.J1p3_1.BondCon3.f;
//   V1.B1.BondCon2.e = V1.B1.BondCon1.e;
//   V1.B1.BondCon2.f = V1.B1.BondCon1.f;
//   V1.B1.BondCon1.d = -1.0;
//   V1.B1.BondCon2.d = 1.0;
//   V1.B2.BondCon2.e = V1.B2.BondCon1.e;
//   V1.B2.BondCon2.f = V1.B2.BondCon1.f;
//   V1.B2.BondCon1.d = -1.0;
//   V1.B2.BondCon2.d = 1.0;
//   V1.B3.fBondCon1.e = V1.B3.eBondCon1.e;
//   V1.B3.eBondCon1.f = V1.B3.fBondCon1.f;
//   V1.B3.eBondCon1.d = -1.0;
//   V1.B3.fBondCon1.d = 1.0;
//   V1.V1.Ramp1.y = V1.V1.Ramp1.offset + (if time < V1.V1.Ramp1.startTime then 0.0 else if time < V1.V1.Ramp1.startTime + V1.V1.Ramp1.duration then ((time - V1.V1.Ramp1.startTime) * V1.V1.Ramp1.height) / V1.V1.Ramp1.duration else V1.V1.Ramp1.height);
//   V1.V1.e = V1.V1.Ramp1.y;
//   V1.V1.e = V1.V1.BondCon1.e;
//   V1.V1.f = (-V1.V1.BondCon1.d) * V1.V1.BondCon1.f;
//   V1.v = V1.p.v - V1.n.v;
//   V1.i = V1.p.i;
//   Rg.J1p3_1.f[2] = Rg.J1p3_1.f[1];
//   Rg.J1p3_1.f[3] = Rg.J1p3_1.f[2];
//   Rg.J1p3_1.e[1] + (Rg.J1p3_1.e[2] + Rg.J1p3_1.e[3]) = 0.0;
//   Rg.J1p3_1.e[1] = Rg.J1p3_1.BondCon1.d * Rg.J1p3_1.BondCon1.e;
//   Rg.J1p3_1.f[1] = Rg.J1p3_1.BondCon1.f;
//   Rg.J1p3_1.e[2] = Rg.J1p3_1.BondCon2.d * Rg.J1p3_1.BondCon2.e;
//   Rg.J1p3_1.f[2] = Rg.J1p3_1.BondCon2.f;
//   Rg.J1p3_1.e[3] = Rg.J1p3_1.BondCon3.d * Rg.J1p3_1.BondCon3.e;
//   Rg.J1p3_1.f[3] = Rg.J1p3_1.BondCon3.f;
//   Rg.B1.BondCon2.e = Rg.B1.BondCon1.e;
//   Rg.B1.BondCon2.f = Rg.B1.BondCon1.f;
//   Rg.B1.BondCon1.d = -1.0;
//   Rg.B1.BondCon2.d = 1.0;
//   Rg.B2.BondCon2.e = Rg.B2.BondCon1.e;
//   Rg.B2.BondCon2.f = Rg.B2.BondCon1.f;
//   Rg.B2.BondCon1.d = -1.0;
//   Rg.B2.BondCon2.d = 1.0;
//   Rg.B3.BondCon2.e = Rg.B3.BondCon1.e;
//   Rg.B3.BondCon2.f = Rg.B3.BondCon1.f;
//   Rg.B3.BondCon1.d = -1.0;
//   Rg.B3.BondCon2.d = 1.0;
//   Rg.El2BG1.BondCon1.e = Rg.El2BG1.p.v;
//   Rg.El2BG1.BondCon1.f = Rg.El2BG1.p.i;
//   Rg.BG2El1.BondCon1.e = Rg.BG2El1.n.v;
//   Rg.BG2El1.BondCon1.f = -Rg.BG2El1.n.i;
//   Rg.B6.fBondCon1.e = Rg.B6.eBondCon1.e;
//   Rg.B6.eBondCon1.f = Rg.B6.fBondCon1.f;
//   Rg.B6.eBondCon1.d = -1.0;
//   Rg.B6.fBondCon1.d = 1.0;
//   Rg.T_nom.e = Rg.T_nom.e0;
//   Rg.T_nom.e = Rg.T_nom.BondCon1.e;
//   Rg.T_nom.f = (-Rg.T_nom.BondCon1.d) * Rg.T_nom.BondCon1.f;
//   Rg.R1.Rval = (Rg.R1.R * (1.0 + (Rg.R1.TR1 * Rg.R1.DTemp + Rg.R1.TR2 * Rg.R1.DTempSq))) / Rg.R1.Area;
//   Rg.R1.e1 = Rg.R1.Rval * Rg.R1.f1;
//   Rg.R1.e1 * Rg.R1.f1 = Rg.R1.e2 * Rg.R1.f2;
//   Rg.R1.DTempSq = Rg.R1.DTemp ^ 2.0;
//   Rg.R1.DTemp = Rg.R1.e2 - Rg.R1.Tnom;
//   Rg.R1.e1 = Rg.R1.BondCon1.e;
//   Rg.R1.f1 = Rg.R1.BondCon1.d * Rg.R1.BondCon1.f;
//   Rg.R1.e2 = Rg.R1.BondCon2.e;
//   Rg.R1.f2 = (-Rg.R1.BondCon2.d) * Rg.R1.BondCon2.f;
//   Rg.B4.fBondCon1.e = Rg.B4.eBondCon1.e;
//   Rg.B4.eBondCon1.f = Rg.B4.fBondCon1.f;
//   Rg.B4.fBondCon1.d = -1.0;
//   Rg.B4.eBondCon1.d = 1.0;
//   Rg.Sw1.J1p3_1.f[2] = Rg.Sw1.J1p3_1.f[1];
//   Rg.Sw1.J1p3_1.f[3] = Rg.Sw1.J1p3_1.f[2];
//   Rg.Sw1.J1p3_1.e[1] + (Rg.Sw1.J1p3_1.e[2] + Rg.Sw1.J1p3_1.e[3]) = 0.0;
//   Rg.Sw1.J1p3_1.e[1] = Rg.Sw1.J1p3_1.BondCon1.d * Rg.Sw1.J1p3_1.BondCon1.e;
//   Rg.Sw1.J1p3_1.f[1] = Rg.Sw1.J1p3_1.BondCon1.f;
//   Rg.Sw1.J1p3_1.e[2] = Rg.Sw1.J1p3_1.BondCon2.d * Rg.Sw1.J1p3_1.BondCon2.e;
//   Rg.Sw1.J1p3_1.f[2] = Rg.Sw1.J1p3_1.BondCon2.f;
//   Rg.Sw1.J1p3_1.e[3] = Rg.Sw1.J1p3_1.BondCon3.d * Rg.Sw1.J1p3_1.BondCon3.e;
//   Rg.Sw1.J1p3_1.f[3] = Rg.Sw1.J1p3_1.BondCon3.f;
//   Rg.Sw1.B1.BondCon2.e = Rg.Sw1.B1.BondCon1.e;
//   Rg.Sw1.B1.BondCon2.f = Rg.Sw1.B1.BondCon1.f;
//   Rg.Sw1.B1.BondCon1.d = -1.0;
//   Rg.Sw1.B1.BondCon2.d = 1.0;
//   Rg.Sw1.B2.BondCon2.e = Rg.Sw1.B2.BondCon1.e;
//   Rg.Sw1.B2.BondCon2.f = Rg.Sw1.B2.BondCon1.f;
//   Rg.Sw1.B2.BondCon1.d = -1.0;
//   Rg.Sw1.B2.BondCon2.d = 1.0;
//   Rg.Sw1.J0p3_1.e[2] = Rg.Sw1.J0p3_1.e[1];
//   Rg.Sw1.J0p3_1.e[3] = Rg.Sw1.J0p3_1.e[2];
//   Rg.Sw1.J0p3_1.f[1] + (Rg.Sw1.J0p3_1.f[2] + Rg.Sw1.J0p3_1.f[3]) = 0.0;
//   Rg.Sw1.J0p3_1.e[1] = Rg.Sw1.J0p3_1.BondCon1.e;
//   Rg.Sw1.J0p3_1.f[1] = Rg.Sw1.J0p3_1.BondCon1.d * Rg.Sw1.J0p3_1.BondCon1.f;
//   Rg.Sw1.J0p3_1.e[2] = Rg.Sw1.J0p3_1.BondCon2.e;
//   Rg.Sw1.J0p3_1.f[2] = Rg.Sw1.J0p3_1.BondCon2.d * Rg.Sw1.J0p3_1.BondCon2.f;
//   Rg.Sw1.J0p3_1.e[3] = Rg.Sw1.J0p3_1.BondCon3.e;
//   Rg.Sw1.J0p3_1.f[3] = Rg.Sw1.J0p3_1.BondCon3.d * Rg.Sw1.J0p3_1.BondCon3.f;
//   Rg.Sw1.B4.BondCon2.e = Rg.Sw1.B4.BondCon1.e;
//   Rg.Sw1.B4.BondCon2.f = Rg.Sw1.B4.BondCon1.f;
//   Rg.Sw1.B4.BondCon1.d = -1.0;
//   Rg.Sw1.B4.BondCon2.d = 1.0;
//   Rg.Sw1.j0p2_1.e2 = Rg.Sw1.j0p2_1.e1;
//   Rg.Sw1.j0p2_1.f1 + Rg.Sw1.j0p2_1.f2 = 0.0;
//   Rg.Sw1.j0p2_1.e1 = Rg.Sw1.j0p2_1.BondCon1.e;
//   Rg.Sw1.j0p2_1.f1 = Rg.Sw1.j0p2_1.BondCon1.d * Rg.Sw1.j0p2_1.BondCon1.f;
//   Rg.Sw1.j0p2_1.e2 = Rg.Sw1.j0p2_1.BondCon2.e;
//   Rg.Sw1.j0p2_1.f2 = Rg.Sw1.j0p2_1.BondCon2.d * Rg.Sw1.j0p2_1.BondCon2.f;
//   Rg.Sw1.j0p2_2.e2 = Rg.Sw1.j0p2_2.e1;
//   Rg.Sw1.j0p2_2.f1 + Rg.Sw1.j0p2_2.f2 = 0.0;
//   Rg.Sw1.j0p2_2.e1 = Rg.Sw1.j0p2_2.BondCon1.e;
//   Rg.Sw1.j0p2_2.f1 = Rg.Sw1.j0p2_2.BondCon1.d * Rg.Sw1.j0p2_2.BondCon1.f;
//   Rg.Sw1.j0p2_2.e2 = Rg.Sw1.j0p2_2.BondCon2.e;
//   Rg.Sw1.j0p2_2.f2 = Rg.Sw1.j0p2_2.BondCon2.d * Rg.Sw1.j0p2_2.BondCon2.f;
//   Rg.Sw1.Sw1.open = Rg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Rg.Sw1.Sw1.open then Rg.Sw1.Sw1.f else Rg.Sw1.Sw1.e;
//   Rg.Sw1.Sw1.e = Rg.Sw1.Sw1.BondCon1.e;
//   Rg.Sw1.Sw1.f = Rg.Sw1.Sw1.BondCon1.d * Rg.Sw1.Sw1.BondCon1.f;
//   Rg.Sw1.B3.BondCon2.e = Rg.Sw1.B3.BondCon1.e;
//   Rg.Sw1.B3.BondCon2.f = Rg.Sw1.B3.BondCon1.f;
//   Rg.Sw1.B3.BondCon1.d = -1.0;
//   Rg.Sw1.B3.BondCon2.d = 1.0;
//   Rg.B5.fBondCon1.e = Rg.B5.eBondCon1.e;
//   Rg.B5.eBondCon1.f = Rg.B5.fBondCon1.f;
//   Rg.B5.fBondCon1.d = -1.0;
//   Rg.B5.eBondCon1.d = 1.0;
//   Rg.BG2Heat1.BondCon1.e = Rg.BG2Heat1.port_b.T;
//   Rg.BG2Heat1.BondCon1.e * Rg.BG2Heat1.BondCon1.f = -Rg.BG2Heat1.port_b.Q_flow;
//   Rg.Sw1.control = true;
//   Rg.v = Rg.p.v - Rg.n.v;
//   Rg.i = Rg.p.i;
//   V2.El2BG1.BondCon1.e = V2.El2BG1.p.v;
//   V2.El2BG1.BondCon1.f = V2.El2BG1.p.i;
//   V2.BG2El1.BondCon1.e = V2.BG2El1.n.v;
//   V2.BG2El1.BondCon1.f = -V2.BG2El1.n.i;
//   V2.J1p3_1.f[2] = V2.J1p3_1.f[1];
//   V2.J1p3_1.f[3] = V2.J1p3_1.f[2];
//   V2.J1p3_1.e[1] + (V2.J1p3_1.e[2] + V2.J1p3_1.e[3]) = 0.0;
//   V2.J1p3_1.e[1] = V2.J1p3_1.BondCon1.d * V2.J1p3_1.BondCon1.e;
//   V2.J1p3_1.f[1] = V2.J1p3_1.BondCon1.f;
//   V2.J1p3_1.e[2] = V2.J1p3_1.BondCon2.d * V2.J1p3_1.BondCon2.e;
//   V2.J1p3_1.f[2] = V2.J1p3_1.BondCon2.f;
//   V2.J1p3_1.e[3] = V2.J1p3_1.BondCon3.d * V2.J1p3_1.BondCon3.e;
//   V2.J1p3_1.f[3] = V2.J1p3_1.BondCon3.f;
//   V2.B1.BondCon2.e = V2.B1.BondCon1.e;
//   V2.B1.BondCon2.f = V2.B1.BondCon1.f;
//   V2.B1.BondCon1.d = -1.0;
//   V2.B1.BondCon2.d = 1.0;
//   V2.B2.BondCon2.e = V2.B2.BondCon1.e;
//   V2.B2.BondCon2.f = V2.B2.BondCon1.f;
//   V2.B2.BondCon1.d = -1.0;
//   V2.B2.BondCon2.d = 1.0;
//   V2.B3.fBondCon1.e = V2.B3.eBondCon1.e;
//   V2.B3.eBondCon1.f = V2.B3.fBondCon1.f;
//   V2.B3.eBondCon1.d = -1.0;
//   V2.B3.fBondCon1.d = 1.0;
//   V2.V1.Ramp1.y = V2.V1.Ramp1.offset + (if time < V2.V1.Ramp1.startTime then 0.0 else if time < V2.V1.Ramp1.startTime + V2.V1.Ramp1.duration then ((time - V2.V1.Ramp1.startTime) * V2.V1.Ramp1.height) / V2.V1.Ramp1.duration else V2.V1.Ramp1.height);
//   V2.V1.e = V2.V1.Ramp1.y;
//   V2.V1.e = V2.V1.BondCon1.e;
//   V2.V1.f = (-V2.V1.BondCon1.d) * V2.V1.BondCon1.f;
//   V2.v = V2.p.v - V2.n.v;
//   V2.i = V2.p.i;
//   vin = Vin.v;
//   vout = Vout.v;
//   Jp1.heatPort.Q_flow + (FixedTemperature1.port.Q_flow + (Rg.heatPort.Q_flow + (Jp2.heatPort.Q_flow + (Rd2.heatPort.Q_flow + Rd1.heatPort.Q_flow)))) = 0.0;
//   FixedTemperature1.port.T = Jp1.heatPort.T;
//   FixedTemperature1.port.T = Jp2.heatPort.T;
//   FixedTemperature1.port.T = Rd1.heatPort.T;
//   FixedTemperature1.port.T = Rd2.heatPort.T;
//   FixedTemperature1.port.T = Rg.heatPort.T;
//   Vout.p.i + (Rd1.p.i + Jp1.D.i) = 0.0;
//   Jp1.D.v = Rd1.p.v;
//   Jp1.D.v = Vout.p.v;
//   Jp1.G.i + Vin.p.i = 0.0;
//   Jp1.G.v = Vin.p.v;
//   Vin.n.i + Gnd4.p.i = 0.0;
//   Gnd4.p.v = Vin.n.v;
//   Vout.n.i + (Rd2.p.i + Jp2.D.i) = 0.0;
//   Jp2.D.v = Rd2.p.v;
//   Jp2.D.v = Vout.n.v;
//   Rd1.n.i + (Rd2.n.i + V1.p.i) = 0.0;
//   Rd1.n.v = Rd2.n.v;
//   Rd1.n.v = V1.p.v;
//   V1.n.i + Gnd2.p.i = 0.0;
//   Gnd2.p.v = V1.n.v;
//   Rg.p.i + Gnd1.p.i = 0.0;
//   Gnd1.p.v = Rg.p.v;
//   Jp1.S.i + (Jp2.S.i + Rg.n.i) = 0.0;
//   Jp1.S.v = Jp2.S.v;
//   Jp1.S.v = Rg.n.v;
//   Jp2.G.i + V2.p.i = 0.0;
//   Jp2.G.v = V2.p.v;
//   V2.n.i + Gnd3.p.i = 0.0;
//   Gnd3.p.v = V2.n.v;
//   V2.BG2El1.n.i + (-V2.n.i) = 0.0;
//   V2.BG2El1.n.v = V2.n.v;
//   V2.El2BG1.p.i + (-V2.p.i) = 0.0;
//   V2.El2BG1.p.v = V2.p.v;
//   V2.B3.fBondCon1.d = V2.J1p3_1.BondCon3.d;
//   V2.B3.fBondCon1.f = V2.J1p3_1.BondCon3.f;
//   V2.B3.fBondCon1.e = V2.J1p3_1.BondCon3.e;
//   V2.B2.BondCon1.d = V2.J1p3_1.BondCon1.d;
//   V2.B2.BondCon1.f = V2.J1p3_1.BondCon1.f;
//   V2.B2.BondCon1.e = V2.J1p3_1.BondCon1.e;
//   V2.B2.BondCon2.d = V2.El2BG1.BondCon1.d;
//   V2.B2.BondCon2.f = V2.El2BG1.BondCon1.f;
//   V2.B2.BondCon2.e = V2.El2BG1.BondCon1.e;
//   V2.B1.BondCon1.d = V2.BG2El1.BondCon1.d;
//   V2.B1.BondCon1.f = V2.BG2El1.BondCon1.f;
//   V2.B1.BondCon1.e = V2.BG2El1.BondCon1.e;
//   V2.B1.BondCon2.d = V2.J1p3_1.BondCon2.d;
//   V2.B1.BondCon2.f = V2.J1p3_1.BondCon2.f;
//   V2.B1.BondCon2.e = V2.J1p3_1.BondCon2.e;
//   V2.B3.eBondCon1.d = V2.V1.BondCon1.d;
//   V2.B3.eBondCon1.f = V2.V1.BondCon1.f;
//   V2.B3.eBondCon1.e = V2.V1.BondCon1.e;
//   Rg.B6.eBondCon1.d = Rg.T_nom.BondCon1.d;
//   Rg.B6.eBondCon1.f = Rg.T_nom.BondCon1.f;
//   Rg.B6.eBondCon1.e = Rg.T_nom.BondCon1.e;
//   Rg.BG2El1.n.i + (-Rg.n.i) = 0.0;
//   Rg.BG2El1.n.v = Rg.n.v;
//   Rg.El2BG1.p.i + (-Rg.p.i) = 0.0;
//   Rg.El2BG1.p.v = Rg.p.v;
//   Rg.B3.BondCon1.d = Rg.J1p3_1.BondCon3.d;
//   Rg.B3.BondCon1.f = Rg.J1p3_1.BondCon3.f;
//   Rg.B3.BondCon1.e = Rg.J1p3_1.BondCon3.e;
//   Rg.B2.BondCon2.d = Rg.BG2El1.BondCon1.d;
//   Rg.B2.BondCon2.f = Rg.BG2El1.BondCon1.f;
//   Rg.B2.BondCon2.e = Rg.BG2El1.BondCon1.e;
//   Rg.B1.BondCon1.d = Rg.El2BG1.BondCon1.d;
//   Rg.B1.BondCon1.f = Rg.El2BG1.BondCon1.f;
//   Rg.B1.BondCon1.e = Rg.El2BG1.BondCon1.e;
//   Rg.B2.BondCon1.d = Rg.J1p3_1.BondCon2.d;
//   Rg.B2.BondCon1.f = Rg.J1p3_1.BondCon2.f;
//   Rg.B2.BondCon1.e = Rg.J1p3_1.BondCon2.e;
//   Rg.B1.BondCon2.d = Rg.J1p3_1.BondCon1.d;
//   Rg.B1.BondCon2.f = Rg.J1p3_1.BondCon1.f;
//   Rg.B1.BondCon2.e = Rg.J1p3_1.BondCon1.e;
//   Rg.B3.BondCon2.d = Rg.R1.BondCon1.d;
//   Rg.B3.BondCon2.f = Rg.R1.BondCon1.f;
//   Rg.B3.BondCon2.e = Rg.R1.BondCon1.e;
//   Rg.B4.fBondCon1.d = Rg.R1.BondCon2.d;
//   Rg.B4.fBondCon1.f = Rg.R1.BondCon2.f;
//   Rg.B4.fBondCon1.e = Rg.R1.BondCon2.e;
//   Rg.B4.eBondCon1.d = Rg.Sw1.p.d;
//   Rg.B4.eBondCon1.f = Rg.Sw1.p.f;
//   Rg.B4.eBondCon1.e = Rg.Sw1.p.e;
//   Rg.B6.fBondCon1.d = Rg.Sw1.n1.d;
//   Rg.B6.fBondCon1.f = Rg.Sw1.n1.f;
//   Rg.B6.fBondCon1.e = Rg.Sw1.n1.e;
//   Rg.B5.fBondCon1.d = Rg.Sw1.n2.d;
//   Rg.B5.fBondCon1.f = Rg.Sw1.n2.f;
//   Rg.B5.fBondCon1.e = Rg.Sw1.n2.e;
//   Rg.B5.eBondCon1.d = Rg.BG2Heat1.BondCon1.d;
//   Rg.B5.eBondCon1.f = Rg.BG2Heat1.BondCon1.f;
//   Rg.B5.eBondCon1.e = Rg.BG2Heat1.BondCon1.e;
//   Rg.BG2Heat1.port_b.Q_flow + (-Rg.heatPort.Q_flow) = 0.0;
//   Rg.BG2Heat1.port_b.T = Rg.heatPort.T;
//   Rg.Sw1.B4.BondCon2.d = Rg.Sw1.j0p2_1.BondCon1.d;
//   Rg.Sw1.B4.BondCon2.f = Rg.Sw1.j0p2_1.BondCon1.f;
//   Rg.Sw1.B4.BondCon2.e = Rg.Sw1.j0p2_1.BondCon1.e;
//   Rg.Sw1.j0p2_2.BondCon2.d = Rg.Sw1.n1.d;
//   Rg.Sw1.j0p2_2.BondCon2.f = Rg.Sw1.n1.f;
//   Rg.Sw1.j0p2_2.BondCon2.e = Rg.Sw1.n1.e;
//   Rg.Sw1.B2.BondCon2.d = Rg.Sw1.j0p2_2.BondCon1.d;
//   Rg.Sw1.B2.BondCon2.f = Rg.Sw1.j0p2_2.BondCon1.f;
//   Rg.Sw1.B2.BondCon2.e = Rg.Sw1.j0p2_2.BondCon1.e;
//   Rg.Sw1.j0p2_1.BondCon2.d = Rg.Sw1.n2.d;
//   Rg.Sw1.j0p2_1.BondCon2.f = Rg.Sw1.n2.f;
//   Rg.Sw1.j0p2_1.BondCon2.e = Rg.Sw1.n2.e;
//   Rg.Sw1.B1.BondCon1.d = Rg.Sw1.J0p3_1.BondCon3.d;
//   Rg.Sw1.B1.BondCon1.f = Rg.Sw1.J0p3_1.BondCon3.f;
//   Rg.Sw1.B1.BondCon1.e = Rg.Sw1.J0p3_1.BondCon3.e;
//   Rg.Sw1.B1.BondCon2.d = Rg.Sw1.J1p3_1.BondCon1.d;
//   Rg.Sw1.B1.BondCon2.f = Rg.Sw1.J1p3_1.BondCon1.f;
//   Rg.Sw1.B1.BondCon2.e = Rg.Sw1.J1p3_1.BondCon1.e;
//   Rg.Sw1.B2.BondCon1.d = Rg.Sw1.J1p3_1.BondCon2.d;
//   Rg.Sw1.B2.BondCon1.f = Rg.Sw1.J1p3_1.BondCon2.f;
//   Rg.Sw1.B2.BondCon1.e = Rg.Sw1.J1p3_1.BondCon2.e;
//   Rg.Sw1.J0p3_1.BondCon2.d = Rg.Sw1.p.d;
//   Rg.Sw1.J0p3_1.BondCon2.f = Rg.Sw1.p.f;
//   Rg.Sw1.J0p3_1.BondCon2.e = Rg.Sw1.p.e;
//   Rg.Sw1.B4.BondCon1.d = Rg.Sw1.J0p3_1.BondCon1.d;
//   Rg.Sw1.B4.BondCon1.f = Rg.Sw1.J0p3_1.BondCon1.f;
//   Rg.Sw1.B4.BondCon1.e = Rg.Sw1.J0p3_1.BondCon1.e;
//   Rg.Sw1.B3.BondCon1.d = Rg.Sw1.J1p3_1.BondCon3.d;
//   Rg.Sw1.B3.BondCon1.f = Rg.Sw1.J1p3_1.BondCon3.f;
//   Rg.Sw1.B3.BondCon1.e = Rg.Sw1.J1p3_1.BondCon3.e;
//   Rg.Sw1.B3.BondCon2.d = Rg.Sw1.Sw1.BondCon1.d;
//   Rg.Sw1.B3.BondCon2.f = Rg.Sw1.Sw1.BondCon1.f;
//   Rg.Sw1.B3.BondCon2.e = Rg.Sw1.Sw1.BondCon1.e;
//   Rg.Sw1.Sw1.BooleanInPort1 = Rg.Sw1.control;
//   V1.BG2El1.n.i + (-V1.n.i) = 0.0;
//   V1.BG2El1.n.v = V1.n.v;
//   V1.El2BG1.p.i + (-V1.p.i) = 0.0;
//   V1.El2BG1.p.v = V1.p.v;
//   V1.B3.fBondCon1.d = V1.J1p3_1.BondCon3.d;
//   V1.B3.fBondCon1.f = V1.J1p3_1.BondCon3.f;
//   V1.B3.fBondCon1.e = V1.J1p3_1.BondCon3.e;
//   V1.B2.BondCon1.d = V1.J1p3_1.BondCon1.d;
//   V1.B2.BondCon1.f = V1.J1p3_1.BondCon1.f;
//   V1.B2.BondCon1.e = V1.J1p3_1.BondCon1.e;
//   V1.B2.BondCon2.d = V1.El2BG1.BondCon1.d;
//   V1.B2.BondCon2.f = V1.El2BG1.BondCon1.f;
//   V1.B2.BondCon2.e = V1.El2BG1.BondCon1.e;
//   V1.B1.BondCon1.d = V1.BG2El1.BondCon1.d;
//   V1.B1.BondCon1.f = V1.BG2El1.BondCon1.f;
//   V1.B1.BondCon1.e = V1.BG2El1.BondCon1.e;
//   V1.B1.BondCon2.d = V1.J1p3_1.BondCon2.d;
//   V1.B1.BondCon2.f = V1.J1p3_1.BondCon2.f;
//   V1.B1.BondCon2.e = V1.J1p3_1.BondCon2.e;
//   V1.B3.eBondCon1.d = V1.V1.BondCon1.d;
//   V1.B3.eBondCon1.f = V1.V1.BondCon1.f;
//   V1.B3.eBondCon1.e = V1.V1.BondCon1.e;
//   Rd2.B6.eBondCon1.d = Rd2.T_nom.BondCon1.d;
//   Rd2.B6.eBondCon1.f = Rd2.T_nom.BondCon1.f;
//   Rd2.B6.eBondCon1.e = Rd2.T_nom.BondCon1.e;
//   Rd2.BG2El1.n.i + (-Rd2.n.i) = 0.0;
//   Rd2.BG2El1.n.v = Rd2.n.v;
//   Rd2.El2BG1.p.i + (-Rd2.p.i) = 0.0;
//   Rd2.El2BG1.p.v = Rd2.p.v;
//   Rd2.B3.BondCon1.d = Rd2.J1p3_1.BondCon3.d;
//   Rd2.B3.BondCon1.f = Rd2.J1p3_1.BondCon3.f;
//   Rd2.B3.BondCon1.e = Rd2.J1p3_1.BondCon3.e;
//   Rd2.B2.BondCon2.d = Rd2.BG2El1.BondCon1.d;
//   Rd2.B2.BondCon2.f = Rd2.BG2El1.BondCon1.f;
//   Rd2.B2.BondCon2.e = Rd2.BG2El1.BondCon1.e;
//   Rd2.B1.BondCon1.d = Rd2.El2BG1.BondCon1.d;
//   Rd2.B1.BondCon1.f = Rd2.El2BG1.BondCon1.f;
//   Rd2.B1.BondCon1.e = Rd2.El2BG1.BondCon1.e;
//   Rd2.B2.BondCon1.d = Rd2.J1p3_1.BondCon2.d;
//   Rd2.B2.BondCon1.f = Rd2.J1p3_1.BondCon2.f;
//   Rd2.B2.BondCon1.e = Rd2.J1p3_1.BondCon2.e;
//   Rd2.B1.BondCon2.d = Rd2.J1p3_1.BondCon1.d;
//   Rd2.B1.BondCon2.f = Rd2.J1p3_1.BondCon1.f;
//   Rd2.B1.BondCon2.e = Rd2.J1p3_1.BondCon1.e;
//   Rd2.B3.BondCon2.d = Rd2.R1.BondCon1.d;
//   Rd2.B3.BondCon2.f = Rd2.R1.BondCon1.f;
//   Rd2.B3.BondCon2.e = Rd2.R1.BondCon1.e;
//   Rd2.B4.fBondCon1.d = Rd2.R1.BondCon2.d;
//   Rd2.B4.fBondCon1.f = Rd2.R1.BondCon2.f;
//   Rd2.B4.fBondCon1.e = Rd2.R1.BondCon2.e;
//   Rd2.B4.eBondCon1.d = Rd2.Sw1.p.d;
//   Rd2.B4.eBondCon1.f = Rd2.Sw1.p.f;
//   Rd2.B4.eBondCon1.e = Rd2.Sw1.p.e;
//   Rd2.B6.fBondCon1.d = Rd2.Sw1.n1.d;
//   Rd2.B6.fBondCon1.f = Rd2.Sw1.n1.f;
//   Rd2.B6.fBondCon1.e = Rd2.Sw1.n1.e;
//   Rd2.B5.fBondCon1.d = Rd2.Sw1.n2.d;
//   Rd2.B5.fBondCon1.f = Rd2.Sw1.n2.f;
//   Rd2.B5.fBondCon1.e = Rd2.Sw1.n2.e;
//   Rd2.B5.eBondCon1.d = Rd2.BG2Heat1.BondCon1.d;
//   Rd2.B5.eBondCon1.f = Rd2.BG2Heat1.BondCon1.f;
//   Rd2.B5.eBondCon1.e = Rd2.BG2Heat1.BondCon1.e;
//   Rd2.BG2Heat1.port_b.Q_flow + (-Rd2.heatPort.Q_flow) = 0.0;
//   Rd2.BG2Heat1.port_b.T = Rd2.heatPort.T;
//   Rd2.Sw1.B4.BondCon2.d = Rd2.Sw1.j0p2_1.BondCon1.d;
//   Rd2.Sw1.B4.BondCon2.f = Rd2.Sw1.j0p2_1.BondCon1.f;
//   Rd2.Sw1.B4.BondCon2.e = Rd2.Sw1.j0p2_1.BondCon1.e;
//   Rd2.Sw1.j0p2_2.BondCon2.d = Rd2.Sw1.n1.d;
//   Rd2.Sw1.j0p2_2.BondCon2.f = Rd2.Sw1.n1.f;
//   Rd2.Sw1.j0p2_2.BondCon2.e = Rd2.Sw1.n1.e;
//   Rd2.Sw1.B2.BondCon2.d = Rd2.Sw1.j0p2_2.BondCon1.d;
//   Rd2.Sw1.B2.BondCon2.f = Rd2.Sw1.j0p2_2.BondCon1.f;
//   Rd2.Sw1.B2.BondCon2.e = Rd2.Sw1.j0p2_2.BondCon1.e;
//   Rd2.Sw1.j0p2_1.BondCon2.d = Rd2.Sw1.n2.d;
//   Rd2.Sw1.j0p2_1.BondCon2.f = Rd2.Sw1.n2.f;
//   Rd2.Sw1.j0p2_1.BondCon2.e = Rd2.Sw1.n2.e;
//   Rd2.Sw1.B1.BondCon1.d = Rd2.Sw1.J0p3_1.BondCon3.d;
//   Rd2.Sw1.B1.BondCon1.f = Rd2.Sw1.J0p3_1.BondCon3.f;
//   Rd2.Sw1.B1.BondCon1.e = Rd2.Sw1.J0p3_1.BondCon3.e;
//   Rd2.Sw1.B1.BondCon2.d = Rd2.Sw1.J1p3_1.BondCon1.d;
//   Rd2.Sw1.B1.BondCon2.f = Rd2.Sw1.J1p3_1.BondCon1.f;
//   Rd2.Sw1.B1.BondCon2.e = Rd2.Sw1.J1p3_1.BondCon1.e;
//   Rd2.Sw1.B2.BondCon1.d = Rd2.Sw1.J1p3_1.BondCon2.d;
//   Rd2.Sw1.B2.BondCon1.f = Rd2.Sw1.J1p3_1.BondCon2.f;
//   Rd2.Sw1.B2.BondCon1.e = Rd2.Sw1.J1p3_1.BondCon2.e;
//   Rd2.Sw1.J0p3_1.BondCon2.d = Rd2.Sw1.p.d;
//   Rd2.Sw1.J0p3_1.BondCon2.f = Rd2.Sw1.p.f;
//   Rd2.Sw1.J0p3_1.BondCon2.e = Rd2.Sw1.p.e;
//   Rd2.Sw1.B4.BondCon1.d = Rd2.Sw1.J0p3_1.BondCon1.d;
//   Rd2.Sw1.B4.BondCon1.f = Rd2.Sw1.J0p3_1.BondCon1.f;
//   Rd2.Sw1.B4.BondCon1.e = Rd2.Sw1.J0p3_1.BondCon1.e;
//   Rd2.Sw1.B3.BondCon1.d = Rd2.Sw1.J1p3_1.BondCon3.d;
//   Rd2.Sw1.B3.BondCon1.f = Rd2.Sw1.J1p3_1.BondCon3.f;
//   Rd2.Sw1.B3.BondCon1.e = Rd2.Sw1.J1p3_1.BondCon3.e;
//   Rd2.Sw1.B3.BondCon2.d = Rd2.Sw1.Sw1.BondCon1.d;
//   Rd2.Sw1.B3.BondCon2.f = Rd2.Sw1.Sw1.BondCon1.f;
//   Rd2.Sw1.B3.BondCon2.e = Rd2.Sw1.Sw1.BondCon1.e;
//   Rd2.Sw1.Sw1.BooleanInPort1 = Rd2.Sw1.control;
//   FixedTemperature1.BG2Heat1.port_b.Q_flow + (-FixedTemperature1.port.Q_flow) = 0.0;
//   FixedTemperature1.BG2Heat1.port_b.T = FixedTemperature1.port.T;
//   FixedTemperature1.B1.eBondCon1.d = FixedTemperature1.Tabs.BondCon1.d;
//   FixedTemperature1.B1.eBondCon1.f = FixedTemperature1.Tabs.BondCon1.f;
//   FixedTemperature1.B1.eBondCon1.e = FixedTemperature1.Tabs.BondCon1.e;
//   FixedTemperature1.B1.fBondCon1.d = FixedTemperature1.BG2Heat1.BondCon1.d;
//   FixedTemperature1.B1.fBondCon1.f = FixedTemperature1.BG2Heat1.BondCon1.f;
//   FixedTemperature1.B1.fBondCon1.e = FixedTemperature1.BG2Heat1.BondCon1.e;
//   Vout.BG2El1.n.i + (-Vout.n.i) = 0.0;
//   Vout.BG2El1.n.v = Vout.n.v;
//   Vout.El2BG1.p.i + (-Vout.p.i) = 0.0;
//   Vout.El2BG1.p.v = Vout.p.v;
//   Vout.B2.BondCon2.d = Vout.BG2El1.BondCon1.d;
//   Vout.B2.BondCon2.f = Vout.BG2El1.BondCon1.f;
//   Vout.B2.BondCon2.e = Vout.BG2El1.BondCon1.e;
//   Vout.B1.BondCon1.d = Vout.El2BG1.BondCon1.d;
//   Vout.B1.BondCon1.f = Vout.El2BG1.BondCon1.f;
//   Vout.B1.BondCon1.e = Vout.El2BG1.BondCon1.e;
//   Vout.B2.BondCon1.d = Vout.J1p3_1.BondCon2.d;
//   Vout.B2.BondCon1.f = Vout.J1p3_1.BondCon2.f;
//   Vout.B2.BondCon1.e = Vout.J1p3_1.BondCon2.e;
//   Vout.B1.BondCon2.d = Vout.J1p3_1.BondCon1.d;
//   Vout.B1.BondCon2.f = Vout.J1p3_1.BondCon1.f;
//   Vout.B1.BondCon2.e = Vout.J1p3_1.BondCon1.e;
//   Vout.De1.OutPort1 = Vout.V;
//   Vout.B3.BondCon1.d = Vout.J1p3_1.BondCon3.d;
//   Vout.B3.BondCon1.f = Vout.J1p3_1.BondCon3.f;
//   Vout.B3.BondCon1.e = Vout.J1p3_1.BondCon3.e;
//   Vout.B3.BondCon2.d = Vout.De1.BondCon1.d;
//   Vout.B3.BondCon2.f = Vout.De1.BondCon1.f;
//   Vout.B3.BondCon2.e = Vout.De1.BondCon1.e;
//   Gnd4.B1.eBondCon1.d = Gnd4.V0.BondCon1.d;
//   Gnd4.B1.eBondCon1.f = Gnd4.V0.BondCon1.f;
//   Gnd4.B1.eBondCon1.e = Gnd4.V0.BondCon1.e;
//   Gnd4.B1.fBondCon1.d = Gnd4.El2BG1.BondCon1.d;
//   Gnd4.B1.fBondCon1.f = Gnd4.El2BG1.BondCon1.f;
//   Gnd4.B1.fBondCon1.e = Gnd4.El2BG1.BondCon1.e;
//   Gnd4.El2BG1.p.i + (-Gnd4.p.i) = 0.0;
//   Gnd4.El2BG1.p.v = Gnd4.p.v;
//   Vin.B1.BondCon2.d = Vin.J1p4_1.BondCon2.d;
//   Vin.B1.BondCon2.f = Vin.J1p4_1.BondCon2.f;
//   Vin.B1.BondCon2.e = Vin.J1p4_1.BondCon2.e;
//   Vin.B2.BondCon1.d = Vin.J1p4_1.BondCon1.d;
//   Vin.B2.BondCon1.f = Vin.J1p4_1.BondCon1.f;
//   Vin.B2.BondCon1.e = Vin.J1p4_1.BondCon1.e;
//   Vin.BG2El1.n.i + (-Vin.n.i) = 0.0;
//   Vin.BG2El1.n.v = Vin.n.v;
//   Vin.El2BG1.p.i + (-Vin.p.i) = 0.0;
//   Vin.El2BG1.p.v = Vin.p.v;
//   Vin.B2.BondCon2.d = Vin.El2BG1.BondCon1.d;
//   Vin.B2.BondCon2.f = Vin.El2BG1.BondCon1.f;
//   Vin.B2.BondCon2.e = Vin.El2BG1.BondCon1.e;
//   Vin.B1.BondCon1.d = Vin.BG2El1.BondCon1.d;
//   Vin.B1.BondCon1.f = Vin.BG2El1.BondCon1.f;
//   Vin.B1.BondCon1.e = Vin.BG2El1.BondCon1.e;
//   Vin.B3.fBondCon1.d = Vin.J1p4_1.BondCon4.d;
//   Vin.B3.fBondCon1.f = Vin.J1p4_1.BondCon4.f;
//   Vin.B3.fBondCon1.e = Vin.J1p4_1.BondCon4.e;
//   Vin.B3.eBondCon1.d = Vin.V1.BondCon1.d;
//   Vin.B3.eBondCon1.f = Vin.V1.BondCon1.f;
//   Vin.B3.eBondCon1.e = Vin.V1.BondCon1.e;
//   Vin.B4.fBondCon1.d = Vin.J1p4_1.BondCon3.d;
//   Vin.B4.fBondCon1.f = Vin.J1p4_1.BondCon3.f;
//   Vin.B4.fBondCon1.e = Vin.J1p4_1.BondCon3.e;
//   Vin.B4.eBondCon1.d = Vin.Vramp.BondCon1.d;
//   Vin.B4.eBondCon1.f = Vin.Vramp.BondCon1.f;
//   Vin.B4.eBondCon1.e = Vin.Vramp.BondCon1.e;
//   Gnd3.B1.eBondCon1.d = Gnd3.V0.BondCon1.d;
//   Gnd3.B1.eBondCon1.f = Gnd3.V0.BondCon1.f;
//   Gnd3.B1.eBondCon1.e = Gnd3.V0.BondCon1.e;
//   Gnd3.B1.fBondCon1.d = Gnd3.El2BG1.BondCon1.d;
//   Gnd3.B1.fBondCon1.f = Gnd3.El2BG1.BondCon1.f;
//   Gnd3.B1.fBondCon1.e = Gnd3.El2BG1.BondCon1.e;
//   Gnd3.El2BG1.p.i + (-Gnd3.p.i) = 0.0;
//   Gnd3.El2BG1.p.v = Gnd3.p.v;
//   Gnd2.B1.eBondCon1.d = Gnd2.V0.BondCon1.d;
//   Gnd2.B1.eBondCon1.f = Gnd2.V0.BondCon1.f;
//   Gnd2.B1.eBondCon1.e = Gnd2.V0.BondCon1.e;
//   Gnd2.B1.fBondCon1.d = Gnd2.El2BG1.BondCon1.d;
//   Gnd2.B1.fBondCon1.f = Gnd2.El2BG1.BondCon1.f;
//   Gnd2.B1.fBondCon1.e = Gnd2.El2BG1.BondCon1.e;
//   Gnd2.El2BG1.p.i + (-Gnd2.p.i) = 0.0;
//   Gnd2.El2BG1.p.v = Gnd2.p.v;
//   Rd1.B6.eBondCon1.d = Rd1.T_nom.BondCon1.d;
//   Rd1.B6.eBondCon1.f = Rd1.T_nom.BondCon1.f;
//   Rd1.B6.eBondCon1.e = Rd1.T_nom.BondCon1.e;
//   Rd1.BG2El1.n.i + (-Rd1.n.i) = 0.0;
//   Rd1.BG2El1.n.v = Rd1.n.v;
//   Rd1.El2BG1.p.i + (-Rd1.p.i) = 0.0;
//   Rd1.El2BG1.p.v = Rd1.p.v;
//   Rd1.B3.BondCon1.d = Rd1.J1p3_1.BondCon3.d;
//   Rd1.B3.BondCon1.f = Rd1.J1p3_1.BondCon3.f;
//   Rd1.B3.BondCon1.e = Rd1.J1p3_1.BondCon3.e;
//   Rd1.B2.BondCon2.d = Rd1.BG2El1.BondCon1.d;
//   Rd1.B2.BondCon2.f = Rd1.BG2El1.BondCon1.f;
//   Rd1.B2.BondCon2.e = Rd1.BG2El1.BondCon1.e;
//   Rd1.B1.BondCon1.d = Rd1.El2BG1.BondCon1.d;
//   Rd1.B1.BondCon1.f = Rd1.El2BG1.BondCon1.f;
//   Rd1.B1.BondCon1.e = Rd1.El2BG1.BondCon1.e;
//   Rd1.B2.BondCon1.d = Rd1.J1p3_1.BondCon2.d;
//   Rd1.B2.BondCon1.f = Rd1.J1p3_1.BondCon2.f;
//   Rd1.B2.BondCon1.e = Rd1.J1p3_1.BondCon2.e;
//   Rd1.B1.BondCon2.d = Rd1.J1p3_1.BondCon1.d;
//   Rd1.B1.BondCon2.f = Rd1.J1p3_1.BondCon1.f;
//   Rd1.B1.BondCon2.e = Rd1.J1p3_1.BondCon1.e;
//   Rd1.B3.BondCon2.d = Rd1.R1.BondCon1.d;
//   Rd1.B3.BondCon2.f = Rd1.R1.BondCon1.f;
//   Rd1.B3.BondCon2.e = Rd1.R1.BondCon1.e;
//   Rd1.B4.fBondCon1.d = Rd1.R1.BondCon2.d;
//   Rd1.B4.fBondCon1.f = Rd1.R1.BondCon2.f;
//   Rd1.B4.fBondCon1.e = Rd1.R1.BondCon2.e;
//   Rd1.B4.eBondCon1.d = Rd1.Sw1.p.d;
//   Rd1.B4.eBondCon1.f = Rd1.Sw1.p.f;
//   Rd1.B4.eBondCon1.e = Rd1.Sw1.p.e;
//   Rd1.B6.fBondCon1.d = Rd1.Sw1.n1.d;
//   Rd1.B6.fBondCon1.f = Rd1.Sw1.n1.f;
//   Rd1.B6.fBondCon1.e = Rd1.Sw1.n1.e;
//   Rd1.B5.fBondCon1.d = Rd1.Sw1.n2.d;
//   Rd1.B5.fBondCon1.f = Rd1.Sw1.n2.f;
//   Rd1.B5.fBondCon1.e = Rd1.Sw1.n2.e;
//   Rd1.B5.eBondCon1.d = Rd1.BG2Heat1.BondCon1.d;
//   Rd1.B5.eBondCon1.f = Rd1.BG2Heat1.BondCon1.f;
//   Rd1.B5.eBondCon1.e = Rd1.BG2Heat1.BondCon1.e;
//   Rd1.BG2Heat1.port_b.Q_flow + (-Rd1.heatPort.Q_flow) = 0.0;
//   Rd1.BG2Heat1.port_b.T = Rd1.heatPort.T;
//   Rd1.Sw1.B4.BondCon2.d = Rd1.Sw1.j0p2_1.BondCon1.d;
//   Rd1.Sw1.B4.BondCon2.f = Rd1.Sw1.j0p2_1.BondCon1.f;
//   Rd1.Sw1.B4.BondCon2.e = Rd1.Sw1.j0p2_1.BondCon1.e;
//   Rd1.Sw1.j0p2_2.BondCon2.d = Rd1.Sw1.n1.d;
//   Rd1.Sw1.j0p2_2.BondCon2.f = Rd1.Sw1.n1.f;
//   Rd1.Sw1.j0p2_2.BondCon2.e = Rd1.Sw1.n1.e;
//   Rd1.Sw1.B2.BondCon2.d = Rd1.Sw1.j0p2_2.BondCon1.d;
//   Rd1.Sw1.B2.BondCon2.f = Rd1.Sw1.j0p2_2.BondCon1.f;
//   Rd1.Sw1.B2.BondCon2.e = Rd1.Sw1.j0p2_2.BondCon1.e;
//   Rd1.Sw1.j0p2_1.BondCon2.d = Rd1.Sw1.n2.d;
//   Rd1.Sw1.j0p2_1.BondCon2.f = Rd1.Sw1.n2.f;
//   Rd1.Sw1.j0p2_1.BondCon2.e = Rd1.Sw1.n2.e;
//   Rd1.Sw1.B1.BondCon1.d = Rd1.Sw1.J0p3_1.BondCon3.d;
//   Rd1.Sw1.B1.BondCon1.f = Rd1.Sw1.J0p3_1.BondCon3.f;
//   Rd1.Sw1.B1.BondCon1.e = Rd1.Sw1.J0p3_1.BondCon3.e;
//   Rd1.Sw1.B1.BondCon2.d = Rd1.Sw1.J1p3_1.BondCon1.d;
//   Rd1.Sw1.B1.BondCon2.f = Rd1.Sw1.J1p3_1.BondCon1.f;
//   Rd1.Sw1.B1.BondCon2.e = Rd1.Sw1.J1p3_1.BondCon1.e;
//   Rd1.Sw1.B2.BondCon1.d = Rd1.Sw1.J1p3_1.BondCon2.d;
//   Rd1.Sw1.B2.BondCon1.f = Rd1.Sw1.J1p3_1.BondCon2.f;
//   Rd1.Sw1.B2.BondCon1.e = Rd1.Sw1.J1p3_1.BondCon2.e;
//   Rd1.Sw1.J0p3_1.BondCon2.d = Rd1.Sw1.p.d;
//   Rd1.Sw1.J0p3_1.BondCon2.f = Rd1.Sw1.p.f;
//   Rd1.Sw1.J0p3_1.BondCon2.e = Rd1.Sw1.p.e;
//   Rd1.Sw1.B4.BondCon1.d = Rd1.Sw1.J0p3_1.BondCon1.d;
//   Rd1.Sw1.B4.BondCon1.f = Rd1.Sw1.J0p3_1.BondCon1.f;
//   Rd1.Sw1.B4.BondCon1.e = Rd1.Sw1.J0p3_1.BondCon1.e;
//   Rd1.Sw1.B3.BondCon1.d = Rd1.Sw1.J1p3_1.BondCon3.d;
//   Rd1.Sw1.B3.BondCon1.f = Rd1.Sw1.J1p3_1.BondCon3.f;
//   Rd1.Sw1.B3.BondCon1.e = Rd1.Sw1.J1p3_1.BondCon3.e;
//   Rd1.Sw1.B3.BondCon2.d = Rd1.Sw1.Sw1.BondCon1.d;
//   Rd1.Sw1.B3.BondCon2.f = Rd1.Sw1.Sw1.BondCon1.f;
//   Rd1.Sw1.B3.BondCon2.e = Rd1.Sw1.Sw1.BondCon1.e;
//   Rd1.Sw1.Sw1.BooleanInPort1 = Rd1.Sw1.control;
//   Jp2.Rg.heatPort.Q_flow + (Jp2.Rd.heatPort.Q_flow + (Jp2.Jpi1.heatPort.Q_flow + (Jp2.Sw1.p.Q_flow + Jp2.Rs.heatPort.Q_flow))) = 0.0;
//   Jp2.Jpi1.heatPort.T = Jp2.Rd.heatPort.T;
//   Jp2.Jpi1.heatPort.T = Jp2.Rg.heatPort.T;
//   Jp2.Jpi1.heatPort.T = Jp2.Rs.heatPort.T;
//   Jp2.Jpi1.heatPort.T = Jp2.Sw1.p.T;
//   Jp2.Jpi1.S.i + Jp2.Rs.p.i = 0.0;
//   Jp2.Jpi1.S.v = Jp2.Rs.p.v;
//   Jp2.Rd.p.i + Jp2.Jpi1.D.i = 0.0;
//   Jp2.Jpi1.D.v = Jp2.Rd.p.v;
//   Jp2.Rg.n.i + Jp2.Jpi1.G.i = 0.0;
//   Jp2.Jpi1.G.v = Jp2.Rg.n.v;
//   Jp2.Rs.n.i + (-Jp2.S.i) = 0.0;
//   Jp2.Rs.n.v = Jp2.S.v;
//   Jp2.Rd.n.i + (-Jp2.D.i) = 0.0;
//   Jp2.D.v = Jp2.Rd.n.v;
//   Jp2.Rg.p.i + (-Jp2.G.i) = 0.0;
//   Jp2.G.v = Jp2.Rg.p.v;
//   Jp2.Sw1.n1.Q_flow + Jp2.T_nom.port.Q_flow = 0.0;
//   Jp2.Sw1.n1.T = Jp2.T_nom.port.T;
//   Jp2.Sw1.n2.Q_flow + (-Jp2.heatPort.Q_flow) = 0.0;
//   Jp2.Sw1.n2.T = Jp2.heatPort.T;
//   Jp2.Sw1.B2.BondCon2.d = Jp2.Sw1.BG2Heat2.BondCon1.d;
//   Jp2.Sw1.B2.BondCon2.f = Jp2.Sw1.BG2Heat2.BondCon1.f;
//   Jp2.Sw1.B2.BondCon2.e = Jp2.Sw1.BG2Heat2.BondCon1.e;
//   Jp2.Sw1.BG2Heat2.port_b.Q_flow + (-Jp2.Sw1.n2.Q_flow) = 0.0;
//   Jp2.Sw1.BG2Heat2.port_b.T = Jp2.Sw1.n2.T;
//   Jp2.Sw1.B3.BondCon2.d = Jp2.Sw1.BG2Heat1.BondCon1.d;
//   Jp2.Sw1.B3.BondCon2.f = Jp2.Sw1.BG2Heat1.BondCon1.f;
//   Jp2.Sw1.B3.BondCon2.e = Jp2.Sw1.BG2Heat1.BondCon1.e;
//   Jp2.Sw1.BG2Heat1.port_b.Q_flow + (-Jp2.Sw1.n1.Q_flow) = 0.0;
//   Jp2.Sw1.BG2Heat1.port_b.T = Jp2.Sw1.n1.T;
//   Jp2.Sw1.B1.BondCon1.d = Jp2.Sw1.Heat2BG1.BondCon1.d;
//   Jp2.Sw1.B1.BondCon1.f = Jp2.Sw1.Heat2BG1.BondCon1.f;
//   Jp2.Sw1.B1.BondCon1.e = Jp2.Sw1.Heat2BG1.BondCon1.e;
//   Jp2.Sw1.Heat2BG1.port_a.Q_flow + (-Jp2.Sw1.p.Q_flow) = 0.0;
//   Jp2.Sw1.Heat2BG1.port_a.T = Jp2.Sw1.p.T;
//   Jp2.Sw1.Sw1.control = Jp2.Sw1.control;
//   Jp2.Sw1.B1.BondCon2.d = Jp2.Sw1.Sw1.p.d;
//   Jp2.Sw1.B1.BondCon2.f = Jp2.Sw1.Sw1.p.f;
//   Jp2.Sw1.B1.BondCon2.e = Jp2.Sw1.Sw1.p.e;
//   Jp2.Sw1.B2.BondCon1.d = Jp2.Sw1.Sw1.n2.d;
//   Jp2.Sw1.B2.BondCon1.f = Jp2.Sw1.Sw1.n2.f;
//   Jp2.Sw1.B2.BondCon1.e = Jp2.Sw1.Sw1.n2.e;
//   Jp2.Sw1.B3.BondCon1.d = Jp2.Sw1.Sw1.n1.d;
//   Jp2.Sw1.B3.BondCon1.f = Jp2.Sw1.Sw1.n1.f;
//   Jp2.Sw1.B3.BondCon1.e = Jp2.Sw1.Sw1.n1.e;
//   Jp2.Sw1.Sw1.B4.BondCon2.d = Jp2.Sw1.Sw1.j0p2_1.BondCon1.d;
//   Jp2.Sw1.Sw1.B4.BondCon2.f = Jp2.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Sw1.Sw1.B4.BondCon2.e = Jp2.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Sw1.Sw1.j0p2_2.BondCon2.d = Jp2.Sw1.Sw1.n1.d;
//   Jp2.Sw1.Sw1.j0p2_2.BondCon2.f = Jp2.Sw1.Sw1.n1.f;
//   Jp2.Sw1.Sw1.j0p2_2.BondCon2.e = Jp2.Sw1.Sw1.n1.e;
//   Jp2.Sw1.Sw1.B2.BondCon2.d = Jp2.Sw1.Sw1.j0p2_2.BondCon1.d;
//   Jp2.Sw1.Sw1.B2.BondCon2.f = Jp2.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Sw1.Sw1.B2.BondCon2.e = Jp2.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Sw1.Sw1.j0p2_1.BondCon2.d = Jp2.Sw1.Sw1.n2.d;
//   Jp2.Sw1.Sw1.j0p2_1.BondCon2.f = Jp2.Sw1.Sw1.n2.f;
//   Jp2.Sw1.Sw1.j0p2_1.BondCon2.e = Jp2.Sw1.Sw1.n2.e;
//   Jp2.Sw1.Sw1.B1.BondCon1.d = Jp2.Sw1.Sw1.J0p3_1.BondCon3.d;
//   Jp2.Sw1.Sw1.B1.BondCon1.f = Jp2.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Sw1.Sw1.B1.BondCon1.e = Jp2.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Sw1.Sw1.B1.BondCon2.d = Jp2.Sw1.Sw1.J1p3_1.BondCon1.d;
//   Jp2.Sw1.Sw1.B1.BondCon2.f = Jp2.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Sw1.Sw1.B1.BondCon2.e = Jp2.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Sw1.Sw1.B2.BondCon1.d = Jp2.Sw1.Sw1.J1p3_1.BondCon2.d;
//   Jp2.Sw1.Sw1.B2.BondCon1.f = Jp2.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Sw1.Sw1.B2.BondCon1.e = Jp2.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Sw1.Sw1.J0p3_1.BondCon2.d = Jp2.Sw1.Sw1.p.d;
//   Jp2.Sw1.Sw1.J0p3_1.BondCon2.f = Jp2.Sw1.Sw1.p.f;
//   Jp2.Sw1.Sw1.J0p3_1.BondCon2.e = Jp2.Sw1.Sw1.p.e;
//   Jp2.Sw1.Sw1.B4.BondCon1.d = Jp2.Sw1.Sw1.J0p3_1.BondCon1.d;
//   Jp2.Sw1.Sw1.B4.BondCon1.f = Jp2.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Sw1.Sw1.B4.BondCon1.e = Jp2.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Sw1.Sw1.B3.BondCon1.d = Jp2.Sw1.Sw1.J1p3_1.BondCon3.d;
//   Jp2.Sw1.Sw1.B3.BondCon1.f = Jp2.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Sw1.Sw1.B3.BondCon1.e = Jp2.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Sw1.Sw1.B3.BondCon2.d = Jp2.Sw1.Sw1.Sw1.BondCon1.d;
//   Jp2.Sw1.Sw1.B3.BondCon2.f = Jp2.Sw1.Sw1.Sw1.BondCon1.f;
//   Jp2.Sw1.Sw1.B3.BondCon2.e = Jp2.Sw1.Sw1.Sw1.BondCon1.e;
//   Jp2.Sw1.Sw1.Sw1.BooleanInPort1 = Jp2.Sw1.Sw1.control;
//   Jp2.T_nom.BG2Heat1.port_b.Q_flow + (-Jp2.T_nom.port.Q_flow) = 0.0;
//   Jp2.T_nom.BG2Heat1.port_b.T = Jp2.T_nom.port.T;
//   Jp2.T_nom.B1.eBondCon1.d = Jp2.T_nom.Tabs.BondCon1.d;
//   Jp2.T_nom.B1.eBondCon1.f = Jp2.T_nom.Tabs.BondCon1.f;
//   Jp2.T_nom.B1.eBondCon1.e = Jp2.T_nom.Tabs.BondCon1.e;
//   Jp2.T_nom.B1.fBondCon1.d = Jp2.T_nom.BG2Heat1.BondCon1.d;
//   Jp2.T_nom.B1.fBondCon1.f = Jp2.T_nom.BG2Heat1.BondCon1.f;
//   Jp2.T_nom.B1.fBondCon1.e = Jp2.T_nom.BG2Heat1.BondCon1.e;
//   Jp2.Jpi1.Ddg.vgs = Jp2.Jpi1.Dsg.vgs;
//   Jp2.Jpi1.Ddg.vgs = Jp2.Jpi1.ISD.u2;
//   Jp2.Jpi1.Ddg.vgs = Jp2.Jpi1.Vsg.V;
//   Jp2.Jpi1.Dsg.n.i + (Jp2.Jpi1.Ddg.n.i + (Jp2.Jpi1.Vsg.n.i + (-Jp2.Jpi1.G.i))) = 0.0;
//   Jp2.Jpi1.Ddg.n.v = Jp2.Jpi1.Dsg.n.v;
//   Jp2.Jpi1.Ddg.n.v = Jp2.Jpi1.G.v;
//   Jp2.Jpi1.Ddg.n.v = Jp2.Jpi1.Vsg.n.v;
//   Jp2.Jpi1.Dsg.p.i + (Jp2.Jpi1.Vsg.p.i + (Jp2.Jpi1.Isd.p.i + ((-Jp2.Jpi1.S.i) + Jp2.Jpi1.Vsd.p.i))) = 0.0;
//   Jp2.Jpi1.Dsg.p.v = Jp2.Jpi1.Isd.p.v;
//   Jp2.Jpi1.Dsg.p.v = Jp2.Jpi1.S.v;
//   Jp2.Jpi1.Dsg.p.v = Jp2.Jpi1.Vsd.p.v;
//   Jp2.Jpi1.Dsg.p.v = Jp2.Jpi1.Vsg.p.v;
//   Jp2.Jpi1.Ddg.p.i + (Jp2.Jpi1.Isd.n.i + ((-Jp2.Jpi1.D.i) + Jp2.Jpi1.Vsd.n.i)) = 0.0;
//   Jp2.Jpi1.D.v = Jp2.Jpi1.Ddg.p.v;
//   Jp2.Jpi1.D.v = Jp2.Jpi1.Isd.n.v;
//   Jp2.Jpi1.D.v = Jp2.Jpi1.Vsd.n.v;
//   Jp2.Jpi1.Ddg.vds = Jp2.Jpi1.Dsg.vds;
//   Jp2.Jpi1.Ddg.vds = Jp2.Jpi1.ISD.u1;
//   Jp2.Jpi1.Ddg.vds = Jp2.Jpi1.Vsd.V;
//   Jp2.Jpi1.ISD.Tdev = Jp2.Jpi1.Tdev1.T;
//   Jp2.Jpi1.Tdev1.port.Q_flow + (Jp2.Jpi1.Ddg.heatPort.Q_flow + (Jp2.Jpi1.Dsg.heatPort.Q_flow + (Jp2.Jpi1.Isd.heatPort.Q_flow + (-Jp2.Jpi1.heatPort.Q_flow)))) = 0.0;
//   Jp2.Jpi1.Ddg.heatPort.T = Jp2.Jpi1.Dsg.heatPort.T;
//   Jp2.Jpi1.Ddg.heatPort.T = Jp2.Jpi1.Isd.heatPort.T;
//   Jp2.Jpi1.Ddg.heatPort.T = Jp2.Jpi1.Tdev1.port.T;
//   Jp2.Jpi1.Ddg.heatPort.T = Jp2.Jpi1.heatPort.T;
//   Jp2.Jpi1.ISD.y = Jp2.Jpi1.Isd.InPort1;
//   Jp2.Jpi1.Isd.BG2Heat1.port_b.Q_flow + (-Jp2.Jpi1.Isd.heatPort.Q_flow) = 0.0;
//   Jp2.Jpi1.Isd.BG2Heat1.port_b.T = Jp2.Jpi1.Isd.heatPort.T;
//   Jp2.Jpi1.Isd.BG2El1.n.i + (-Jp2.Jpi1.Isd.n.i) = 0.0;
//   Jp2.Jpi1.Isd.BG2El1.n.v = Jp2.Jpi1.Isd.n.v;
//   Jp2.Jpi1.Isd.El2BG1.p.i + (-Jp2.Jpi1.Isd.p.i) = 0.0;
//   Jp2.Jpi1.Isd.El2BG1.p.v = Jp2.Jpi1.Isd.p.v;
//   Jp2.Jpi1.Isd.B2.BondCon1.d = Jp2.Jpi1.Isd.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Isd.B2.BondCon1.f = Jp2.Jpi1.Isd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Isd.B2.BondCon1.e = Jp2.Jpi1.Isd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Isd.B2.BondCon2.d = Jp2.Jpi1.Isd.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Isd.B2.BondCon2.f = Jp2.Jpi1.Isd.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Isd.B2.BondCon2.e = Jp2.Jpi1.Isd.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Isd.B1.BondCon1.d = Jp2.Jpi1.Isd.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Isd.B1.BondCon1.f = Jp2.Jpi1.Isd.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Isd.B1.BondCon1.e = Jp2.Jpi1.Isd.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Isd.B1.BondCon2.d = Jp2.Jpi1.Isd.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Isd.B1.BondCon2.f = Jp2.Jpi1.Isd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Isd.B1.BondCon2.e = Jp2.Jpi1.Isd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Isd.B4.eBondCon1.d = Jp2.Jpi1.Isd.BG2Heat1.BondCon1.d;
//   Jp2.Jpi1.Isd.B4.eBondCon1.f = Jp2.Jpi1.Isd.BG2Heat1.BondCon1.f;
//   Jp2.Jpi1.Isd.B4.eBondCon1.e = Jp2.Jpi1.Isd.BG2Heat1.BondCon1.e;
//   Jp2.Jpi1.Isd.B3.eBondCon1.d = Jp2.Jpi1.Isd.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Isd.B3.eBondCon1.f = Jp2.Jpi1.Isd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Isd.B3.eBondCon1.e = Jp2.Jpi1.Isd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Isd.B3.fBondCon1.d = Jp2.Jpi1.Isd.I1.BondCon2.d;
//   Jp2.Jpi1.Isd.B3.fBondCon1.f = Jp2.Jpi1.Isd.I1.BondCon2.f;
//   Jp2.Jpi1.Isd.B3.fBondCon1.e = Jp2.Jpi1.Isd.I1.BondCon2.e;
//   Jp2.Jpi1.Isd.B4.fBondCon1.d = Jp2.Jpi1.Isd.I1.BondCon1.d;
//   Jp2.Jpi1.Isd.B4.fBondCon1.f = Jp2.Jpi1.Isd.I1.BondCon1.f;
//   Jp2.Jpi1.Isd.B4.fBondCon1.e = Jp2.Jpi1.Isd.I1.BondCon1.e;
//   Jp2.Jpi1.Isd.I1.s = Jp2.Jpi1.Isd.InPort1;
//   Jp2.Jpi1.Vsd.BG2El1.n.i + (-Jp2.Jpi1.Vsd.n.i) = 0.0;
//   Jp2.Jpi1.Vsd.BG2El1.n.v = Jp2.Jpi1.Vsd.n.v;
//   Jp2.Jpi1.Vsd.El2BG1.p.i + (-Jp2.Jpi1.Vsd.p.i) = 0.0;
//   Jp2.Jpi1.Vsd.El2BG1.p.v = Jp2.Jpi1.Vsd.p.v;
//   Jp2.Jpi1.Vsd.B2.BondCon2.d = Jp2.Jpi1.Vsd.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Vsd.B2.BondCon2.f = Jp2.Jpi1.Vsd.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Vsd.B2.BondCon2.e = Jp2.Jpi1.Vsd.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Vsd.B1.BondCon1.d = Jp2.Jpi1.Vsd.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Vsd.B1.BondCon1.f = Jp2.Jpi1.Vsd.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Vsd.B1.BondCon1.e = Jp2.Jpi1.Vsd.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Vsd.B2.BondCon1.d = Jp2.Jpi1.Vsd.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Vsd.B2.BondCon1.f = Jp2.Jpi1.Vsd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Vsd.B2.BondCon1.e = Jp2.Jpi1.Vsd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Vsd.B1.BondCon2.d = Jp2.Jpi1.Vsd.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Vsd.B1.BondCon2.f = Jp2.Jpi1.Vsd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Vsd.B1.BondCon2.e = Jp2.Jpi1.Vsd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Vsd.De1.OutPort1 = Jp2.Jpi1.Vsd.V;
//   Jp2.Jpi1.Vsd.B3.BondCon1.d = Jp2.Jpi1.Vsd.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Vsd.B3.BondCon1.f = Jp2.Jpi1.Vsd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Vsd.B3.BondCon1.e = Jp2.Jpi1.Vsd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Vsd.B3.BondCon2.d = Jp2.Jpi1.Vsd.De1.BondCon1.d;
//   Jp2.Jpi1.Vsd.B3.BondCon2.f = Jp2.Jpi1.Vsd.De1.BondCon1.f;
//   Jp2.Jpi1.Vsd.B3.BondCon2.e = Jp2.Jpi1.Vsd.De1.BondCon1.e;
//   Jp2.Jpi1.Vsg.BG2El1.n.i + (-Jp2.Jpi1.Vsg.n.i) = 0.0;
//   Jp2.Jpi1.Vsg.BG2El1.n.v = Jp2.Jpi1.Vsg.n.v;
//   Jp2.Jpi1.Vsg.El2BG1.p.i + (-Jp2.Jpi1.Vsg.p.i) = 0.0;
//   Jp2.Jpi1.Vsg.El2BG1.p.v = Jp2.Jpi1.Vsg.p.v;
//   Jp2.Jpi1.Vsg.B2.BondCon2.d = Jp2.Jpi1.Vsg.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Vsg.B2.BondCon2.f = Jp2.Jpi1.Vsg.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Vsg.B2.BondCon2.e = Jp2.Jpi1.Vsg.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Vsg.B1.BondCon1.d = Jp2.Jpi1.Vsg.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Vsg.B1.BondCon1.f = Jp2.Jpi1.Vsg.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Vsg.B1.BondCon1.e = Jp2.Jpi1.Vsg.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Vsg.B2.BondCon1.d = Jp2.Jpi1.Vsg.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Vsg.B2.BondCon1.f = Jp2.Jpi1.Vsg.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Vsg.B2.BondCon1.e = Jp2.Jpi1.Vsg.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Vsg.B1.BondCon2.d = Jp2.Jpi1.Vsg.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Vsg.B1.BondCon2.f = Jp2.Jpi1.Vsg.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Vsg.B1.BondCon2.e = Jp2.Jpi1.Vsg.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Vsg.De1.OutPort1 = Jp2.Jpi1.Vsg.V;
//   Jp2.Jpi1.Vsg.B3.BondCon1.d = Jp2.Jpi1.Vsg.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Vsg.B3.BondCon1.f = Jp2.Jpi1.Vsg.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Vsg.B3.BondCon1.e = Jp2.Jpi1.Vsg.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Vsg.B3.BondCon2.d = Jp2.Jpi1.Vsg.De1.BondCon1.d;
//   Jp2.Jpi1.Vsg.B3.BondCon2.f = Jp2.Jpi1.Vsg.De1.BondCon1.f;
//   Jp2.Jpi1.Vsg.B3.BondCon2.e = Jp2.Jpi1.Vsg.De1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.heatPort.Q_flow + (Jp2.Jpi1.Dsg.Rd.heatPort.Q_flow + (Jp2.Jpi1.Dsg.Tdev1.port.Q_flow + (-Jp2.Jpi1.Dsg.heatPort.Q_flow))) = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.heatPort.T = Jp2.Jpi1.Dsg.Rd.heatPort.T;
//   Jp2.Jpi1.Dsg.DjJ1.heatPort.T = Jp2.Jpi1.Dsg.Tdev1.port.T;
//   Jp2.Jpi1.Dsg.DjJ1.heatPort.T = Jp2.Jpi1.Dsg.heatPort.T;
//   Jp2.Jpi1.Dsg.VarC1.n.i + (Jp2.Jpi1.Dsg.DjJ1.n.i + (Jp2.Jpi1.Dsg.Rd.n.i + (-Jp2.Jpi1.Dsg.n.i))) = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.n.v = Jp2.Jpi1.Dsg.Rd.n.v;
//   Jp2.Jpi1.Dsg.DjJ1.n.v = Jp2.Jpi1.Dsg.VarC1.n.v;
//   Jp2.Jpi1.Dsg.DjJ1.n.v = Jp2.Jpi1.Dsg.n.v;
//   Jp2.Jpi1.Dsg.Rd.p.i + (Jp2.Jpi1.Dsg.DjJ1.p.i + (Jp2.Jpi1.Dsg.VarC1.p.i + (-Jp2.Jpi1.Dsg.p.i))) = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.p.v = Jp2.Jpi1.Dsg.Rd.p.v;
//   Jp2.Jpi1.Dsg.DjJ1.p.v = Jp2.Jpi1.Dsg.VarC1.p.v;
//   Jp2.Jpi1.Dsg.DjJ1.p.v = Jp2.Jpi1.Dsg.p.v;
//   Jp2.Jpi1.Dsg.VarC1.u = Jp2.Jpi1.Dsg.nlCJ1.y;
//   Jp2.Jpi1.Dsg.Tdev1.T = Jp2.Jpi1.Dsg.nlCJ1.Tdev;
//   Jp2.Jpi1.Dsg.nlCJ1.u1 = Jp2.Jpi1.Dsg.vds;
//   Jp2.Jpi1.Dsg.nlCJ1.u2 = Jp2.Jpi1.Dsg.vgs;
//   Jp2.Jpi1.Dsg.VarC1.BG2El1.n.i + (-Jp2.Jpi1.Dsg.VarC1.n.i) = 0.0;
//   Jp2.Jpi1.Dsg.VarC1.BG2El1.n.v = Jp2.Jpi1.Dsg.VarC1.n.v;
//   Jp2.Jpi1.Dsg.VarC1.El2BG1.p.i + (-Jp2.Jpi1.Dsg.VarC1.p.i) = 0.0;
//   Jp2.Jpi1.Dsg.VarC1.El2BG1.p.v = Jp2.Jpi1.Dsg.VarC1.p.v;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.d = Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.f = Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon2.e = Jp2.Jpi1.Dsg.VarC1.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.d = Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.f = Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon1.e = Jp2.Jpi1.Dsg.VarC1.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.d = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.f = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.VarC1.B2.BondCon1.e = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.d = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.f = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.B1.BondCon2.e = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.d = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.f = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon1.e = Jp2.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.d = Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.d;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.f = Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.f;
//   Jp2.Jpi1.Dsg.VarC1.B3.BondCon2.e = Jp2.Jpi1.Dsg.VarC1.mC1.BondCon1.e;
//   Jp2.Jpi1.Dsg.VarC1.mC1.s = Jp2.Jpi1.Dsg.VarC1.u;
//   Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.d = Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.f = Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B6.eBondCon1.e = Jp2.Jpi1.Dsg.Rd.T_nom.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.BG2El1.n.i + (-Jp2.Jpi1.Dsg.Rd.n.i) = 0.0;
//   Jp2.Jpi1.Dsg.Rd.BG2El1.n.v = Jp2.Jpi1.Dsg.Rd.n.v;
//   Jp2.Jpi1.Dsg.Rd.El2BG1.p.i + (-Jp2.Jpi1.Dsg.Rd.p.i) = 0.0;
//   Jp2.Jpi1.Dsg.Rd.El2BG1.p.v = Jp2.Jpi1.Dsg.Rd.p.v;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon1.d = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon1.f = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon1.e = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon2.d = Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon2.f = Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon2.e = Jp2.Jpi1.Dsg.Rd.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon1.d = Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon1.f = Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon1.e = Jp2.Jpi1.Dsg.Rd.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon1.d = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon1.f = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.B2.BondCon1.e = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon2.d = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon2.f = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B1.BondCon2.e = Jp2.Jpi1.Dsg.Rd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon2.d = Jp2.Jpi1.Dsg.Rd.R1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon2.f = Jp2.Jpi1.Dsg.Rd.R1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B3.BondCon2.e = Jp2.Jpi1.Dsg.Rd.R1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.d = Jp2.Jpi1.Dsg.Rd.R1.BondCon2.d;
//   Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.f = Jp2.Jpi1.Dsg.Rd.R1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.B4.fBondCon1.e = Jp2.Jpi1.Dsg.Rd.R1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.d = Jp2.Jpi1.Dsg.Rd.Sw1.p.d;
//   Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.f = Jp2.Jpi1.Dsg.Rd.Sw1.p.f;
//   Jp2.Jpi1.Dsg.Rd.B4.eBondCon1.e = Jp2.Jpi1.Dsg.Rd.Sw1.p.e;
//   Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.d = Jp2.Jpi1.Dsg.Rd.Sw1.n1.d;
//   Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.f = Jp2.Jpi1.Dsg.Rd.Sw1.n1.f;
//   Jp2.Jpi1.Dsg.Rd.B6.fBondCon1.e = Jp2.Jpi1.Dsg.Rd.Sw1.n1.e;
//   Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.d = Jp2.Jpi1.Dsg.Rd.Sw1.n2.d;
//   Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.f = Jp2.Jpi1.Dsg.Rd.Sw1.n2.f;
//   Jp2.Jpi1.Dsg.Rd.B5.fBondCon1.e = Jp2.Jpi1.Dsg.Rd.Sw1.n2.e;
//   Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.d = Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.f = Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.B5.eBondCon1.e = Jp2.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.BG2Heat1.port_b.Q_flow + (-Jp2.Jpi1.Dsg.Rd.heatPort.Q_flow) = 0.0;
//   Jp2.Jpi1.Dsg.Rd.BG2Heat1.port_b.T = Jp2.Jpi1.Dsg.Rd.heatPort.T;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.d = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.d = Jp2.Jpi1.Dsg.Rd.Sw1.n1.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.n1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.n1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.d = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.d = Jp2.Jpi1.Dsg.Rd.Sw1.n2.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.n2.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.n2.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.d = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.f = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.e = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.d = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.d = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.f = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.e = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.d = Jp2.Jpi1.Dsg.Rd.Sw1.p.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.p.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.p.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.d = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.f = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.e = Jp2.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.d = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.f = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.e = Jp2.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.d = Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.d;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.f = Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp2.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.e = Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp2.Jpi1.Dsg.Rd.Sw1.Sw1.BooleanInPort1 = Jp2.Jpi1.Dsg.Rd.Sw1.control;
//   Jp2.Jpi1.Dsg.DjJ1.BG2El1.n.i + (-Jp2.Jpi1.Dsg.DjJ1.n.i) = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.BG2El1.n.v = Jp2.Jpi1.Dsg.DjJ1.n.v;
//   Jp2.Jpi1.Dsg.DjJ1.El2BG1.p.i + (-Jp2.Jpi1.Dsg.DjJ1.p.i) = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.El2BG1.p.v = Jp2.Jpi1.Dsg.DjJ1.p.v;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.d = Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.f = Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon2.e = Jp2.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.d = Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.f = Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon1.e = Jp2.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.d = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.f = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Dsg.DjJ1.B2.BondCon1.e = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.d = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.f = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B1.BondCon2.e = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.d = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.f = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon1.e = Jp2.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.d = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.d;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.f = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B3.BondCon2.e = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.d = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.d;
//   Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.f = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.f;
//   Jp2.Jpi1.Dsg.DjJ1.B4.fBondCon1.e = Jp2.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.e;
//   Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.d = Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.d;
//   Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.f = Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.f;
//   Jp2.Jpi1.Dsg.DjJ1.B4.eBondCon1.e = Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e;
//   Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.Q_flow + (-Jp2.Jpi1.Dsg.DjJ1.heatPort.Q_flow) = 0.0;
//   Jp2.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.T = Jp2.Jpi1.Dsg.DjJ1.heatPort.T;
//   Jp2.Jpi1.Ddg.DjJ1.heatPort.Q_flow + (Jp2.Jpi1.Ddg.Rd.heatPort.Q_flow + (Jp2.Jpi1.Ddg.Tdev1.port.Q_flow + (-Jp2.Jpi1.Ddg.heatPort.Q_flow))) = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.heatPort.T = Jp2.Jpi1.Ddg.Rd.heatPort.T;
//   Jp2.Jpi1.Ddg.DjJ1.heatPort.T = Jp2.Jpi1.Ddg.Tdev1.port.T;
//   Jp2.Jpi1.Ddg.DjJ1.heatPort.T = Jp2.Jpi1.Ddg.heatPort.T;
//   Jp2.Jpi1.Ddg.VarC1.n.i + (Jp2.Jpi1.Ddg.DjJ1.n.i + (Jp2.Jpi1.Ddg.Rd.n.i + (-Jp2.Jpi1.Ddg.n.i))) = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.n.v = Jp2.Jpi1.Ddg.Rd.n.v;
//   Jp2.Jpi1.Ddg.DjJ1.n.v = Jp2.Jpi1.Ddg.VarC1.n.v;
//   Jp2.Jpi1.Ddg.DjJ1.n.v = Jp2.Jpi1.Ddg.n.v;
//   Jp2.Jpi1.Ddg.Rd.p.i + (Jp2.Jpi1.Ddg.DjJ1.p.i + (Jp2.Jpi1.Ddg.VarC1.p.i + (-Jp2.Jpi1.Ddg.p.i))) = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.p.v = Jp2.Jpi1.Ddg.Rd.p.v;
//   Jp2.Jpi1.Ddg.DjJ1.p.v = Jp2.Jpi1.Ddg.VarC1.p.v;
//   Jp2.Jpi1.Ddg.DjJ1.p.v = Jp2.Jpi1.Ddg.p.v;
//   Jp2.Jpi1.Ddg.VarC1.u = Jp2.Jpi1.Ddg.nlCJ1.y;
//   Jp2.Jpi1.Ddg.Tdev1.T = Jp2.Jpi1.Ddg.nlCJ1.Tdev;
//   Jp2.Jpi1.Ddg.nlCJ1.u1 = Jp2.Jpi1.Ddg.vds;
//   Jp2.Jpi1.Ddg.nlCJ1.u2 = Jp2.Jpi1.Ddg.vgs;
//   Jp2.Jpi1.Ddg.VarC1.BG2El1.n.i + (-Jp2.Jpi1.Ddg.VarC1.n.i) = 0.0;
//   Jp2.Jpi1.Ddg.VarC1.BG2El1.n.v = Jp2.Jpi1.Ddg.VarC1.n.v;
//   Jp2.Jpi1.Ddg.VarC1.El2BG1.p.i + (-Jp2.Jpi1.Ddg.VarC1.p.i) = 0.0;
//   Jp2.Jpi1.Ddg.VarC1.El2BG1.p.v = Jp2.Jpi1.Ddg.VarC1.p.v;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.d = Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.f = Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon2.e = Jp2.Jpi1.Ddg.VarC1.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.d = Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.f = Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon1.e = Jp2.Jpi1.Ddg.VarC1.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.d = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.f = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.VarC1.B2.BondCon1.e = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.d = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.f = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.B1.BondCon2.e = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.d = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.f = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon1.e = Jp2.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.d = Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.d;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.f = Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.f;
//   Jp2.Jpi1.Ddg.VarC1.B3.BondCon2.e = Jp2.Jpi1.Ddg.VarC1.mC1.BondCon1.e;
//   Jp2.Jpi1.Ddg.VarC1.mC1.s = Jp2.Jpi1.Ddg.VarC1.u;
//   Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.d = Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.f = Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B6.eBondCon1.e = Jp2.Jpi1.Ddg.Rd.T_nom.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.BG2El1.n.i + (-Jp2.Jpi1.Ddg.Rd.n.i) = 0.0;
//   Jp2.Jpi1.Ddg.Rd.BG2El1.n.v = Jp2.Jpi1.Ddg.Rd.n.v;
//   Jp2.Jpi1.Ddg.Rd.El2BG1.p.i + (-Jp2.Jpi1.Ddg.Rd.p.i) = 0.0;
//   Jp2.Jpi1.Ddg.Rd.El2BG1.p.v = Jp2.Jpi1.Ddg.Rd.p.v;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon1.d = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon1.f = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon1.e = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon2.d = Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon2.f = Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon2.e = Jp2.Jpi1.Ddg.Rd.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon1.d = Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon1.f = Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon1.e = Jp2.Jpi1.Ddg.Rd.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon1.d = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon1.f = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.B2.BondCon1.e = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon2.d = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon2.f = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B1.BondCon2.e = Jp2.Jpi1.Ddg.Rd.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon2.d = Jp2.Jpi1.Ddg.Rd.R1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon2.f = Jp2.Jpi1.Ddg.Rd.R1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B3.BondCon2.e = Jp2.Jpi1.Ddg.Rd.R1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.d = Jp2.Jpi1.Ddg.Rd.R1.BondCon2.d;
//   Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.f = Jp2.Jpi1.Ddg.Rd.R1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.B4.fBondCon1.e = Jp2.Jpi1.Ddg.Rd.R1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.d = Jp2.Jpi1.Ddg.Rd.Sw1.p.d;
//   Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.f = Jp2.Jpi1.Ddg.Rd.Sw1.p.f;
//   Jp2.Jpi1.Ddg.Rd.B4.eBondCon1.e = Jp2.Jpi1.Ddg.Rd.Sw1.p.e;
//   Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.d = Jp2.Jpi1.Ddg.Rd.Sw1.n1.d;
//   Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.f = Jp2.Jpi1.Ddg.Rd.Sw1.n1.f;
//   Jp2.Jpi1.Ddg.Rd.B6.fBondCon1.e = Jp2.Jpi1.Ddg.Rd.Sw1.n1.e;
//   Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.d = Jp2.Jpi1.Ddg.Rd.Sw1.n2.d;
//   Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.f = Jp2.Jpi1.Ddg.Rd.Sw1.n2.f;
//   Jp2.Jpi1.Ddg.Rd.B5.fBondCon1.e = Jp2.Jpi1.Ddg.Rd.Sw1.n2.e;
//   Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.d = Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.f = Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.B5.eBondCon1.e = Jp2.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.BG2Heat1.port_b.Q_flow + (-Jp2.Jpi1.Ddg.Rd.heatPort.Q_flow) = 0.0;
//   Jp2.Jpi1.Ddg.Rd.BG2Heat1.port_b.T = Jp2.Jpi1.Ddg.Rd.heatPort.T;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.d = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.d = Jp2.Jpi1.Ddg.Rd.Sw1.n1.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.n1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.n1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.d = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.d = Jp2.Jpi1.Ddg.Rd.Sw1.n2.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.n2.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.n2.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.d = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.f = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.e = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.d = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.d = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.f = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.e = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.d = Jp2.Jpi1.Ddg.Rd.Sw1.p.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.p.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.p.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.d = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.f = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.e = Jp2.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.d = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.f = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.e = Jp2.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.d = Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.d;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.f = Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp2.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.e = Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp2.Jpi1.Ddg.Rd.Sw1.Sw1.BooleanInPort1 = Jp2.Jpi1.Ddg.Rd.Sw1.control;
//   Jp2.Jpi1.Ddg.DjJ1.BG2El1.n.i + (-Jp2.Jpi1.Ddg.DjJ1.n.i) = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.BG2El1.n.v = Jp2.Jpi1.Ddg.DjJ1.n.v;
//   Jp2.Jpi1.Ddg.DjJ1.El2BG1.p.i + (-Jp2.Jpi1.Ddg.DjJ1.p.i) = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.El2BG1.p.v = Jp2.Jpi1.Ddg.DjJ1.p.v;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.d = Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.d;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.f = Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon2.e = Jp2.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.d = Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.d;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.f = Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon1.e = Jp2.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.d = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.d;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.f = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.f;
//   Jp2.Jpi1.Ddg.DjJ1.B2.BondCon1.e = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.e;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.d = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.d;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.f = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B1.BondCon2.e = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.d = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.d;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.f = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.f;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon1.e = Jp2.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.e;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.d = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.d;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.f = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B3.BondCon2.e = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.d = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.d;
//   Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.f = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.f;
//   Jp2.Jpi1.Ddg.DjJ1.B4.fBondCon1.e = Jp2.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.e;
//   Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.d = Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.d;
//   Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.f = Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.f;
//   Jp2.Jpi1.Ddg.DjJ1.B4.eBondCon1.e = Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e;
//   Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.Q_flow + (-Jp2.Jpi1.Ddg.DjJ1.heatPort.Q_flow) = 0.0;
//   Jp2.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.T = Jp2.Jpi1.Ddg.DjJ1.heatPort.T;
//   Jp2.Rs.B6.eBondCon1.d = Jp2.Rs.T_nom.BondCon1.d;
//   Jp2.Rs.B6.eBondCon1.f = Jp2.Rs.T_nom.BondCon1.f;
//   Jp2.Rs.B6.eBondCon1.e = Jp2.Rs.T_nom.BondCon1.e;
//   Jp2.Rs.BG2El1.n.i + (-Jp2.Rs.n.i) = 0.0;
//   Jp2.Rs.BG2El1.n.v = Jp2.Rs.n.v;
//   Jp2.Rs.El2BG1.p.i + (-Jp2.Rs.p.i) = 0.0;
//   Jp2.Rs.El2BG1.p.v = Jp2.Rs.p.v;
//   Jp2.Rs.B3.BondCon1.d = Jp2.Rs.J1p3_1.BondCon3.d;
//   Jp2.Rs.B3.BondCon1.f = Jp2.Rs.J1p3_1.BondCon3.f;
//   Jp2.Rs.B3.BondCon1.e = Jp2.Rs.J1p3_1.BondCon3.e;
//   Jp2.Rs.B2.BondCon2.d = Jp2.Rs.BG2El1.BondCon1.d;
//   Jp2.Rs.B2.BondCon2.f = Jp2.Rs.BG2El1.BondCon1.f;
//   Jp2.Rs.B2.BondCon2.e = Jp2.Rs.BG2El1.BondCon1.e;
//   Jp2.Rs.B1.BondCon1.d = Jp2.Rs.El2BG1.BondCon1.d;
//   Jp2.Rs.B1.BondCon1.f = Jp2.Rs.El2BG1.BondCon1.f;
//   Jp2.Rs.B1.BondCon1.e = Jp2.Rs.El2BG1.BondCon1.e;
//   Jp2.Rs.B2.BondCon1.d = Jp2.Rs.J1p3_1.BondCon2.d;
//   Jp2.Rs.B2.BondCon1.f = Jp2.Rs.J1p3_1.BondCon2.f;
//   Jp2.Rs.B2.BondCon1.e = Jp2.Rs.J1p3_1.BondCon2.e;
//   Jp2.Rs.B1.BondCon2.d = Jp2.Rs.J1p3_1.BondCon1.d;
//   Jp2.Rs.B1.BondCon2.f = Jp2.Rs.J1p3_1.BondCon1.f;
//   Jp2.Rs.B1.BondCon2.e = Jp2.Rs.J1p3_1.BondCon1.e;
//   Jp2.Rs.B3.BondCon2.d = Jp2.Rs.R1.BondCon1.d;
//   Jp2.Rs.B3.BondCon2.f = Jp2.Rs.R1.BondCon1.f;
//   Jp2.Rs.B3.BondCon2.e = Jp2.Rs.R1.BondCon1.e;
//   Jp2.Rs.B4.fBondCon1.d = Jp2.Rs.R1.BondCon2.d;
//   Jp2.Rs.B4.fBondCon1.f = Jp2.Rs.R1.BondCon2.f;
//   Jp2.Rs.B4.fBondCon1.e = Jp2.Rs.R1.BondCon2.e;
//   Jp2.Rs.B4.eBondCon1.d = Jp2.Rs.Sw1.p.d;
//   Jp2.Rs.B4.eBondCon1.f = Jp2.Rs.Sw1.p.f;
//   Jp2.Rs.B4.eBondCon1.e = Jp2.Rs.Sw1.p.e;
//   Jp2.Rs.B6.fBondCon1.d = Jp2.Rs.Sw1.n1.d;
//   Jp2.Rs.B6.fBondCon1.f = Jp2.Rs.Sw1.n1.f;
//   Jp2.Rs.B6.fBondCon1.e = Jp2.Rs.Sw1.n1.e;
//   Jp2.Rs.B5.fBondCon1.d = Jp2.Rs.Sw1.n2.d;
//   Jp2.Rs.B5.fBondCon1.f = Jp2.Rs.Sw1.n2.f;
//   Jp2.Rs.B5.fBondCon1.e = Jp2.Rs.Sw1.n2.e;
//   Jp2.Rs.B5.eBondCon1.d = Jp2.Rs.BG2Heat1.BondCon1.d;
//   Jp2.Rs.B5.eBondCon1.f = Jp2.Rs.BG2Heat1.BondCon1.f;
//   Jp2.Rs.B5.eBondCon1.e = Jp2.Rs.BG2Heat1.BondCon1.e;
//   Jp2.Rs.BG2Heat1.port_b.Q_flow + (-Jp2.Rs.heatPort.Q_flow) = 0.0;
//   Jp2.Rs.BG2Heat1.port_b.T = Jp2.Rs.heatPort.T;
//   Jp2.Rs.Sw1.B4.BondCon2.d = Jp2.Rs.Sw1.j0p2_1.BondCon1.d;
//   Jp2.Rs.Sw1.B4.BondCon2.f = Jp2.Rs.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Rs.Sw1.B4.BondCon2.e = Jp2.Rs.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Rs.Sw1.j0p2_2.BondCon2.d = Jp2.Rs.Sw1.n1.d;
//   Jp2.Rs.Sw1.j0p2_2.BondCon2.f = Jp2.Rs.Sw1.n1.f;
//   Jp2.Rs.Sw1.j0p2_2.BondCon2.e = Jp2.Rs.Sw1.n1.e;
//   Jp2.Rs.Sw1.B2.BondCon2.d = Jp2.Rs.Sw1.j0p2_2.BondCon1.d;
//   Jp2.Rs.Sw1.B2.BondCon2.f = Jp2.Rs.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Rs.Sw1.B2.BondCon2.e = Jp2.Rs.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Rs.Sw1.j0p2_1.BondCon2.d = Jp2.Rs.Sw1.n2.d;
//   Jp2.Rs.Sw1.j0p2_1.BondCon2.f = Jp2.Rs.Sw1.n2.f;
//   Jp2.Rs.Sw1.j0p2_1.BondCon2.e = Jp2.Rs.Sw1.n2.e;
//   Jp2.Rs.Sw1.B1.BondCon1.d = Jp2.Rs.Sw1.J0p3_1.BondCon3.d;
//   Jp2.Rs.Sw1.B1.BondCon1.f = Jp2.Rs.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Rs.Sw1.B1.BondCon1.e = Jp2.Rs.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Rs.Sw1.B1.BondCon2.d = Jp2.Rs.Sw1.J1p3_1.BondCon1.d;
//   Jp2.Rs.Sw1.B1.BondCon2.f = Jp2.Rs.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Rs.Sw1.B1.BondCon2.e = Jp2.Rs.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Rs.Sw1.B2.BondCon1.d = Jp2.Rs.Sw1.J1p3_1.BondCon2.d;
//   Jp2.Rs.Sw1.B2.BondCon1.f = Jp2.Rs.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Rs.Sw1.B2.BondCon1.e = Jp2.Rs.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Rs.Sw1.J0p3_1.BondCon2.d = Jp2.Rs.Sw1.p.d;
//   Jp2.Rs.Sw1.J0p3_1.BondCon2.f = Jp2.Rs.Sw1.p.f;
//   Jp2.Rs.Sw1.J0p3_1.BondCon2.e = Jp2.Rs.Sw1.p.e;
//   Jp2.Rs.Sw1.B4.BondCon1.d = Jp2.Rs.Sw1.J0p3_1.BondCon1.d;
//   Jp2.Rs.Sw1.B4.BondCon1.f = Jp2.Rs.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Rs.Sw1.B4.BondCon1.e = Jp2.Rs.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Rs.Sw1.B3.BondCon1.d = Jp2.Rs.Sw1.J1p3_1.BondCon3.d;
//   Jp2.Rs.Sw1.B3.BondCon1.f = Jp2.Rs.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Rs.Sw1.B3.BondCon1.e = Jp2.Rs.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Rs.Sw1.B3.BondCon2.d = Jp2.Rs.Sw1.Sw1.BondCon1.d;
//   Jp2.Rs.Sw1.B3.BondCon2.f = Jp2.Rs.Sw1.Sw1.BondCon1.f;
//   Jp2.Rs.Sw1.B3.BondCon2.e = Jp2.Rs.Sw1.Sw1.BondCon1.e;
//   Jp2.Rs.Sw1.Sw1.BooleanInPort1 = Jp2.Rs.Sw1.control;
//   Jp2.Rd.B6.eBondCon1.d = Jp2.Rd.T_nom.BondCon1.d;
//   Jp2.Rd.B6.eBondCon1.f = Jp2.Rd.T_nom.BondCon1.f;
//   Jp2.Rd.B6.eBondCon1.e = Jp2.Rd.T_nom.BondCon1.e;
//   Jp2.Rd.BG2El1.n.i + (-Jp2.Rd.n.i) = 0.0;
//   Jp2.Rd.BG2El1.n.v = Jp2.Rd.n.v;
//   Jp2.Rd.El2BG1.p.i + (-Jp2.Rd.p.i) = 0.0;
//   Jp2.Rd.El2BG1.p.v = Jp2.Rd.p.v;
//   Jp2.Rd.B3.BondCon1.d = Jp2.Rd.J1p3_1.BondCon3.d;
//   Jp2.Rd.B3.BondCon1.f = Jp2.Rd.J1p3_1.BondCon3.f;
//   Jp2.Rd.B3.BondCon1.e = Jp2.Rd.J1p3_1.BondCon3.e;
//   Jp2.Rd.B2.BondCon2.d = Jp2.Rd.BG2El1.BondCon1.d;
//   Jp2.Rd.B2.BondCon2.f = Jp2.Rd.BG2El1.BondCon1.f;
//   Jp2.Rd.B2.BondCon2.e = Jp2.Rd.BG2El1.BondCon1.e;
//   Jp2.Rd.B1.BondCon1.d = Jp2.Rd.El2BG1.BondCon1.d;
//   Jp2.Rd.B1.BondCon1.f = Jp2.Rd.El2BG1.BondCon1.f;
//   Jp2.Rd.B1.BondCon1.e = Jp2.Rd.El2BG1.BondCon1.e;
//   Jp2.Rd.B2.BondCon1.d = Jp2.Rd.J1p3_1.BondCon2.d;
//   Jp2.Rd.B2.BondCon1.f = Jp2.Rd.J1p3_1.BondCon2.f;
//   Jp2.Rd.B2.BondCon1.e = Jp2.Rd.J1p3_1.BondCon2.e;
//   Jp2.Rd.B1.BondCon2.d = Jp2.Rd.J1p3_1.BondCon1.d;
//   Jp2.Rd.B1.BondCon2.f = Jp2.Rd.J1p3_1.BondCon1.f;
//   Jp2.Rd.B1.BondCon2.e = Jp2.Rd.J1p3_1.BondCon1.e;
//   Jp2.Rd.B3.BondCon2.d = Jp2.Rd.R1.BondCon1.d;
//   Jp2.Rd.B3.BondCon2.f = Jp2.Rd.R1.BondCon1.f;
//   Jp2.Rd.B3.BondCon2.e = Jp2.Rd.R1.BondCon1.e;
//   Jp2.Rd.B4.fBondCon1.d = Jp2.Rd.R1.BondCon2.d;
//   Jp2.Rd.B4.fBondCon1.f = Jp2.Rd.R1.BondCon2.f;
//   Jp2.Rd.B4.fBondCon1.e = Jp2.Rd.R1.BondCon2.e;
//   Jp2.Rd.B4.eBondCon1.d = Jp2.Rd.Sw1.p.d;
//   Jp2.Rd.B4.eBondCon1.f = Jp2.Rd.Sw1.p.f;
//   Jp2.Rd.B4.eBondCon1.e = Jp2.Rd.Sw1.p.e;
//   Jp2.Rd.B6.fBondCon1.d = Jp2.Rd.Sw1.n1.d;
//   Jp2.Rd.B6.fBondCon1.f = Jp2.Rd.Sw1.n1.f;
//   Jp2.Rd.B6.fBondCon1.e = Jp2.Rd.Sw1.n1.e;
//   Jp2.Rd.B5.fBondCon1.d = Jp2.Rd.Sw1.n2.d;
//   Jp2.Rd.B5.fBondCon1.f = Jp2.Rd.Sw1.n2.f;
//   Jp2.Rd.B5.fBondCon1.e = Jp2.Rd.Sw1.n2.e;
//   Jp2.Rd.B5.eBondCon1.d = Jp2.Rd.BG2Heat1.BondCon1.d;
//   Jp2.Rd.B5.eBondCon1.f = Jp2.Rd.BG2Heat1.BondCon1.f;
//   Jp2.Rd.B5.eBondCon1.e = Jp2.Rd.BG2Heat1.BondCon1.e;
//   Jp2.Rd.BG2Heat1.port_b.Q_flow + (-Jp2.Rd.heatPort.Q_flow) = 0.0;
//   Jp2.Rd.BG2Heat1.port_b.T = Jp2.Rd.heatPort.T;
//   Jp2.Rd.Sw1.B4.BondCon2.d = Jp2.Rd.Sw1.j0p2_1.BondCon1.d;
//   Jp2.Rd.Sw1.B4.BondCon2.f = Jp2.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Rd.Sw1.B4.BondCon2.e = Jp2.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Rd.Sw1.j0p2_2.BondCon2.d = Jp2.Rd.Sw1.n1.d;
//   Jp2.Rd.Sw1.j0p2_2.BondCon2.f = Jp2.Rd.Sw1.n1.f;
//   Jp2.Rd.Sw1.j0p2_2.BondCon2.e = Jp2.Rd.Sw1.n1.e;
//   Jp2.Rd.Sw1.B2.BondCon2.d = Jp2.Rd.Sw1.j0p2_2.BondCon1.d;
//   Jp2.Rd.Sw1.B2.BondCon2.f = Jp2.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Rd.Sw1.B2.BondCon2.e = Jp2.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Rd.Sw1.j0p2_1.BondCon2.d = Jp2.Rd.Sw1.n2.d;
//   Jp2.Rd.Sw1.j0p2_1.BondCon2.f = Jp2.Rd.Sw1.n2.f;
//   Jp2.Rd.Sw1.j0p2_1.BondCon2.e = Jp2.Rd.Sw1.n2.e;
//   Jp2.Rd.Sw1.B1.BondCon1.d = Jp2.Rd.Sw1.J0p3_1.BondCon3.d;
//   Jp2.Rd.Sw1.B1.BondCon1.f = Jp2.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Rd.Sw1.B1.BondCon1.e = Jp2.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Rd.Sw1.B1.BondCon2.d = Jp2.Rd.Sw1.J1p3_1.BondCon1.d;
//   Jp2.Rd.Sw1.B1.BondCon2.f = Jp2.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Rd.Sw1.B1.BondCon2.e = Jp2.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Rd.Sw1.B2.BondCon1.d = Jp2.Rd.Sw1.J1p3_1.BondCon2.d;
//   Jp2.Rd.Sw1.B2.BondCon1.f = Jp2.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Rd.Sw1.B2.BondCon1.e = Jp2.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Rd.Sw1.J0p3_1.BondCon2.d = Jp2.Rd.Sw1.p.d;
//   Jp2.Rd.Sw1.J0p3_1.BondCon2.f = Jp2.Rd.Sw1.p.f;
//   Jp2.Rd.Sw1.J0p3_1.BondCon2.e = Jp2.Rd.Sw1.p.e;
//   Jp2.Rd.Sw1.B4.BondCon1.d = Jp2.Rd.Sw1.J0p3_1.BondCon1.d;
//   Jp2.Rd.Sw1.B4.BondCon1.f = Jp2.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Rd.Sw1.B4.BondCon1.e = Jp2.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Rd.Sw1.B3.BondCon1.d = Jp2.Rd.Sw1.J1p3_1.BondCon3.d;
//   Jp2.Rd.Sw1.B3.BondCon1.f = Jp2.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Rd.Sw1.B3.BondCon1.e = Jp2.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Rd.Sw1.B3.BondCon2.d = Jp2.Rd.Sw1.Sw1.BondCon1.d;
//   Jp2.Rd.Sw1.B3.BondCon2.f = Jp2.Rd.Sw1.Sw1.BondCon1.f;
//   Jp2.Rd.Sw1.B3.BondCon2.e = Jp2.Rd.Sw1.Sw1.BondCon1.e;
//   Jp2.Rd.Sw1.Sw1.BooleanInPort1 = Jp2.Rd.Sw1.control;
//   Jp2.Rg.B6.eBondCon1.d = Jp2.Rg.T_nom.BondCon1.d;
//   Jp2.Rg.B6.eBondCon1.f = Jp2.Rg.T_nom.BondCon1.f;
//   Jp2.Rg.B6.eBondCon1.e = Jp2.Rg.T_nom.BondCon1.e;
//   Jp2.Rg.BG2El1.n.i + (-Jp2.Rg.n.i) = 0.0;
//   Jp2.Rg.BG2El1.n.v = Jp2.Rg.n.v;
//   Jp2.Rg.El2BG1.p.i + (-Jp2.Rg.p.i) = 0.0;
//   Jp2.Rg.El2BG1.p.v = Jp2.Rg.p.v;
//   Jp2.Rg.B3.BondCon1.d = Jp2.Rg.J1p3_1.BondCon3.d;
//   Jp2.Rg.B3.BondCon1.f = Jp2.Rg.J1p3_1.BondCon3.f;
//   Jp2.Rg.B3.BondCon1.e = Jp2.Rg.J1p3_1.BondCon3.e;
//   Jp2.Rg.B2.BondCon2.d = Jp2.Rg.BG2El1.BondCon1.d;
//   Jp2.Rg.B2.BondCon2.f = Jp2.Rg.BG2El1.BondCon1.f;
//   Jp2.Rg.B2.BondCon2.e = Jp2.Rg.BG2El1.BondCon1.e;
//   Jp2.Rg.B1.BondCon1.d = Jp2.Rg.El2BG1.BondCon1.d;
//   Jp2.Rg.B1.BondCon1.f = Jp2.Rg.El2BG1.BondCon1.f;
//   Jp2.Rg.B1.BondCon1.e = Jp2.Rg.El2BG1.BondCon1.e;
//   Jp2.Rg.B2.BondCon1.d = Jp2.Rg.J1p3_1.BondCon2.d;
//   Jp2.Rg.B2.BondCon1.f = Jp2.Rg.J1p3_1.BondCon2.f;
//   Jp2.Rg.B2.BondCon1.e = Jp2.Rg.J1p3_1.BondCon2.e;
//   Jp2.Rg.B1.BondCon2.d = Jp2.Rg.J1p3_1.BondCon1.d;
//   Jp2.Rg.B1.BondCon2.f = Jp2.Rg.J1p3_1.BondCon1.f;
//   Jp2.Rg.B1.BondCon2.e = Jp2.Rg.J1p3_1.BondCon1.e;
//   Jp2.Rg.B3.BondCon2.d = Jp2.Rg.R1.BondCon1.d;
//   Jp2.Rg.B3.BondCon2.f = Jp2.Rg.R1.BondCon1.f;
//   Jp2.Rg.B3.BondCon2.e = Jp2.Rg.R1.BondCon1.e;
//   Jp2.Rg.B4.fBondCon1.d = Jp2.Rg.R1.BondCon2.d;
//   Jp2.Rg.B4.fBondCon1.f = Jp2.Rg.R1.BondCon2.f;
//   Jp2.Rg.B4.fBondCon1.e = Jp2.Rg.R1.BondCon2.e;
//   Jp2.Rg.B4.eBondCon1.d = Jp2.Rg.Sw1.p.d;
//   Jp2.Rg.B4.eBondCon1.f = Jp2.Rg.Sw1.p.f;
//   Jp2.Rg.B4.eBondCon1.e = Jp2.Rg.Sw1.p.e;
//   Jp2.Rg.B6.fBondCon1.d = Jp2.Rg.Sw1.n1.d;
//   Jp2.Rg.B6.fBondCon1.f = Jp2.Rg.Sw1.n1.f;
//   Jp2.Rg.B6.fBondCon1.e = Jp2.Rg.Sw1.n1.e;
//   Jp2.Rg.B5.fBondCon1.d = Jp2.Rg.Sw1.n2.d;
//   Jp2.Rg.B5.fBondCon1.f = Jp2.Rg.Sw1.n2.f;
//   Jp2.Rg.B5.fBondCon1.e = Jp2.Rg.Sw1.n2.e;
//   Jp2.Rg.B5.eBondCon1.d = Jp2.Rg.BG2Heat1.BondCon1.d;
//   Jp2.Rg.B5.eBondCon1.f = Jp2.Rg.BG2Heat1.BondCon1.f;
//   Jp2.Rg.B5.eBondCon1.e = Jp2.Rg.BG2Heat1.BondCon1.e;
//   Jp2.Rg.BG2Heat1.port_b.Q_flow + (-Jp2.Rg.heatPort.Q_flow) = 0.0;
//   Jp2.Rg.BG2Heat1.port_b.T = Jp2.Rg.heatPort.T;
//   Jp2.Rg.Sw1.B4.BondCon2.d = Jp2.Rg.Sw1.j0p2_1.BondCon1.d;
//   Jp2.Rg.Sw1.B4.BondCon2.f = Jp2.Rg.Sw1.j0p2_1.BondCon1.f;
//   Jp2.Rg.Sw1.B4.BondCon2.e = Jp2.Rg.Sw1.j0p2_1.BondCon1.e;
//   Jp2.Rg.Sw1.j0p2_2.BondCon2.d = Jp2.Rg.Sw1.n1.d;
//   Jp2.Rg.Sw1.j0p2_2.BondCon2.f = Jp2.Rg.Sw1.n1.f;
//   Jp2.Rg.Sw1.j0p2_2.BondCon2.e = Jp2.Rg.Sw1.n1.e;
//   Jp2.Rg.Sw1.B2.BondCon2.d = Jp2.Rg.Sw1.j0p2_2.BondCon1.d;
//   Jp2.Rg.Sw1.B2.BondCon2.f = Jp2.Rg.Sw1.j0p2_2.BondCon1.f;
//   Jp2.Rg.Sw1.B2.BondCon2.e = Jp2.Rg.Sw1.j0p2_2.BondCon1.e;
//   Jp2.Rg.Sw1.j0p2_1.BondCon2.d = Jp2.Rg.Sw1.n2.d;
//   Jp2.Rg.Sw1.j0p2_1.BondCon2.f = Jp2.Rg.Sw1.n2.f;
//   Jp2.Rg.Sw1.j0p2_1.BondCon2.e = Jp2.Rg.Sw1.n2.e;
//   Jp2.Rg.Sw1.B1.BondCon1.d = Jp2.Rg.Sw1.J0p3_1.BondCon3.d;
//   Jp2.Rg.Sw1.B1.BondCon1.f = Jp2.Rg.Sw1.J0p3_1.BondCon3.f;
//   Jp2.Rg.Sw1.B1.BondCon1.e = Jp2.Rg.Sw1.J0p3_1.BondCon3.e;
//   Jp2.Rg.Sw1.B1.BondCon2.d = Jp2.Rg.Sw1.J1p3_1.BondCon1.d;
//   Jp2.Rg.Sw1.B1.BondCon2.f = Jp2.Rg.Sw1.J1p3_1.BondCon1.f;
//   Jp2.Rg.Sw1.B1.BondCon2.e = Jp2.Rg.Sw1.J1p3_1.BondCon1.e;
//   Jp2.Rg.Sw1.B2.BondCon1.d = Jp2.Rg.Sw1.J1p3_1.BondCon2.d;
//   Jp2.Rg.Sw1.B2.BondCon1.f = Jp2.Rg.Sw1.J1p3_1.BondCon2.f;
//   Jp2.Rg.Sw1.B2.BondCon1.e = Jp2.Rg.Sw1.J1p3_1.BondCon2.e;
//   Jp2.Rg.Sw1.J0p3_1.BondCon2.d = Jp2.Rg.Sw1.p.d;
//   Jp2.Rg.Sw1.J0p3_1.BondCon2.f = Jp2.Rg.Sw1.p.f;
//   Jp2.Rg.Sw1.J0p3_1.BondCon2.e = Jp2.Rg.Sw1.p.e;
//   Jp2.Rg.Sw1.B4.BondCon1.d = Jp2.Rg.Sw1.J0p3_1.BondCon1.d;
//   Jp2.Rg.Sw1.B4.BondCon1.f = Jp2.Rg.Sw1.J0p3_1.BondCon1.f;
//   Jp2.Rg.Sw1.B4.BondCon1.e = Jp2.Rg.Sw1.J0p3_1.BondCon1.e;
//   Jp2.Rg.Sw1.B3.BondCon1.d = Jp2.Rg.Sw1.J1p3_1.BondCon3.d;
//   Jp2.Rg.Sw1.B3.BondCon1.f = Jp2.Rg.Sw1.J1p3_1.BondCon3.f;
//   Jp2.Rg.Sw1.B3.BondCon1.e = Jp2.Rg.Sw1.J1p3_1.BondCon3.e;
//   Jp2.Rg.Sw1.B3.BondCon2.d = Jp2.Rg.Sw1.Sw1.BondCon1.d;
//   Jp2.Rg.Sw1.B3.BondCon2.f = Jp2.Rg.Sw1.Sw1.BondCon1.f;
//   Jp2.Rg.Sw1.B3.BondCon2.e = Jp2.Rg.Sw1.Sw1.BondCon1.e;
//   Jp2.Rg.Sw1.Sw1.BooleanInPort1 = Jp2.Rg.Sw1.control;
//   Jp1.Rg.heatPort.Q_flow + (Jp1.Rd.heatPort.Q_flow + (Jp1.Jpi1.heatPort.Q_flow + (Jp1.Sw1.p.Q_flow + Jp1.Rs.heatPort.Q_flow))) = 0.0;
//   Jp1.Jpi1.heatPort.T = Jp1.Rd.heatPort.T;
//   Jp1.Jpi1.heatPort.T = Jp1.Rg.heatPort.T;
//   Jp1.Jpi1.heatPort.T = Jp1.Rs.heatPort.T;
//   Jp1.Jpi1.heatPort.T = Jp1.Sw1.p.T;
//   Jp1.Jpi1.S.i + Jp1.Rs.p.i = 0.0;
//   Jp1.Jpi1.S.v = Jp1.Rs.p.v;
//   Jp1.Rd.p.i + Jp1.Jpi1.D.i = 0.0;
//   Jp1.Jpi1.D.v = Jp1.Rd.p.v;
//   Jp1.Rg.n.i + Jp1.Jpi1.G.i = 0.0;
//   Jp1.Jpi1.G.v = Jp1.Rg.n.v;
//   Jp1.Rs.n.i + (-Jp1.S.i) = 0.0;
//   Jp1.Rs.n.v = Jp1.S.v;
//   Jp1.Rd.n.i + (-Jp1.D.i) = 0.0;
//   Jp1.D.v = Jp1.Rd.n.v;
//   Jp1.Rg.p.i + (-Jp1.G.i) = 0.0;
//   Jp1.G.v = Jp1.Rg.p.v;
//   Jp1.Sw1.n1.Q_flow + Jp1.T_nom.port.Q_flow = 0.0;
//   Jp1.Sw1.n1.T = Jp1.T_nom.port.T;
//   Jp1.Sw1.n2.Q_flow + (-Jp1.heatPort.Q_flow) = 0.0;
//   Jp1.Sw1.n2.T = Jp1.heatPort.T;
//   Jp1.Sw1.B2.BondCon2.d = Jp1.Sw1.BG2Heat2.BondCon1.d;
//   Jp1.Sw1.B2.BondCon2.f = Jp1.Sw1.BG2Heat2.BondCon1.f;
//   Jp1.Sw1.B2.BondCon2.e = Jp1.Sw1.BG2Heat2.BondCon1.e;
//   Jp1.Sw1.BG2Heat2.port_b.Q_flow + (-Jp1.Sw1.n2.Q_flow) = 0.0;
//   Jp1.Sw1.BG2Heat2.port_b.T = Jp1.Sw1.n2.T;
//   Jp1.Sw1.B3.BondCon2.d = Jp1.Sw1.BG2Heat1.BondCon1.d;
//   Jp1.Sw1.B3.BondCon2.f = Jp1.Sw1.BG2Heat1.BondCon1.f;
//   Jp1.Sw1.B3.BondCon2.e = Jp1.Sw1.BG2Heat1.BondCon1.e;
//   Jp1.Sw1.BG2Heat1.port_b.Q_flow + (-Jp1.Sw1.n1.Q_flow) = 0.0;
//   Jp1.Sw1.BG2Heat1.port_b.T = Jp1.Sw1.n1.T;
//   Jp1.Sw1.B1.BondCon1.d = Jp1.Sw1.Heat2BG1.BondCon1.d;
//   Jp1.Sw1.B1.BondCon1.f = Jp1.Sw1.Heat2BG1.BondCon1.f;
//   Jp1.Sw1.B1.BondCon1.e = Jp1.Sw1.Heat2BG1.BondCon1.e;
//   Jp1.Sw1.Heat2BG1.port_a.Q_flow + (-Jp1.Sw1.p.Q_flow) = 0.0;
//   Jp1.Sw1.Heat2BG1.port_a.T = Jp1.Sw1.p.T;
//   Jp1.Sw1.Sw1.control = Jp1.Sw1.control;
//   Jp1.Sw1.B1.BondCon2.d = Jp1.Sw1.Sw1.p.d;
//   Jp1.Sw1.B1.BondCon2.f = Jp1.Sw1.Sw1.p.f;
//   Jp1.Sw1.B1.BondCon2.e = Jp1.Sw1.Sw1.p.e;
//   Jp1.Sw1.B2.BondCon1.d = Jp1.Sw1.Sw1.n2.d;
//   Jp1.Sw1.B2.BondCon1.f = Jp1.Sw1.Sw1.n2.f;
//   Jp1.Sw1.B2.BondCon1.e = Jp1.Sw1.Sw1.n2.e;
//   Jp1.Sw1.B3.BondCon1.d = Jp1.Sw1.Sw1.n1.d;
//   Jp1.Sw1.B3.BondCon1.f = Jp1.Sw1.Sw1.n1.f;
//   Jp1.Sw1.B3.BondCon1.e = Jp1.Sw1.Sw1.n1.e;
//   Jp1.Sw1.Sw1.B4.BondCon2.d = Jp1.Sw1.Sw1.j0p2_1.BondCon1.d;
//   Jp1.Sw1.Sw1.B4.BondCon2.f = Jp1.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Sw1.Sw1.B4.BondCon2.e = Jp1.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Sw1.Sw1.j0p2_2.BondCon2.d = Jp1.Sw1.Sw1.n1.d;
//   Jp1.Sw1.Sw1.j0p2_2.BondCon2.f = Jp1.Sw1.Sw1.n1.f;
//   Jp1.Sw1.Sw1.j0p2_2.BondCon2.e = Jp1.Sw1.Sw1.n1.e;
//   Jp1.Sw1.Sw1.B2.BondCon2.d = Jp1.Sw1.Sw1.j0p2_2.BondCon1.d;
//   Jp1.Sw1.Sw1.B2.BondCon2.f = Jp1.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Sw1.Sw1.B2.BondCon2.e = Jp1.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Sw1.Sw1.j0p2_1.BondCon2.d = Jp1.Sw1.Sw1.n2.d;
//   Jp1.Sw1.Sw1.j0p2_1.BondCon2.f = Jp1.Sw1.Sw1.n2.f;
//   Jp1.Sw1.Sw1.j0p2_1.BondCon2.e = Jp1.Sw1.Sw1.n2.e;
//   Jp1.Sw1.Sw1.B1.BondCon1.d = Jp1.Sw1.Sw1.J0p3_1.BondCon3.d;
//   Jp1.Sw1.Sw1.B1.BondCon1.f = Jp1.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Sw1.Sw1.B1.BondCon1.e = Jp1.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Sw1.Sw1.B1.BondCon2.d = Jp1.Sw1.Sw1.J1p3_1.BondCon1.d;
//   Jp1.Sw1.Sw1.B1.BondCon2.f = Jp1.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Sw1.Sw1.B1.BondCon2.e = Jp1.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Sw1.Sw1.B2.BondCon1.d = Jp1.Sw1.Sw1.J1p3_1.BondCon2.d;
//   Jp1.Sw1.Sw1.B2.BondCon1.f = Jp1.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Sw1.Sw1.B2.BondCon1.e = Jp1.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Sw1.Sw1.J0p3_1.BondCon2.d = Jp1.Sw1.Sw1.p.d;
//   Jp1.Sw1.Sw1.J0p3_1.BondCon2.f = Jp1.Sw1.Sw1.p.f;
//   Jp1.Sw1.Sw1.J0p3_1.BondCon2.e = Jp1.Sw1.Sw1.p.e;
//   Jp1.Sw1.Sw1.B4.BondCon1.d = Jp1.Sw1.Sw1.J0p3_1.BondCon1.d;
//   Jp1.Sw1.Sw1.B4.BondCon1.f = Jp1.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Sw1.Sw1.B4.BondCon1.e = Jp1.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Sw1.Sw1.B3.BondCon1.d = Jp1.Sw1.Sw1.J1p3_1.BondCon3.d;
//   Jp1.Sw1.Sw1.B3.BondCon1.f = Jp1.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Sw1.Sw1.B3.BondCon1.e = Jp1.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Sw1.Sw1.B3.BondCon2.d = Jp1.Sw1.Sw1.Sw1.BondCon1.d;
//   Jp1.Sw1.Sw1.B3.BondCon2.f = Jp1.Sw1.Sw1.Sw1.BondCon1.f;
//   Jp1.Sw1.Sw1.B3.BondCon2.e = Jp1.Sw1.Sw1.Sw1.BondCon1.e;
//   Jp1.Sw1.Sw1.Sw1.BooleanInPort1 = Jp1.Sw1.Sw1.control;
//   Jp1.T_nom.BG2Heat1.port_b.Q_flow + (-Jp1.T_nom.port.Q_flow) = 0.0;
//   Jp1.T_nom.BG2Heat1.port_b.T = Jp1.T_nom.port.T;
//   Jp1.T_nom.B1.eBondCon1.d = Jp1.T_nom.Tabs.BondCon1.d;
//   Jp1.T_nom.B1.eBondCon1.f = Jp1.T_nom.Tabs.BondCon1.f;
//   Jp1.T_nom.B1.eBondCon1.e = Jp1.T_nom.Tabs.BondCon1.e;
//   Jp1.T_nom.B1.fBondCon1.d = Jp1.T_nom.BG2Heat1.BondCon1.d;
//   Jp1.T_nom.B1.fBondCon1.f = Jp1.T_nom.BG2Heat1.BondCon1.f;
//   Jp1.T_nom.B1.fBondCon1.e = Jp1.T_nom.BG2Heat1.BondCon1.e;
//   Jp1.Jpi1.Ddg.vgs = Jp1.Jpi1.Dsg.vgs;
//   Jp1.Jpi1.Ddg.vgs = Jp1.Jpi1.ISD.u2;
//   Jp1.Jpi1.Ddg.vgs = Jp1.Jpi1.Vsg.V;
//   Jp1.Jpi1.Dsg.n.i + (Jp1.Jpi1.Ddg.n.i + (Jp1.Jpi1.Vsg.n.i + (-Jp1.Jpi1.G.i))) = 0.0;
//   Jp1.Jpi1.Ddg.n.v = Jp1.Jpi1.Dsg.n.v;
//   Jp1.Jpi1.Ddg.n.v = Jp1.Jpi1.G.v;
//   Jp1.Jpi1.Ddg.n.v = Jp1.Jpi1.Vsg.n.v;
//   Jp1.Jpi1.Dsg.p.i + (Jp1.Jpi1.Vsg.p.i + (Jp1.Jpi1.Isd.p.i + ((-Jp1.Jpi1.S.i) + Jp1.Jpi1.Vsd.p.i))) = 0.0;
//   Jp1.Jpi1.Dsg.p.v = Jp1.Jpi1.Isd.p.v;
//   Jp1.Jpi1.Dsg.p.v = Jp1.Jpi1.S.v;
//   Jp1.Jpi1.Dsg.p.v = Jp1.Jpi1.Vsd.p.v;
//   Jp1.Jpi1.Dsg.p.v = Jp1.Jpi1.Vsg.p.v;
//   Jp1.Jpi1.Ddg.p.i + (Jp1.Jpi1.Isd.n.i + ((-Jp1.Jpi1.D.i) + Jp1.Jpi1.Vsd.n.i)) = 0.0;
//   Jp1.Jpi1.D.v = Jp1.Jpi1.Ddg.p.v;
//   Jp1.Jpi1.D.v = Jp1.Jpi1.Isd.n.v;
//   Jp1.Jpi1.D.v = Jp1.Jpi1.Vsd.n.v;
//   Jp1.Jpi1.Ddg.vds = Jp1.Jpi1.Dsg.vds;
//   Jp1.Jpi1.Ddg.vds = Jp1.Jpi1.ISD.u1;
//   Jp1.Jpi1.Ddg.vds = Jp1.Jpi1.Vsd.V;
//   Jp1.Jpi1.ISD.Tdev = Jp1.Jpi1.Tdev1.T;
//   Jp1.Jpi1.Tdev1.port.Q_flow + (Jp1.Jpi1.Ddg.heatPort.Q_flow + (Jp1.Jpi1.Dsg.heatPort.Q_flow + (Jp1.Jpi1.Isd.heatPort.Q_flow + (-Jp1.Jpi1.heatPort.Q_flow)))) = 0.0;
//   Jp1.Jpi1.Ddg.heatPort.T = Jp1.Jpi1.Dsg.heatPort.T;
//   Jp1.Jpi1.Ddg.heatPort.T = Jp1.Jpi1.Isd.heatPort.T;
//   Jp1.Jpi1.Ddg.heatPort.T = Jp1.Jpi1.Tdev1.port.T;
//   Jp1.Jpi1.Ddg.heatPort.T = Jp1.Jpi1.heatPort.T;
//   Jp1.Jpi1.ISD.y = Jp1.Jpi1.Isd.InPort1;
//   Jp1.Jpi1.Isd.BG2Heat1.port_b.Q_flow + (-Jp1.Jpi1.Isd.heatPort.Q_flow) = 0.0;
//   Jp1.Jpi1.Isd.BG2Heat1.port_b.T = Jp1.Jpi1.Isd.heatPort.T;
//   Jp1.Jpi1.Isd.BG2El1.n.i + (-Jp1.Jpi1.Isd.n.i) = 0.0;
//   Jp1.Jpi1.Isd.BG2El1.n.v = Jp1.Jpi1.Isd.n.v;
//   Jp1.Jpi1.Isd.El2BG1.p.i + (-Jp1.Jpi1.Isd.p.i) = 0.0;
//   Jp1.Jpi1.Isd.El2BG1.p.v = Jp1.Jpi1.Isd.p.v;
//   Jp1.Jpi1.Isd.B2.BondCon1.d = Jp1.Jpi1.Isd.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Isd.B2.BondCon1.f = Jp1.Jpi1.Isd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Isd.B2.BondCon1.e = Jp1.Jpi1.Isd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Isd.B2.BondCon2.d = Jp1.Jpi1.Isd.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Isd.B2.BondCon2.f = Jp1.Jpi1.Isd.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Isd.B2.BondCon2.e = Jp1.Jpi1.Isd.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Isd.B1.BondCon1.d = Jp1.Jpi1.Isd.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Isd.B1.BondCon1.f = Jp1.Jpi1.Isd.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Isd.B1.BondCon1.e = Jp1.Jpi1.Isd.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Isd.B1.BondCon2.d = Jp1.Jpi1.Isd.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Isd.B1.BondCon2.f = Jp1.Jpi1.Isd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Isd.B1.BondCon2.e = Jp1.Jpi1.Isd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Isd.B4.eBondCon1.d = Jp1.Jpi1.Isd.BG2Heat1.BondCon1.d;
//   Jp1.Jpi1.Isd.B4.eBondCon1.f = Jp1.Jpi1.Isd.BG2Heat1.BondCon1.f;
//   Jp1.Jpi1.Isd.B4.eBondCon1.e = Jp1.Jpi1.Isd.BG2Heat1.BondCon1.e;
//   Jp1.Jpi1.Isd.B3.eBondCon1.d = Jp1.Jpi1.Isd.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Isd.B3.eBondCon1.f = Jp1.Jpi1.Isd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Isd.B3.eBondCon1.e = Jp1.Jpi1.Isd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Isd.B3.fBondCon1.d = Jp1.Jpi1.Isd.I1.BondCon2.d;
//   Jp1.Jpi1.Isd.B3.fBondCon1.f = Jp1.Jpi1.Isd.I1.BondCon2.f;
//   Jp1.Jpi1.Isd.B3.fBondCon1.e = Jp1.Jpi1.Isd.I1.BondCon2.e;
//   Jp1.Jpi1.Isd.B4.fBondCon1.d = Jp1.Jpi1.Isd.I1.BondCon1.d;
//   Jp1.Jpi1.Isd.B4.fBondCon1.f = Jp1.Jpi1.Isd.I1.BondCon1.f;
//   Jp1.Jpi1.Isd.B4.fBondCon1.e = Jp1.Jpi1.Isd.I1.BondCon1.e;
//   Jp1.Jpi1.Isd.I1.s = Jp1.Jpi1.Isd.InPort1;
//   Jp1.Jpi1.Vsd.BG2El1.n.i + (-Jp1.Jpi1.Vsd.n.i) = 0.0;
//   Jp1.Jpi1.Vsd.BG2El1.n.v = Jp1.Jpi1.Vsd.n.v;
//   Jp1.Jpi1.Vsd.El2BG1.p.i + (-Jp1.Jpi1.Vsd.p.i) = 0.0;
//   Jp1.Jpi1.Vsd.El2BG1.p.v = Jp1.Jpi1.Vsd.p.v;
//   Jp1.Jpi1.Vsd.B2.BondCon2.d = Jp1.Jpi1.Vsd.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Vsd.B2.BondCon2.f = Jp1.Jpi1.Vsd.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Vsd.B2.BondCon2.e = Jp1.Jpi1.Vsd.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Vsd.B1.BondCon1.d = Jp1.Jpi1.Vsd.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Vsd.B1.BondCon1.f = Jp1.Jpi1.Vsd.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Vsd.B1.BondCon1.e = Jp1.Jpi1.Vsd.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Vsd.B2.BondCon1.d = Jp1.Jpi1.Vsd.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Vsd.B2.BondCon1.f = Jp1.Jpi1.Vsd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Vsd.B2.BondCon1.e = Jp1.Jpi1.Vsd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Vsd.B1.BondCon2.d = Jp1.Jpi1.Vsd.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Vsd.B1.BondCon2.f = Jp1.Jpi1.Vsd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Vsd.B1.BondCon2.e = Jp1.Jpi1.Vsd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Vsd.De1.OutPort1 = Jp1.Jpi1.Vsd.V;
//   Jp1.Jpi1.Vsd.B3.BondCon1.d = Jp1.Jpi1.Vsd.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Vsd.B3.BondCon1.f = Jp1.Jpi1.Vsd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Vsd.B3.BondCon1.e = Jp1.Jpi1.Vsd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Vsd.B3.BondCon2.d = Jp1.Jpi1.Vsd.De1.BondCon1.d;
//   Jp1.Jpi1.Vsd.B3.BondCon2.f = Jp1.Jpi1.Vsd.De1.BondCon1.f;
//   Jp1.Jpi1.Vsd.B3.BondCon2.e = Jp1.Jpi1.Vsd.De1.BondCon1.e;
//   Jp1.Jpi1.Vsg.BG2El1.n.i + (-Jp1.Jpi1.Vsg.n.i) = 0.0;
//   Jp1.Jpi1.Vsg.BG2El1.n.v = Jp1.Jpi1.Vsg.n.v;
//   Jp1.Jpi1.Vsg.El2BG1.p.i + (-Jp1.Jpi1.Vsg.p.i) = 0.0;
//   Jp1.Jpi1.Vsg.El2BG1.p.v = Jp1.Jpi1.Vsg.p.v;
//   Jp1.Jpi1.Vsg.B2.BondCon2.d = Jp1.Jpi1.Vsg.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Vsg.B2.BondCon2.f = Jp1.Jpi1.Vsg.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Vsg.B2.BondCon2.e = Jp1.Jpi1.Vsg.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Vsg.B1.BondCon1.d = Jp1.Jpi1.Vsg.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Vsg.B1.BondCon1.f = Jp1.Jpi1.Vsg.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Vsg.B1.BondCon1.e = Jp1.Jpi1.Vsg.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Vsg.B2.BondCon1.d = Jp1.Jpi1.Vsg.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Vsg.B2.BondCon1.f = Jp1.Jpi1.Vsg.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Vsg.B2.BondCon1.e = Jp1.Jpi1.Vsg.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Vsg.B1.BondCon2.d = Jp1.Jpi1.Vsg.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Vsg.B1.BondCon2.f = Jp1.Jpi1.Vsg.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Vsg.B1.BondCon2.e = Jp1.Jpi1.Vsg.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Vsg.De1.OutPort1 = Jp1.Jpi1.Vsg.V;
//   Jp1.Jpi1.Vsg.B3.BondCon1.d = Jp1.Jpi1.Vsg.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Vsg.B3.BondCon1.f = Jp1.Jpi1.Vsg.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Vsg.B3.BondCon1.e = Jp1.Jpi1.Vsg.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Vsg.B3.BondCon2.d = Jp1.Jpi1.Vsg.De1.BondCon1.d;
//   Jp1.Jpi1.Vsg.B3.BondCon2.f = Jp1.Jpi1.Vsg.De1.BondCon1.f;
//   Jp1.Jpi1.Vsg.B3.BondCon2.e = Jp1.Jpi1.Vsg.De1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.heatPort.Q_flow + (Jp1.Jpi1.Dsg.Rd.heatPort.Q_flow + (Jp1.Jpi1.Dsg.Tdev1.port.Q_flow + (-Jp1.Jpi1.Dsg.heatPort.Q_flow))) = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.heatPort.T = Jp1.Jpi1.Dsg.Rd.heatPort.T;
//   Jp1.Jpi1.Dsg.DjJ1.heatPort.T = Jp1.Jpi1.Dsg.Tdev1.port.T;
//   Jp1.Jpi1.Dsg.DjJ1.heatPort.T = Jp1.Jpi1.Dsg.heatPort.T;
//   Jp1.Jpi1.Dsg.VarC1.n.i + (Jp1.Jpi1.Dsg.DjJ1.n.i + (Jp1.Jpi1.Dsg.Rd.n.i + (-Jp1.Jpi1.Dsg.n.i))) = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.n.v = Jp1.Jpi1.Dsg.Rd.n.v;
//   Jp1.Jpi1.Dsg.DjJ1.n.v = Jp1.Jpi1.Dsg.VarC1.n.v;
//   Jp1.Jpi1.Dsg.DjJ1.n.v = Jp1.Jpi1.Dsg.n.v;
//   Jp1.Jpi1.Dsg.Rd.p.i + (Jp1.Jpi1.Dsg.DjJ1.p.i + (Jp1.Jpi1.Dsg.VarC1.p.i + (-Jp1.Jpi1.Dsg.p.i))) = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.p.v = Jp1.Jpi1.Dsg.Rd.p.v;
//   Jp1.Jpi1.Dsg.DjJ1.p.v = Jp1.Jpi1.Dsg.VarC1.p.v;
//   Jp1.Jpi1.Dsg.DjJ1.p.v = Jp1.Jpi1.Dsg.p.v;
//   Jp1.Jpi1.Dsg.VarC1.u = Jp1.Jpi1.Dsg.nlCJ1.y;
//   Jp1.Jpi1.Dsg.Tdev1.T = Jp1.Jpi1.Dsg.nlCJ1.Tdev;
//   Jp1.Jpi1.Dsg.nlCJ1.u1 = Jp1.Jpi1.Dsg.vds;
//   Jp1.Jpi1.Dsg.nlCJ1.u2 = Jp1.Jpi1.Dsg.vgs;
//   Jp1.Jpi1.Dsg.VarC1.BG2El1.n.i + (-Jp1.Jpi1.Dsg.VarC1.n.i) = 0.0;
//   Jp1.Jpi1.Dsg.VarC1.BG2El1.n.v = Jp1.Jpi1.Dsg.VarC1.n.v;
//   Jp1.Jpi1.Dsg.VarC1.El2BG1.p.i + (-Jp1.Jpi1.Dsg.VarC1.p.i) = 0.0;
//   Jp1.Jpi1.Dsg.VarC1.El2BG1.p.v = Jp1.Jpi1.Dsg.VarC1.p.v;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.d = Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.f = Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon2.e = Jp1.Jpi1.Dsg.VarC1.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.d = Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.f = Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon1.e = Jp1.Jpi1.Dsg.VarC1.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.d = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.f = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.VarC1.B2.BondCon1.e = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.d = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.f = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.B1.BondCon2.e = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.d = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.f = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon1.e = Jp1.Jpi1.Dsg.VarC1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.d = Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.d;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.f = Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.f;
//   Jp1.Jpi1.Dsg.VarC1.B3.BondCon2.e = Jp1.Jpi1.Dsg.VarC1.mC1.BondCon1.e;
//   Jp1.Jpi1.Dsg.VarC1.mC1.s = Jp1.Jpi1.Dsg.VarC1.u;
//   Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.d = Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.f = Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B6.eBondCon1.e = Jp1.Jpi1.Dsg.Rd.T_nom.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.BG2El1.n.i + (-Jp1.Jpi1.Dsg.Rd.n.i) = 0.0;
//   Jp1.Jpi1.Dsg.Rd.BG2El1.n.v = Jp1.Jpi1.Dsg.Rd.n.v;
//   Jp1.Jpi1.Dsg.Rd.El2BG1.p.i + (-Jp1.Jpi1.Dsg.Rd.p.i) = 0.0;
//   Jp1.Jpi1.Dsg.Rd.El2BG1.p.v = Jp1.Jpi1.Dsg.Rd.p.v;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon1.d = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon1.f = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon1.e = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon2.d = Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon2.f = Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon2.e = Jp1.Jpi1.Dsg.Rd.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon1.d = Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon1.f = Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon1.e = Jp1.Jpi1.Dsg.Rd.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon1.d = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon1.f = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.B2.BondCon1.e = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon2.d = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon2.f = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B1.BondCon2.e = Jp1.Jpi1.Dsg.Rd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon2.d = Jp1.Jpi1.Dsg.Rd.R1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon2.f = Jp1.Jpi1.Dsg.Rd.R1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B3.BondCon2.e = Jp1.Jpi1.Dsg.Rd.R1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.d = Jp1.Jpi1.Dsg.Rd.R1.BondCon2.d;
//   Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.f = Jp1.Jpi1.Dsg.Rd.R1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.B4.fBondCon1.e = Jp1.Jpi1.Dsg.Rd.R1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.d = Jp1.Jpi1.Dsg.Rd.Sw1.p.d;
//   Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.f = Jp1.Jpi1.Dsg.Rd.Sw1.p.f;
//   Jp1.Jpi1.Dsg.Rd.B4.eBondCon1.e = Jp1.Jpi1.Dsg.Rd.Sw1.p.e;
//   Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.d = Jp1.Jpi1.Dsg.Rd.Sw1.n1.d;
//   Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.f = Jp1.Jpi1.Dsg.Rd.Sw1.n1.f;
//   Jp1.Jpi1.Dsg.Rd.B6.fBondCon1.e = Jp1.Jpi1.Dsg.Rd.Sw1.n1.e;
//   Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.d = Jp1.Jpi1.Dsg.Rd.Sw1.n2.d;
//   Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.f = Jp1.Jpi1.Dsg.Rd.Sw1.n2.f;
//   Jp1.Jpi1.Dsg.Rd.B5.fBondCon1.e = Jp1.Jpi1.Dsg.Rd.Sw1.n2.e;
//   Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.d = Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.f = Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.B5.eBondCon1.e = Jp1.Jpi1.Dsg.Rd.BG2Heat1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.BG2Heat1.port_b.Q_flow + (-Jp1.Jpi1.Dsg.Rd.heatPort.Q_flow) = 0.0;
//   Jp1.Jpi1.Dsg.Rd.BG2Heat1.port_b.T = Jp1.Jpi1.Dsg.Rd.heatPort.T;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.d = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.d = Jp1.Jpi1.Dsg.Rd.Sw1.n1.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.n1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.n1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.d = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.d = Jp1.Jpi1.Dsg.Rd.Sw1.n2.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.n2.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.j0p2_1.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.n2.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.d = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.f = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon1.e = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.d = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B1.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.d = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.f = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B2.BondCon1.e = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.d = Jp1.Jpi1.Dsg.Rd.Sw1.p.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.p.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.p.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.d = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.f = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B4.BondCon1.e = Jp1.Jpi1.Dsg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.d = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.f = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon1.e = Jp1.Jpi1.Dsg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.d = Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.d;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.f = Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp1.Jpi1.Dsg.Rd.Sw1.B3.BondCon2.e = Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp1.Jpi1.Dsg.Rd.Sw1.Sw1.BooleanInPort1 = Jp1.Jpi1.Dsg.Rd.Sw1.control;
//   Jp1.Jpi1.Dsg.DjJ1.BG2El1.n.i + (-Jp1.Jpi1.Dsg.DjJ1.n.i) = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.BG2El1.n.v = Jp1.Jpi1.Dsg.DjJ1.n.v;
//   Jp1.Jpi1.Dsg.DjJ1.El2BG1.p.i + (-Jp1.Jpi1.Dsg.DjJ1.p.i) = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.El2BG1.p.v = Jp1.Jpi1.Dsg.DjJ1.p.v;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.d = Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.f = Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon2.e = Jp1.Jpi1.Dsg.DjJ1.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.d = Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.f = Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon1.e = Jp1.Jpi1.Dsg.DjJ1.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.d = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.f = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Dsg.DjJ1.B2.BondCon1.e = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.d = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.f = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B1.BondCon2.e = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.d = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.f = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon1.e = Jp1.Jpi1.Dsg.DjJ1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.d = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.d;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.f = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B3.BondCon2.e = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.d = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.d;
//   Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.f = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.f;
//   Jp1.Jpi1.Dsg.DjJ1.B4.fBondCon1.e = Jp1.Jpi1.Dsg.DjJ1.DjJ1.BondCon2.e;
//   Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.d = Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.d;
//   Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.f = Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.f;
//   Jp1.Jpi1.Dsg.DjJ1.B4.eBondCon1.e = Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.BondCon1.e;
//   Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.Q_flow + (-Jp1.Jpi1.Dsg.DjJ1.heatPort.Q_flow) = 0.0;
//   Jp1.Jpi1.Dsg.DjJ1.BG2Heat1.port_b.T = Jp1.Jpi1.Dsg.DjJ1.heatPort.T;
//   Jp1.Jpi1.Ddg.DjJ1.heatPort.Q_flow + (Jp1.Jpi1.Ddg.Rd.heatPort.Q_flow + (Jp1.Jpi1.Ddg.Tdev1.port.Q_flow + (-Jp1.Jpi1.Ddg.heatPort.Q_flow))) = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.heatPort.T = Jp1.Jpi1.Ddg.Rd.heatPort.T;
//   Jp1.Jpi1.Ddg.DjJ1.heatPort.T = Jp1.Jpi1.Ddg.Tdev1.port.T;
//   Jp1.Jpi1.Ddg.DjJ1.heatPort.T = Jp1.Jpi1.Ddg.heatPort.T;
//   Jp1.Jpi1.Ddg.VarC1.n.i + (Jp1.Jpi1.Ddg.DjJ1.n.i + (Jp1.Jpi1.Ddg.Rd.n.i + (-Jp1.Jpi1.Ddg.n.i))) = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.n.v = Jp1.Jpi1.Ddg.Rd.n.v;
//   Jp1.Jpi1.Ddg.DjJ1.n.v = Jp1.Jpi1.Ddg.VarC1.n.v;
//   Jp1.Jpi1.Ddg.DjJ1.n.v = Jp1.Jpi1.Ddg.n.v;
//   Jp1.Jpi1.Ddg.Rd.p.i + (Jp1.Jpi1.Ddg.DjJ1.p.i + (Jp1.Jpi1.Ddg.VarC1.p.i + (-Jp1.Jpi1.Ddg.p.i))) = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.p.v = Jp1.Jpi1.Ddg.Rd.p.v;
//   Jp1.Jpi1.Ddg.DjJ1.p.v = Jp1.Jpi1.Ddg.VarC1.p.v;
//   Jp1.Jpi1.Ddg.DjJ1.p.v = Jp1.Jpi1.Ddg.p.v;
//   Jp1.Jpi1.Ddg.VarC1.u = Jp1.Jpi1.Ddg.nlCJ1.y;
//   Jp1.Jpi1.Ddg.Tdev1.T = Jp1.Jpi1.Ddg.nlCJ1.Tdev;
//   Jp1.Jpi1.Ddg.nlCJ1.u1 = Jp1.Jpi1.Ddg.vds;
//   Jp1.Jpi1.Ddg.nlCJ1.u2 = Jp1.Jpi1.Ddg.vgs;
//   Jp1.Jpi1.Ddg.VarC1.BG2El1.n.i + (-Jp1.Jpi1.Ddg.VarC1.n.i) = 0.0;
//   Jp1.Jpi1.Ddg.VarC1.BG2El1.n.v = Jp1.Jpi1.Ddg.VarC1.n.v;
//   Jp1.Jpi1.Ddg.VarC1.El2BG1.p.i + (-Jp1.Jpi1.Ddg.VarC1.p.i) = 0.0;
//   Jp1.Jpi1.Ddg.VarC1.El2BG1.p.v = Jp1.Jpi1.Ddg.VarC1.p.v;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.d = Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.f = Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon2.e = Jp1.Jpi1.Ddg.VarC1.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.d = Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.f = Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon1.e = Jp1.Jpi1.Ddg.VarC1.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.d = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.f = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.VarC1.B2.BondCon1.e = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.d = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.f = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.B1.BondCon2.e = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.d = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.f = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon1.e = Jp1.Jpi1.Ddg.VarC1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.d = Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.d;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.f = Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.f;
//   Jp1.Jpi1.Ddg.VarC1.B3.BondCon2.e = Jp1.Jpi1.Ddg.VarC1.mC1.BondCon1.e;
//   Jp1.Jpi1.Ddg.VarC1.mC1.s = Jp1.Jpi1.Ddg.VarC1.u;
//   Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.d = Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.f = Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B6.eBondCon1.e = Jp1.Jpi1.Ddg.Rd.T_nom.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.BG2El1.n.i + (-Jp1.Jpi1.Ddg.Rd.n.i) = 0.0;
//   Jp1.Jpi1.Ddg.Rd.BG2El1.n.v = Jp1.Jpi1.Ddg.Rd.n.v;
//   Jp1.Jpi1.Ddg.Rd.El2BG1.p.i + (-Jp1.Jpi1.Ddg.Rd.p.i) = 0.0;
//   Jp1.Jpi1.Ddg.Rd.El2BG1.p.v = Jp1.Jpi1.Ddg.Rd.p.v;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon1.d = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon1.f = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon1.e = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon2.d = Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon2.f = Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon2.e = Jp1.Jpi1.Ddg.Rd.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon1.d = Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon1.f = Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon1.e = Jp1.Jpi1.Ddg.Rd.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon1.d = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon1.f = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.B2.BondCon1.e = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon2.d = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon2.f = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B1.BondCon2.e = Jp1.Jpi1.Ddg.Rd.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon2.d = Jp1.Jpi1.Ddg.Rd.R1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon2.f = Jp1.Jpi1.Ddg.Rd.R1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B3.BondCon2.e = Jp1.Jpi1.Ddg.Rd.R1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.d = Jp1.Jpi1.Ddg.Rd.R1.BondCon2.d;
//   Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.f = Jp1.Jpi1.Ddg.Rd.R1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.B4.fBondCon1.e = Jp1.Jpi1.Ddg.Rd.R1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.d = Jp1.Jpi1.Ddg.Rd.Sw1.p.d;
//   Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.f = Jp1.Jpi1.Ddg.Rd.Sw1.p.f;
//   Jp1.Jpi1.Ddg.Rd.B4.eBondCon1.e = Jp1.Jpi1.Ddg.Rd.Sw1.p.e;
//   Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.d = Jp1.Jpi1.Ddg.Rd.Sw1.n1.d;
//   Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.f = Jp1.Jpi1.Ddg.Rd.Sw1.n1.f;
//   Jp1.Jpi1.Ddg.Rd.B6.fBondCon1.e = Jp1.Jpi1.Ddg.Rd.Sw1.n1.e;
//   Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.d = Jp1.Jpi1.Ddg.Rd.Sw1.n2.d;
//   Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.f = Jp1.Jpi1.Ddg.Rd.Sw1.n2.f;
//   Jp1.Jpi1.Ddg.Rd.B5.fBondCon1.e = Jp1.Jpi1.Ddg.Rd.Sw1.n2.e;
//   Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.d = Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.f = Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.B5.eBondCon1.e = Jp1.Jpi1.Ddg.Rd.BG2Heat1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.BG2Heat1.port_b.Q_flow + (-Jp1.Jpi1.Ddg.Rd.heatPort.Q_flow) = 0.0;
//   Jp1.Jpi1.Ddg.Rd.BG2Heat1.port_b.T = Jp1.Jpi1.Ddg.Rd.heatPort.T;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.d = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.d = Jp1.Jpi1.Ddg.Rd.Sw1.n1.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.n1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.n1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.d = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.d = Jp1.Jpi1.Ddg.Rd.Sw1.n2.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.n2.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.j0p2_1.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.n2.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.d = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.f = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon1.e = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.d = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B1.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.d = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.f = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B2.BondCon1.e = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.d = Jp1.Jpi1.Ddg.Rd.Sw1.p.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.p.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.p.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.d = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.f = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B4.BondCon1.e = Jp1.Jpi1.Ddg.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.d = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.f = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon1.e = Jp1.Jpi1.Ddg.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.d = Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.d;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.f = Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.f;
//   Jp1.Jpi1.Ddg.Rd.Sw1.B3.BondCon2.e = Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BondCon1.e;
//   Jp1.Jpi1.Ddg.Rd.Sw1.Sw1.BooleanInPort1 = Jp1.Jpi1.Ddg.Rd.Sw1.control;
//   Jp1.Jpi1.Ddg.DjJ1.BG2El1.n.i + (-Jp1.Jpi1.Ddg.DjJ1.n.i) = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.BG2El1.n.v = Jp1.Jpi1.Ddg.DjJ1.n.v;
//   Jp1.Jpi1.Ddg.DjJ1.El2BG1.p.i + (-Jp1.Jpi1.Ddg.DjJ1.p.i) = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.El2BG1.p.v = Jp1.Jpi1.Ddg.DjJ1.p.v;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.d = Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.d;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.f = Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon2.e = Jp1.Jpi1.Ddg.DjJ1.BG2El1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.d = Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.d;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.f = Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon1.e = Jp1.Jpi1.Ddg.DjJ1.El2BG1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.d = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.d;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.f = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.f;
//   Jp1.Jpi1.Ddg.DjJ1.B2.BondCon1.e = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon2.e;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.d = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.d;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.f = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B1.BondCon2.e = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.d = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.d;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.f = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.f;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon1.e = Jp1.Jpi1.Ddg.DjJ1.J1p3_1.BondCon3.e;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.d = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.d;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.f = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B3.BondCon2.e = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.d = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.d;
//   Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.f = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.f;
//   Jp1.Jpi1.Ddg.DjJ1.B4.fBondCon1.e = Jp1.Jpi1.Ddg.DjJ1.DjJ1.BondCon2.e;
//   Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.d = Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.d;
//   Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.f = Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.f;
//   Jp1.Jpi1.Ddg.DjJ1.B4.eBondCon1.e = Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.BondCon1.e;
//   Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.Q_flow + (-Jp1.Jpi1.Ddg.DjJ1.heatPort.Q_flow) = 0.0;
//   Jp1.Jpi1.Ddg.DjJ1.BG2Heat1.port_b.T = Jp1.Jpi1.Ddg.DjJ1.heatPort.T;
//   Jp1.Rs.B6.eBondCon1.d = Jp1.Rs.T_nom.BondCon1.d;
//   Jp1.Rs.B6.eBondCon1.f = Jp1.Rs.T_nom.BondCon1.f;
//   Jp1.Rs.B6.eBondCon1.e = Jp1.Rs.T_nom.BondCon1.e;
//   Jp1.Rs.BG2El1.n.i + (-Jp1.Rs.n.i) = 0.0;
//   Jp1.Rs.BG2El1.n.v = Jp1.Rs.n.v;
//   Jp1.Rs.El2BG1.p.i + (-Jp1.Rs.p.i) = 0.0;
//   Jp1.Rs.El2BG1.p.v = Jp1.Rs.p.v;
//   Jp1.Rs.B3.BondCon1.d = Jp1.Rs.J1p3_1.BondCon3.d;
//   Jp1.Rs.B3.BondCon1.f = Jp1.Rs.J1p3_1.BondCon3.f;
//   Jp1.Rs.B3.BondCon1.e = Jp1.Rs.J1p3_1.BondCon3.e;
//   Jp1.Rs.B2.BondCon2.d = Jp1.Rs.BG2El1.BondCon1.d;
//   Jp1.Rs.B2.BondCon2.f = Jp1.Rs.BG2El1.BondCon1.f;
//   Jp1.Rs.B2.BondCon2.e = Jp1.Rs.BG2El1.BondCon1.e;
//   Jp1.Rs.B1.BondCon1.d = Jp1.Rs.El2BG1.BondCon1.d;
//   Jp1.Rs.B1.BondCon1.f = Jp1.Rs.El2BG1.BondCon1.f;
//   Jp1.Rs.B1.BondCon1.e = Jp1.Rs.El2BG1.BondCon1.e;
//   Jp1.Rs.B2.BondCon1.d = Jp1.Rs.J1p3_1.BondCon2.d;
//   Jp1.Rs.B2.BondCon1.f = Jp1.Rs.J1p3_1.BondCon2.f;
//   Jp1.Rs.B2.BondCon1.e = Jp1.Rs.J1p3_1.BondCon2.e;
//   Jp1.Rs.B1.BondCon2.d = Jp1.Rs.J1p3_1.BondCon1.d;
//   Jp1.Rs.B1.BondCon2.f = Jp1.Rs.J1p3_1.BondCon1.f;
//   Jp1.Rs.B1.BondCon2.e = Jp1.Rs.J1p3_1.BondCon1.e;
//   Jp1.Rs.B3.BondCon2.d = Jp1.Rs.R1.BondCon1.d;
//   Jp1.Rs.B3.BondCon2.f = Jp1.Rs.R1.BondCon1.f;
//   Jp1.Rs.B3.BondCon2.e = Jp1.Rs.R1.BondCon1.e;
//   Jp1.Rs.B4.fBondCon1.d = Jp1.Rs.R1.BondCon2.d;
//   Jp1.Rs.B4.fBondCon1.f = Jp1.Rs.R1.BondCon2.f;
//   Jp1.Rs.B4.fBondCon1.e = Jp1.Rs.R1.BondCon2.e;
//   Jp1.Rs.B4.eBondCon1.d = Jp1.Rs.Sw1.p.d;
//   Jp1.Rs.B4.eBondCon1.f = Jp1.Rs.Sw1.p.f;
//   Jp1.Rs.B4.eBondCon1.e = Jp1.Rs.Sw1.p.e;
//   Jp1.Rs.B6.fBondCon1.d = Jp1.Rs.Sw1.n1.d;
//   Jp1.Rs.B6.fBondCon1.f = Jp1.Rs.Sw1.n1.f;
//   Jp1.Rs.B6.fBondCon1.e = Jp1.Rs.Sw1.n1.e;
//   Jp1.Rs.B5.fBondCon1.d = Jp1.Rs.Sw1.n2.d;
//   Jp1.Rs.B5.fBondCon1.f = Jp1.Rs.Sw1.n2.f;
//   Jp1.Rs.B5.fBondCon1.e = Jp1.Rs.Sw1.n2.e;
//   Jp1.Rs.B5.eBondCon1.d = Jp1.Rs.BG2Heat1.BondCon1.d;
//   Jp1.Rs.B5.eBondCon1.f = Jp1.Rs.BG2Heat1.BondCon1.f;
//   Jp1.Rs.B5.eBondCon1.e = Jp1.Rs.BG2Heat1.BondCon1.e;
//   Jp1.Rs.BG2Heat1.port_b.Q_flow + (-Jp1.Rs.heatPort.Q_flow) = 0.0;
//   Jp1.Rs.BG2Heat1.port_b.T = Jp1.Rs.heatPort.T;
//   Jp1.Rs.Sw1.B4.BondCon2.d = Jp1.Rs.Sw1.j0p2_1.BondCon1.d;
//   Jp1.Rs.Sw1.B4.BondCon2.f = Jp1.Rs.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Rs.Sw1.B4.BondCon2.e = Jp1.Rs.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Rs.Sw1.j0p2_2.BondCon2.d = Jp1.Rs.Sw1.n1.d;
//   Jp1.Rs.Sw1.j0p2_2.BondCon2.f = Jp1.Rs.Sw1.n1.f;
//   Jp1.Rs.Sw1.j0p2_2.BondCon2.e = Jp1.Rs.Sw1.n1.e;
//   Jp1.Rs.Sw1.B2.BondCon2.d = Jp1.Rs.Sw1.j0p2_2.BondCon1.d;
//   Jp1.Rs.Sw1.B2.BondCon2.f = Jp1.Rs.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Rs.Sw1.B2.BondCon2.e = Jp1.Rs.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Rs.Sw1.j0p2_1.BondCon2.d = Jp1.Rs.Sw1.n2.d;
//   Jp1.Rs.Sw1.j0p2_1.BondCon2.f = Jp1.Rs.Sw1.n2.f;
//   Jp1.Rs.Sw1.j0p2_1.BondCon2.e = Jp1.Rs.Sw1.n2.e;
//   Jp1.Rs.Sw1.B1.BondCon1.d = Jp1.Rs.Sw1.J0p3_1.BondCon3.d;
//   Jp1.Rs.Sw1.B1.BondCon1.f = Jp1.Rs.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Rs.Sw1.B1.BondCon1.e = Jp1.Rs.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Rs.Sw1.B1.BondCon2.d = Jp1.Rs.Sw1.J1p3_1.BondCon1.d;
//   Jp1.Rs.Sw1.B1.BondCon2.f = Jp1.Rs.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Rs.Sw1.B1.BondCon2.e = Jp1.Rs.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Rs.Sw1.B2.BondCon1.d = Jp1.Rs.Sw1.J1p3_1.BondCon2.d;
//   Jp1.Rs.Sw1.B2.BondCon1.f = Jp1.Rs.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Rs.Sw1.B2.BondCon1.e = Jp1.Rs.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Rs.Sw1.J0p3_1.BondCon2.d = Jp1.Rs.Sw1.p.d;
//   Jp1.Rs.Sw1.J0p3_1.BondCon2.f = Jp1.Rs.Sw1.p.f;
//   Jp1.Rs.Sw1.J0p3_1.BondCon2.e = Jp1.Rs.Sw1.p.e;
//   Jp1.Rs.Sw1.B4.BondCon1.d = Jp1.Rs.Sw1.J0p3_1.BondCon1.d;
//   Jp1.Rs.Sw1.B4.BondCon1.f = Jp1.Rs.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Rs.Sw1.B4.BondCon1.e = Jp1.Rs.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Rs.Sw1.B3.BondCon1.d = Jp1.Rs.Sw1.J1p3_1.BondCon3.d;
//   Jp1.Rs.Sw1.B3.BondCon1.f = Jp1.Rs.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Rs.Sw1.B3.BondCon1.e = Jp1.Rs.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Rs.Sw1.B3.BondCon2.d = Jp1.Rs.Sw1.Sw1.BondCon1.d;
//   Jp1.Rs.Sw1.B3.BondCon2.f = Jp1.Rs.Sw1.Sw1.BondCon1.f;
//   Jp1.Rs.Sw1.B3.BondCon2.e = Jp1.Rs.Sw1.Sw1.BondCon1.e;
//   Jp1.Rs.Sw1.Sw1.BooleanInPort1 = Jp1.Rs.Sw1.control;
//   Jp1.Rd.B6.eBondCon1.d = Jp1.Rd.T_nom.BondCon1.d;
//   Jp1.Rd.B6.eBondCon1.f = Jp1.Rd.T_nom.BondCon1.f;
//   Jp1.Rd.B6.eBondCon1.e = Jp1.Rd.T_nom.BondCon1.e;
//   Jp1.Rd.BG2El1.n.i + (-Jp1.Rd.n.i) = 0.0;
//   Jp1.Rd.BG2El1.n.v = Jp1.Rd.n.v;
//   Jp1.Rd.El2BG1.p.i + (-Jp1.Rd.p.i) = 0.0;
//   Jp1.Rd.El2BG1.p.v = Jp1.Rd.p.v;
//   Jp1.Rd.B3.BondCon1.d = Jp1.Rd.J1p3_1.BondCon3.d;
//   Jp1.Rd.B3.BondCon1.f = Jp1.Rd.J1p3_1.BondCon3.f;
//   Jp1.Rd.B3.BondCon1.e = Jp1.Rd.J1p3_1.BondCon3.e;
//   Jp1.Rd.B2.BondCon2.d = Jp1.Rd.BG2El1.BondCon1.d;
//   Jp1.Rd.B2.BondCon2.f = Jp1.Rd.BG2El1.BondCon1.f;
//   Jp1.Rd.B2.BondCon2.e = Jp1.Rd.BG2El1.BondCon1.e;
//   Jp1.Rd.B1.BondCon1.d = Jp1.Rd.El2BG1.BondCon1.d;
//   Jp1.Rd.B1.BondCon1.f = Jp1.Rd.El2BG1.BondCon1.f;
//   Jp1.Rd.B1.BondCon1.e = Jp1.Rd.El2BG1.BondCon1.e;
//   Jp1.Rd.B2.BondCon1.d = Jp1.Rd.J1p3_1.BondCon2.d;
//   Jp1.Rd.B2.BondCon1.f = Jp1.Rd.J1p3_1.BondCon2.f;
//   Jp1.Rd.B2.BondCon1.e = Jp1.Rd.J1p3_1.BondCon2.e;
//   Jp1.Rd.B1.BondCon2.d = Jp1.Rd.J1p3_1.BondCon1.d;
//   Jp1.Rd.B1.BondCon2.f = Jp1.Rd.J1p3_1.BondCon1.f;
//   Jp1.Rd.B1.BondCon2.e = Jp1.Rd.J1p3_1.BondCon1.e;
//   Jp1.Rd.B3.BondCon2.d = Jp1.Rd.R1.BondCon1.d;
//   Jp1.Rd.B3.BondCon2.f = Jp1.Rd.R1.BondCon1.f;
//   Jp1.Rd.B3.BondCon2.e = Jp1.Rd.R1.BondCon1.e;
//   Jp1.Rd.B4.fBondCon1.d = Jp1.Rd.R1.BondCon2.d;
//   Jp1.Rd.B4.fBondCon1.f = Jp1.Rd.R1.BondCon2.f;
//   Jp1.Rd.B4.fBondCon1.e = Jp1.Rd.R1.BondCon2.e;
//   Jp1.Rd.B4.eBondCon1.d = Jp1.Rd.Sw1.p.d;
//   Jp1.Rd.B4.eBondCon1.f = Jp1.Rd.Sw1.p.f;
//   Jp1.Rd.B4.eBondCon1.e = Jp1.Rd.Sw1.p.e;
//   Jp1.Rd.B6.fBondCon1.d = Jp1.Rd.Sw1.n1.d;
//   Jp1.Rd.B6.fBondCon1.f = Jp1.Rd.Sw1.n1.f;
//   Jp1.Rd.B6.fBondCon1.e = Jp1.Rd.Sw1.n1.e;
//   Jp1.Rd.B5.fBondCon1.d = Jp1.Rd.Sw1.n2.d;
//   Jp1.Rd.B5.fBondCon1.f = Jp1.Rd.Sw1.n2.f;
//   Jp1.Rd.B5.fBondCon1.e = Jp1.Rd.Sw1.n2.e;
//   Jp1.Rd.B5.eBondCon1.d = Jp1.Rd.BG2Heat1.BondCon1.d;
//   Jp1.Rd.B5.eBondCon1.f = Jp1.Rd.BG2Heat1.BondCon1.f;
//   Jp1.Rd.B5.eBondCon1.e = Jp1.Rd.BG2Heat1.BondCon1.e;
//   Jp1.Rd.BG2Heat1.port_b.Q_flow + (-Jp1.Rd.heatPort.Q_flow) = 0.0;
//   Jp1.Rd.BG2Heat1.port_b.T = Jp1.Rd.heatPort.T;
//   Jp1.Rd.Sw1.B4.BondCon2.d = Jp1.Rd.Sw1.j0p2_1.BondCon1.d;
//   Jp1.Rd.Sw1.B4.BondCon2.f = Jp1.Rd.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Rd.Sw1.B4.BondCon2.e = Jp1.Rd.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Rd.Sw1.j0p2_2.BondCon2.d = Jp1.Rd.Sw1.n1.d;
//   Jp1.Rd.Sw1.j0p2_2.BondCon2.f = Jp1.Rd.Sw1.n1.f;
//   Jp1.Rd.Sw1.j0p2_2.BondCon2.e = Jp1.Rd.Sw1.n1.e;
//   Jp1.Rd.Sw1.B2.BondCon2.d = Jp1.Rd.Sw1.j0p2_2.BondCon1.d;
//   Jp1.Rd.Sw1.B2.BondCon2.f = Jp1.Rd.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Rd.Sw1.B2.BondCon2.e = Jp1.Rd.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Rd.Sw1.j0p2_1.BondCon2.d = Jp1.Rd.Sw1.n2.d;
//   Jp1.Rd.Sw1.j0p2_1.BondCon2.f = Jp1.Rd.Sw1.n2.f;
//   Jp1.Rd.Sw1.j0p2_1.BondCon2.e = Jp1.Rd.Sw1.n2.e;
//   Jp1.Rd.Sw1.B1.BondCon1.d = Jp1.Rd.Sw1.J0p3_1.BondCon3.d;
//   Jp1.Rd.Sw1.B1.BondCon1.f = Jp1.Rd.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Rd.Sw1.B1.BondCon1.e = Jp1.Rd.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Rd.Sw1.B1.BondCon2.d = Jp1.Rd.Sw1.J1p3_1.BondCon1.d;
//   Jp1.Rd.Sw1.B1.BondCon2.f = Jp1.Rd.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Rd.Sw1.B1.BondCon2.e = Jp1.Rd.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Rd.Sw1.B2.BondCon1.d = Jp1.Rd.Sw1.J1p3_1.BondCon2.d;
//   Jp1.Rd.Sw1.B2.BondCon1.f = Jp1.Rd.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Rd.Sw1.B2.BondCon1.e = Jp1.Rd.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Rd.Sw1.J0p3_1.BondCon2.d = Jp1.Rd.Sw1.p.d;
//   Jp1.Rd.Sw1.J0p3_1.BondCon2.f = Jp1.Rd.Sw1.p.f;
//   Jp1.Rd.Sw1.J0p3_1.BondCon2.e = Jp1.Rd.Sw1.p.e;
//   Jp1.Rd.Sw1.B4.BondCon1.d = Jp1.Rd.Sw1.J0p3_1.BondCon1.d;
//   Jp1.Rd.Sw1.B4.BondCon1.f = Jp1.Rd.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Rd.Sw1.B4.BondCon1.e = Jp1.Rd.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Rd.Sw1.B3.BondCon1.d = Jp1.Rd.Sw1.J1p3_1.BondCon3.d;
//   Jp1.Rd.Sw1.B3.BondCon1.f = Jp1.Rd.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Rd.Sw1.B3.BondCon1.e = Jp1.Rd.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Rd.Sw1.B3.BondCon2.d = Jp1.Rd.Sw1.Sw1.BondCon1.d;
//   Jp1.Rd.Sw1.B3.BondCon2.f = Jp1.Rd.Sw1.Sw1.BondCon1.f;
//   Jp1.Rd.Sw1.B3.BondCon2.e = Jp1.Rd.Sw1.Sw1.BondCon1.e;
//   Jp1.Rd.Sw1.Sw1.BooleanInPort1 = Jp1.Rd.Sw1.control;
//   Jp1.Rg.B6.eBondCon1.d = Jp1.Rg.T_nom.BondCon1.d;
//   Jp1.Rg.B6.eBondCon1.f = Jp1.Rg.T_nom.BondCon1.f;
//   Jp1.Rg.B6.eBondCon1.e = Jp1.Rg.T_nom.BondCon1.e;
//   Jp1.Rg.BG2El1.n.i + (-Jp1.Rg.n.i) = 0.0;
//   Jp1.Rg.BG2El1.n.v = Jp1.Rg.n.v;
//   Jp1.Rg.El2BG1.p.i + (-Jp1.Rg.p.i) = 0.0;
//   Jp1.Rg.El2BG1.p.v = Jp1.Rg.p.v;
//   Jp1.Rg.B3.BondCon1.d = Jp1.Rg.J1p3_1.BondCon3.d;
//   Jp1.Rg.B3.BondCon1.f = Jp1.Rg.J1p3_1.BondCon3.f;
//   Jp1.Rg.B3.BondCon1.e = Jp1.Rg.J1p3_1.BondCon3.e;
//   Jp1.Rg.B2.BondCon2.d = Jp1.Rg.BG2El1.BondCon1.d;
//   Jp1.Rg.B2.BondCon2.f = Jp1.Rg.BG2El1.BondCon1.f;
//   Jp1.Rg.B2.BondCon2.e = Jp1.Rg.BG2El1.BondCon1.e;
//   Jp1.Rg.B1.BondCon1.d = Jp1.Rg.El2BG1.BondCon1.d;
//   Jp1.Rg.B1.BondCon1.f = Jp1.Rg.El2BG1.BondCon1.f;
//   Jp1.Rg.B1.BondCon1.e = Jp1.Rg.El2BG1.BondCon1.e;
//   Jp1.Rg.B2.BondCon1.d = Jp1.Rg.J1p3_1.BondCon2.d;
//   Jp1.Rg.B2.BondCon1.f = Jp1.Rg.J1p3_1.BondCon2.f;
//   Jp1.Rg.B2.BondCon1.e = Jp1.Rg.J1p3_1.BondCon2.e;
//   Jp1.Rg.B1.BondCon2.d = Jp1.Rg.J1p3_1.BondCon1.d;
//   Jp1.Rg.B1.BondCon2.f = Jp1.Rg.J1p3_1.BondCon1.f;
//   Jp1.Rg.B1.BondCon2.e = Jp1.Rg.J1p3_1.BondCon1.e;
//   Jp1.Rg.B3.BondCon2.d = Jp1.Rg.R1.BondCon1.d;
//   Jp1.Rg.B3.BondCon2.f = Jp1.Rg.R1.BondCon1.f;
//   Jp1.Rg.B3.BondCon2.e = Jp1.Rg.R1.BondCon1.e;
//   Jp1.Rg.B4.fBondCon1.d = Jp1.Rg.R1.BondCon2.d;
//   Jp1.Rg.B4.fBondCon1.f = Jp1.Rg.R1.BondCon2.f;
//   Jp1.Rg.B4.fBondCon1.e = Jp1.Rg.R1.BondCon2.e;
//   Jp1.Rg.B4.eBondCon1.d = Jp1.Rg.Sw1.p.d;
//   Jp1.Rg.B4.eBondCon1.f = Jp1.Rg.Sw1.p.f;
//   Jp1.Rg.B4.eBondCon1.e = Jp1.Rg.Sw1.p.e;
//   Jp1.Rg.B6.fBondCon1.d = Jp1.Rg.Sw1.n1.d;
//   Jp1.Rg.B6.fBondCon1.f = Jp1.Rg.Sw1.n1.f;
//   Jp1.Rg.B6.fBondCon1.e = Jp1.Rg.Sw1.n1.e;
//   Jp1.Rg.B5.fBondCon1.d = Jp1.Rg.Sw1.n2.d;
//   Jp1.Rg.B5.fBondCon1.f = Jp1.Rg.Sw1.n2.f;
//   Jp1.Rg.B5.fBondCon1.e = Jp1.Rg.Sw1.n2.e;
//   Jp1.Rg.B5.eBondCon1.d = Jp1.Rg.BG2Heat1.BondCon1.d;
//   Jp1.Rg.B5.eBondCon1.f = Jp1.Rg.BG2Heat1.BondCon1.f;
//   Jp1.Rg.B5.eBondCon1.e = Jp1.Rg.BG2Heat1.BondCon1.e;
//   Jp1.Rg.BG2Heat1.port_b.Q_flow + (-Jp1.Rg.heatPort.Q_flow) = 0.0;
//   Jp1.Rg.BG2Heat1.port_b.T = Jp1.Rg.heatPort.T;
//   Jp1.Rg.Sw1.B4.BondCon2.d = Jp1.Rg.Sw1.j0p2_1.BondCon1.d;
//   Jp1.Rg.Sw1.B4.BondCon2.f = Jp1.Rg.Sw1.j0p2_1.BondCon1.f;
//   Jp1.Rg.Sw1.B4.BondCon2.e = Jp1.Rg.Sw1.j0p2_1.BondCon1.e;
//   Jp1.Rg.Sw1.j0p2_2.BondCon2.d = Jp1.Rg.Sw1.n1.d;
//   Jp1.Rg.Sw1.j0p2_2.BondCon2.f = Jp1.Rg.Sw1.n1.f;
//   Jp1.Rg.Sw1.j0p2_2.BondCon2.e = Jp1.Rg.Sw1.n1.e;
//   Jp1.Rg.Sw1.B2.BondCon2.d = Jp1.Rg.Sw1.j0p2_2.BondCon1.d;
//   Jp1.Rg.Sw1.B2.BondCon2.f = Jp1.Rg.Sw1.j0p2_2.BondCon1.f;
//   Jp1.Rg.Sw1.B2.BondCon2.e = Jp1.Rg.Sw1.j0p2_2.BondCon1.e;
//   Jp1.Rg.Sw1.j0p2_1.BondCon2.d = Jp1.Rg.Sw1.n2.d;
//   Jp1.Rg.Sw1.j0p2_1.BondCon2.f = Jp1.Rg.Sw1.n2.f;
//   Jp1.Rg.Sw1.j0p2_1.BondCon2.e = Jp1.Rg.Sw1.n2.e;
//   Jp1.Rg.Sw1.B1.BondCon1.d = Jp1.Rg.Sw1.J0p3_1.BondCon3.d;
//   Jp1.Rg.Sw1.B1.BondCon1.f = Jp1.Rg.Sw1.J0p3_1.BondCon3.f;
//   Jp1.Rg.Sw1.B1.BondCon1.e = Jp1.Rg.Sw1.J0p3_1.BondCon3.e;
//   Jp1.Rg.Sw1.B1.BondCon2.d = Jp1.Rg.Sw1.J1p3_1.BondCon1.d;
//   Jp1.Rg.Sw1.B1.BondCon2.f = Jp1.Rg.Sw1.J1p3_1.BondCon1.f;
//   Jp1.Rg.Sw1.B1.BondCon2.e = Jp1.Rg.Sw1.J1p3_1.BondCon1.e;
//   Jp1.Rg.Sw1.B2.BondCon1.d = Jp1.Rg.Sw1.J1p3_1.BondCon2.d;
//   Jp1.Rg.Sw1.B2.BondCon1.f = Jp1.Rg.Sw1.J1p3_1.BondCon2.f;
//   Jp1.Rg.Sw1.B2.BondCon1.e = Jp1.Rg.Sw1.J1p3_1.BondCon2.e;
//   Jp1.Rg.Sw1.J0p3_1.BondCon2.d = Jp1.Rg.Sw1.p.d;
//   Jp1.Rg.Sw1.J0p3_1.BondCon2.f = Jp1.Rg.Sw1.p.f;
//   Jp1.Rg.Sw1.J0p3_1.BondCon2.e = Jp1.Rg.Sw1.p.e;
//   Jp1.Rg.Sw1.B4.BondCon1.d = Jp1.Rg.Sw1.J0p3_1.BondCon1.d;
//   Jp1.Rg.Sw1.B4.BondCon1.f = Jp1.Rg.Sw1.J0p3_1.BondCon1.f;
//   Jp1.Rg.Sw1.B4.BondCon1.e = Jp1.Rg.Sw1.J0p3_1.BondCon1.e;
//   Jp1.Rg.Sw1.B3.BondCon1.d = Jp1.Rg.Sw1.J1p3_1.BondCon3.d;
//   Jp1.Rg.Sw1.B3.BondCon1.f = Jp1.Rg.Sw1.J1p3_1.BondCon3.f;
//   Jp1.Rg.Sw1.B3.BondCon1.e = Jp1.Rg.Sw1.J1p3_1.BondCon3.e;
//   Jp1.Rg.Sw1.B3.BondCon2.d = Jp1.Rg.Sw1.Sw1.BondCon1.d;
//   Jp1.Rg.Sw1.B3.BondCon2.f = Jp1.Rg.Sw1.Sw1.BondCon1.f;
//   Jp1.Rg.Sw1.B3.BondCon2.e = Jp1.Rg.Sw1.Sw1.BondCon1.e;
//   Jp1.Rg.Sw1.Sw1.BooleanInPort1 = Jp1.Rg.Sw1.control;
//   Gnd1.B1.eBondCon1.d = Gnd1.V0.BondCon1.d;
//   Gnd1.B1.eBondCon1.f = Gnd1.V0.BondCon1.f;
//   Gnd1.B1.eBondCon1.e = Gnd1.V0.BondCon1.e;
//   Gnd1.B1.fBondCon1.d = Gnd1.El2BG1.BondCon1.d;
//   Gnd1.B1.fBondCon1.f = Gnd1.El2BG1.BondCon1.f;
//   Gnd1.B1.fBondCon1.e = Gnd1.El2BG1.BondCon1.e;
//   Gnd1.El2BG1.p.i + (-Gnd1.p.i) = 0.0;
//   Gnd1.El2BG1.p.v = Gnd1.p.v;
// end BondLib_Examples_ModelicaSpice_DifferentialAmplifier;
// "
// ""
// endResult
