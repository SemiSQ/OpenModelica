//name:         CauerLowPassOPV2
//keyword:      simulating msl221
//status:       correct
//env: OPENMODELICALIBRARY=../../../../libraries/msl221
//
// simulation example
//

loadModel(Modelica);
simulate(Modelica.Electrical.Analog.Examples.CauerLowPassOPV, stopTime=60, method="dassl");


"R1.v:";
val(R1.v,0.0);
val(R1.v,0.25);
val(R1.v,0.5);
val(R1.v,0.75);
val(R1.v,1.0);

"R1.i:";
val(R1.i,0.0);
val(R1.i,0.25);
val(R1.i,0.5);
val(R1.i,0.75);
val(R1.i,1.0);

"R2.v:";
val(R2.v,0.0);
val(R2.v,0.25);
val(R2.v,0.5);
val(R2.v,0.75);
val(R2.v,1.0);

"R2.i:";
val(R2.i,0.0);
val(R2.i,0.25);
val(R2.i,0.5);
val(R2.i,0.75);
val(R2.i,1.0);

"R3.v:";
val(R3.v,0.0);
val(R3.v,0.25);
val(R3.v,0.5);
val(R3.v,0.75);
val(R3.v,1.0);

"R3.i:";
val(R3.i,0.0);
val(R3.i,0.25);
val(R3.i,0.5);
val(R3.i,0.75);
val(R3.i,1.0);

"R11.v:";
val(R11.v,0.0);
val(R11.v,0.25);
val(R11.v,0.5);
val(R11.v,0.75);
val(R11.v,1.0);

"R11.i:";
val(R11.i,0.0);
val(R11.i,0.25);
val(R11.i,0.5);
val(R11.i,0.75);
val(R11.i,1.0);

"Op1.out.v:";
val(Op1.out.v,0.0);
val(Op1.out.v,0.25);
val(Op1.out.v,0.5);
val(Op1.out.v,0.75);
val(Op1.out.v,1.0);

"Op1.out.i:";
val(Op1.out.i,0.0);
val(Op1.out.i,0.25);
val(Op1.out.i,0.5);
val(Op1.out.i,0.75);
val(Op1.out.i,1.0);

"Op5.out.v:";
val(Op5.out.v,0.0);
val(Op5.out.v,0.25);
val(Op5.out.v,0.5);
val(Op5.out.v,0.75);
val(Op5.out.v,1.0);

"Op5.out.v:";
val(Op5.out.v,0.0);
val(Op5.out.v,0.25);
val(Op5.out.v,0.5);
val(Op5.out.v,0.75);
val(Op5.out.v,1.0);

"C5.v:";
val(C5.v,0.0);
val(C5.v,0.25);
val(C5.v,0.5);
val(C5.v,0.75);
val(C5.v,1.0);

"C5.i:";
val(C5.i,0.0);
val(C5.i,0.25);
val(C5.i,0.5);
val(C5.i,0.75);
val(C5.i,1.0);

system("rm Modelica.Electrical.Analog.Examples.CauerLowPassOPV*");

// Result:
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassOPV_res.plt",
//     simulationOptions = "startTime = 0.0, stopTime = 60.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.CauerLowPassOPV', storeInTemp = false, noClean = false, options = '', outputFormat = 'plt'",
//     messages = ""
// end SimulationResult;
// "R1.v:"
// -0.0
// 0.0
// 0.0
// 0.0
// -1.0
// "R1.i:"
// -0.0
// 0.0
// 0.0
// 0.0
// -1.0
// "R2.v:"
// -0.0
// 0.0
// 0.0
// 0.0
// 1.12867140221636e-19
// "R2.i:"
// -0.0
// 0.0
// 0.0
// 0.0
// 1.12867140221636e-19
// "R3.v:"
// 0.0
// 0.0
// 0.0
// 0.0
// -1.69894480428479e-16
// "R3.i:"
// 0.0
// 0.0
// 0.0
// 0.0
// -1.69894480428479e-16
// "R11.v:"
// -0.0
// 0.0
// 0.0
// 0.0
// -1.02660393207221e-17
// "R11.i:"
// -0.0
// 0.0
// 0.0
// 0.0
// -1.02660393207221e-17
// "Op1.out.v:"
// -0.0
// 0.0
// 0.0
// 0.0
// 1.69894480428479e-16
// "Op1.out.i:"
// 0.0
// 0.0
// 0.0
// 0.0
// -1.22481851970747
// "Op5.out.v:"
// 0.0
// 0.0
// 0.0
// 0.0
// 1.02660393207221e-17
// "Op5.out.v:"
// 0.0
// 0.0
// 0.0
// 0.0
// 1.02660393207221e-17
// "C5.v:"
// -0.0
// 0.0
// 0.0
// 0.0
// 1.69894480428479e-16
// "C5.i:"
// -0.0
// 0.0
// 0.0
// 0.0
// 0.201993363653356
// 0
// endResult
