//name:         InitialConditions
//keyword:      instantiating msl221
//status:       correct
//env: OPENMODELICALIBRARY=../../../libraries/msl221
//
// instantiate example
//

loadModel(Modelica);
instantiateModel(Modelica.Mechanics.Translational.Examples.InitialConditions);
getErrorString();
// Result:
// true
// "class Modelica.Mechanics.Translational.Examples.InitialConditions
//   Real M3.s(quantity = \"Length\", unit = \"m\", start = 4.5) \"absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2)\";
//   parameter Real M3.L(quantity = \"Length\", unit = \"m\") = 3.0 \"length of component from left flange to right flange (= flange_b.s - flange_a.s)\";
//   Real M3.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M3.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real M3.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M3.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real M3.m(quantity = \"Mass\", unit = \"kg\", min = 0.0) = 1.0 \"mass of the sliding mass\";
//   Real M3.v(quantity = \"Velocity\", unit = \"m/s\") \"absolute velocity of component\";
//   Real M3.a(quantity = \"Acceleration\", unit = \"m/s2\") \"absolute acceleration of component\";
//   Real S2.s_rel(quantity = \"Length\", unit = \"m\", min = 0.0) \"relative distance (= flange_b.s - flange_a.s)\";
//   Real S2.f(quantity = \"Force\", unit = \"N\") \"forcee between flanges (positive in direction of flange axis R)\";
//   Real S2.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real S2.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real S2.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real S2.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real S2.s_rel0(quantity = \"Length\", unit = \"m\", min = 0.0) = 2.0 \"unstretched spring length\";
//   parameter Real S2.c(unit = \"N/m\", min = 0.0) = 1000.0 \"spring constant \";
//   parameter Real Fixed1.s0(quantity = \"Length\", unit = \"m\") = 1.0 \"fixed offset position of housing\";
//   Real Fixed1.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real Fixed1.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real SD4.s_rel(quantity = \"Length\", unit = \"m\", min = 0.0) \"relative distance (= flange_b.s - flange_a.s)\";
//   Real SD4.f(quantity = \"Force\", unit = \"N\") \"forcee between flanges (positive in direction of flange axis R)\";
//   Real SD4.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SD4.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real SD4.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SD4.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real SD4.s_rel0(quantity = \"Length\", unit = \"m\") = 4.0 \"unstretched spring length\";
//   parameter Real SD4.c(unit = \"N/m\", min = 0.0) = 111.0 \"spring constant\";
//   parameter Real SD4.d(unit = \"N/(m/s)\", min = 0.0) = 1.0 \"damping constant\";
//   Real SD4.v_rel(quantity = \"Velocity\", unit = \"m/s\") \"relative velocity between flange_a and flange_b\";
//   Real M5.s(quantity = \"Length\", unit = \"m\", start = 12.5) \"absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2)\";
//   parameter Real M5.L(quantity = \"Length\", unit = \"m\") = 5.0 \"length of component from left flange to right flange (= flange_b.s - flange_a.s)\";
//   Real M5.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M5.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real M5.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M5.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real M5.m(quantity = \"Mass\", unit = \"kg\", min = 0.0) = 1.0 \"mass of the sliding mass\";
//   Real M5.v(quantity = \"Velocity\", unit = \"m/s\") \"absolute velocity of component\";
//   Real M5.a(quantity = \"Acceleration\", unit = \"m/s2\") \"absolute acceleration of component\";
//   Real M1.s(quantity = \"Length\", unit = \"m\") \"absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2)\";
//   parameter Real M1.L(quantity = \"Length\", unit = \"m\") = 1.0 \"length of component from left flange to right flange (= flange_b.s - flange_a.s)\";
//   Real M1.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M1.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real M1.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M1.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real M1.m(quantity = \"Mass\", unit = \"kg\", min = 0.0) = 1.0 \"mass of the sliding mass\";
//   Real M1.v(quantity = \"Velocity\", unit = \"m/s\") \"absolute velocity of component\";
//   Real M1.a(quantity = \"Acceleration\", unit = \"m/s2\") \"absolute acceleration of component\";
//   Real S1.s_rel(quantity = \"Length\", unit = \"m\", min = 0.0, start = 1.0) \"relative distance (= flange_b.s - flange_a.s)\";
//   Real S1.f(quantity = \"Force\", unit = \"N\") \"forcee between flanges (positive in direction of flange axis R)\";
//   Real S1.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real S1.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real S1.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real S1.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real S1.s_rel0(quantity = \"Length\", unit = \"m\", min = 0.0) = 1.0 \"unstretched spring length\";
//   parameter Real S1.c(unit = \"N/m\", min = 0.0) = 1000.0 \"spring constant \";
//   parameter Real Fixed2.s0(quantity = \"Length\", unit = \"m\") = -1.0 \"fixed offset position of housing\";
//   Real Fixed2.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real Fixed2.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real SD1.s_rel(quantity = \"Length\", unit = \"m\", min = 0.0, start = 1.0) \"relative distance (= flange_b.s - flange_a.s)\";
//   Real SD1.f(quantity = \"Force\", unit = \"N\") \"forcee between flanges (positive in direction of flange axis R)\";
//   Real SD1.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SD1.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real SD1.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SD1.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real SD1.s_rel0(quantity = \"Length\", unit = \"m\") = 1.0 \"unstretched spring length\";
//   parameter Real SD1.c(unit = \"N/m\", min = 0.0) = 111.0 \"spring constant\";
//   parameter Real SD1.d(unit = \"N/(m/s)\", min = 0.0) = 1.0 \"damping constant\";
//   Real SD1.v_rel(quantity = \"Velocity\", unit = \"m/s\") \"relative velocity between flange_a and flange_b\";
//   Real M2.s(quantity = \"Length\", unit = \"m\") \"absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2)\";
//   parameter Real M2.L(quantity = \"Length\", unit = \"m\") = 2.0 \"length of component from left flange to right flange (= flange_b.s - flange_a.s)\";
//   Real M2.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M2.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real M2.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real M2.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real M2.m(quantity = \"Mass\", unit = \"kg\", min = 0.0) = 1.0 \"mass of the sliding mass\";
//   Real M2.v(quantity = \"Velocity\", unit = \"m/s\") \"absolute velocity of component\";
//   Real M2.a(quantity = \"Acceleration\", unit = \"m/s2\") \"absolute acceleration of component\";
// equation
//   M3.v = der(M3.s);
//   M3.a = der(M3.v);
//   M3.m * M3.a = M3.flange_a.f + M3.flange_b.f;
//   M3.flange_a.s = M3.s - M3.L / 2.0;
//   M3.flange_b.s = M3.s + M3.L / 2.0;
//   S2.f = S2.c * (S2.s_rel - S2.s_rel0);
//   S2.s_rel = S2.flange_b.s - S2.flange_a.s;
//   S2.flange_b.f = S2.f;
//   S2.flange_a.f = -S2.f;
//   Fixed1.flange_b.s = Fixed1.s0;
//   SD4.v_rel = der(SD4.s_rel);
//   SD4.f = SD4.c * (SD4.s_rel - SD4.s_rel0) + SD4.d * SD4.v_rel;
//   SD4.s_rel = SD4.flange_b.s - SD4.flange_a.s;
//   SD4.flange_b.f = SD4.f;
//   SD4.flange_a.f = -SD4.f;
//   M5.v = der(M5.s);
//   M5.a = der(M5.v);
//   M5.m * M5.a = M5.flange_a.f + M5.flange_b.f;
//   M5.flange_a.s = M5.s - M5.L / 2.0;
//   M5.flange_b.s = M5.s + M5.L / 2.0;
//   M1.v = der(M1.s);
//   M1.a = der(M1.v);
//   M1.m * M1.a = M1.flange_a.f + M1.flange_b.f;
//   M1.flange_a.s = M1.s - M1.L / 2.0;
//   M1.flange_b.s = M1.s + M1.L / 2.0;
//   S1.f = S1.c * (S1.s_rel - S1.s_rel0);
//   S1.s_rel = S1.flange_b.s - S1.flange_a.s;
//   S1.flange_b.f = S1.f;
//   S1.flange_a.f = -S1.f;
//   Fixed2.flange_b.s = Fixed2.s0;
//   SD1.v_rel = der(SD1.s_rel);
//   SD1.f = SD1.c * (SD1.s_rel - SD1.s_rel0) + SD1.d * SD1.v_rel;
//   SD1.s_rel = SD1.flange_b.s - SD1.flange_a.s;
//   SD1.flange_b.f = SD1.f;
//   SD1.flange_a.f = -SD1.f;
//   M2.v = der(M2.s);
//   M2.a = der(M2.v);
//   M2.m * M2.a = M2.flange_a.f + M2.flange_b.f;
//   M2.flange_a.s = M2.s - M2.L / 2.0;
//   M2.flange_b.s = M2.s + M2.L / 2.0;
//   Fixed1.flange_b.f + S2.flange_a.f = 0.0;
//   Fixed1.flange_b.s = S2.flange_a.s;
//   S2.flange_b.f + M3.flange_a.f = 0.0;
//   M3.flange_a.s = S2.flange_b.s;
//   M3.flange_b.f + SD4.flange_a.f = 0.0;
//   M3.flange_b.s = SD4.flange_a.s;
//   SD4.flange_b.f + M5.flange_a.f = 0.0;
//   M5.flange_a.s = SD4.flange_b.s;
//   Fixed2.flange_b.f + S1.flange_a.f = 0.0;
//   Fixed2.flange_b.s = S1.flange_a.s;
//   S1.flange_b.f + M1.flange_a.f = 0.0;
//   M1.flange_a.s = S1.flange_b.s;
//   M1.flange_b.f + SD1.flange_a.f = 0.0;
//   M1.flange_b.s = SD1.flange_a.s;
//   SD1.flange_b.f + M2.flange_a.f = 0.0;
//   M2.flange_a.s = SD1.flange_b.s;
//   M2.flange_b.f = 0.0;
//   M5.flange_b.f = 0.0;
// end Modelica.Mechanics.Translational.Examples.InitialConditions;
// "
// ""
// endResult
