//name:         Oscillator2
//keyword:      simulating msl221
//status:       correct
//teardown_command: rm -f Modelica.Mechanics.*
//
// simulation example
//

loadModel(Modelica,{"2.2.1"});
simulate(Modelica.Mechanics.Translational.Examples.Oscillator,numberOfIntervals=500,tolerance=0.0001,startTime=0,stopTime=1);

"SlidingMass1.s:";
val(SlidingMass1.s,0.0);
val(SlidingMass1.s,0.25);
val(SlidingMass1.s,0.5);
val(SlidingMass1.s,0.75);
val(SlidingMass1.s,1.0);

"SlidingMass1.flange_a.s:";
val(SlidingMass1.flange_a.s,0.0);
val(SlidingMass1.flange_a.s,0.25);
val(SlidingMass1.flange_a.s,0.5);
val(SlidingMass1.flange_a.s,0.75);
val(SlidingMass1.flange_a.s,1.0);

"SlidingMass1.flange_a.f:";
val(SlidingMass1.flange_a.f,0.0);
val(SlidingMass1.flange_a.f,0.25);
val(SlidingMass1.flange_a.f,0.5);
val(SlidingMass1.flange_a.f,0.75);
val(SlidingMass1.flange_a.f,1.0);

"SlidingMass1.flange_b.s:";
val(SlidingMass1.flange_b.s,0.0);
val(SlidingMass1.flange_b.s,0.25);
val(SlidingMass1.flange_b.s,0.5);
val(SlidingMass1.flange_b.s,0.75);
val(SlidingMass1.flange_b.s,1.0);

"SlidingMass1.flange_b.f:";
val(SlidingMass1.flange_b.f,0.0);
val(SlidingMass1.flange_b.f,0.25);
val(SlidingMass1.flange_b.f,0.5);
val(SlidingMass1.flange_b.f,0.75);
val(SlidingMass1.flange_b.f,1.0);

"SlidingMass1.v:";
val(SlidingMass1.v,0.0);
val(SlidingMass1.v,0.25);
val(SlidingMass1.v,0.5);
val(SlidingMass1.v,0.75);
val(SlidingMass1.v,1.0);

"SlidingMass1.a:";
val(SlidingMass1.a,0.0);
val(SlidingMass1.a,0.25);
val(SlidingMass1.a,0.5);
val(SlidingMass1.a,0.75);
val(SlidingMass1.a,1.0);

"Spring1.flange_a.s:";
val(Spring1.flange_a.s,0.0);
val(Spring1.flange_a.s,0.25);
val(Spring1.flange_a.s,0.5);
val(Spring1.flange_a.s,0.75);
val(Spring1.flange_a.s,1.0);

"Spring1.flange_a.f:";
val(Spring1.flange_a.f,0.0);
val(Spring1.flange_a.f,0.25);
val(Spring1.flange_a.f,0.5);
val(Spring1.flange_a.f,0.75);
val(Spring1.flange_a.f,1.0);

"Spring1.flange_b.f:";
val(Spring1.flange_b.f,0.0);
val(Spring1.flange_b.f,0.25);
val(Spring1.flange_b.f,0.5);
val(Spring1.flange_b.f,0.75);
val(Spring1.flange_b.f,1.0);

"Spring1.s_rel:";
val(Spring1.s_rel,0.0);
val(Spring1.s_rel,0.25);
val(Spring1.s_rel,0.5);
val(Spring1.s_rel,0.75);
val(Spring1.s_rel,1.0);

"Spring1.f:";
val(Spring1.f,0.0);
val(Spring1.f,0.25);
val(Spring1.f,0.5);
val(Spring1.f,0.75);
val(Spring1.f,1.0);

"Fixed1.flange_b.f:";
val(Fixed1.flange_b.f,0.0);
val(Fixed1.flange_b.f,0.25);
val(Fixed1.flange_b.f,0.5);
val(Fixed1.flange_b.f,0.75);
val(Fixed1.flange_b.f,1.0);

"Force1.flange_b.s:";
val(Force1.flange_b.s,0.0);
val(Force1.flange_b.s,0.25);
val(Force1.flange_b.s,0.5);
val(Force1.flange_b.s,0.75);
val(Force1.flange_b.s,1.0);

"Force1.flange_b.f:";
val(Force1.flange_b.f,0.0);
val(Force1.flange_b.f,0.25);
val(Force1.flange_b.f,0.5);
val(Force1.flange_b.f,0.75);
val(Force1.flange_b.f,1.0);

"Force1.f:";
val(Force1.f,0.0);
val(Force1.f,0.25);
val(Force1.f,0.5);
val(Force1.f,0.75);
val(Force1.f,1.0);

"Sine1.y:";
val(Sine1.y,0.0);
val(Sine1.y,0.25);
val(Sine1.y,0.5);
val(Sine1.y,0.75);
val(Sine1.y,1.0);

"SlidingMass2.s:";
val(SlidingMass2.s,0.0);
val(SlidingMass2.s,0.25);
val(SlidingMass2.s,0.5);
val(SlidingMass2.s,0.75);
val(SlidingMass2.s,1.0);

"SlidingMass2.flange_a.s:";
val(SlidingMass2.flange_a.s,0.0);
val(SlidingMass2.flange_a.s,0.25);
val(SlidingMass2.flange_a.s,0.5);
val(SlidingMass2.flange_a.s,0.75);
val(SlidingMass2.flange_a.s,1.0);

"SlidingMass2.flange_a.f:";
val(SlidingMass2.flange_a.f,0.0);
val(SlidingMass2.flange_a.f,0.25);
val(SlidingMass2.flange_a.f,0.5);
val(SlidingMass2.flange_a.f,0.75);
val(SlidingMass2.flange_a.f,1.0);

"SlidingMass2.flange_b.s:";
val(SlidingMass2.flange_b.s,0.0);
val(SlidingMass2.flange_b.s,0.25);
val(SlidingMass2.flange_b.s,0.5);
val(SlidingMass2.flange_b.s,0.75);
val(SlidingMass2.flange_b.s,1.0);

"SlidingMass2.flange_b.f:";
val(SlidingMass2.flange_b.f,0.0);
val(SlidingMass2.flange_b.f,0.25);
val(SlidingMass2.flange_b.f,0.5);
val(SlidingMass2.flange_b.f,0.75);
val(SlidingMass2.flange_b.f,1.0);

"SlidingMass2.v:";
val(SlidingMass2.v,0.0);
val(SlidingMass2.v,0.25);
val(SlidingMass2.v,0.5);
val(SlidingMass2.v,0.75);
val(SlidingMass2.v,1.0);

"SlidingMass2.a:";
val(SlidingMass2.a,0.0);
val(SlidingMass2.a,0.25);
val(SlidingMass2.a,0.5);
val(SlidingMass2.a,0.75);
val(SlidingMass2.a,1.0);

"Spring2.flange_a.s:";
val(Spring2.flange_a.s,0.0);
val(Spring2.flange_a.s,0.25);
val(Spring2.flange_a.s,0.5);
val(Spring2.flange_a.s,0.75);
val(Spring2.flange_a.s,1.0);

"Spring2.flange_a.f:";
val(Spring2.flange_a.f,0.0);
val(Spring2.flange_a.f,0.25);
val(Spring2.flange_a.f,0.5);
val(Spring2.flange_a.f,0.75);
val(Spring2.flange_a.f,1.0);

"Spring2.flange_b.f:";
val(Spring2.flange_b.f,0.0);
val(Spring2.flange_b.f,0.25);
val(Spring2.flange_b.f,0.5);
val(Spring2.flange_b.f,0.75);
val(Spring2.flange_b.f,1.0);

"Spring2.s_rel:";
val(Spring2.s_rel,0.0);
val(Spring2.s_rel,0.25);
val(Spring2.s_rel,0.5);
val(Spring2.s_rel,0.75);
val(Spring2.s_rel,1.0);

"Spring2.f:";
val(Spring2.f,0.0);
val(Spring2.f,0.25);
val(Spring2.f,0.5);
val(Spring2.f,0.75);
val(Spring2.f,1.0);

"Fixed2.flange_b.f:";
val(Fixed2.flange_b.f,0.0);
val(Fixed2.flange_b.f,0.25);
val(Fixed2.flange_b.f,0.5);
val(Fixed2.flange_b.f,0.75);
val(Fixed2.flange_b.f,1.0);

"Force2.flange_b.s:";
val(Force2.flange_b.s,0.0);
val(Force2.flange_b.s,0.25);
val(Force2.flange_b.s,0.5);
val(Force2.flange_b.s,0.75);
val(Force2.flange_b.s,1.0);

"Force2.flange_b.f:";
val(Force2.flange_b.f,0.0);
val(Force2.flange_b.f,0.25);
val(Force2.flange_b.f,0.5);
val(Force2.flange_b.f,0.75);
val(Force2.flange_b.f,1.0);

"Force2.f:";
val(Force2.f,0.0);
val(Force2.f,0.25);
val(Force2.f,0.5);
val(Force2.f,0.75);
val(Force2.f,1.0);

"Sine2.y:";
val(Sine2.y,0.0);
val(Sine2.y,0.25);
val(Sine2.y,0.5);
val(Sine2.y,0.75);
val(Sine2.y,1.0);

"Damper1.flange_a.s:";
val(Damper1.flange_a.s,0.0);
val(Damper1.flange_a.s,0.25);
val(Damper1.flange_a.s,0.5);
val(Damper1.flange_a.s,0.75);
val(Damper1.flange_a.s,1.0);

"Damper1.flange_a.f:";
val(Damper1.flange_a.f,0.0);
val(Damper1.flange_a.f,0.25);
val(Damper1.flange_a.f,0.5);
val(Damper1.flange_a.f,0.75);
val(Damper1.flange_a.f,1.0);

"Damper1.flange_b.f:";
val(Damper1.flange_b.f,0.0);
val(Damper1.flange_b.f,0.25);
val(Damper1.flange_b.f,0.5);
val(Damper1.flange_b.f,0.75);
val(Damper1.flange_b.f,1.0);

"Damper1.s_rel:";
val(Damper1.s_rel,0.0);
val(Damper1.s_rel,0.25);
val(Damper1.s_rel,0.5);
val(Damper1.s_rel,0.75);
val(Damper1.s_rel,1.0);

"Damper1.f:";
val(Damper1.f,0.0);
val(Damper1.f,0.25);
val(Damper1.f,0.5);
val(Damper1.f,0.75);
val(Damper1.f,1.0);

"Damper1.v_rel:";
val(Damper1.v_rel,0.0);
val(Damper1.v_rel,0.25);
val(Damper1.v_rel,0.5);
val(Damper1.v_rel,0.75);
val(Damper1.v_rel,1.0);

// Result:
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.Translational.Examples.Oscillator_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.Translational.Examples.Oscillator', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "SlidingMass1.s:"
// -0.5
// -0.5012449802336988
// -0.5024026891839551
// -0.5034289500217035
// -0.5042806757856846
// "SlidingMass1.flange_a.s:"
// -1.0
// -1.001244980233699
// -1.0024026891839553
// -1.0034289500217035
// -1.0042806757856846
// "SlidingMass1.flange_a.f:"
// 0.0
// -0.13234288962729163
// -0.2623576017982902
// -0.3877569163781139
// -0.5063348073531335
// "SlidingMass1.flange_b.s:"
// 0.0
// -0.0012449802336987846
// -0.0024026891839552264
// -0.0034289500217035366
// -0.0042806757856845845
// "SlidingMass1.flange_b.f:"
// 0.0
// 12.449802336988956
// 24.026891839552267
// 34.28950021703426
// 42.80675785684585
// "SlidingMass1.v:"
// 0.0
// -0.014801396634143931
// -0.05747055269465479
// -0.12627124612183596
// -0.22087567929938404
// "SlidingMass1.a:"
// 0.0
// 12.317459447361665
// 23.764534237753974
// 33.90174330065614
// 42.300423049492714
// "Spring1.flange_a.s:"
// 0.0
// -0.0012449802336987846
// -0.0024026891839552264
// -0.0034289500217035366
// -0.0042806757856845845
// "Spring1.flange_a.f:"
// -0.0
// -12.449802336988956
// -24.026891839552267
// -34.28950021703426
// -42.80675785684585
// "Spring1.flange_b.f:"
// 0.0
// 12.449802336988956
// 24.026891839552267
// 34.28950021703426
// 42.80675785684585
// "Spring1.s_rel:"
// 1.0
// 1.001244980233699
// 1.0024026891839553
// 1.0034289500217035
// 1.0042806757856846
// "Spring1.f:"
// 0.0
// 12.449802336988956
// 24.026891839552267
// 34.28950021703426
// 42.80675785684585
// "Fixed1.flange_b.f:"
// -0.0
// -12.449802336988956
// -24.026891839552267
// -34.28950021703426
// -42.80675785684585
// "Force1.flange_b.s:"
// -1.0
// -1.001244980233699
// -1.0024026891839553
// -1.0034289500217035
// -1.0042806757856846
// "Force1.flange_b.f:"
// -0.0
// 0.13234288962729163
// 0.2623576017982902
// 0.3877569163781139
// 0.5063348073531335
// "Force1.f:"
// 0.0
// -0.13234288962729163
// -0.2623576017982902
// -0.3877569163781139
// -0.5063348073531335
// "Sine1.y:"
// 0.0
// -0.13234288962729163
// -0.2623576017982902
// -0.3877569163781139
// -0.5063348073531335
// "SlidingMass2.s:"
// -0.5
// -0.5007090457945356
// -0.5008809368082946
// -0.5008936420298418
// -0.500851606876031
// "SlidingMass2.flange_a.s:"
// -1.0
// -1.0007090457945356
// -1.0008809368082945
// -1.0008936420298418
// -1.0008516068760311
// "SlidingMass2.flange_a.f:"
// 0.0
// -0.13234288962729163
// -0.2623576017982902
// -0.3877569163781139
// -0.5063348073531335
// "SlidingMass2.flange_b.s:"
// 0.0
// -0.0007090457945355652
// -0.0008809368082945867
// -0.0008936420298417436
// -0.0008516068760310302
// "SlidingMass2.flange_b.f:"
// 0.0
// 7.167561738915625
// 9.026877632348793
// 9.288862305055217
// 8.994887408623816
// "SlidingMass2.v:"
// 0.0
// -0.007710379355997288
// -0.021750954940403695
// -0.03524420066377788
// -0.04788186483124026
// "SlidingMass2.a:"
// 0.0
// 7.035218849288333
// 8.764520030550502
// 8.901105388677102
// 8.488552601270683
// "Spring2.flange_a.s:"
// 0.0
// -0.0007090457945355652
// -0.0008809368082945867
// -0.0008936420298417436
// -0.0008516068760310302
// "Spring2.flange_a.f:"
// -0.0
// -7.090457945355652
// -8.809368082944756
// -8.936420298417437
// -8.516068760311413
// "Spring2.flange_b.f:"
// 0.0
// 7.090457945355652
// 8.809368082944756
// 8.936420298417437
// 8.516068760311413
// "Spring2.s_rel:"
// 1.0
// 1.0007090457945356
// 1.0008809368082945
// 1.0008936420298418
// 1.0008516068760311
// "Spring2.f:"
// 0.0
// 7.090457945355652
// 8.809368082944756
// 8.936420298417437
// 8.516068760311413
// "Fixed2.flange_b.f:"
// 0.0
// -7.167561738915625
// -9.026877632348793
// -9.288862305055217
// -8.994887408623816
// "Force2.flange_b.s:"
// -1.0
// -1.0007090457945356
// -1.0008809368082945
// -1.0008936420298418
// -1.0008516068760311
// "Force2.flange_b.f:"
// -0.0
// 0.13234288962729163
// 0.2623576017982902
// 0.3877569163781139
// 0.5063348073531335
// "Force2.f:"
// 0.0
// -0.13234288962729163
// -0.2623576017982902
// -0.3877569163781139
// -0.5063348073531335
// "Sine2.y:"
// 0.0
// -0.13234288962729163
// -0.2623576017982902
// -0.3877569163781139
// -0.5063348073531335
// "Damper1.flange_a.s:"
// 0.0
// -0.0007090457945355652
// -0.0008809368082945867
// -0.0008936420298417436
// -0.0008516068760310302
// "Damper1.flange_a.f:"
// 0.0
// -0.07710379355997288
// -0.21750954940403697
// -0.3524420066377788
// -0.4788186483124026
// "Damper1.flange_b.f:"
// -0.0
// 0.07710379355997288
// 0.21750954940403697
// 0.3524420066377788
// 0.4788186483124026
// "Damper1.s_rel:"
// 1.0
// 1.0007090457945356
// 1.0008809368082945
// 1.0008936420298418
// 1.0008516068760311
// "Damper1.f:"
// -0.0
// 0.07710379355997288
// 0.21750954940403697
// 0.3524420066377788
// 0.4788186483124026
// "Damper1.v_rel:"
// -0.0
// 0.007710379355997288
// 0.021750954940403695
// 0.03524420066377788
// 0.04788186483124026
// endResult
