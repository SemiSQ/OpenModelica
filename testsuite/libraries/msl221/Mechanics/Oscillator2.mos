//name:         Oscillator2
//keyword:      simulating msl221
//status:       correct
//teardown_command: rm -f Modelica.Mechanics.*
//
// simulation example
//

loadModel(Modelica,{"2.2.1"});
simulate(Modelica.Mechanics.Translational.Examples.Oscillator,numberOfIntervals=500,tolerance=0.0001,startTime=0,stopTime=1);

"SlidingMass1.s:";
val(SlidingMass1.s,0.0);
val(SlidingMass1.s,0.25);
val(SlidingMass1.s,0.5);
val(SlidingMass1.s,0.75);
val(SlidingMass1.s,1.0);

"SlidingMass1.flange_a.s:";
val(SlidingMass1.flange_a.s,0.0);
val(SlidingMass1.flange_a.s,0.25);
val(SlidingMass1.flange_a.s,0.5);
val(SlidingMass1.flange_a.s,0.75);
val(SlidingMass1.flange_a.s,1.0);

"SlidingMass1.flange_a.f:";
val(SlidingMass1.flange_a.f,0.0);
val(SlidingMass1.flange_a.f,0.25);
val(SlidingMass1.flange_a.f,0.5);
val(SlidingMass1.flange_a.f,0.75);
val(SlidingMass1.flange_a.f,1.0);

"SlidingMass1.flange_b.s:";
val(SlidingMass1.flange_b.s,0.0);
val(SlidingMass1.flange_b.s,0.25);
val(SlidingMass1.flange_b.s,0.5);
val(SlidingMass1.flange_b.s,0.75);
val(SlidingMass1.flange_b.s,1.0);

"SlidingMass1.flange_b.f:";
val(SlidingMass1.flange_b.f,0.0);
val(SlidingMass1.flange_b.f,0.25);
val(SlidingMass1.flange_b.f,0.5);
val(SlidingMass1.flange_b.f,0.75);
val(SlidingMass1.flange_b.f,1.0);

"SlidingMass1.v:";
val(SlidingMass1.v,0.0);
val(SlidingMass1.v,0.25);
val(SlidingMass1.v,0.5);
val(SlidingMass1.v,0.75);
val(SlidingMass1.v,1.0);

"SlidingMass1.a:";
val(SlidingMass1.a,0.0);
val(SlidingMass1.a,0.25);
val(SlidingMass1.a,0.5);
val(SlidingMass1.a,0.75);
val(SlidingMass1.a,1.0);

"Spring1.flange_a.s:";
val(Spring1.flange_a.s,0.0);
val(Spring1.flange_a.s,0.25);
val(Spring1.flange_a.s,0.5);
val(Spring1.flange_a.s,0.75);
val(Spring1.flange_a.s,1.0);

"Spring1.flange_a.f:";
val(Spring1.flange_a.f,0.0);
val(Spring1.flange_a.f,0.25);
val(Spring1.flange_a.f,0.5);
val(Spring1.flange_a.f,0.75);
val(Spring1.flange_a.f,1.0);

"Spring1.flange_b.f:";
val(Spring1.flange_b.f,0.0);
val(Spring1.flange_b.f,0.25);
val(Spring1.flange_b.f,0.5);
val(Spring1.flange_b.f,0.75);
val(Spring1.flange_b.f,1.0);

"Spring1.s_rel:";
val(Spring1.s_rel,0.0);
val(Spring1.s_rel,0.25);
val(Spring1.s_rel,0.5);
val(Spring1.s_rel,0.75);
val(Spring1.s_rel,1.0);

"Spring1.f:";
val(Spring1.f,0.0);
val(Spring1.f,0.25);
val(Spring1.f,0.5);
val(Spring1.f,0.75);
val(Spring1.f,1.0);

"Fixed1.flange_b.f:";
val(Fixed1.flange_b.f,0.0);
val(Fixed1.flange_b.f,0.25);
val(Fixed1.flange_b.f,0.5);
val(Fixed1.flange_b.f,0.75);
val(Fixed1.flange_b.f,1.0);

"Force1.flange_b.s:";
val(Force1.flange_b.s,0.0);
val(Force1.flange_b.s,0.25);
val(Force1.flange_b.s,0.5);
val(Force1.flange_b.s,0.75);
val(Force1.flange_b.s,1.0);

"Force1.flange_b.f:";
val(Force1.flange_b.f,0.0);
val(Force1.flange_b.f,0.25);
val(Force1.flange_b.f,0.5);
val(Force1.flange_b.f,0.75);
val(Force1.flange_b.f,1.0);

"Force1.f:";
val(Force1.f,0.0);
val(Force1.f,0.25);
val(Force1.f,0.5);
val(Force1.f,0.75);
val(Force1.f,1.0);

"Sine1.y:";
val(Sine1.y,0.0);
val(Sine1.y,0.25);
val(Sine1.y,0.5);
val(Sine1.y,0.75);
val(Sine1.y,1.0);

"SlidingMass2.s:";
val(SlidingMass2.s,0.0);
val(SlidingMass2.s,0.25);
val(SlidingMass2.s,0.5);
val(SlidingMass2.s,0.75);
val(SlidingMass2.s,1.0);

"SlidingMass2.flange_a.s:";
val(SlidingMass2.flange_a.s,0.0);
val(SlidingMass2.flange_a.s,0.25);
val(SlidingMass2.flange_a.s,0.5);
val(SlidingMass2.flange_a.s,0.75);
val(SlidingMass2.flange_a.s,1.0);

"SlidingMass2.flange_a.f:";
val(SlidingMass2.flange_a.f,0.0);
val(SlidingMass2.flange_a.f,0.25);
val(SlidingMass2.flange_a.f,0.5);
val(SlidingMass2.flange_a.f,0.75);
val(SlidingMass2.flange_a.f,1.0);

"SlidingMass2.flange_b.s:";
val(SlidingMass2.flange_b.s,0.0);
val(SlidingMass2.flange_b.s,0.25);
val(SlidingMass2.flange_b.s,0.5);
val(SlidingMass2.flange_b.s,0.75);
val(SlidingMass2.flange_b.s,1.0);

"SlidingMass2.flange_b.f:";
val(SlidingMass2.flange_b.f,0.0);
val(SlidingMass2.flange_b.f,0.25);
val(SlidingMass2.flange_b.f,0.5);
val(SlidingMass2.flange_b.f,0.75);
val(SlidingMass2.flange_b.f,1.0);

"SlidingMass2.v:";
val(SlidingMass2.v,0.0);
val(SlidingMass2.v,0.25);
val(SlidingMass2.v,0.5);
val(SlidingMass2.v,0.75);
val(SlidingMass2.v,1.0);

"SlidingMass2.a:";
val(SlidingMass2.a,0.0);
val(SlidingMass2.a,0.25);
val(SlidingMass2.a,0.5);
val(SlidingMass2.a,0.75);
val(SlidingMass2.a,1.0);

"Spring2.flange_a.s:";
val(Spring2.flange_a.s,0.0);
val(Spring2.flange_a.s,0.25);
val(Spring2.flange_a.s,0.5);
val(Spring2.flange_a.s,0.75);
val(Spring2.flange_a.s,1.0);

"Spring2.flange_a.f:";
val(Spring2.flange_a.f,0.0);
val(Spring2.flange_a.f,0.25);
val(Spring2.flange_a.f,0.5);
val(Spring2.flange_a.f,0.75);
val(Spring2.flange_a.f,1.0);

"Spring2.flange_b.f:";
val(Spring2.flange_b.f,0.0);
val(Spring2.flange_b.f,0.25);
val(Spring2.flange_b.f,0.5);
val(Spring2.flange_b.f,0.75);
val(Spring2.flange_b.f,1.0);

"Spring2.s_rel:";
val(Spring2.s_rel,0.0);
val(Spring2.s_rel,0.25);
val(Spring2.s_rel,0.5);
val(Spring2.s_rel,0.75);
val(Spring2.s_rel,1.0);

"Spring2.f:";
val(Spring2.f,0.0);
val(Spring2.f,0.25);
val(Spring2.f,0.5);
val(Spring2.f,0.75);
val(Spring2.f,1.0);

"Fixed2.flange_b.f:";
val(Fixed2.flange_b.f,0.0);
val(Fixed2.flange_b.f,0.25);
val(Fixed2.flange_b.f,0.5);
val(Fixed2.flange_b.f,0.75);
val(Fixed2.flange_b.f,1.0);

"Force2.flange_b.s:";
val(Force2.flange_b.s,0.0);
val(Force2.flange_b.s,0.25);
val(Force2.flange_b.s,0.5);
val(Force2.flange_b.s,0.75);
val(Force2.flange_b.s,1.0);

"Force2.flange_b.f:";
val(Force2.flange_b.f,0.0);
val(Force2.flange_b.f,0.25);
val(Force2.flange_b.f,0.5);
val(Force2.flange_b.f,0.75);
val(Force2.flange_b.f,1.0);

"Force2.f:";
val(Force2.f,0.0);
val(Force2.f,0.25);
val(Force2.f,0.5);
val(Force2.f,0.75);
val(Force2.f,1.0);

"Sine2.y:";
val(Sine2.y,0.0);
val(Sine2.y,0.25);
val(Sine2.y,0.5);
val(Sine2.y,0.75);
val(Sine2.y,1.0);

"Damper1.flange_a.s:";
val(Damper1.flange_a.s,0.0);
val(Damper1.flange_a.s,0.25);
val(Damper1.flange_a.s,0.5);
val(Damper1.flange_a.s,0.75);
val(Damper1.flange_a.s,1.0);

"Damper1.flange_a.f:";
val(Damper1.flange_a.f,0.0);
val(Damper1.flange_a.f,0.25);
val(Damper1.flange_a.f,0.5);
val(Damper1.flange_a.f,0.75);
val(Damper1.flange_a.f,1.0);

"Damper1.flange_b.f:";
val(Damper1.flange_b.f,0.0);
val(Damper1.flange_b.f,0.25);
val(Damper1.flange_b.f,0.5);
val(Damper1.flange_b.f,0.75);
val(Damper1.flange_b.f,1.0);

"Damper1.s_rel:";
val(Damper1.s_rel,0.0);
val(Damper1.s_rel,0.25);
val(Damper1.s_rel,0.5);
val(Damper1.s_rel,0.75);
val(Damper1.s_rel,1.0);

"Damper1.f:";
val(Damper1.f,0.0);
val(Damper1.f,0.25);
val(Damper1.f,0.5);
val(Damper1.f,0.75);
val(Damper1.f,1.0);

"Damper1.v_rel:";
val(Damper1.v_rel,0.0);
val(Damper1.v_rel,0.25);
val(Damper1.v_rel,0.5);
val(Damper1.v_rel,0.75);
val(Damper1.v_rel,1.0);

// Result:
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.Translational.Examples.Oscillator_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.Translational.Examples.Oscillator', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// "SlidingMass1.s:"
// -0.5
// -0.501244980222531
// -0.502402689203494
// -0.50342895006098
// -0.504280675735148
// "SlidingMass1.flange_a.s:"
// -1.0
// -1.00124498022253
// -1.00240268920349
// -1.00342895006098
// -1.00428067573515
// "SlidingMass1.flange_a.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "SlidingMass1.flange_b.s:"
// 0.0
// -0.00124498022253138
// -0.00240268920349393
// -0.00342895006097956
// -0.00428067573514768
// "SlidingMass1.flange_b.f:"
// 0.0
// 12.4498022253138
// 24.0268920349382
// 34.2895006097956
// 42.8067573514768
// "SlidingMass1.v:"
// 0.0
// -0.0148014038428708
// -0.0574705791651873
// -0.126271305063607
// -0.220875524614316
// "SlidingMass1.a:"
// 0.0
// 12.3174593356866
// 23.7645344331399
// 33.9017436934176
// 42.3004225441237
// "Spring1.flange_a.s:"
// 0.0
// -0.00124498022253138
// -0.00240268920349393
// -0.00342895006097956
// -0.00428067573514768
// "Spring1.flange_a.f:"
// -0.0
// -12.4498022253138
// -24.0268920349382
// -34.2895006097956
// -42.8067573514768
// "Spring1.flange_b.f:"
// 0.0
// 12.4498022253138
// 24.0268920349382
// 34.2895006097956
// 42.8067573514768
// "Spring1.s_rel:"
// 1.0
// 1.00124498022253
// 1.00240268920349
// 1.00342895006098
// 1.00428067573515
// "Spring1.f:"
// 0.0
// 12.4498022253138
// 24.0268920349382
// 34.2895006097956
// 42.8067573514768
// "Fixed1.flange_b.f:"
// -0.0
// -12.4498022253138
// -24.0268920349382
// -34.2895006097956
// -42.8067573514768
// "Force1.flange_b.s:"
// -1.0
// -1.00124498022253
// -1.00240268920349
// -1.00342895006098
// -1.00428067573515
// "Force1.flange_b.f:"
// -0.0
// 0.132342889627278
// 0.262357601798263
// 0.387756916378088
// 0.506334807353084
// "Force1.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "Sine1.y:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "SlidingMass2.s:"
// -0.5
// -0.500709045794263
// -0.500880936818815
// -0.500893642037589
// -0.500851606870244
// "SlidingMass2.flange_a.s:"
// -1.0
// -1.00070904579426
// -1.00088093681882
// -1.00089364203759
// -1.00085160687024
// "SlidingMass2.flange_a.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "SlidingMass2.flange_b.s:"
// 0.0
// -0.000709045794263228
// -0.000880936818815171
// -0.000893642037588991
// -0.000851606870244437
// "SlidingMass2.flange_b.f:"
// 0.0
// 7.16756176786684
// 9.02687779443574
// 9.28886245323652
// 8.99488699602514
// "SlidingMass2.v:"
// 0.0
// -0.00771038252356739
// -0.0217509606284028
// -0.0352442077347717
// -0.0478818293580768
// "SlidingMass2.a:"
// 0.0
// 7.03521887823956
// 8.76452019263747
// 8.90110553685843
// 8.48855218867205
// "Spring2.flange_a.s:"
// 0.0
// -0.000709045794263228
// -0.000880936818815171
// -0.000893642037588991
// -0.000851606870244437
// "Spring2.flange_a.f:"
// -0.0
// -7.09045794263116
// -8.80936818815171
// -8.9364203758888
// -8.51606870244437
// "Spring2.flange_b.f:"
// 0.0
// 7.09045794263116
// 8.80936818815171
// 8.9364203758888
// 8.51606870244437
// "Spring2.s_rel:"
// 1.0
// 1.00070904579426
// 1.00088093681882
// 1.00089364203759
// 1.00085160687024
// "Spring2.f:"
// 0.0
// 7.09045794263116
// 8.80936818815171
// 8.9364203758888
// 8.51606870244437
// "Fixed2.flange_b.f:"
// 0.0
// -7.16756176786684
// -9.02687779443574
// -9.28886245323652
// -8.99488699602514
// "Force2.flange_b.s:"
// -1.0
// -1.00070904579426
// -1.00088093681882
// -1.00089364203759
// -1.00085160687024
// "Force2.flange_b.f:"
// -0.0
// 0.132342889627278
// 0.262357601798263
// 0.387756916378088
// 0.506334807353084
// "Force2.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "Sine2.y:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "Damper1.flange_a.s:"
// 0.0
// -0.000709045794263228
// -0.000880936818815171
// -0.000893642037588991
// -0.000851606870244437
// "Damper1.flange_a.f:"
// 0.0
// -0.0771038252356739
// -0.217509606284028
// -0.352442077347717
// -0.478818293580768
// "Damper1.flange_b.f:"
// -0.0
// 0.0771038252356739
// 0.217509606284028
// 0.352442077347717
// 0.478818293580768
// "Damper1.s_rel:"
// 1.0
// 1.00070904579426
// 1.00088093681882
// 1.00089364203759
// 1.00085160687024
// "Damper1.f:"
// -0.0
// 0.0771038252356739
// 0.217509606284028
// 0.352442077347717
// 0.478818293580768
// "Damper1.v_rel:"
// -0.0
// 0.00771038252356739
// 0.0217509606284028
// 0.0352442077347717
// 0.0478818293580768
// endResult
