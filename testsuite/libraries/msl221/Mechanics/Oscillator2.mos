//name:         Oscillator2
//keyword:      simulating msl221
//status:       correct
//env: OPENMODELICALIBRARY=../../../../libraries/msl221
//teardown_command: rm -f Modelica.Mechanics.*
//
// simulation example
//

loadModel(Modelica);
simulate(Modelica.Mechanics.Translational.Examples.Oscillator,numberOfIntervals=500,tolerance=0.0001,startTime=0,stopTime=1);

"SlidingMass1.s:";
val(SlidingMass1.s,0.0);
val(SlidingMass1.s,0.25);
val(SlidingMass1.s,0.5);
val(SlidingMass1.s,0.75);
val(SlidingMass1.s,1.0);

"SlidingMass1.flange_a.s:";
val(SlidingMass1.flange_a.s,0.0);
val(SlidingMass1.flange_a.s,0.25);
val(SlidingMass1.flange_a.s,0.5);
val(SlidingMass1.flange_a.s,0.75);
val(SlidingMass1.flange_a.s,1.0);

"SlidingMass1.flange_a.f:";
val(SlidingMass1.flange_a.f,0.0);
val(SlidingMass1.flange_a.f,0.25);
val(SlidingMass1.flange_a.f,0.5);
val(SlidingMass1.flange_a.f,0.75);
val(SlidingMass1.flange_a.f,1.0);

"SlidingMass1.flange_b.s:";
val(SlidingMass1.flange_b.s,0.0);
val(SlidingMass1.flange_b.s,0.25);
val(SlidingMass1.flange_b.s,0.5);
val(SlidingMass1.flange_b.s,0.75);
val(SlidingMass1.flange_b.s,1.0);

"SlidingMass1.flange_b.f:";
val(SlidingMass1.flange_b.f,0.0);
val(SlidingMass1.flange_b.f,0.25);
val(SlidingMass1.flange_b.f,0.5);
val(SlidingMass1.flange_b.f,0.75);
val(SlidingMass1.flange_b.f,1.0);

"SlidingMass1.v:";
val(SlidingMass1.v,0.0);
val(SlidingMass1.v,0.25);
val(SlidingMass1.v,0.5);
val(SlidingMass1.v,0.75);
val(SlidingMass1.v,1.0);

"SlidingMass1.a:";
val(SlidingMass1.a,0.0);
val(SlidingMass1.a,0.25);
val(SlidingMass1.a,0.5);
val(SlidingMass1.a,0.75);
val(SlidingMass1.a,1.0);

"Spring1.flange_a.s:";
val(Spring1.flange_a.s,0.0);
val(Spring1.flange_a.s,0.25);
val(Spring1.flange_a.s,0.5);
val(Spring1.flange_a.s,0.75);
val(Spring1.flange_a.s,1.0);

"Spring1.flange_a.f:";
val(Spring1.flange_a.f,0.0);
val(Spring1.flange_a.f,0.25);
val(Spring1.flange_a.f,0.5);
val(Spring1.flange_a.f,0.75);
val(Spring1.flange_a.f,1.0);

"Spring1.flange_b.f:";
val(Spring1.flange_b.f,0.0);
val(Spring1.flange_b.f,0.25);
val(Spring1.flange_b.f,0.5);
val(Spring1.flange_b.f,0.75);
val(Spring1.flange_b.f,1.0);

"Spring1.s_rel:";
val(Spring1.s_rel,0.0);
val(Spring1.s_rel,0.25);
val(Spring1.s_rel,0.5);
val(Spring1.s_rel,0.75);
val(Spring1.s_rel,1.0);

"Spring1.f:";
val(Spring1.f,0.0);
val(Spring1.f,0.25);
val(Spring1.f,0.5);
val(Spring1.f,0.75);
val(Spring1.f,1.0);

"Fixed1.flange_b.f:";
val(Fixed1.flange_b.f,0.0);
val(Fixed1.flange_b.f,0.25);
val(Fixed1.flange_b.f,0.5);
val(Fixed1.flange_b.f,0.75);
val(Fixed1.flange_b.f,1.0);

"Force1.flange_b.s:";
val(Force1.flange_b.s,0.0);
val(Force1.flange_b.s,0.25);
val(Force1.flange_b.s,0.5);
val(Force1.flange_b.s,0.75);
val(Force1.flange_b.s,1.0);

"Force1.flange_b.f:";
val(Force1.flange_b.f,0.0);
val(Force1.flange_b.f,0.25);
val(Force1.flange_b.f,0.5);
val(Force1.flange_b.f,0.75);
val(Force1.flange_b.f,1.0);

"Force1.f:";
val(Force1.f,0.0);
val(Force1.f,0.25);
val(Force1.f,0.5);
val(Force1.f,0.75);
val(Force1.f,1.0);

"Sine1.y:";
val(Sine1.y,0.0);
val(Sine1.y,0.25);
val(Sine1.y,0.5);
val(Sine1.y,0.75);
val(Sine1.y,1.0);

"SlidingMass2.s:";
val(SlidingMass2.s,0.0);
val(SlidingMass2.s,0.25);
val(SlidingMass2.s,0.5);
val(SlidingMass2.s,0.75);
val(SlidingMass2.s,1.0);

"SlidingMass2.flange_a.s:";
val(SlidingMass2.flange_a.s,0.0);
val(SlidingMass2.flange_a.s,0.25);
val(SlidingMass2.flange_a.s,0.5);
val(SlidingMass2.flange_a.s,0.75);
val(SlidingMass2.flange_a.s,1.0);

"SlidingMass2.flange_a.f:";
val(SlidingMass2.flange_a.f,0.0);
val(SlidingMass2.flange_a.f,0.25);
val(SlidingMass2.flange_a.f,0.5);
val(SlidingMass2.flange_a.f,0.75);
val(SlidingMass2.flange_a.f,1.0);

"SlidingMass2.flange_b.s:";
val(SlidingMass2.flange_b.s,0.0);
val(SlidingMass2.flange_b.s,0.25);
val(SlidingMass2.flange_b.s,0.5);
val(SlidingMass2.flange_b.s,0.75);
val(SlidingMass2.flange_b.s,1.0);

"SlidingMass2.flange_b.f:";
val(SlidingMass2.flange_b.f,0.0);
val(SlidingMass2.flange_b.f,0.25);
val(SlidingMass2.flange_b.f,0.5);
val(SlidingMass2.flange_b.f,0.75);
val(SlidingMass2.flange_b.f,1.0);

"SlidingMass2.v:";
val(SlidingMass2.v,0.0);
val(SlidingMass2.v,0.25);
val(SlidingMass2.v,0.5);
val(SlidingMass2.v,0.75);
val(SlidingMass2.v,1.0);

"SlidingMass2.a:";
val(SlidingMass2.a,0.0);
val(SlidingMass2.a,0.25);
val(SlidingMass2.a,0.5);
val(SlidingMass2.a,0.75);
val(SlidingMass2.a,1.0);

"Spring2.flange_a.s:";
val(Spring2.flange_a.s,0.0);
val(Spring2.flange_a.s,0.25);
val(Spring2.flange_a.s,0.5);
val(Spring2.flange_a.s,0.75);
val(Spring2.flange_a.s,1.0);

"Spring2.flange_a.f:";
val(Spring2.flange_a.f,0.0);
val(Spring2.flange_a.f,0.25);
val(Spring2.flange_a.f,0.5);
val(Spring2.flange_a.f,0.75);
val(Spring2.flange_a.f,1.0);

"Spring2.flange_b.f:";
val(Spring2.flange_b.f,0.0);
val(Spring2.flange_b.f,0.25);
val(Spring2.flange_b.f,0.5);
val(Spring2.flange_b.f,0.75);
val(Spring2.flange_b.f,1.0);

"Spring2.s_rel:";
val(Spring2.s_rel,0.0);
val(Spring2.s_rel,0.25);
val(Spring2.s_rel,0.5);
val(Spring2.s_rel,0.75);
val(Spring2.s_rel,1.0);

"Spring2.f:";
val(Spring2.f,0.0);
val(Spring2.f,0.25);
val(Spring2.f,0.5);
val(Spring2.f,0.75);
val(Spring2.f,1.0);

"Fixed2.flange_b.f:";
val(Fixed2.flange_b.f,0.0);
val(Fixed2.flange_b.f,0.25);
val(Fixed2.flange_b.f,0.5);
val(Fixed2.flange_b.f,0.75);
val(Fixed2.flange_b.f,1.0);

"Force2.flange_b.s:";
val(Force2.flange_b.s,0.0);
val(Force2.flange_b.s,0.25);
val(Force2.flange_b.s,0.5);
val(Force2.flange_b.s,0.75);
val(Force2.flange_b.s,1.0);

"Force2.flange_b.f:";
val(Force2.flange_b.f,0.0);
val(Force2.flange_b.f,0.25);
val(Force2.flange_b.f,0.5);
val(Force2.flange_b.f,0.75);
val(Force2.flange_b.f,1.0);

"Force2.f:";
val(Force2.f,0.0);
val(Force2.f,0.25);
val(Force2.f,0.5);
val(Force2.f,0.75);
val(Force2.f,1.0);

"Sine2.y:";
val(Sine2.y,0.0);
val(Sine2.y,0.25);
val(Sine2.y,0.5);
val(Sine2.y,0.75);
val(Sine2.y,1.0);

"Damper1.flange_a.s:";
val(Damper1.flange_a.s,0.0);
val(Damper1.flange_a.s,0.25);
val(Damper1.flange_a.s,0.5);
val(Damper1.flange_a.s,0.75);
val(Damper1.flange_a.s,1.0);

"Damper1.flange_a.f:";
val(Damper1.flange_a.f,0.0);
val(Damper1.flange_a.f,0.25);
val(Damper1.flange_a.f,0.5);
val(Damper1.flange_a.f,0.75);
val(Damper1.flange_a.f,1.0);

"Damper1.flange_b.f:";
val(Damper1.flange_b.f,0.0);
val(Damper1.flange_b.f,0.25);
val(Damper1.flange_b.f,0.5);
val(Damper1.flange_b.f,0.75);
val(Damper1.flange_b.f,1.0);

"Damper1.s_rel:";
val(Damper1.s_rel,0.0);
val(Damper1.s_rel,0.25);
val(Damper1.s_rel,0.5);
val(Damper1.s_rel,0.75);
val(Damper1.s_rel,1.0);

"Damper1.f:";
val(Damper1.f,0.0);
val(Damper1.f,0.25);
val(Damper1.f,0.5);
val(Damper1.f,0.75);
val(Damper1.f,1.0);

"Damper1.v_rel:";
val(Damper1.v_rel,0.0);
val(Damper1.v_rel,0.25);
val(Damper1.v_rel,0.5);
val(Damper1.v_rel,0.75);
val(Damper1.v_rel,1.0);

// Result:
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.Translational.Examples.Oscillator_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.Translational.Examples.Oscillator', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*'",
//     messages = ""
// end SimulationResult;
// "SlidingMass1.s:"
// -0.5
// -0.501243743232527
// -0.502420580706311
// -0.503466868667425
// -0.504323975876883
// "SlidingMass1.flange_a.s:"
// -1.0
// -1.00124374323253
// -1.00242058070631
// -1.00346686866743
// -1.00432397587688
// "SlidingMass1.flange_a.f:"
// 0.0
// -0.132342889626835
// -0.26235760179754
// -0.387756916377087
// -0.506334807353084
// "SlidingMass1.flange_b.s:"
// 0.0
// -0.00124374323252666
// -0.00242058070631116
// -0.00346686866742521
// -0.00432397587688294
// "SlidingMass1.flange_b.f:"
// 0.0
// 12.4374323252666
// 24.2058070631127
// 34.6686866742521
// 43.2397587688293
// "SlidingMass1.v:"
// 0.0
// -0.0162711654704395
// -0.0648461728523406
// -0.143820137594138
// -0.250309619701132
// "SlidingMass1.a:"
// 0.0
// 12.3050894356397
// 23.9434494613152
// 34.280929757875
// 42.7334239614763
// "Spring1.flange_a.s:"
// 0.0
// -0.00124374323252666
// -0.00242058070631116
// -0.00346686866742521
// -0.00432397587688294
// "Spring1.flange_a.f:"
// -0.0
// -12.4374323252666
// -24.2058070631127
// -34.6686866742521
// -43.2397587688293
// "Spring1.flange_b.f:"
// 0.0
// 12.4374323252666
// 24.2058070631127
// 34.6686866742521
// 43.2397587688293
// "Spring1.s_rel:"
// 1.0
// 1.00124374323253
// 1.00242058070631
// 1.00346686866743
// 1.00432397587688
// "Spring1.f:"
// 0.0
// 12.4374323252666
// 24.2058070631127
// 34.6686866742521
// 43.2397587688293
// "Fixed1.flange_b.f:"
// -0.0
// -12.4374323252666
// -24.2058070631127
// -34.6686866742521
// -43.2397587688293
// "Force1.flange_b.s:"
// -1.0
// -1.00124374323253
// -1.00242058070631
// -1.00346686866743
// -1.00432397587688
// "Force1.flange_b.f:"
// -0.0
// 0.132342889626835
// 0.26235760179754
// 0.387756916377087
// 0.506334807353084
// "Force1.f:"
// 0.0
// -0.132342889626835
// -0.26235760179754
// -0.387756916377087
// -0.506334807353084
// "Sine1.y:"
// 0.0
// -0.132342889626835
// -0.26235760179754
// -0.387756916377087
// -0.506334807353084
// "SlidingMass2.s:"
// -0.5
// -0.50070995686731
// -0.500887387007163
// -0.500900348458761
// -0.500856113830961
// "SlidingMass2.flange_a.s:"
// -1.0
// -1.00070995686731
// -1.00088738700716
// -1.00090034845876
// -1.00085611383096
// "SlidingMass2.flange_a.f:"
// 0.0
// -0.132342889626835
// -0.26235760179754
// -0.387756916377087
// -0.506334807353084
// "SlidingMass2.flange_b.s:"
// 0.0
// -0.000709956867310035
// -0.000887387007162478
// -0.000900348458760789
// -0.000856113830961069
// "SlidingMass2.flange_b.f:"
// 0.0
// 7.18400252256203
// 9.10834198264264
// 9.37836330205934
// 9.06135583790152
// "SlidingMass2.v:"
// 0.0
// -0.00844338494616827
// -0.0234471911018975
// -0.0374878714451448
// -0.0500217528290824
// "SlidingMass2.a:"
// 0.0
// 7.0516596329352
// 8.8459843808451
// 8.99060638568226
// 8.55502103054843
// "Spring2.flange_a.s:"
// 0.0
// -0.000709956867310035
// -0.000887387007162478
// -0.000900348458760789
// -0.000856113830961069
// "Spring2.flange_a.f:"
// -0.0
// -7.09956867310035
// -8.87387007162367
// -9.0034845876079
// -8.56113830961069
// "Spring2.flange_b.f:"
// 0.0
// 7.09956867310035
// 8.87387007162367
// 9.0034845876079
// 8.56113830961069
// "Spring2.s_rel:"
// 1.0
// 1.00070995686731
// 1.00088738700716
// 1.00090034845876
// 1.00085611383096
// "Spring2.f:"
// 0.0
// 7.09956867310035
// 8.87387007162367
// 9.0034845876079
// 8.56113830961069
// "Fixed2.flange_b.f:"
// 0.0
// -7.18400252256203
// -9.10834198264264
// -9.37836330205934
// -9.06135583790152
// "Force2.flange_b.s:"
// -1.0
// -1.00070995686731
// -1.00088738700716
// -1.00090034845876
// -1.00085611383096
// "Force2.flange_b.f:"
// -0.0
// 0.132342889626835
// 0.26235760179754
// 0.387756916377087
// 0.506334807353084
// "Force2.f:"
// 0.0
// -0.132342889626835
// -0.26235760179754
// -0.387756916377087
// -0.506334807353084
// "Sine2.y:"
// 0.0
// -0.132342889626835
// -0.26235760179754
// -0.387756916377087
// -0.506334807353084
// "Damper1.flange_a.s:"
// 0.0
// -0.000709956867310035
// -0.000887387007162478
// -0.000900348458760789
// -0.000856113830961069
// "Damper1.flange_a.f:"
// 0.0
// -0.0844338494616827
// -0.234471911018975
// -0.374878714451448
// -0.500217528290824
// "Damper1.flange_b.f:"
// -0.0
// 0.0844338494616827
// 0.234471911018975
// 0.374878714451448
// 0.500217528290824
// "Damper1.s_rel:"
// 1.0
// 1.00070995686731
// 1.00088738700716
// 1.00090034845876
// 1.00085611383096
// "Damper1.f:"
// -0.0
// 0.0844338494616827
// 0.234471911018975
// 0.374878714451448
// 0.500217528290824
// "Damper1.v_rel:"
// -0.0
// 0.00844338494616827
// 0.0234471911018975
// 0.0374878714451448
// 0.0500217528290824
// endResult
