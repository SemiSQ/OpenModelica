//name:         Oscillator2
//keyword:      simulating msl221
//status:       correct
//teardown_command: rm -f Modelica.Mechanics.*
//
// simulation example
//

loadModel(Modelica,{"2.2.1"});
simulate(Modelica.Mechanics.Translational.Examples.Oscillator,numberOfIntervals=500,tolerance=0.0001,startTime=0,stopTime=1);

"SlidingMass1.s:";
val(SlidingMass1.s,0.0);
val(SlidingMass1.s,0.25);
val(SlidingMass1.s,0.5);
val(SlidingMass1.s,0.75);
val(SlidingMass1.s,1.0);

"SlidingMass1.flange_a.s:";
val(SlidingMass1.flange_a.s,0.0);
val(SlidingMass1.flange_a.s,0.25);
val(SlidingMass1.flange_a.s,0.5);
val(SlidingMass1.flange_a.s,0.75);
val(SlidingMass1.flange_a.s,1.0);

"SlidingMass1.flange_a.f:";
val(SlidingMass1.flange_a.f,0.0);
val(SlidingMass1.flange_a.f,0.25);
val(SlidingMass1.flange_a.f,0.5);
val(SlidingMass1.flange_a.f,0.75);
val(SlidingMass1.flange_a.f,1.0);

"SlidingMass1.flange_b.s:";
val(SlidingMass1.flange_b.s,0.0);
val(SlidingMass1.flange_b.s,0.25);
val(SlidingMass1.flange_b.s,0.5);
val(SlidingMass1.flange_b.s,0.75);
val(SlidingMass1.flange_b.s,1.0);

"SlidingMass1.flange_b.f:";
val(SlidingMass1.flange_b.f,0.0);
val(SlidingMass1.flange_b.f,0.25);
val(SlidingMass1.flange_b.f,0.5);
val(SlidingMass1.flange_b.f,0.75);
val(SlidingMass1.flange_b.f,1.0);

"SlidingMass1.v:";
val(SlidingMass1.v,0.0);
val(SlidingMass1.v,0.25);
val(SlidingMass1.v,0.5);
val(SlidingMass1.v,0.75);
val(SlidingMass1.v,1.0);

"SlidingMass1.a:";
val(SlidingMass1.a,0.0);
val(SlidingMass1.a,0.25);
val(SlidingMass1.a,0.5);
val(SlidingMass1.a,0.75);
val(SlidingMass1.a,1.0);

"Spring1.flange_a.s:";
val(Spring1.flange_a.s,0.0);
val(Spring1.flange_a.s,0.25);
val(Spring1.flange_a.s,0.5);
val(Spring1.flange_a.s,0.75);
val(Spring1.flange_a.s,1.0);

"Spring1.flange_a.f:";
val(Spring1.flange_a.f,0.0);
val(Spring1.flange_a.f,0.25);
val(Spring1.flange_a.f,0.5);
val(Spring1.flange_a.f,0.75);
val(Spring1.flange_a.f,1.0);

"Spring1.flange_b.f:";
val(Spring1.flange_b.f,0.0);
val(Spring1.flange_b.f,0.25);
val(Spring1.flange_b.f,0.5);
val(Spring1.flange_b.f,0.75);
val(Spring1.flange_b.f,1.0);

"Spring1.s_rel:";
val(Spring1.s_rel,0.0);
val(Spring1.s_rel,0.25);
val(Spring1.s_rel,0.5);
val(Spring1.s_rel,0.75);
val(Spring1.s_rel,1.0);

"Spring1.f:";
val(Spring1.f,0.0);
val(Spring1.f,0.25);
val(Spring1.f,0.5);
val(Spring1.f,0.75);
val(Spring1.f,1.0);

"Fixed1.flange_b.f:";
val(Fixed1.flange_b.f,0.0);
val(Fixed1.flange_b.f,0.25);
val(Fixed1.flange_b.f,0.5);
val(Fixed1.flange_b.f,0.75);
val(Fixed1.flange_b.f,1.0);

"Force1.flange_b.s:";
val(Force1.flange_b.s,0.0);
val(Force1.flange_b.s,0.25);
val(Force1.flange_b.s,0.5);
val(Force1.flange_b.s,0.75);
val(Force1.flange_b.s,1.0);

"Force1.flange_b.f:";
val(Force1.flange_b.f,0.0);
val(Force1.flange_b.f,0.25);
val(Force1.flange_b.f,0.5);
val(Force1.flange_b.f,0.75);
val(Force1.flange_b.f,1.0);

"Force1.f:";
val(Force1.f,0.0);
val(Force1.f,0.25);
val(Force1.f,0.5);
val(Force1.f,0.75);
val(Force1.f,1.0);

"Sine1.y:";
val(Sine1.y,0.0);
val(Sine1.y,0.25);
val(Sine1.y,0.5);
val(Sine1.y,0.75);
val(Sine1.y,1.0);

"SlidingMass2.s:";
val(SlidingMass2.s,0.0);
val(SlidingMass2.s,0.25);
val(SlidingMass2.s,0.5);
val(SlidingMass2.s,0.75);
val(SlidingMass2.s,1.0);

"SlidingMass2.flange_a.s:";
val(SlidingMass2.flange_a.s,0.0);
val(SlidingMass2.flange_a.s,0.25);
val(SlidingMass2.flange_a.s,0.5);
val(SlidingMass2.flange_a.s,0.75);
val(SlidingMass2.flange_a.s,1.0);

"SlidingMass2.flange_a.f:";
val(SlidingMass2.flange_a.f,0.0);
val(SlidingMass2.flange_a.f,0.25);
val(SlidingMass2.flange_a.f,0.5);
val(SlidingMass2.flange_a.f,0.75);
val(SlidingMass2.flange_a.f,1.0);

"SlidingMass2.flange_b.s:";
val(SlidingMass2.flange_b.s,0.0);
val(SlidingMass2.flange_b.s,0.25);
val(SlidingMass2.flange_b.s,0.5);
val(SlidingMass2.flange_b.s,0.75);
val(SlidingMass2.flange_b.s,1.0);

"SlidingMass2.flange_b.f:";
val(SlidingMass2.flange_b.f,0.0);
val(SlidingMass2.flange_b.f,0.25);
val(SlidingMass2.flange_b.f,0.5);
val(SlidingMass2.flange_b.f,0.75);
val(SlidingMass2.flange_b.f,1.0);

"SlidingMass2.v:";
val(SlidingMass2.v,0.0);
val(SlidingMass2.v,0.25);
val(SlidingMass2.v,0.5);
val(SlidingMass2.v,0.75);
val(SlidingMass2.v,1.0);

"SlidingMass2.a:";
val(SlidingMass2.a,0.0);
val(SlidingMass2.a,0.25);
val(SlidingMass2.a,0.5);
val(SlidingMass2.a,0.75);
val(SlidingMass2.a,1.0);

"Spring2.flange_a.s:";
val(Spring2.flange_a.s,0.0);
val(Spring2.flange_a.s,0.25);
val(Spring2.flange_a.s,0.5);
val(Spring2.flange_a.s,0.75);
val(Spring2.flange_a.s,1.0);

"Spring2.flange_a.f:";
val(Spring2.flange_a.f,0.0);
val(Spring2.flange_a.f,0.25);
val(Spring2.flange_a.f,0.5);
val(Spring2.flange_a.f,0.75);
val(Spring2.flange_a.f,1.0);

"Spring2.flange_b.f:";
val(Spring2.flange_b.f,0.0);
val(Spring2.flange_b.f,0.25);
val(Spring2.flange_b.f,0.5);
val(Spring2.flange_b.f,0.75);
val(Spring2.flange_b.f,1.0);

"Spring2.s_rel:";
val(Spring2.s_rel,0.0);
val(Spring2.s_rel,0.25);
val(Spring2.s_rel,0.5);
val(Spring2.s_rel,0.75);
val(Spring2.s_rel,1.0);

"Spring2.f:";
val(Spring2.f,0.0);
val(Spring2.f,0.25);
val(Spring2.f,0.5);
val(Spring2.f,0.75);
val(Spring2.f,1.0);

"Fixed2.flange_b.f:";
val(Fixed2.flange_b.f,0.0);
val(Fixed2.flange_b.f,0.25);
val(Fixed2.flange_b.f,0.5);
val(Fixed2.flange_b.f,0.75);
val(Fixed2.flange_b.f,1.0);

"Force2.flange_b.s:";
val(Force2.flange_b.s,0.0);
val(Force2.flange_b.s,0.25);
val(Force2.flange_b.s,0.5);
val(Force2.flange_b.s,0.75);
val(Force2.flange_b.s,1.0);

"Force2.flange_b.f:";
val(Force2.flange_b.f,0.0);
val(Force2.flange_b.f,0.25);
val(Force2.flange_b.f,0.5);
val(Force2.flange_b.f,0.75);
val(Force2.flange_b.f,1.0);

"Force2.f:";
val(Force2.f,0.0);
val(Force2.f,0.25);
val(Force2.f,0.5);
val(Force2.f,0.75);
val(Force2.f,1.0);

"Sine2.y:";
val(Sine2.y,0.0);
val(Sine2.y,0.25);
val(Sine2.y,0.5);
val(Sine2.y,0.75);
val(Sine2.y,1.0);

"Damper1.flange_a.s:";
val(Damper1.flange_a.s,0.0);
val(Damper1.flange_a.s,0.25);
val(Damper1.flange_a.s,0.5);
val(Damper1.flange_a.s,0.75);
val(Damper1.flange_a.s,1.0);

"Damper1.flange_a.f:";
val(Damper1.flange_a.f,0.0);
val(Damper1.flange_a.f,0.25);
val(Damper1.flange_a.f,0.5);
val(Damper1.flange_a.f,0.75);
val(Damper1.flange_a.f,1.0);

"Damper1.flange_b.f:";
val(Damper1.flange_b.f,0.0);
val(Damper1.flange_b.f,0.25);
val(Damper1.flange_b.f,0.5);
val(Damper1.flange_b.f,0.75);
val(Damper1.flange_b.f,1.0);

"Damper1.s_rel:";
val(Damper1.s_rel,0.0);
val(Damper1.s_rel,0.25);
val(Damper1.s_rel,0.5);
val(Damper1.s_rel,0.75);
val(Damper1.s_rel,1.0);

"Damper1.f:";
val(Damper1.f,0.0);
val(Damper1.f,0.25);
val(Damper1.f,0.5);
val(Damper1.f,0.75);
val(Damper1.f,1.0);

"Damper1.v_rel:";
val(Damper1.v_rel,0.0);
val(Damper1.v_rel,0.25);
val(Damper1.v_rel,0.5);
val(Damper1.v_rel,0.75);
val(Damper1.v_rel,1.0);

// Result:
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.Translational.Examples.Oscillator_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.Translational.Examples.Oscillator', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// "SlidingMass1.s:"
// -0.5
// -0.501244980233699
// -0.502402689183955
// -0.503428950021703
// -0.504280675785685
// "SlidingMass1.flange_a.s:"
// -1.0
// -1.0012449802337
// -1.00240268918395
// -1.0034289500217
// -1.00428067578568
// "SlidingMass1.flange_a.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "SlidingMass1.flange_b.s:"
// 0.0
// -0.00124498023369856
// -0.00240268918395467
// -0.0034289500217032
// -0.00428067578568458
// "SlidingMass1.flange_b.f:"
// 0.0
// 12.4498023369845
// 24.0268918395478
// 34.289500217032
// 42.8067578568458
// "SlidingMass1.v:"
// 0.0
// -0.0148013966341283
// -0.0574705526947705
// -0.126271246121922
// -0.220875679299516
// "SlidingMass1.a:"
// 0.0
// 12.3174594473572
// 23.7645342377496
// 33.901743300654
// 42.3004230494928
// "Spring1.flange_a.s:"
// 0.0
// -0.00124498023369856
// -0.00240268918395467
// -0.0034289500217032
// -0.00428067578568458
// "Spring1.flange_a.f:"
// -0.0
// -12.4498023369845
// -24.0268918395478
// -34.289500217032
// -42.8067578568458
// "Spring1.flange_b.f:"
// 0.0
// 12.4498023369845
// 24.0268918395478
// 34.289500217032
// 42.8067578568458
// "Spring1.s_rel:"
// 1.0
// 1.0012449802337
// 1.00240268918395
// 1.0034289500217
// 1.00428067578568
// "Spring1.f:"
// 0.0
// 12.4498023369845
// 24.0268918395478
// 34.289500217032
// 42.8067578568458
// "Fixed1.flange_b.f:"
// -0.0
// -12.4498023369845
// -24.0268918395478
// -34.289500217032
// -42.8067578568458
// "Force1.flange_b.s:"
// -1.0
// -1.0012449802337
// -1.00240268918395
// -1.0034289500217
// -1.00428067578568
// "Force1.flange_b.f:"
// -0.0
// 0.132342889627278
// 0.262357601798263
// 0.387756916378088
// 0.506334807353084
// "Force1.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "Sine1.y:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "SlidingMass2.s:"
// -0.5
// -0.500709045794529
// -0.500880936808292
// -0.500893642029841
// -0.500851606876031
// "SlidingMass2.flange_a.s:"
// -1.0
// -1.00070904579453
// -1.00088093680829
// -1.00089364202984
// -1.00085160687603
// "SlidingMass2.flange_a.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "SlidingMass2.flange_b.s:"
// 0.0
// -0.000709045794528793
// -0.000880936808292033
// -0.000893642029840966
// -0.000851606876030808
// "SlidingMass2.flange_b.f:"
// 0.0
// 7.16756173886875
// 9.02687763233038
// 9.28886230504791
// 8.99488740861997
// "SlidingMass2.v:"
// 0.0
// -0.00771037935819273
// -0.0217509549410052
// -0.0352442006639358
// -0.0478818648312995
// "SlidingMass2.a:"
// 0.0
// 7.03521884924147
// 8.76452003053212
// 8.90110538866982
// 8.48855260126688
// "Spring2.flange_a.s:"
// 0.0
// -0.000709045794528793
// -0.000880936808292033
// -0.000893642029840966
// -0.000851606876030808
// "Spring2.flange_a.f:"
// -0.0
// -7.09045794528682
// -8.80936808292033
// -8.93642029840855
// -8.51606876030697
// "Spring2.flange_b.f:"
// 0.0
// 7.09045794528682
// 8.80936808292033
// 8.93642029840855
// 8.51606876030697
// "Spring2.s_rel:"
// 1.0
// 1.00070904579453
// 1.00088093680829
// 1.00089364202984
// 1.00085160687603
// "Spring2.f:"
// 0.0
// 7.09045794528682
// 8.80936808292033
// 8.93642029840855
// 8.51606876030697
// "Fixed2.flange_b.f:"
// 0.0
// -7.16756173886875
// -9.02687763233038
// -9.28886230504791
// -8.99488740861997
// "Force2.flange_b.s:"
// -1.0
// -1.00070904579453
// -1.00088093680829
// -1.00089364202984
// -1.00085160687603
// "Force2.flange_b.f:"
// -0.0
// 0.132342889627278
// 0.262357601798263
// 0.387756916378088
// 0.506334807353084
// "Force2.f:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "Sine2.y:"
// 0.0
// -0.132342889627278
// -0.262357601798263
// -0.387756916378088
// -0.506334807353084
// "Damper1.flange_a.s:"
// 0.0
// -0.000709045794528793
// -0.000880936808292033
// -0.000893642029840966
// -0.000851606876030808
// "Damper1.flange_a.f:"
// 0.0
// -0.0771037935819273
// -0.217509549410052
// -0.352442006639358
// -0.478818648312995
// "Damper1.flange_b.f:"
// -0.0
// 0.0771037935819273
// 0.217509549410052
// 0.352442006639358
// 0.478818648312995
// "Damper1.s_rel:"
// 1.0
// 1.00070904579453
// 1.00088093680829
// 1.00089364202984
// 1.00085160687603
// "Damper1.f:"
// -0.0
// 0.0771037935819273
// 0.217509549410052
// 0.352442006639358
// 0.478818648312995
// "Damper1.v_rel:"
// -0.0
// 0.00771037935819273
// 0.0217509549410052
// 0.0352442006639358
// 0.0478818648312995
// endResult
