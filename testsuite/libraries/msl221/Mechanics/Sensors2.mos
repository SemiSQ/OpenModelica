//name:         Sensors2
//keyword:      simulating msl221
//status:       correct
//env: OPENMODELICALIBRARY=../../../../libraries/msl221
//teardown_command: rm -f Modelica.Mechanics.*
//
// simulation example
//

loadModel(Modelica);
simulate(Modelica.Mechanics.Translational.Examples.Sensors,numberOfIntervals=500,tolerance=0.0001,startTime=0,stopTime=1);

"ForceSensor1.flange_a.s:";
val(ForceSensor1.flange_a.s,0.0);
val(ForceSensor1.flange_a.s,0.25);
val(ForceSensor1.flange_a.s,0.5);
val(ForceSensor1.flange_a.s,0.75);
val(ForceSensor1.flange_a.s,1.0);

"ForceSensor1.flange_a.f:";
val(ForceSensor1.flange_a.f,0.0);
val(ForceSensor1.flange_a.f,0.25);
val(ForceSensor1.flange_a.f,0.5);
val(ForceSensor1.flange_a.f,0.75);
val(ForceSensor1.flange_a.f,1.0);

"ForceSensor1.flange_b.s:";
val(ForceSensor1.flange_b.s,0.0);
val(ForceSensor1.flange_b.s,0.25);
val(ForceSensor1.flange_b.s,0.5);
val(ForceSensor1.flange_b.s,0.75);
val(ForceSensor1.flange_b.s,1.0);

"ForceSensor1.flange_b.f:";
val(ForceSensor1.flange_b.f,0.0);
val(ForceSensor1.flange_b.f,0.25);
val(ForceSensor1.flange_b.f,0.5);
val(ForceSensor1.flange_b.f,0.75);
val(ForceSensor1.flange_b.f,1.0);

"ForceSensor1.f:";
val(ForceSensor1.f,0.0);
val(ForceSensor1.f,0.25);
val(ForceSensor1.f,0.5);
val(ForceSensor1.f,0.75);
val(ForceSensor1.f,1.0);

"SpeedSensor1.flange_a.s:";
val(SpeedSensor1.flange_a.s,0.0);
val(SpeedSensor1.flange_a.s,0.25);
val(SpeedSensor1.flange_a.s,0.5);
val(SpeedSensor1.flange_a.s,0.75);
val(SpeedSensor1.flange_a.s,1.0);

"SpeedSensor1.s:";
val(SpeedSensor1.s,0.0);
val(SpeedSensor1.s,0.25);
val(SpeedSensor1.s,0.5);
val(SpeedSensor1.s,0.75);
val(SpeedSensor1.s,1.0);

"SpeedSensor1.v:";
val(SpeedSensor1.v,0.0);
val(SpeedSensor1.v,0.25);
val(SpeedSensor1.v,0.5);
val(SpeedSensor1.v,0.75);
val(SpeedSensor1.v,1.0);

"PositionSensor1.flange_a.s:";
val(PositionSensor1.flange_a.s,0.0);
val(PositionSensor1.flange_a.s,0.25);
val(PositionSensor1.flange_a.s,0.5);
val(PositionSensor1.flange_a.s,0.75);
val(PositionSensor1.flange_a.s,1.0);

"PositionSensor1.s:";
val(PositionSensor1.s,0.0);
val(PositionSensor1.s,0.25);
val(PositionSensor1.s,0.5);
val(PositionSensor1.s,0.75);
val(PositionSensor1.s,1.0);

"AccSensor1.flange_a.s:";
val(AccSensor1.flange_a.s,0.0);
val(AccSensor1.flange_a.s,0.25);
val(AccSensor1.flange_a.s,0.5);
val(AccSensor1.flange_a.s,0.75);
val(AccSensor1.flange_a.s,1.0);

"AccSensor1.v:";
val(AccSensor1.v,0.0);
val(AccSensor1.v,0.25);
val(AccSensor1.v,0.5);
val(AccSensor1.v,0.75);
val(AccSensor1.v,1.0);

"AccSensor1.a:";
val(AccSensor1.a,0.0);
val(AccSensor1.a,0.25);
val(AccSensor1.a,0.5);
val(AccSensor1.a,0.75);
val(AccSensor1.a,1.0);

"SlidingMass1.s:";
val(SlidingMass1.s,0.0);
val(SlidingMass1.s,0.25);
val(SlidingMass1.s,0.5);
val(SlidingMass1.s,0.75);
val(SlidingMass1.s,1.0);

"SlidingMass1.flange_a.s:";
val(SlidingMass1.flange_a.s,0.0);
val(SlidingMass1.flange_a.s,0.25);
val(SlidingMass1.flange_a.s,0.5);
val(SlidingMass1.flange_a.s,0.75);
val(SlidingMass1.flange_a.s,1.0);

"SlidingMass1.flange_a.f:";
val(SlidingMass1.flange_a.f,0.0);
val(SlidingMass1.flange_a.f,0.25);
val(SlidingMass1.flange_a.f,0.5);
val(SlidingMass1.flange_a.f,0.75);
val(SlidingMass1.flange_a.f,1.0);

"SlidingMass1.flange_b.s:";
val(SlidingMass1.flange_b.s,0.0);
val(SlidingMass1.flange_b.s,0.25);
val(SlidingMass1.flange_b.s,0.5);
val(SlidingMass1.flange_b.s,0.75);
val(SlidingMass1.flange_b.s,1.0);

"SlidingMass1.v:";
val(SlidingMass1.v,0.0);
val(SlidingMass1.v,0.25);
val(SlidingMass1.v,0.5);
val(SlidingMass1.v,0.75);
val(SlidingMass1.v,1.0);

"SlidingMass1.a:";
val(SlidingMass1.a,0.0);
val(SlidingMass1.a,0.25);
val(SlidingMass1.a,0.5);
val(SlidingMass1.a,0.75);
val(SlidingMass1.a,1.0);

"Force1.flange_b.s:";
val(Force1.flange_b.s,0.0);
val(Force1.flange_b.s,0.25);
val(Force1.flange_b.s,0.5);
val(Force1.flange_b.s,0.75);
val(Force1.flange_b.s,1.0);

"Force1.flange_b.f:";
val(Force1.flange_b.f,0.0);
val(Force1.flange_b.f,0.25);
val(Force1.flange_b.f,0.5);
val(Force1.flange_b.f,0.75);
val(Force1.flange_b.f,1.0);

"Force1.f:";
val(Force1.f,0.0);
val(Force1.f,0.25);
val(Force1.f,0.5);
val(Force1.f,0.75);
val(Force1.f,1.0);

"Sine1.y:";
val(Sine1.y,0.0);
val(Sine1.y,0.25);
val(Sine1.y,0.5);
val(Sine1.y,0.75);
val(Sine1.y,1.0);

"PositionSensor2.flange_a.s:";
val(PositionSensor2.flange_a.s,0.0);
val(PositionSensor2.flange_a.s,0.25);
val(PositionSensor2.flange_a.s,0.5);
val(PositionSensor2.flange_a.s,0.75);
val(PositionSensor2.flange_a.s,1.0);

"PositionSensor2.s:";
val(PositionSensor2.s,0.0);
val(PositionSensor2.s,0.25);
val(PositionSensor2.s,0.5);
val(PositionSensor2.s,0.75);
val(PositionSensor2.s,1.0);

// Result:
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.Translational.Examples.Sensors_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.0001, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.Translational.Examples.Sensors', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*'",
//     messages = ""
// end SimulationResult;
// "ForceSensor1.flange_a.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "ForceSensor1.flange_a.f:"
// 0.0
// 2.17603712826531e-14
// 7.1276318180935e-14
// 1.01918473660589e-13
// 1.32311372758841e-13
// "ForceSensor1.flange_b.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "ForceSensor1.flange_b.f:"
// -0.0
// -2.17603712826531e-14
// -7.1276318180935e-14
// -1.01918473660589e-13
// -1.32311372758841e-13
// "ForceSensor1.f:"
// 0.0
// 2.17603712826531e-14
// 7.1276318180935e-14
// 1.01918473660589e-13
// 1.32311372758841e-13
// "SpeedSensor1.flange_a.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "SpeedSensor1.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "SpeedSensor1.v:"
// 0.0
// 9.1302409105827e-05
// 1.9800948510888e-05
// -2.82215978211737e-05
// -2.685334477612e-05
// "PositionSensor1.flange_a.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "PositionSensor1.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "AccSensor1.flange_a.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "AccSensor1.v:"
// 0.0
// 9.1302409105827e-05
// 1.9800948510888e-05
// -2.82215978211737e-05
// -2.685334477612e-05
// "AccSensor1.a:"
// 0.0
// 0.00204940027005729
// 0.00383272486199948
// 0.00278108183464693
// 0.0025755634642866
// "SlidingMass1.s:"
// 0.0
// 0.0994919591883925
// 0.199001934490564
// 0.298477589215233
// 0.397949365387151
// "SlidingMass1.flange_a.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "SlidingMass1.flange_a.f:"
// 0.0
// 2.17603712826531e-14
// 7.1276318180935e-14
// 1.01918473660589e-13
// 1.32311372758841e-13
// "SlidingMass1.flange_b.s:"
// 0.5
// 0.599491959188392
// 0.699001934490564
// 0.798477589215233
// 0.897949365387151
// "SlidingMass1.v:"
// 0.0
// 4.09602789695254e-05
// 0.000170795295207228
// -8.71383210486691e-05
// -8.32643907648352e-05
// "SlidingMass1.a:"
// 0.0
// 2.17603712826531e-14
// 7.1276318180935e-14
// 1.01918473660589e-13
// 1.32311372758841e-13
// "Force1.flange_b.s:"
// -0.5
// -0.400508040811608
// -0.300998065509436
// -0.201522410784767
// -0.102050634612849
// "Force1.flange_b.f:"
// -0.0
// -2.17603712826531e-14
// -7.1276318180935e-14
// -1.01918473660589e-13
// -1.32311372758841e-13
// "Force1.f:"
// 0.0
// 2.17603712826531e-14
// 7.1276318180935e-14
// 1.01918473660589e-13
// 1.32311372758841e-13
// "Sine1.y:"
// 0.0
// 2.17603712826531e-14
// 7.1276318180935e-14
// 1.01918473660589e-13
// 1.32311372758841e-13
// "PositionSensor2.flange_a.s:"
// 0.5
// 0.599491959188392
// 0.699001934490564
// 0.798477589215233
// 0.897949365387151
// "PositionSensor2.s:"
// 0.5
// 0.599491959188392
// 0.699001934490564
// 0.798477589215233
// 0.897949365387151
// endResult
