// name:     OneWayRectifierBG 
// keywords: instantiate, bondlib
// cflags:   +std=2.x
// status:   correct
// 
//  simulate OneWayRectifierBG BondLib Spice example
//

loadFile("OneWayRectifierBGTotal.mo");
instantiateModel(BondLib_Examples_ModelicaSpice_OneWayRectifierBG);
getErrorString();

// Result:
// true
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\");
// 
//   external \"C\" y = asin(u);
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\");
//   output Real y;
// 
//   external \"C\" y = sin(u);
// end Modelica.Math.sin;
// 
// class BondLib_Examples_ModelicaSpice_OneWayRectifierBG
//   output Real vout(quantity = \"ElectricPotential\", unit = \"V\") \"Output voltage\";
//   Real V0.e \"Bondgraphic effort\";
//   Real V0.f \"Bondgraphic flow\";
//   Real V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real V0.BondCon1.d \"Directional variable\";
//   parameter Real V0.e0 = 10.0 \"Amplitude of sine wave\";
//   parameter Real V0.phase(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\") = 0.0 \"Phase of sine wave\";
//   parameter Real V0.freqHz(quantity = \"Frequency\", unit = \"Hz\") = 1000.0 \"Frequency of sine wave\";
//   parameter Real V0.offset = 0.0 \"Offset of sine wave\";
//   parameter Real V0.startTime(quantity = \"Time\", unit = \"s\") = 0.0 \"Start time of sine wave\";
//   output Real V0.Sine1.y \"Connector of Real output signal\";
//   parameter Real V0.Sine1.amplitude = V0.e0 \"Amplitude of sine wave\";
//   parameter Real V0.Sine1.freqHz(quantity = \"Frequency\", unit = \"Hz\") = V0.freqHz \"Frequency of sine wave\";
//   parameter Real V0.Sine1.phase(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\") = V0.phase \"Phase of sine wave\";
//   parameter Real V0.Sine1.offset = V0.offset \"Offset of output signal\";
//   parameter Real V0.Sine1.startTime(quantity = \"Time\", unit = \"s\") = V0.startTime \"Output = offset for time < startTime\";
//   protected constant Real V0.Sine1.pi = 3.14159265358979;
//   input Real B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B1.eBondCon1.d \"Direction variable\";
//   output Real B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B1.fBondCon1.d \"Direction variable\";
//   Real J1p4_1.e[1] \"Bondgraphic effort vector\";
//   Real J1p4_1.e[2] \"Bondgraphic effort vector\";
//   Real J1p4_1.e[3] \"Bondgraphic effort vector\";
//   Real J1p4_1.e[4] \"Bondgraphic effort vector\";
//   Real J1p4_1.f[1] \"Bondgraphic flow vector\";
//   Real J1p4_1.f[2] \"Bondgraphic flow vector\";
//   Real J1p4_1.f[3] \"Bondgraphic flow vector\";
//   Real J1p4_1.f[4] \"Bondgraphic flow vector\";
//   Real J1p4_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real J1p4_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real J1p4_1.BondCon1.d \"Directional variable\";
//   Real J1p4_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real J1p4_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real J1p4_1.BondCon2.d \"Directional variable\";
//   Real J1p4_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real J1p4_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real J1p4_1.BondCon3.d \"Directional variable\";
//   Real J1p4_1.BondCon4.e \"Bondgraphic effort variable\";
//   Real J1p4_1.BondCon4.f \"Bondgraphic flow variable\";
//   Real J1p4_1.BondCon4.d \"Directional variable\";
//   output Real B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B6.fBondCon1.d \"Direction variable\";
//   input Real B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B6.eBondCon1.d \"Direction variable\";
//   Real J0p4_1.e[1] \"Bondgraphic effort vector\";
//   Real J0p4_1.e[2] \"Bondgraphic effort vector\";
//   Real J0p4_1.e[3] \"Bondgraphic effort vector\";
//   Real J0p4_1.e[4] \"Bondgraphic effort vector\";
//   Real J0p4_1.f[1] \"Bondgraphic flow vector\";
//   Real J0p4_1.f[2] \"Bondgraphic flow vector\";
//   Real J0p4_1.f[3] \"Bondgraphic flow vector\";
//   Real J0p4_1.f[4] \"Bondgraphic flow vector\";
//   Real J0p4_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real J0p4_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real J0p4_1.BondCon1.d \"Directional variable\";
//   Real J0p4_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real J0p4_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real J0p4_1.BondCon2.d \"Directional variable\";
//   Real J0p4_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real J0p4_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real J0p4_1.BondCon3.d \"Directional variable\";
//   Real J0p4_1.BondCon4.e \"Bondgraphic effort variable\";
//   Real J0p4_1.BondCon4.f \"Bondgraphic flow variable\";
//   Real J0p4_1.BondCon4.d \"Directional variable\";
//   input Real B11.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B11.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B11.eBondCon1.d \"Direction variable\";
//   output Real B11.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B11.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B11.fBondCon1.d \"Direction variable\";
//   Real Vout.e \"Bondgraphic effort\";
//   Real Vout.f \"Bondgraphic flow\";
//   Real Vout.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vout.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vout.BondCon1.d \"Directional variable\";
//   output Real Vout.OutPort1 \"Connector of Real output signal\";
//   Real J0p5_1.e[1] \"Bondgraphic effort vector\";
//   Real J0p5_1.e[2] \"Bondgraphic effort vector\";
//   Real J0p5_1.e[3] \"Bondgraphic effort vector\";
//   Real J0p5_1.e[4] \"Bondgraphic effort vector\";
//   Real J0p5_1.e[5] \"Bondgraphic effort vector\";
//   Real J0p5_1.f[1] \"Bondgraphic flow vector\";
//   Real J0p5_1.f[2] \"Bondgraphic flow vector\";
//   Real J0p5_1.f[3] \"Bondgraphic flow vector\";
//   Real J0p5_1.f[4] \"Bondgraphic flow vector\";
//   Real J0p5_1.f[5] \"Bondgraphic flow vector\";
//   Real J0p5_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real J0p5_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real J0p5_1.BondCon1.d \"Directional variable\";
//   Real J0p5_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real J0p5_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real J0p5_1.BondCon2.d \"Directional variable\";
//   Real J0p5_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real J0p5_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real J0p5_1.BondCon3.d \"Directional variable\";
//   Real J0p5_1.BondCon4.e \"Bondgraphic effort variable\";
//   Real J0p5_1.BondCon4.f \"Bondgraphic flow variable\";
//   Real J0p5_1.BondCon4.d \"Directional variable\";
//   Real J0p5_1.BondCon5.e \"Bondgraphic effort variable\";
//   Real J0p5_1.BondCon5.f \"Bondgraphic flow variable\";
//   Real J0p5_1.BondCon5.d \"Directional variable\";
//   input Real B12.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B12.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B12.eBondCon1.d \"Direction variable\";
//   output Real B12.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B12.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B12.fBondCon1.d \"Direction variable\";
//   Real Tdev.e \"Bondgraphic effort\";
//   Real Tdev.f \"Bondgraphic flow\";
//   Real Tdev.BondCon1.e \"Bondgraphic effort variable\";
//   Real Tdev.BondCon1.f \"Bondgraphic flow variable\";
//   Real Tdev.BondCon1.d \"Directional variable\";
//   parameter Real Tdev.e0 = 300.15 \"Bondgraphic Effort Source\";
//   output Real B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B3.fBondCon1.d \"Direction variable\";
//   input Real B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B3.eBondCon1.d \"Direction variable\";
//   output Real B8.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B8.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B8.fBondCon1.d \"Direction variable\";
//   input Real B8.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B8.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B8.eBondCon1.d \"Direction variable\";
//   Real DS1.e1 \"Bondgraphic primary effort\";
//   Real DS1.f1 \"Bondgraphic primary flow\";
//   Real DS1.e2 \"Bondgraphic secondary effort\";
//   Real DS1.f2 \"Bondgraphic secondary flow\";
//   Real DS1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.BondCon1.d \"Directional variable\";
//   Real DS1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.BondCon2.d \"Directional variable\";
//   constant Real DS1.inf = 1e+60;
//   constant Real DS1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real DS1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   parameter Real DS1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   parameter Integer DS1.Level(min = 1, max = 3) = 1 \"DIODE modeling level (check documentation window for details)\";
//   parameter Real DS1.Area(min = 1e-60) = 1.0 \"Relative device area\";
//   parameter Real DS1.TOX(quantity = \"Length\", unit = \"m\", min = 1e-60) = 1e-07 \"Thin oxide thickness\";
//   parameter Real DS1.PB(quantity = \"ElectricPotential\", unit = \"V\", min = 0.0) = 0.75 \"Built-in junction potential at reference temperature\";
//   parameter Real DS1.BV(quantity = \"ElectricPotential\", unit = \"V\", min = 0.0) = 0.0 \"Reverse breakdown voltage at reference temperature\";
//   parameter Real DS1.IBV(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 0.0 \"Reverse breakdown current\";
//   parameter Real DS1.PHP(quantity = \"ElectricPotential\", unit = \"V\", min = 0.0) = 0.75 \"Built-in perimeter potential at reference temperature\";
//   parameter Real DS1.N = 1.0 \"Current emission coefficient\";
//   parameter Real DS1.IS(quantity = \"ElectricCurrent\", unit = \"A\", min = 1e-60) = 1e-14 \"Saturation current at reference temperature\";
//   parameter Real DS1.ISW(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 0.0 \"Saturation current of perimeter at reference temperature\";
//   parameter Real DS1.PJ(min = 0.0) = 1.0 \"Relative perimeter width\";
//   parameter Real DS1.RS(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 5.0 \"Resistance at reference temperature\";
//   parameter Real DS1.CJ(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = 5e-13 \"Zero-bias bulk capacitance at reference temperature\";
//   parameter Real DS1.MJ(min = 0.1, max = 0.9) = 0.33 \"Bulk junction grading coefficient\";
//   parameter Real DS1.CJSW(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = 0.0 \"Zero-bias perimeter capacitance at reference temperature\";
//   parameter Real DS1.MJSW(min = 0.1, max = 0.9) = 0.33 \"Perimeter capacitance grading coefficient\";
//   parameter Real DS1.FC(min = 0.0, max = 0.95) = 0.5 \"Forward-bias depletion capacitance coefficient\";
//   parameter Real DS1.TT(quantity = \"Time\", unit = \"s\", min = 0.0) = 1e-09 \"Transit time at reference temperature\";
//   parameter Real DS1.TRS(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of resistance\";
//   parameter Real DS1.TCV(unit = \"V/K\") = 0.0 \"Linear temperature coefficient of breakdown voltage\";
//   parameter Real DS1.TTT1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient of transit time\";
//   parameter Real DS1.TTT2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient of transit time\";
//   parameter Real DS1.XTI(min = 0.0) = 3.0 \"Saturation current temperature exponent\";
//   parameter Real DS1.EG(quantity = \"ElectricPotential\", unit = \"V\", min = 0.1) = 1.11 \"Energy gap at 0K (EG=1.11: Si, EG=0.73: Schottky barrier diode, EG=0.71: Ge)\";
//   parameter Integer DS1.M(min = 1) = 1 \"Diode multiplier\";
//   parameter Real DS1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Diode length\";
//   parameter Real DS1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Diode width\";
//   parameter Real DS1.JF(unit = \"A/V2\", min = 0.0) = 0.0 \"Forward Fowler-Nordheim current coefficient\";
//   parameter Real DS1.JR(unit = \"A/V2\", min = 0.0) = 0.0 \"Reverse Fowler-Nordheim current coefficient\";
//   parameter Real DS1.EF(quantity = \"ElectricFieldStrength\", unit = \"V/m\", min = 0.0) = 0.0 \"Forward Fowler-Nordheim critical electrical field\";
//   parameter Real DS1.ER(quantity = \"ElectricFieldStrength\", unit = \"V/m\", min = 0.0) = 0.0 \"Reverse Fowler-Nordheim critical electrical field\";
//   parameter Real DS1.LP(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Polysilicon length\";
//   parameter Real DS1.WP(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Polysilicon width\";
//   parameter Real DS1.XP(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Widening of polysilicon due to masking and etching\";
//   parameter Real DS1.XOI(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Polysilicon thickness\";
//   parameter Real DS1.LM(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Metal length\";
//   parameter Real DS1.WM(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Metal width\";
//   parameter Real DS1.XM(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Widening of metal due to masking and etching\";
//   parameter Real DS1.XOM(quantity = \"Length\", unit = \"m\", min = 0.0) = 0.0 \"Metal thickness\";
//   parameter Real DS1.JS(quantity = \"CurrentDensity\", unit = \"A/m2\", min = 1e-60) = 0.0001 \"Saturation current density at reference temperature\";
//   parameter Real DS1.JSW(unit = \"A/m\", min = 0.0) = 0.0 \"Saturation current density of perimeter at reference temperature\";
//   parameter Real DS1.CJ2(unit = \"F/m2\", min = 1e-60) = 0.0001 \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real DS1.CJSW2(unit = \"F/m\", min = 0.0) = 1e-09 \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real DS1.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real DS1.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real DS1.GminDC(quantity = \"Conductance\", unit = \"S\", min = 1e-60) = 1e-16 \"Leakage conductance\";
//   protected parameter Real DS1.ISeff(quantity = \"ElectricCurrent\", unit = \"A\") = if DS1.Level == 1 then DS1.Area * DS1.IS + DS1.PJ * DS1.ISW else if DS1.Level == 3 then DS1.AREAeff * DS1.JS + DS1.PJeff * DS1.JSW else 0.0;
//   protected parameter Real DS1.IBVval(quantity = \"ElectricCurrent\", unit = \"A\") = if DS1.IBV < DS1.Ibreak then DS1.Ibreak else DS1.IBV;
//   protected parameter Real DS1.BVval(quantity = \"ElectricPotential\", unit = \"V\") = if DS1.BV > 0.0 then DS1.BVval - DS1.N * (DS1.Vt * log(DS1.IBVval / DS1.Ibreak)) else 0.0;
//   Real DS1.J0p2_1.e1 \"Bondgraphic primary effort\";
//   Real DS1.J0p2_1.f1 \"Bondgraphic primary flow\";
//   Real DS1.J0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real DS1.J0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real DS1.J0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.J0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.J0p2_1.BondCon1.d \"Directional variable\";
//   Real DS1.J0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.J0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.J0p2_1.BondCon2.d \"Directional variable\";
//   Real DS1.J0p5_1.e[1] \"Bondgraphic effort vector\";
//   Real DS1.J0p5_1.e[2] \"Bondgraphic effort vector\";
//   Real DS1.J0p5_1.e[3] \"Bondgraphic effort vector\";
//   Real DS1.J0p5_1.e[4] \"Bondgraphic effort vector\";
//   Real DS1.J0p5_1.e[5] \"Bondgraphic effort vector\";
//   Real DS1.J0p5_1.f[1] \"Bondgraphic flow vector\";
//   Real DS1.J0p5_1.f[2] \"Bondgraphic flow vector\";
//   Real DS1.J0p5_1.f[3] \"Bondgraphic flow vector\";
//   Real DS1.J0p5_1.f[4] \"Bondgraphic flow vector\";
//   Real DS1.J0p5_1.f[5] \"Bondgraphic flow vector\";
//   Real DS1.J0p5_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.J0p5_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.J0p5_1.BondCon1.d \"Directional variable\";
//   Real DS1.J0p5_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.J0p5_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.J0p5_1.BondCon2.d \"Directional variable\";
//   Real DS1.J0p5_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real DS1.J0p5_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real DS1.J0p5_1.BondCon3.d \"Directional variable\";
//   Real DS1.J0p5_1.BondCon4.e \"Bondgraphic effort variable\";
//   Real DS1.J0p5_1.BondCon4.f \"Bondgraphic flow variable\";
//   Real DS1.J0p5_1.BondCon4.d \"Directional variable\";
//   Real DS1.J0p5_1.BondCon5.e \"Bondgraphic effort variable\";
//   Real DS1.J0p5_1.BondCon5.f \"Bondgraphic flow variable\";
//   Real DS1.J0p5_1.BondCon5.d \"Directional variable\";
//   Real DS1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.B1.BondCon1.d \"Directional variable\";
//   Real DS1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.B1.BondCon2.d \"Directional variable\";
//   Real DS1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real DS1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real DS1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real DS1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real DS1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real DS1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real DS1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real DS1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real DS1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real DS1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real DS1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real DS1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.B2.BondCon1.d \"Directional variable\";
//   Real DS1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.B2.BondCon2.d \"Directional variable\";
//   Real DS1.J0p4_1.e[1] \"Bondgraphic effort vector\";
//   Real DS1.J0p4_1.e[2] \"Bondgraphic effort vector\";
//   Real DS1.J0p4_1.e[3] \"Bondgraphic effort vector\";
//   Real DS1.J0p4_1.e[4] \"Bondgraphic effort vector\";
//   Real DS1.J0p4_1.f[1] \"Bondgraphic flow vector\";
//   Real DS1.J0p4_1.f[2] \"Bondgraphic flow vector\";
//   Real DS1.J0p4_1.f[3] \"Bondgraphic flow vector\";
//   Real DS1.J0p4_1.f[4] \"Bondgraphic flow vector\";
//   Real DS1.J0p4_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.J0p4_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.J0p4_1.BondCon1.d \"Directional variable\";
//   Real DS1.J0p4_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.J0p4_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.J0p4_1.BondCon2.d \"Directional variable\";
//   Real DS1.J0p4_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real DS1.J0p4_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real DS1.J0p4_1.BondCon3.d \"Directional variable\";
//   Real DS1.J0p4_1.BondCon4.e \"Bondgraphic effort variable\";
//   Real DS1.J0p4_1.BondCon4.f \"Bondgraphic flow variable\";
//   Real DS1.J0p4_1.BondCon4.d \"Directional variable\";
//   input Real DS1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B4.eBondCon1.d \"Direction variable\";
//   output Real DS1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B4.fBondCon1.d \"Direction variable\";
//   output Real DS1.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B3.fBondCon1.d \"Direction variable\";
//   input Real DS1.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B3.eBondCon1.d \"Direction variable\";
//   Real DS1.B5.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.B5.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.B5.BondCon1.d \"Directional variable\";
//   Real DS1.B5.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.B5.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.B5.BondCon2.d \"Directional variable\";
//   output Real DS1.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B6.fBondCon1.d \"Direction variable\";
//   input Real DS1.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B6.eBondCon1.d \"Direction variable\";
//   Real DS1.B7.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.B7.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.B7.BondCon1.d \"Directional variable\";
//   Real DS1.B7.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.B7.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.B7.BondCon2.d \"Directional variable\";
//   output Real DS1.B8.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.B8.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B8.fBondCon1.d \"Direction variable\";
//   input Real DS1.B8.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.B8.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B8.eBondCon1.d \"Direction variable\";
//   parameter Real DS1.Gain1.k = -1.0 \"Gain value multiplied with input signal\";
//   input Real DS1.Gain1.u \"Input signal connector\";
//   output Real DS1.Gain1.y \"Output signal connector\";
//   input Real DS1.B9.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.B9.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B9.eBondCon1.d \"Direction variable\";
//   output Real DS1.B9.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.B9.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B9.fBondCon1.d \"Direction variable\";
//   Real DS1.Tdev.e \"Bondgraphic effort\";
//   Real DS1.Tdev.f \"Bondgraphic flow\";
//   Real DS1.Tdev.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.Tdev.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.Tdev.BondCon1.d \"Directional variable\";
//   output Real DS1.Tdev.OutPort1 \"Connector of Real output signal\";
//   input Real DS1.B10.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.B10.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B10.eBondCon1.d \"Direction variable\";
//   output Real DS1.B10.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.B10.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.B10.fBondCon1.d \"Direction variable\";
//   Real DS1.vd.e \"Bondgraphic effort\";
//   Real DS1.vd.f \"Bondgraphic flow\";
//   Real DS1.vd.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.vd.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.vd.BondCon1.d \"Directional variable\";
//   output Real DS1.vd.OutPort1 \"Connector of Real output signal\";
//   Real DS1.mSf_int1.e1 \"Bondgraphic primary effort\";
//   Real DS1.mSf_int1.f1 \"Bondgraphic primary flow\";
//   Real DS1.mSf_int1.e2 \"Bondgraphic secondary effort\";
//   Real DS1.mSf_int1.f2 \"Bondgraphic secondary flow\";
//   Real DS1.mSf_int1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.mSf_int1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.mSf_int1.BondCon1.d \"Directional variable\";
//   Real DS1.mSf_int1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.mSf_int1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.mSf_int1.BondCon2.d \"Directional variable\";
//   input Real DS1.mSf_int1.s \"Signal input\";
//   Real DS1.mSf_int1.f0 \"Bondgraphic Flow Source\";
//   parameter Real DS1.IKF(quantity = \"ElectricCurrent\", unit = \"A\", min = 1e-60) = 1e+60 \"Forward knee current\";
//   parameter Real DS1.IKR(quantity = \"ElectricCurrent\", unit = \"A\", min = 1e-60) = 1e+60 \"Reverse knee current\";
//   protected parameter Real DS1.Vt(quantity = \"ElectricPotential\", unit = \"V\") = 8.61727503842867e-05 * DS1.Tnom;
//   Real DS1.RS1.e1 \"Bondgraphic primary effort\";
//   Real DS1.RS1.f1 \"Bondgraphic primary flow\";
//   Real DS1.RS1.e2 \"Bondgraphic secondary effort\";
//   Real DS1.RS1.f2 \"Bondgraphic secondary flow\";
//   Real DS1.RS1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.RS1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.RS1.BondCon1.d \"Directional variable\";
//   Real DS1.RS1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.RS1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.RS1.BondCon2.d \"Directional variable\";
//   parameter Real DS1.RS1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = DS1.Tnom \"Reference temperature\";
//   Real DS1.RS1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real DS1.RS1.DTempSq \"Square of DTemp\";
//   parameter Real DS1.RS1.R(quantity = \"Resistance\", unit = \"Ohm\") = DS1.RS \"Resistance at reference temperature\";
//   parameter Real DS1.RS1.TR1(unit = \"1/K\") = DS1.TRS \"Linear temperature coefficient\";
//   parameter Real DS1.RS1.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real DS1.RS1.Area = DS1.Area \"Relative area occupied by resistor\";
//   Real DS1.RS1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   protected parameter Real DS1.AREAeff(quantity = \"Area\", unit = \"m2\") = DS1.W * (DS1.L * Real(DS1.M));
//   protected parameter Real DS1.PJeff(quantity = \"Length\", unit = \"m\") = 2.0 * ((DS1.W + DS1.L) * Real(DS1.M));
//   Real DS1.CjD1.e1 \"Bondgraphic primary effort\";
//   Real DS1.CjD1.f1 \"Bondgraphic primary flow\";
//   Real DS1.CjD1.e2 \"Bondgraphic secondary effort\";
//   Real DS1.CjD1.f2 \"Bondgraphic secondary flow\";
//   Real DS1.CjD1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.BondCon1.d \"Directional variable\";
//   Real DS1.CjD1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.BondCon2.d \"Directional variable\";
//   parameter Integer DS1.CjD1.Level = DS1.Level \"DIODE modeling level (check documentation window for details)\";
//   parameter Real DS1.CjD1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = DS1.Tnom \"Reference temperature\";
//   parameter Real DS1.CjD1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.IS \"Saturation current at reference temperature\";
//   parameter Real DS1.CjD1.N = DS1.N \"Current emission coefficient\";
//   parameter Real DS1.CjD1.TT(quantity = \"Time\", unit = \"s\") = DS1.TT \"Transit time at reference temperature\";
//   parameter Real DS1.CjD1.CJ(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = DS1.CJ \"Zero-bias bulk capacitance at reference temperature\";
//   parameter Real DS1.CjD1.PB(quantity = \"ElectricPotential\", unit = \"V\") = DS1.PB \"Built-in junction potential at reference temperature\";
//   parameter Real DS1.CjD1.MJ = DS1.MJ \"Bulk junction grading coefficient\";
//   parameter Real DS1.CjD1.EG(quantity = \"ElectricPotential\", unit = \"V\") = DS1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real DS1.CjD1.XTI = DS1.XTI \"Saturation current temperature exponent\";
//   parameter Real DS1.CjD1.FC = DS1.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real DS1.CjD1.BV(quantity = \"ElectricPotential\", unit = \"V\") = DS1.BVval \"Reverse breakdown voltage at reference temperature\";
//   parameter Real DS1.CjD1.IBV(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.IBVval \"Reverse breakdown current\";
//   parameter Real DS1.CjD1.TCV(unit = \"V/K\") = DS1.TCV \"Temperature coefficient of breakdown voltage\";
//   parameter Real DS1.CjD1.TTT1(unit = \"1/K\") = DS1.TTT1 \"Linear temperature coefficient of transit time\";
//   parameter Real DS1.CjD1.TTT2(unit = \"1/K2\") = DS1.TTT2 \"Quadratic temperature coefficient of transit time\";
//   parameter Real DS1.CjD1.ISW(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.ISW \"Saturation current of periphery at reference temperature\";
//   parameter Real DS1.CjD1.CJSW(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = DS1.CJSW \"Zero-bias perimeter capacitance at reference temperature\";
//   parameter Real DS1.CjD1.PHP(quantity = \"ElectricPotential\", unit = \"V\") = DS1.PHP \"Built-in perimeter potential at reference temperature\";
//   parameter Real DS1.CjD1.MJSW = DS1.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real DS1.CjD1.TOX(quantity = \"Length\", unit = \"m\") = DS1.TOX \"Thin oxide thickness\";
//   parameter Real DS1.CjD1.GminDC(quantity = \"Conductance\", unit = \"S\") = DS1.GminDC \"Leakage conductance\";
//   parameter Real DS1.CjD1.Area = DS1.Area \"Relative device area\";
//   parameter Real DS1.CjD1.PJ = DS1.PJ \"Relative perimeter width\";
//   parameter Real DS1.CjD1.EMin = DS1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real DS1.CjD1.EMax = DS1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real DS1.CjD1.L(quantity = \"Length\", unit = \"m\") = DS1.L \"Diode length\";
//   parameter Real DS1.CjD1.W(quantity = \"Length\", unit = \"m\") = DS1.W \"Diode width\";
//   parameter Integer DS1.CjD1.M = DS1.M \"Diode multiplier\";
//   parameter Real DS1.CjD1.JS(quantity = \"CurrentDensity\", unit = \"A/m2\") = DS1.JS \"Saturation current density at reference temperature\";
//   parameter Real DS1.CjD1.CJ2(unit = \"F/m2\") = DS1.CJ2 \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real DS1.CjD1.JSW(unit = \"A/m\") = DS1.JSW \"Saturation current density of periphery at reference temperature\";
//   parameter Real DS1.CjD1.CJSW2(unit = \"F/m\") = DS1.CJSW2 \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real DS1.CjD1.LP(quantity = \"Length\", unit = \"m\") = DS1.LP \"Polysilicon length\";
//   parameter Real DS1.CjD1.WP(quantity = \"Length\", unit = \"m\") = DS1.WP \"Polysilicon width\";
//   parameter Real DS1.CjD1.XP(quantity = \"Length\", unit = \"m\") = DS1.XP \"Widening of polysilicon due to masking and etching\";
//   parameter Real DS1.CjD1.XOI(quantity = \"Length\", unit = \"m\") = DS1.XOI \"Polysilicon thickness\";
//   parameter Real DS1.CjD1.LM(quantity = \"Length\", unit = \"m\") = DS1.LM \"Metal length\";
//   parameter Real DS1.CjD1.WM(quantity = \"Length\", unit = \"m\") = DS1.WM \"Metal width\";
//   parameter Real DS1.CjD1.XM(quantity = \"Length\", unit = \"m\") = DS1.XM \"Widening of metal due to masking and etching\";
//   parameter Real DS1.CjD1.XOM(quantity = \"Length\", unit = \"m\") = DS1.XOM \"Metal thickness\";
//   parameter Real DS1.CjD1.JF(unit = \"A/V2\") = DS1.JF \"Forward FN current coefficient\";
//   parameter Real DS1.CjD1.JR(unit = \"A/V2\") = DS1.JR \"Reverse FN current coefficient\";
//   parameter Real DS1.CjD1.EF(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = DS1.EF \"Forward critical electrical field\";
//   parameter Real DS1.CjD1.ER(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = DS1.ER \"Reverse critical electrical field\";
//   output Real DS1.CjD1.id(quantity = \"ElectricCurrent\", unit = \"A\") \"Diode current\";
//   Real DS1.CjD1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real DS1.CjD1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real DS1.CjD1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_1.BondCon3.d \"Directional variable\";
//   input Real DS1.CjD1.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B1.eBondCon1.d \"Direction variable\";
//   output Real DS1.CjD1.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B1.fBondCon1.d \"Direction variable\";
//   Real DS1.CjD1.vbi.e \"Bondgraphic effort\";
//   Real DS1.CjD1.vbi.f \"Bondgraphic flow\";
//   Real DS1.CjD1.vbi.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.vbi.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.vbi.BondCon1.d \"Directional variable\";
//   output Real DS1.CjD1.vbi.OutPort1 \"Connector of Real output signal\";
//   Real DS1.CjD1.Vbi.e \"Bondgraphic effort\";
//   Real DS1.CjD1.Vbi.f \"Bondgraphic flow\";
//   Real DS1.CjD1.Vbi.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.Vbi.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.Vbi.BondCon1.d \"Directional variable\";
//   input Real DS1.CjD1.Vbi.s \"Signal input\";
//   Real DS1.CjD1.Vbi.e0 \"Bondgraphic Effort Source\";
//   input Real DS1.CjD1.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B3.eBondCon1.d \"Direction variable\";
//   output Real DS1.CjD1.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B3.fBondCon1.d \"Direction variable\";
//   Real DS1.CjD1.J0p3_2.e[1] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_2.e[2] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_2.e[3] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_2.f[1] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_2.f[2] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_2.f[3] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_2.BondCon1.d \"Directional variable\";
//   Real DS1.CjD1.J0p3_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_2.BondCon2.d \"Directional variable\";
//   Real DS1.CjD1.J0p3_2.BondCon3.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_2.BondCon3.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_2.BondCon3.d \"Directional variable\";
//   input Real DS1.CjD1.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B6.eBondCon1.d \"Direction variable\";
//   output Real DS1.CjD1.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B6.fBondCon1.d \"Direction variable\";
//   input Real DS1.CjD1.B7.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B7.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B7.eBondCon1.d \"Direction variable\";
//   output Real DS1.CjD1.B7.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B7.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B7.fBondCon1.d \"Direction variable\";
//   Real DS1.CjD1.J0p3_3.e[1] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_3.e[2] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_3.e[3] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J0p3_3.f[1] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_3.f[2] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_3.f[3] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J0p3_3.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_3.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_3.BondCon1.d \"Directional variable\";
//   Real DS1.CjD1.J0p3_3.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_3.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_3.BondCon2.d \"Directional variable\";
//   Real DS1.CjD1.J0p3_3.BondCon3.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J0p3_3.BondCon3.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J0p3_3.BondCon3.d \"Directional variable\";
//   Real DS1.CjD1.Cj1.e \"Bondgraphic effort\";
//   Real DS1.CjD1.Cj1.f \"Bondgraphic flow\";
//   Real DS1.CjD1.Cj1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.Cj1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.Cj1.BondCon1.d \"Directional variable\";
//   input Real DS1.CjD1.Cj1.s \"Signal input\";
//   Real DS1.CjD1.Cj1.C \"Bondgraphic Capacitance\";
//   Real DS1.CjD1.Tdev.e \"Bondgraphic effort\";
//   Real DS1.CjD1.Tdev.f \"Bondgraphic flow\";
//   Real DS1.CjD1.Tdev.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.Tdev.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.Tdev.BondCon1.d \"Directional variable\";
//   output Real DS1.CjD1.Tdev.OutPort1 \"Connector of Real output signal\";
//   input Real DS1.CjD1.B8.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B8.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B8.eBondCon1.d \"Direction variable\";
//   output Real DS1.CjD1.B8.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B8.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B8.fBondCon1.d \"Direction variable\";
//   input Real DS1.CjD1.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B5.eBondCon1.d \"Direction variable\";
//   output Real DS1.CjD1.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B5.fBondCon1.d \"Direction variable\";
//   Real DS1.CjD1.id1.e \"Bondgraphic effort\";
//   Real DS1.CjD1.id1.f \"Bondgraphic flow\";
//   Real DS1.CjD1.id1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.id1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.id1.BondCon1.d \"Directional variable\";
//   output Real DS1.CjD1.id1.OutPort1 \"Connector of Real output signal\";
//   output Real DS1.CjD1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B4.fBondCon1.d \"Direction variable\";
//   input Real DS1.CjD1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B4.eBondCon1.d \"Direction variable\";
//   output Real DS1.CjD1.B9.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B9.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B9.fBondCon1.d \"Direction variable\";
//   input Real DS1.CjD1.B9.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B9.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B9.eBondCon1.d \"Direction variable\";
//   Real DS1.CjD1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real DS1.CjD1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real DS1.CjD1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real DS1.CjD1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real DS1.CjD1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.J1p3_1.BondCon3.d \"Directional variable\";
//   output Real DS1.CjD1.B2.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real DS1.CjD1.B2.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B2.fBondCon1.d \"Direction variable\";
//   input Real DS1.CjD1.B2.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real DS1.CjD1.B2.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real DS1.CjD1.B2.eBondCon1.d \"Direction variable\";
//   Real DS1.CjD1.Gj1.e \"Bondgraphic effort\";
//   Real DS1.CjD1.Gj1.f \"Bondgraphic flow\";
//   Real DS1.CjD1.Gj1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.Gj1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.Gj1.BondCon1.d \"Directional variable\";
//   parameter Real DS1.CjD1.Gj1.GminDC(quantity = \"Conductance\", unit = \"S\") = DS1.CjD1.GminDC \"Leakage conductance\";
//   parameter Real DS1.CjD1.Gj1.Area = DS1.CjD1.Area \"Relative area occupied by device\";
//   parameter Integer DS1.CjD1.Gj1.Level = DS1.CjD1.Level \"Transistor modeling level (Ebers-Moll = 1; Gummel-Poon = 2)\";
//   input Real DS1.CjD1.nlC1.u \"Connector of Real input signal\";
//   output Real DS1.CjD1.nlC1.y \"Connector of Real output signal\";
//   constant Real DS1.CjD1.nlC1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real DS1.CjD1.nlC1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real DS1.CjD1.nlC1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real DS1.CjD1.nlC1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real DS1.CjD1.nlC1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real DS1.CjD1.nlC1.kox = 3.9 \"Dielectric constant of SiO2\";
//   parameter Integer DS1.CjD1.nlC1.Level = DS1.CjD1.Level \"DIODE modeling level (check documentation window for details)\";
//   parameter Real DS1.CjD1.nlC1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = DS1.CjD1.Tnom \"Reference temperature\";
//   parameter Real DS1.CjD1.nlC1.Area = DS1.CjD1.Area \"Relative device area\";
//   parameter Real DS1.CjD1.nlC1.PJ = DS1.CjD1.PJ \"Relative perimeter width\";
//   parameter Integer DS1.CjD1.nlC1.M = DS1.CjD1.M \"Diode multiplier\";
//   parameter Real DS1.CjD1.nlC1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.CjD1.IS \"Saturation current at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.JS(quantity = \"CurrentDensity\", unit = \"A/m2\") = DS1.CjD1.JS \"Saturation current density at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.N = DS1.CjD1.N \"Current emission coefficient\";
//   parameter Real DS1.CjD1.nlC1.TT(quantity = \"Time\", unit = \"s\") = DS1.CjD1.TT \"Transit time at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.PB(quantity = \"ElectricPotential\", unit = \"V\") = DS1.CjD1.PB \"Built-in junction potential at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.PHP(quantity = \"ElectricPotential\", unit = \"V\") = DS1.CjD1.PHP \"Built-in perimeter potential at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.CJ(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = DS1.CjD1.CJ \"Zero-bias bulk capacitance at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.CJ2(unit = \"F/m2\") = DS1.CjD1.CJ2 \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.MJ = DS1.CjD1.MJ \"Bulk junction grading coefficient\";
//   parameter Real DS1.CjD1.nlC1.CJSW(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = DS1.CjD1.CJSW \"Zero-bias perimeter capacitance at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.CJSW2(unit = \"F/m\") = DS1.CjD1.CJSW2 \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.MJSW = DS1.CjD1.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real DS1.CjD1.nlC1.FC = DS1.CjD1.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real DS1.CjD1.nlC1.GminDC(quantity = \"Conductance\", unit = \"S\") = DS1.CjD1.GminDC \"Leakage conductance\";
//   parameter Real DS1.CjD1.nlC1.EG(quantity = \"ElectricPotential\", unit = \"V\") = DS1.CjD1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real DS1.CjD1.nlC1.XTI = DS1.CjD1.XTI \"Saturation current temperature exponent\";
//   parameter Real DS1.CjD1.nlC1.TTT1(unit = \"1/K\") = DS1.CjD1.TTT1 \"Linear temperature coefficient of transit time\";
//   parameter Real DS1.CjD1.nlC1.TTT2(unit = \"1/K2\") = DS1.CjD1.TTT2 \"Quadratic temperature coefficient of transit time\";
//   parameter Real DS1.CjD1.nlC1.ISW(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.CjD1.ISW \"Saturation current of periphery at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.JSW(unit = \"A/m\") = DS1.CjD1.JSW \"Saturation current density of periphery at reference temperature\";
//   parameter Real DS1.CjD1.nlC1.TOX(quantity = \"Length\", unit = \"m\") = DS1.CjD1.TOX \"Thin oxide thickness\";
//   parameter Real DS1.CjD1.nlC1.L(quantity = \"Length\", unit = \"m\") = DS1.CjD1.L \"Diode length\";
//   parameter Real DS1.CjD1.nlC1.W(quantity = \"Length\", unit = \"m\") = DS1.CjD1.W \"Diode width\";
//   parameter Real DS1.CjD1.nlC1.LP(quantity = \"Length\", unit = \"m\") = DS1.CjD1.LP \"Polysilicon length\";
//   parameter Real DS1.CjD1.nlC1.WP(quantity = \"Length\", unit = \"m\") = DS1.CjD1.WP \"Polysilicon width\";
//   parameter Real DS1.CjD1.nlC1.XP(quantity = \"Length\", unit = \"m\") = DS1.CjD1.XP \"Widening of polysilicon due to masking and etching\";
//   parameter Real DS1.CjD1.nlC1.XOI(quantity = \"Length\", unit = \"m\") = DS1.CjD1.XOI \"Polysilicon thickness\";
//   parameter Real DS1.CjD1.nlC1.LM(quantity = \"Length\", unit = \"m\") = DS1.CjD1.LM \"Metal length\";
//   parameter Real DS1.CjD1.nlC1.WM(quantity = \"Length\", unit = \"m\") = DS1.CjD1.WM \"Metal width\";
//   parameter Real DS1.CjD1.nlC1.XM(quantity = \"Length\", unit = \"m\") = DS1.CjD1.XM \"Widening of metal due to masking and etching\";
//   parameter Real DS1.CjD1.nlC1.XOM(quantity = \"Length\", unit = \"m\") = DS1.CjD1.XOM \"Metal thickness\";
//   parameter Real DS1.CjD1.nlC1.EMin = DS1.CjD1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real DS1.CjD1.nlC1.EMax = DS1.CjD1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   input Real DS1.CjD1.nlC1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real DS1.CjD1.nlC1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real DS1.CjD1.nlC1.RTemp \"Temperature quotient\";
//   protected Real DS1.CjD1.nlC1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real DS1.CjD1.nlC1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real DS1.CjD1.nlC1.ISeff(quantity = \"ElectricCurrent\", unit = \"A\") \"Effective saturation current\";
//   protected Real DS1.CjD1.nlC1.JSval(quantity = \"CurrentDensity\", unit = \"A/m2\") \"Saturation current density at device temperature\";
//   protected Real DS1.CjD1.nlC1.ISWval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current of periphery at device temperature\";
//   protected Real DS1.CjD1.nlC1.JSWval(unit = \"A/m\") \"Saturation current density of periphery at device temperature\";
//   protected Real DS1.CjD1.nlC1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in junction potential at device temperature\";
//   protected Real DS1.CjD1.nlC1.PHPval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in perimeter potential at device temperature\";
//   protected Real DS1.CjD1.nlC1.CJval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias bulk capacitance at device temperature\";
//   protected Real DS1.CjD1.nlC1.CJ2val(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real DS1.CjD1.nlC1.CJSWval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Zero-bias perimeter capacitance at device temperature\";
//   protected Real DS1.CjD1.nlC1.CJSW2val(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real DS1.CjD1.nlC1.TTval(quantity = \"Time\", unit = \"s\") \"Transit time at device temperature\";
//   protected Real DS1.CjD1.nlC1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real DS1.CjD1.nlC1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real DS1.CjD1.nlC1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real DS1.CjD1.nlC1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real DS1.CjD1.nlC1.Cdiff(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Diffusion capacitance at device temperature\";
//   protected Real DS1.CjD1.nlC1.Cbulk(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Bulk capacitance at device temperature\";
//   protected Real DS1.CjD1.nlC1.Cbulk2(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real DS1.CjD1.nlC1.Cperi(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Perimeter capacitance at device temperature\";
//   protected Real DS1.CjD1.nlC1.Cperi2(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   protected Real DS1.CjD1.nlC1.Cpoly(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Polysilicon capacitance\";
//   protected Real DS1.CjD1.nlC1.Cmetal(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Metal capacitance\";
//   protected Real DS1.CjD1.nlC1.et;
//   protected parameter Real DS1.CjD1.nlC1.eox(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 3.45313324887195e-11 \"Permittivity of SiO2\";
//   protected parameter Real DS1.CjD1.nlC1.AREAeff(quantity = \"Area\", unit = \"m2\") = DS1.CjD1.nlC1.W * (DS1.CjD1.nlC1.L * Real(DS1.CjD1.nlC1.M));
//   protected parameter Real DS1.CjD1.nlC1.PJeff(quantity = \"Length\", unit = \"m\") = 2.0 * ((DS1.CjD1.nlC1.W + DS1.CjD1.nlC1.L) * Real(DS1.CjD1.nlC1.M));
//   protected parameter Real DS1.CjD1.nlC1.ExMin = exp(DS1.CjD1.nlC1.EMin);
//   protected parameter Real DS1.CjD1.nlC1.ExMax = exp(DS1.CjD1.nlC1.EMax);
//   Real DS1.CjD1.DjD1.e1 \"Bondgraphic primary effort\";
//   Real DS1.CjD1.DjD1.f1 \"Bondgraphic primary flow\";
//   Real DS1.CjD1.DjD1.e2 \"Bondgraphic secondary effort\";
//   Real DS1.CjD1.DjD1.f2 \"Bondgraphic secondary flow\";
//   Real DS1.CjD1.DjD1.BondCon1.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.DjD1.BondCon1.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.DjD1.BondCon1.d \"Directional variable\";
//   Real DS1.CjD1.DjD1.BondCon2.e \"Bondgraphic effort variable\";
//   Real DS1.CjD1.DjD1.BondCon2.f \"Bondgraphic flow variable\";
//   Real DS1.CjD1.DjD1.BondCon2.d \"Directional variable\";
//   parameter Real DS1.CjD1.DjD1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = DS1.CjD1.Tnom \"Reference temperature\";
//   Real DS1.CjD1.DjD1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real DS1.CjD1.DjD1.DTempSq \"Square of DTemp\";
//   constant Real DS1.CjD1.DjD1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real DS1.CjD1.DjD1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real DS1.CjD1.DjD1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real DS1.CjD1.DjD1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer DS1.CjD1.DjD1.Level = DS1.CjD1.Level \"DIODE modeling level (check documentation window for details)\";
//   parameter Real DS1.CjD1.DjD1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.CjD1.IS \"Saturation current at reference temperature\";
//   parameter Real DS1.CjD1.DjD1.N = DS1.CjD1.N \"Current emission coefficient\";
//   parameter Real DS1.CjD1.DjD1.EG(quantity = \"ElectricPotential\", unit = \"V\") = DS1.CjD1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real DS1.CjD1.DjD1.XTI = DS1.CjD1.XTI \"Saturation current temperature exponent\";
//   parameter Real DS1.CjD1.DjD1.BV(quantity = \"ElectricPotential\", unit = \"V\") = DS1.CjD1.BV \"Reverse breakdown voltage at reference temperature\";
//   parameter Real DS1.CjD1.DjD1.IBV(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.CjD1.IBV \"Reverse breakdown current\";
//   parameter Real DS1.CjD1.DjD1.TCV(unit = \"V/K\") = DS1.CjD1.TCV \"Temperature coefficient of breakdown voltage\";
//   parameter Real DS1.CjD1.DjD1.ISW(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.CjD1.ISW \"Saturation current of periphery at reference temperature\";
//   parameter Real DS1.CjD1.DjD1.TOX(quantity = \"Length\", unit = \"m\") = DS1.CjD1.TOX \"Thin oxide thickness\";
//   parameter Real DS1.CjD1.DjD1.Area = DS1.CjD1.Area \"Relative device area\";
//   parameter Real DS1.CjD1.DjD1.PJ = DS1.CjD1.PJ \"Relative perimeter width\";
//   parameter Real DS1.CjD1.DjD1.EMin = DS1.CjD1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real DS1.CjD1.DjD1.EMax = DS1.CjD1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real DS1.CjD1.DjD1.L(quantity = \"Length\", unit = \"m\") = DS1.CjD1.L \"Diode length\";
//   parameter Real DS1.CjD1.DjD1.W(quantity = \"Length\", unit = \"m\") = DS1.CjD1.W \"Diode width\";
//   parameter Integer DS1.CjD1.DjD1.M = DS1.CjD1.M \"Diode multiplier\";
//   parameter Real DS1.CjD1.DjD1.JS(quantity = \"CurrentDensity\", unit = \"A/m2\") = DS1.CjD1.JS \"Saturation current density at reference temperature\";
//   parameter Real DS1.CjD1.DjD1.JSW(unit = \"A/m\") = DS1.CjD1.JSW \"Saturation current density of periphery at reference temperature\";
//   parameter Real DS1.CjD1.DjD1.JF(unit = \"A/V2\") = DS1.CjD1.JF \"Forward FN current coefficient\";
//   parameter Real DS1.CjD1.DjD1.JR(unit = \"A/V2\") = DS1.CjD1.JR \"Reverse FN current coefficient\";
//   parameter Real DS1.CjD1.DjD1.EF(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = DS1.CjD1.EF \"Forward critical electrical field\";
//   parameter Real DS1.CjD1.DjD1.ER(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = DS1.CjD1.ER \"Reverse critical electrical field\";
//   protected Real DS1.CjD1.DjD1.RTemp \"Temperature quotient\";
//   protected Real DS1.CjD1.DjD1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real DS1.CjD1.DjD1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   protected Real DS1.CjD1.DjD1.ISeff(quantity = \"ElectricCurrent\", unit = \"A\") \"Effective saturation current\";
//   protected Real DS1.CjD1.DjD1.JSval(quantity = \"CurrentDensity\", unit = \"A/m2\") \"Saturation current density at device temperature\";
//   protected Real DS1.CjD1.DjD1.ISWval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current of periphery at device temperature\";
//   protected Real DS1.CjD1.DjD1.JSWval(unit = \"A/m\") \"Saturation current density of periphery at device temperature\";
//   protected Real DS1.CjD1.DjD1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   protected Real DS1.CjD1.DjD1.BVval(quantity = \"ElectricPotential\", unit = \"V\") \"Reverse breakdown voltage at device temperature\";
//   protected Real DS1.CjD1.DjD1.BVeff(quantity = \"ElectricPotential\", unit = \"V\") \"Effective reverse breakdown voltage\";
//   protected Real DS1.CjD1.DjD1.IBVval(quantity = \"ElectricCurrent\", unit = \"A\") \"Effective reverse breakdown current\";
//   protected Real DS1.CjD1.DjD1.Ibreak(quantity = \"ElectricCurrent\", unit = \"A\");
//   protected Real DS1.CjD1.DjD1.f1a(quantity = \"ElectricCurrent\", unit = \"A\");
//   protected Real DS1.CjD1.DjD1.f1b(quantity = \"ElectricCurrent\", unit = \"A\");
//   protected Real DS1.CjD1.DjD1.Eq(unit = \"V2/m2\");
//   protected Real DS1.CjD1.DjD1.et;
//   protected Real DS1.CjD1.DjD1.et2;
//   protected parameter Real DS1.CjD1.DjD1.ExMin = exp(DS1.CjD1.DjD1.EMin);
//   protected parameter Real DS1.CjD1.DjD1.ExMax = exp(DS1.CjD1.DjD1.EMax);
//   protected parameter Real DS1.CjD1.DjD1.AREAeff(quantity = \"Area\", unit = \"m2\") = DS1.CjD1.DjD1.W * (DS1.CjD1.DjD1.L * Real(DS1.CjD1.DjD1.M));
//   protected parameter Real DS1.CjD1.DjD1.PJeff(quantity = \"Length\", unit = \"m\") = 2.0 * ((DS1.CjD1.DjD1.W + DS1.CjD1.DjD1.L) * Real(DS1.CjD1.DjD1.M));
//   protected parameter Real DS1.CjD1.DjD1.Vp(quantity = \"ElectricPotential\", unit = \"V\") = (DS1.CjD1.DjD1.TOX * DS1.CjD1.DjD1.EF) / 13.8155105579643;
//   protected parameter Real DS1.CjD1.DjD1.Vm(quantity = \"ElectricPotential\", unit = \"V\") = ((-DS1.CjD1.DjD1.TOX) * DS1.CjD1.DjD1.ER) / 13.8155105579643;
//   input Real DS1.ID0.u \"Connector of Real input signal\";
//   output Real DS1.ID0.y \"Connector of Real output signal\";
//   constant Real DS1.ID0.inf = 1e+60;
//   constant Real DS1.ID0.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real DS1.ID0.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   parameter Integer DS1.ID0.Level = DS1.Level \"DIODE modeling level (check documentation window for details)\";
//   parameter Real DS1.ID0.N = DS1.N \"Current emission coefficient\";
//   parameter Real DS1.ID0.IKF(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.IKF \"Forward knee current\";
//   parameter Real DS1.ID0.IKR(quantity = \"ElectricCurrent\", unit = \"A\") = DS1.IKR \"Reverse knee current\";
//   output Real DS1.ID0.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   output Real DS1.ID0.IDstar(quantity = \"ElectricCurrent\", unit = \"A\") \"Diodic current\";
//   output Real DS1.ID0.ID(quantity = \"ElectricCurrent\", unit = \"A\") \"Adjusted diodic current\";
//   output Real DS1.ID0.IK(quantity = \"ElectricCurrent\", unit = \"A\") \"Knee current\";
//   input Real DS1.ID0.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   input Real DS1.ID0.v(quantity = \"ElectricPotential\", unit = \"V\") \"Diode voltage\";
//   protected parameter Real DS1.Ibreak(quantity = \"ElectricCurrent\", unit = \"A\") = (-DS1.ISeff) * (-1.0 + exp((-DS1.BV) / (DS1.Vt * DS1.N)));
//   output Real B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B4.fBondCon1.d \"Direction variable\";
//   input Real B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B4.eBondCon1.d \"Direction variable\";
//   output Real B10.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B10.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B10.fBondCon1.d \"Direction variable\";
//   input Real B10.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B10.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B10.eBondCon1.d \"Direction variable\";
//   Real R1.e1 \"Bondgraphic primary effort\";
//   Real R1.f1 \"Bondgraphic primary flow\";
//   Real R1.e2 \"Bondgraphic secondary effort\";
//   Real R1.f2 \"Bondgraphic secondary flow\";
//   Real R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real R1.BondCon1.d \"Directional variable\";
//   Real R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real R1.BondCon2.d \"Directional variable\";
//   parameter Real R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real R1.DTempSq \"Square of DTemp\";
//   parameter Real R1.R(quantity = \"Resistance\", unit = \"Ohm\") = 125.0 \"Resistance at reference temperature\";
//   parameter Real R1.TR1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient\";
//   parameter Real R1.TR2(unit = \"1/K2\") = 0.005 \"Quadratic temperature coefficient\";
//   parameter Real R1.Area = 1.0 \"Relative area occupied by resistor\";
//   Real R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   Real L1.e1 \"Bondgraphic primary effort\";
//   Real L1.f1 \"Bondgraphic primary flow\";
//   Real L1.e2 \"Bondgraphic secondary effort\";
//   Real L1.f2 \"Bondgraphic secondary flow\";
//   Real L1.BondCon1.e \"Bondgraphic effort variable\";
//   Real L1.BondCon1.f \"Bondgraphic flow variable\";
//   Real L1.BondCon1.d \"Directional variable\";
//   Real L1.BondCon2.e \"Bondgraphic effort variable\";
//   Real L1.BondCon2.f \"Bondgraphic flow variable\";
//   Real L1.BondCon2.d \"Directional variable\";
//   parameter Real L1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real L1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real L1.DTempSq \"Square of DTemp\";
//   parameter Real L1.L(quantity = \"Inductance\", unit = \"H\") = 0.015 \"Inductance at reference temperature\";
//   parameter Real L1.TL1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real L1.TL2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   Real L1.Lval(quantity = \"Inductance\", unit = \"H\") \"Inductance value at circuit temperature\";
//   input Real B9.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B9.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B9.eBondCon1.d \"Direction variable\";
//   output Real B9.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B9.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B9.fBondCon1.d \"Direction variable\";
//   input Real B2.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B2.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B2.eBondCon1.d \"Direction variable\";
//   output Real B2.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B2.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B2.fBondCon1.d \"Direction variable\";
//   Real C1.e1 \"Bondgraphic primary effort\";
//   Real C1.f1 \"Bondgraphic primary flow\";
//   Real C1.e2 \"Bondgraphic secondary effort\";
//   Real C1.f2 \"Bondgraphic secondary flow\";
//   Real C1.BondCon1.e \"Bondgraphic effort variable\";
//   Real C1.BondCon1.f \"Bondgraphic flow variable\";
//   Real C1.BondCon1.d \"Directional variable\";
//   Real C1.BondCon2.e \"Bondgraphic effort variable\";
//   Real C1.BondCon2.f \"Bondgraphic flow variable\";
//   Real C1.BondCon2.d \"Directional variable\";
//   parameter Real C1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real C1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real C1.DTempSq \"Square of DTemp\";
//   parameter Real C1.C(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = 5e-05 \"Capacitance at reference temperature\";
//   parameter Real C1.TC1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real C1.TC2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real C1.Area = 1.0 \"Relative area occupied by capacitor\";
//   Real C1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Capacitance value at circuit temperature\";
//   output Real B7.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B7.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B7.fBondCon1.d \"Direction variable\";
//   input Real B7.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B7.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B7.eBondCon1.d \"Direction variable\";
//   output Real B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real B5.fBondCon1.d \"Direction variable\";
//   input Real B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real B5.eBondCon1.d \"Direction variable\";
// equation
//   V0.Sine1.y = V0.Sine1.offset + (if time < V0.Sine1.startTime then 0.0 else V0.Sine1.amplitude * sin(6.28318530717959 * (V0.Sine1.freqHz * (time - V0.Sine1.startTime)) + V0.Sine1.phase));
//   V0.e = V0.Sine1.y;
//   V0.e = V0.BondCon1.e;
//   V0.f = (-V0.BondCon1.d) * V0.BondCon1.f;
//   B1.fBondCon1.e = B1.eBondCon1.e;
//   B1.eBondCon1.f = B1.fBondCon1.f;
//   B1.eBondCon1.d = -1.0;
//   B1.fBondCon1.d = 1.0;
//   J1p4_1.f[2] = J1p4_1.f[1];
//   J1p4_1.f[3] = J1p4_1.f[2];
//   J1p4_1.f[4] = J1p4_1.f[3];
//   J1p4_1.e[1] + (J1p4_1.e[2] + (J1p4_1.e[3] + J1p4_1.e[4])) = 0.0;
//   J1p4_1.e[1] = J1p4_1.BondCon1.d * J1p4_1.BondCon1.e;
//   J1p4_1.f[1] = J1p4_1.BondCon1.f;
//   J1p4_1.e[2] = J1p4_1.BondCon2.d * J1p4_1.BondCon2.e;
//   J1p4_1.f[2] = J1p4_1.BondCon2.f;
//   J1p4_1.e[3] = J1p4_1.BondCon3.d * J1p4_1.BondCon3.e;
//   J1p4_1.f[3] = J1p4_1.BondCon3.f;
//   J1p4_1.e[4] = J1p4_1.BondCon4.d * J1p4_1.BondCon4.e;
//   J1p4_1.f[4] = J1p4_1.BondCon4.f;
//   B6.fBondCon1.e = B6.eBondCon1.e;
//   B6.eBondCon1.f = B6.fBondCon1.f;
//   B6.fBondCon1.d = -1.0;
//   B6.eBondCon1.d = 1.0;
//   J0p4_1.e[2] = J0p4_1.e[1];
//   J0p4_1.e[3] = J0p4_1.e[2];
//   J0p4_1.e[4] = J0p4_1.e[3];
//   J0p4_1.f[1] + (J0p4_1.f[2] + (J0p4_1.f[3] + J0p4_1.f[4])) = 0.0;
//   J0p4_1.e[1] = J0p4_1.BondCon1.e;
//   J0p4_1.f[1] = J0p4_1.BondCon1.d * J0p4_1.BondCon1.f;
//   J0p4_1.e[2] = J0p4_1.BondCon2.e;
//   J0p4_1.f[2] = J0p4_1.BondCon2.d * J0p4_1.BondCon2.f;
//   J0p4_1.e[3] = J0p4_1.BondCon3.e;
//   J0p4_1.f[3] = J0p4_1.BondCon3.d * J0p4_1.BondCon3.f;
//   J0p4_1.e[4] = J0p4_1.BondCon4.e;
//   J0p4_1.f[4] = J0p4_1.BondCon4.d * J0p4_1.BondCon4.f;
//   B11.fBondCon1.e = B11.eBondCon1.e;
//   B11.eBondCon1.f = B11.fBondCon1.f;
//   B11.eBondCon1.d = -1.0;
//   B11.fBondCon1.d = 1.0;
//   Vout.OutPort1 = Vout.e;
//   Vout.f = 0.0;
//   Vout.e = Vout.BondCon1.e;
//   Vout.f = Vout.BondCon1.d * Vout.BondCon1.f;
//   J0p5_1.e[2] = J0p5_1.e[1];
//   J0p5_1.e[3] = J0p5_1.e[2];
//   J0p5_1.e[4] = J0p5_1.e[3];
//   J0p5_1.e[5] = J0p5_1.e[4];
//   J0p5_1.f[1] + (J0p5_1.f[2] + (J0p5_1.f[3] + (J0p5_1.f[4] + J0p5_1.f[5]))) = 0.0;
//   J0p5_1.e[1] = J0p5_1.BondCon1.e;
//   J0p5_1.f[1] = J0p5_1.BondCon1.d * J0p5_1.BondCon1.f;
//   J0p5_1.e[2] = J0p5_1.BondCon2.e;
//   J0p5_1.f[2] = J0p5_1.BondCon2.d * J0p5_1.BondCon2.f;
//   J0p5_1.e[3] = J0p5_1.BondCon3.e;
//   J0p5_1.f[3] = J0p5_1.BondCon3.d * J0p5_1.BondCon3.f;
//   J0p5_1.e[4] = J0p5_1.BondCon4.e;
//   J0p5_1.f[4] = J0p5_1.BondCon4.d * J0p5_1.BondCon4.f;
//   J0p5_1.e[5] = J0p5_1.BondCon5.e;
//   J0p5_1.f[5] = J0p5_1.BondCon5.d * J0p5_1.BondCon5.f;
//   B12.fBondCon1.e = B12.eBondCon1.e;
//   B12.eBondCon1.f = B12.fBondCon1.f;
//   B12.eBondCon1.d = -1.0;
//   B12.fBondCon1.d = 1.0;
//   Tdev.e = Tdev.e0;
//   Tdev.e = Tdev.BondCon1.e;
//   Tdev.f = (-Tdev.BondCon1.d) * Tdev.BondCon1.f;
//   B3.fBondCon1.e = B3.eBondCon1.e;
//   B3.eBondCon1.f = B3.fBondCon1.f;
//   B3.fBondCon1.d = -1.0;
//   B3.eBondCon1.d = 1.0;
//   B8.fBondCon1.e = B8.eBondCon1.e;
//   B8.eBondCon1.f = B8.fBondCon1.f;
//   B8.fBondCon1.d = -1.0;
//   B8.eBondCon1.d = 1.0;
//   DS1.J0p2_1.e2 = DS1.J0p2_1.e1;
//   DS1.J0p2_1.f1 + DS1.J0p2_1.f2 = 0.0;
//   DS1.J0p2_1.e1 = DS1.J0p2_1.BondCon1.e;
//   DS1.J0p2_1.f1 = DS1.J0p2_1.BondCon1.d * DS1.J0p2_1.BondCon1.f;
//   DS1.J0p2_1.e2 = DS1.J0p2_1.BondCon2.e;
//   DS1.J0p2_1.f2 = DS1.J0p2_1.BondCon2.d * DS1.J0p2_1.BondCon2.f;
//   DS1.J0p5_1.e[2] = DS1.J0p5_1.e[1];
//   DS1.J0p5_1.e[3] = DS1.J0p5_1.e[2];
//   DS1.J0p5_1.e[4] = DS1.J0p5_1.e[3];
//   DS1.J0p5_1.e[5] = DS1.J0p5_1.e[4];
//   DS1.J0p5_1.f[1] + (DS1.J0p5_1.f[2] + (DS1.J0p5_1.f[3] + (DS1.J0p5_1.f[4] + DS1.J0p5_1.f[5]))) = 0.0;
//   DS1.J0p5_1.e[1] = DS1.J0p5_1.BondCon1.e;
//   DS1.J0p5_1.f[1] = DS1.J0p5_1.BondCon1.d * DS1.J0p5_1.BondCon1.f;
//   DS1.J0p5_1.e[2] = DS1.J0p5_1.BondCon2.e;
//   DS1.J0p5_1.f[2] = DS1.J0p5_1.BondCon2.d * DS1.J0p5_1.BondCon2.f;
//   DS1.J0p5_1.e[3] = DS1.J0p5_1.BondCon3.e;
//   DS1.J0p5_1.f[3] = DS1.J0p5_1.BondCon3.d * DS1.J0p5_1.BondCon3.f;
//   DS1.J0p5_1.e[4] = DS1.J0p5_1.BondCon4.e;
//   DS1.J0p5_1.f[4] = DS1.J0p5_1.BondCon4.d * DS1.J0p5_1.BondCon4.f;
//   DS1.J0p5_1.e[5] = DS1.J0p5_1.BondCon5.e;
//   DS1.J0p5_1.f[5] = DS1.J0p5_1.BondCon5.d * DS1.J0p5_1.BondCon5.f;
//   DS1.B1.BondCon2.e = DS1.B1.BondCon1.e;
//   DS1.B1.BondCon2.f = DS1.B1.BondCon1.f;
//   DS1.B1.BondCon1.d = -1.0;
//   DS1.B1.BondCon2.d = 1.0;
//   DS1.J1p3_1.f[2] = DS1.J1p3_1.f[1];
//   DS1.J1p3_1.f[3] = DS1.J1p3_1.f[2];
//   DS1.J1p3_1.e[1] + (DS1.J1p3_1.e[2] + DS1.J1p3_1.e[3]) = 0.0;
//   DS1.J1p3_1.e[1] = DS1.J1p3_1.BondCon1.d * DS1.J1p3_1.BondCon1.e;
//   DS1.J1p3_1.f[1] = DS1.J1p3_1.BondCon1.f;
//   DS1.J1p3_1.e[2] = DS1.J1p3_1.BondCon2.d * DS1.J1p3_1.BondCon2.e;
//   DS1.J1p3_1.f[2] = DS1.J1p3_1.BondCon2.f;
//   DS1.J1p3_1.e[3] = DS1.J1p3_1.BondCon3.d * DS1.J1p3_1.BondCon3.e;
//   DS1.J1p3_1.f[3] = DS1.J1p3_1.BondCon3.f;
//   DS1.B2.BondCon2.e = DS1.B2.BondCon1.e;
//   DS1.B2.BondCon2.f = DS1.B2.BondCon1.f;
//   DS1.B2.BondCon1.d = -1.0;
//   DS1.B2.BondCon2.d = 1.0;
//   DS1.J0p4_1.e[2] = DS1.J0p4_1.e[1];
//   DS1.J0p4_1.e[3] = DS1.J0p4_1.e[2];
//   DS1.J0p4_1.e[4] = DS1.J0p4_1.e[3];
//   DS1.J0p4_1.f[1] + (DS1.J0p4_1.f[2] + (DS1.J0p4_1.f[3] + DS1.J0p4_1.f[4])) = 0.0;
//   DS1.J0p4_1.e[1] = DS1.J0p4_1.BondCon1.e;
//   DS1.J0p4_1.f[1] = DS1.J0p4_1.BondCon1.d * DS1.J0p4_1.BondCon1.f;
//   DS1.J0p4_1.e[2] = DS1.J0p4_1.BondCon2.e;
//   DS1.J0p4_1.f[2] = DS1.J0p4_1.BondCon2.d * DS1.J0p4_1.BondCon2.f;
//   DS1.J0p4_1.e[3] = DS1.J0p4_1.BondCon3.e;
//   DS1.J0p4_1.f[3] = DS1.J0p4_1.BondCon3.d * DS1.J0p4_1.BondCon3.f;
//   DS1.J0p4_1.e[4] = DS1.J0p4_1.BondCon4.e;
//   DS1.J0p4_1.f[4] = DS1.J0p4_1.BondCon4.d * DS1.J0p4_1.BondCon4.f;
//   DS1.B4.fBondCon1.e = DS1.B4.eBondCon1.e;
//   DS1.B4.eBondCon1.f = DS1.B4.fBondCon1.f;
//   DS1.B4.eBondCon1.d = -1.0;
//   DS1.B4.fBondCon1.d = 1.0;
//   DS1.B3.fBondCon1.e = DS1.B3.eBondCon1.e;
//   DS1.B3.eBondCon1.f = DS1.B3.fBondCon1.f;
//   DS1.B3.fBondCon1.d = -1.0;
//   DS1.B3.eBondCon1.d = 1.0;
//   DS1.B5.BondCon2.e = DS1.B5.BondCon1.e;
//   DS1.B5.BondCon2.f = DS1.B5.BondCon1.f;
//   DS1.B5.BondCon1.d = -1.0;
//   DS1.B5.BondCon2.d = 1.0;
//   DS1.B6.fBondCon1.e = DS1.B6.eBondCon1.e;
//   DS1.B6.eBondCon1.f = DS1.B6.fBondCon1.f;
//   DS1.B6.fBondCon1.d = -1.0;
//   DS1.B6.eBondCon1.d = 1.0;
//   DS1.B7.BondCon2.e = DS1.B7.BondCon1.e;
//   DS1.B7.BondCon2.f = DS1.B7.BondCon1.f;
//   DS1.B7.BondCon1.d = -1.0;
//   DS1.B7.BondCon2.d = 1.0;
//   DS1.B8.fBondCon1.e = DS1.B8.eBondCon1.e;
//   DS1.B8.eBondCon1.f = DS1.B8.fBondCon1.f;
//   DS1.B8.fBondCon1.d = -1.0;
//   DS1.B8.eBondCon1.d = 1.0;
//   DS1.Gain1.y = DS1.Gain1.k * DS1.Gain1.u;
//   DS1.B9.fBondCon1.e = DS1.B9.eBondCon1.e;
//   DS1.B9.eBondCon1.f = DS1.B9.fBondCon1.f;
//   DS1.B9.eBondCon1.d = -1.0;
//   DS1.B9.fBondCon1.d = 1.0;
//   DS1.Tdev.OutPort1 = DS1.Tdev.e;
//   DS1.Tdev.f = 0.0;
//   DS1.Tdev.e = DS1.Tdev.BondCon1.e;
//   DS1.Tdev.f = DS1.Tdev.BondCon1.d * DS1.Tdev.BondCon1.f;
//   DS1.B10.fBondCon1.e = DS1.B10.eBondCon1.e;
//   DS1.B10.eBondCon1.f = DS1.B10.fBondCon1.f;
//   DS1.B10.eBondCon1.d = -1.0;
//   DS1.B10.fBondCon1.d = 1.0;
//   DS1.vd.OutPort1 = DS1.vd.e;
//   DS1.vd.f = 0.0;
//   DS1.vd.e = DS1.vd.BondCon1.e;
//   DS1.vd.f = DS1.vd.BondCon1.d * DS1.vd.BondCon1.f;
//   DS1.mSf_int1.f0 = DS1.mSf_int1.s;
//   DS1.mSf_int1.f2 = DS1.mSf_int1.f0;
//   DS1.mSf_int1.e1 * DS1.mSf_int1.f1 = DS1.mSf_int1.e2 * DS1.mSf_int1.f2;
//   DS1.mSf_int1.e1 = DS1.mSf_int1.BondCon1.e;
//   DS1.mSf_int1.f1 = DS1.mSf_int1.BondCon1.d * DS1.mSf_int1.BondCon1.f;
//   DS1.mSf_int1.e2 = DS1.mSf_int1.BondCon2.e;
//   DS1.mSf_int1.f2 = (-DS1.mSf_int1.BondCon2.d) * DS1.mSf_int1.BondCon2.f;
//   DS1.RS1.Rval = (DS1.RS1.R * (1.0 + (DS1.RS1.TR1 * DS1.RS1.DTemp + DS1.RS1.TR2 * DS1.RS1.DTempSq))) / DS1.RS1.Area;
//   DS1.RS1.e1 = DS1.RS1.Rval * DS1.RS1.f1;
//   DS1.RS1.e1 * DS1.RS1.f1 = DS1.RS1.e2 * DS1.RS1.f2;
//   DS1.RS1.DTemp = DS1.RS1.e2 - DS1.RS1.Tnom;
//   DS1.RS1.DTempSq = DS1.RS1.DTemp ^ 2.0;
//   DS1.RS1.e1 = DS1.RS1.BondCon1.e;
//   DS1.RS1.f1 = DS1.RS1.BondCon1.d * DS1.RS1.BondCon1.f;
//   DS1.RS1.e2 = DS1.RS1.BondCon2.e;
//   DS1.RS1.f2 = (-DS1.RS1.BondCon2.d) * DS1.RS1.BondCon2.f;
//   DS1.CjD1.J0p3_1.e[2] = DS1.CjD1.J0p3_1.e[1];
//   DS1.CjD1.J0p3_1.e[3] = DS1.CjD1.J0p3_1.e[2];
//   DS1.CjD1.J0p3_1.f[1] + (DS1.CjD1.J0p3_1.f[2] + DS1.CjD1.J0p3_1.f[3]) = 0.0;
//   DS1.CjD1.J0p3_1.e[1] = DS1.CjD1.J0p3_1.BondCon1.e;
//   DS1.CjD1.J0p3_1.f[1] = DS1.CjD1.J0p3_1.BondCon1.d * DS1.CjD1.J0p3_1.BondCon1.f;
//   DS1.CjD1.J0p3_1.e[2] = DS1.CjD1.J0p3_1.BondCon2.e;
//   DS1.CjD1.J0p3_1.f[2] = DS1.CjD1.J0p3_1.BondCon2.d * DS1.CjD1.J0p3_1.BondCon2.f;
//   DS1.CjD1.J0p3_1.e[3] = DS1.CjD1.J0p3_1.BondCon3.e;
//   DS1.CjD1.J0p3_1.f[3] = DS1.CjD1.J0p3_1.BondCon3.d * DS1.CjD1.J0p3_1.BondCon3.f;
//   DS1.CjD1.B1.fBondCon1.e = DS1.CjD1.B1.eBondCon1.e;
//   DS1.CjD1.B1.eBondCon1.f = DS1.CjD1.B1.fBondCon1.f;
//   DS1.CjD1.B1.eBondCon1.d = -1.0;
//   DS1.CjD1.B1.fBondCon1.d = 1.0;
//   DS1.CjD1.vbi.OutPort1 = DS1.CjD1.vbi.e;
//   DS1.CjD1.vbi.f = 0.0;
//   DS1.CjD1.vbi.e = DS1.CjD1.vbi.BondCon1.e;
//   DS1.CjD1.vbi.f = DS1.CjD1.vbi.BondCon1.d * DS1.CjD1.vbi.BondCon1.f;
//   DS1.CjD1.Vbi.e0 = DS1.CjD1.Vbi.s;
//   DS1.CjD1.Vbi.e = DS1.CjD1.Vbi.e0;
//   DS1.CjD1.Vbi.e = DS1.CjD1.Vbi.BondCon1.e;
//   DS1.CjD1.Vbi.f = (-DS1.CjD1.Vbi.BondCon1.d) * DS1.CjD1.Vbi.BondCon1.f;
//   DS1.CjD1.B3.fBondCon1.e = DS1.CjD1.B3.eBondCon1.e;
//   DS1.CjD1.B3.eBondCon1.f = DS1.CjD1.B3.fBondCon1.f;
//   DS1.CjD1.B3.eBondCon1.d = -1.0;
//   DS1.CjD1.B3.fBondCon1.d = 1.0;
//   DS1.CjD1.J0p3_2.e[2] = DS1.CjD1.J0p3_2.e[1];
//   DS1.CjD1.J0p3_2.e[3] = DS1.CjD1.J0p3_2.e[2];
//   DS1.CjD1.J0p3_2.f[1] + (DS1.CjD1.J0p3_2.f[2] + DS1.CjD1.J0p3_2.f[3]) = 0.0;
//   DS1.CjD1.J0p3_2.e[1] = DS1.CjD1.J0p3_2.BondCon1.e;
//   DS1.CjD1.J0p3_2.f[1] = DS1.CjD1.J0p3_2.BondCon1.d * DS1.CjD1.J0p3_2.BondCon1.f;
//   DS1.CjD1.J0p3_2.e[2] = DS1.CjD1.J0p3_2.BondCon2.e;
//   DS1.CjD1.J0p3_2.f[2] = DS1.CjD1.J0p3_2.BondCon2.d * DS1.CjD1.J0p3_2.BondCon2.f;
//   DS1.CjD1.J0p3_2.e[3] = DS1.CjD1.J0p3_2.BondCon3.e;
//   DS1.CjD1.J0p3_2.f[3] = DS1.CjD1.J0p3_2.BondCon3.d * DS1.CjD1.J0p3_2.BondCon3.f;
//   DS1.CjD1.B6.fBondCon1.e = DS1.CjD1.B6.eBondCon1.e;
//   DS1.CjD1.B6.eBondCon1.f = DS1.CjD1.B6.fBondCon1.f;
//   DS1.CjD1.B6.eBondCon1.d = -1.0;
//   DS1.CjD1.B6.fBondCon1.d = 1.0;
//   DS1.CjD1.B7.fBondCon1.e = DS1.CjD1.B7.eBondCon1.e;
//   DS1.CjD1.B7.eBondCon1.f = DS1.CjD1.B7.fBondCon1.f;
//   DS1.CjD1.B7.eBondCon1.d = -1.0;
//   DS1.CjD1.B7.fBondCon1.d = 1.0;
//   DS1.CjD1.J0p3_3.e[2] = DS1.CjD1.J0p3_3.e[1];
//   DS1.CjD1.J0p3_3.e[3] = DS1.CjD1.J0p3_3.e[2];
//   DS1.CjD1.J0p3_3.f[1] + (DS1.CjD1.J0p3_3.f[2] + DS1.CjD1.J0p3_3.f[3]) = 0.0;
//   DS1.CjD1.J0p3_3.e[1] = DS1.CjD1.J0p3_3.BondCon1.e;
//   DS1.CjD1.J0p3_3.f[1] = DS1.CjD1.J0p3_3.BondCon1.d * DS1.CjD1.J0p3_3.BondCon1.f;
//   DS1.CjD1.J0p3_3.e[2] = DS1.CjD1.J0p3_3.BondCon2.e;
//   DS1.CjD1.J0p3_3.f[2] = DS1.CjD1.J0p3_3.BondCon2.d * DS1.CjD1.J0p3_3.BondCon2.f;
//   DS1.CjD1.J0p3_3.e[3] = DS1.CjD1.J0p3_3.BondCon3.e;
//   DS1.CjD1.J0p3_3.f[3] = DS1.CjD1.J0p3_3.BondCon3.d * DS1.CjD1.J0p3_3.BondCon3.f;
//   DS1.CjD1.Cj1.C = DS1.CjD1.Cj1.s;
//   DS1.CjD1.Cj1.f = DS1.CjD1.Cj1.C * der(DS1.CjD1.Cj1.e);
//   DS1.CjD1.Cj1.e = DS1.CjD1.Cj1.BondCon1.e;
//   DS1.CjD1.Cj1.f = DS1.CjD1.Cj1.BondCon1.d * DS1.CjD1.Cj1.BondCon1.f;
//   DS1.CjD1.Tdev.OutPort1 = DS1.CjD1.Tdev.e;
//   DS1.CjD1.Tdev.f = 0.0;
//   DS1.CjD1.Tdev.e = DS1.CjD1.Tdev.BondCon1.e;
//   DS1.CjD1.Tdev.f = DS1.CjD1.Tdev.BondCon1.d * DS1.CjD1.Tdev.BondCon1.f;
//   DS1.CjD1.B8.fBondCon1.e = DS1.CjD1.B8.eBondCon1.e;
//   DS1.CjD1.B8.eBondCon1.f = DS1.CjD1.B8.fBondCon1.f;
//   DS1.CjD1.B8.eBondCon1.d = -1.0;
//   DS1.CjD1.B8.fBondCon1.d = 1.0;
//   DS1.CjD1.B5.fBondCon1.e = DS1.CjD1.B5.eBondCon1.e;
//   DS1.CjD1.B5.eBondCon1.f = DS1.CjD1.B5.fBondCon1.f;
//   DS1.CjD1.B5.eBondCon1.d = -1.0;
//   DS1.CjD1.B5.fBondCon1.d = 1.0;
//   DS1.CjD1.id1.OutPort1 = DS1.CjD1.id1.f;
//   DS1.CjD1.id1.e = 0.0;
//   DS1.CjD1.id1.e = DS1.CjD1.id1.BondCon1.e;
//   DS1.CjD1.id1.f = DS1.CjD1.id1.BondCon1.d * DS1.CjD1.id1.BondCon1.f;
//   DS1.CjD1.B4.fBondCon1.e = DS1.CjD1.B4.eBondCon1.e;
//   DS1.CjD1.B4.eBondCon1.f = DS1.CjD1.B4.fBondCon1.f;
//   DS1.CjD1.B4.fBondCon1.d = -1.0;
//   DS1.CjD1.B4.eBondCon1.d = 1.0;
//   DS1.CjD1.B9.fBondCon1.e = DS1.CjD1.B9.eBondCon1.e;
//   DS1.CjD1.B9.eBondCon1.f = DS1.CjD1.B9.fBondCon1.f;
//   DS1.CjD1.B9.fBondCon1.d = -1.0;
//   DS1.CjD1.B9.eBondCon1.d = 1.0;
//   DS1.CjD1.J1p3_1.f[2] = DS1.CjD1.J1p3_1.f[1];
//   DS1.CjD1.J1p3_1.f[3] = DS1.CjD1.J1p3_1.f[2];
//   DS1.CjD1.J1p3_1.e[1] + (DS1.CjD1.J1p3_1.e[2] + DS1.CjD1.J1p3_1.e[3]) = 0.0;
//   DS1.CjD1.J1p3_1.e[1] = DS1.CjD1.J1p3_1.BondCon1.d * DS1.CjD1.J1p3_1.BondCon1.e;
//   DS1.CjD1.J1p3_1.f[1] = DS1.CjD1.J1p3_1.BondCon1.f;
//   DS1.CjD1.J1p3_1.e[2] = DS1.CjD1.J1p3_1.BondCon2.d * DS1.CjD1.J1p3_1.BondCon2.e;
//   DS1.CjD1.J1p3_1.f[2] = DS1.CjD1.J1p3_1.BondCon2.f;
//   DS1.CjD1.J1p3_1.e[3] = DS1.CjD1.J1p3_1.BondCon3.d * DS1.CjD1.J1p3_1.BondCon3.e;
//   DS1.CjD1.J1p3_1.f[3] = DS1.CjD1.J1p3_1.BondCon3.f;
//   DS1.CjD1.B2.fBondCon1.e = DS1.CjD1.B2.eBondCon1.e;
//   DS1.CjD1.B2.eBondCon1.f = DS1.CjD1.B2.fBondCon1.f;
//   DS1.CjD1.B2.fBondCon1.d = -1.0;
//   DS1.CjD1.B2.eBondCon1.d = 1.0;
//   DS1.CjD1.Gj1.f = DS1.CjD1.Gj1.GminDC * DS1.CjD1.Gj1.e;
//   DS1.CjD1.Gj1.e = DS1.CjD1.Gj1.BondCon1.e;
//   DS1.CjD1.Gj1.f = DS1.CjD1.Gj1.BondCon1.d * DS1.CjD1.Gj1.BondCon1.f;
//   DS1.CjD1.nlC1.v = DS1.CjD1.nlC1.u;
//   DS1.CjD1.nlC1.Vt = 8.61727503842867e-05 * DS1.CjD1.nlC1.Tdev;
//   DS1.CjD1.nlC1.et = DS1.CjD1.nlC1.v / (DS1.CjD1.nlC1.Vt * DS1.CjD1.nlC1.N);
//   DS1.CjD1.nlC1.DTemp = DS1.CjD1.nlC1.Tdev - DS1.CjD1.nlC1.Tnom;
//   DS1.CjD1.nlC1.RTemp = DS1.CjD1.nlC1.Tdev / DS1.CjD1.nlC1.Tnom;
//   DS1.CjD1.nlC1.EGval = DS1.CjD1.nlC1.EG + (-0.000702 * DS1.CjD1.nlC1.Tdev ^ 2.0) / (1108.0 + DS1.CjD1.nlC1.Tdev);
//   DS1.CjD1.nlC1.EGnom = DS1.CjD1.nlC1.EG + (-0.000702 * DS1.CjD1.nlC1.Tnom ^ 2.0) / (1108.0 + DS1.CjD1.nlC1.Tnom);
//   DS1.CjD1.nlC1.ISval = DS1.CjD1.nlC1.IS * exp(((-1.0 + DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.EGnom) / (DS1.CjD1.nlC1.N * DS1.CjD1.nlC1.Vt) + (log(DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.XTI) / DS1.CjD1.nlC1.N);
//   DS1.CjD1.nlC1.JSval = DS1.CjD1.nlC1.JS * exp(((-1.0 + DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.EGnom) / (DS1.CjD1.nlC1.N * DS1.CjD1.nlC1.Vt) + (log(DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.XTI) / DS1.CjD1.nlC1.N);
//   DS1.CjD1.nlC1.ISWval = DS1.CjD1.nlC1.ISW * exp(((-1.0 + DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.EGnom) / (DS1.CjD1.nlC1.N * DS1.CjD1.nlC1.Vt) + (log(DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.XTI) / DS1.CjD1.nlC1.N);
//   DS1.CjD1.nlC1.JSWval = DS1.CjD1.nlC1.JSW * exp(((-1.0 + DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.EGnom) / (DS1.CjD1.nlC1.N * DS1.CjD1.nlC1.Vt) + (log(DS1.CjD1.nlC1.RTemp) * DS1.CjD1.nlC1.XTI) / DS1.CjD1.nlC1.N);
//   DS1.CjD1.nlC1.ISeff = if DS1.CjD1.nlC1.Level == 1 then DS1.CjD1.nlC1.Area * DS1.CjD1.nlC1.ISval + DS1.CjD1.nlC1.PJ * DS1.CjD1.nlC1.ISWval else if DS1.CjD1.nlC1.Level == 3 then DS1.CjD1.nlC1.AREAeff * DS1.CjD1.nlC1.JSval + DS1.CjD1.nlC1.PJeff * DS1.CjD1.nlC1.JSWval else 0.0;
//   DS1.CjD1.nlC1.PBval = DS1.CjD1.nlC1.PB * DS1.CjD1.nlC1.RTemp + (DS1.CjD1.nlC1.EGval + (-3.0 * (DS1.CjD1.nlC1.Vt * log(DS1.CjD1.nlC1.RTemp)) - DS1.CjD1.nlC1.EGnom * DS1.CjD1.nlC1.RTemp));
//   DS1.CjD1.nlC1.PHPval = DS1.CjD1.nlC1.PHP * DS1.CjD1.nlC1.RTemp + (DS1.CjD1.nlC1.EGval + (-3.0 * (DS1.CjD1.nlC1.Vt * log(DS1.CjD1.nlC1.RTemp)) - DS1.CjD1.nlC1.EGnom * DS1.CjD1.nlC1.RTemp));
//   DS1.CjD1.nlC1.CJval = DS1.CjD1.nlC1.CJ * (1.0 + DS1.CjD1.nlC1.MJ * (1.0 + ((-DS1.CjD1.nlC1.PBval) / DS1.CjD1.nlC1.PB + 0.0004 * DS1.CjD1.nlC1.DTemp)));
//   DS1.CjD1.nlC1.CJ2val = DS1.CjD1.nlC1.CJ2 * (1.0 + DS1.CjD1.nlC1.MJ * (1.0 + ((-DS1.CjD1.nlC1.PBval) / DS1.CjD1.nlC1.PB + 0.0004 * DS1.CjD1.nlC1.DTemp)));
//   DS1.CjD1.nlC1.CJSWval = DS1.CjD1.nlC1.CJSW * (1.0 + DS1.CjD1.nlC1.MJSW * (1.0 + ((-DS1.CjD1.nlC1.PHPval) / DS1.CjD1.nlC1.PHP + 0.0004 * DS1.CjD1.nlC1.DTemp)));
//   DS1.CjD1.nlC1.CJSW2val = DS1.CjD1.nlC1.CJSW2 * (1.0 + DS1.CjD1.nlC1.MJSW * (1.0 + ((-DS1.CjD1.nlC1.PHPval) / DS1.CjD1.nlC1.PHP + 0.0004 * DS1.CjD1.nlC1.DTemp)));
//   DS1.CjD1.nlC1.TTval = DS1.CjD1.nlC1.TT * (1.0 + (DS1.CjD1.nlC1.TTT1 * DS1.CjD1.nlC1.DTemp + DS1.CjD1.nlC1.TTT2 * DS1.CjD1.nlC1.DTemp ^ 2.0));
//   DS1.CjD1.nlC1.Cdiff = DS1.CjD1.nlC1.TTval * (DS1.CjD1.nlC1.GminDC + ((if DS1.CjD1.nlC1.et < DS1.CjD1.nlC1.EMin then DS1.CjD1.nlC1.ExMin * (1.0 + (DS1.CjD1.nlC1.et - DS1.CjD1.nlC1.EMin)) else if DS1.CjD1.nlC1.et > DS1.CjD1.nlC1.EMax then DS1.CjD1.nlC1.ExMax * (1.0 + (DS1.CjD1.nlC1.et - DS1.CjD1.nlC1.EMax)) else exp(DS1.CjD1.nlC1.et)) * (DS1.CjD1.nlC1.Area * DS1.CjD1.nlC1.ISeff)) / (DS1.CjD1.nlC1.N * DS1.CjD1.nlC1.Vt));
//   DS1.CjD1.nlC1.Cbulk = DS1.CjD1.nlC1.CJval * (if DS1.CjD1.nlC1.v > DS1.CjD1.nlC1.FC * DS1.CjD1.nlC1.PBval then (1.0 + ((DS1.CjD1.nlC1.MJ * DS1.CjD1.nlC1.v) / DS1.CjD1.nlC1.PBval - DS1.CjD1.nlC1.FC * (1.0 + DS1.CjD1.nlC1.MJ))) * (1.0 - DS1.CjD1.nlC1.FC) ^ (-1.0 - DS1.CjD1.nlC1.MJ) else abs(1.0 + (-DS1.CjD1.nlC1.v) / DS1.CjD1.nlC1.PBval) ^ (-DS1.CjD1.nlC1.MJ));
//   DS1.CjD1.nlC1.Cbulk2 = 0.0;
//   DS1.CjD1.nlC1.Cperi = DS1.CjD1.nlC1.CJSWval * (if DS1.CjD1.nlC1.v > DS1.CjD1.nlC1.FC * DS1.CjD1.nlC1.PHPval then (1.0 + ((DS1.CjD1.nlC1.MJSW * DS1.CjD1.nlC1.v) / DS1.CjD1.nlC1.PHPval - DS1.CjD1.nlC1.FC * (1.0 + DS1.CjD1.nlC1.MJSW))) * (1.0 - DS1.CjD1.nlC1.FC) ^ (-1.0 - DS1.CjD1.nlC1.MJSW) else abs(1.0 + (-DS1.CjD1.nlC1.v) / DS1.CjD1.nlC1.PHPval) ^ (-DS1.CjD1.nlC1.MJSW));
//   DS1.CjD1.nlC1.Cperi2 = 0.0;
//   DS1.CjD1.nlC1.Cpoly = 0.0;
//   DS1.CjD1.nlC1.Cmetal = 0.0;
//   DS1.CjD1.nlC1.Cval = DS1.CjD1.nlC1.Cdiff + (DS1.CjD1.nlC1.Area * DS1.CjD1.nlC1.Cbulk + DS1.CjD1.nlC1.PJ * DS1.CjD1.nlC1.Cperi);
//   DS1.CjD1.nlC1.y = DS1.CjD1.nlC1.Cval;
//   DS1.CjD1.DjD1.Vt = 8.61727503842867e-05 * DS1.CjD1.DjD1.e2;
//   DS1.CjD1.DjD1.RTemp = DS1.CjD1.DjD1.e2 / DS1.CjD1.DjD1.Tnom;
//   DS1.CjD1.DjD1.EGnom = DS1.CjD1.DjD1.EG + (-0.000702 * DS1.CjD1.DjD1.Tnom ^ 2.0) / (1108.0 + DS1.CjD1.DjD1.Tnom);
//   DS1.CjD1.DjD1.ISval = DS1.CjD1.DjD1.IS * exp(((-1.0 + DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.EGnom) / (DS1.CjD1.DjD1.N * DS1.CjD1.DjD1.Vt) + (log(DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.XTI) / DS1.CjD1.DjD1.N);
//   DS1.CjD1.DjD1.JSval = DS1.CjD1.DjD1.JS * exp(((-1.0 + DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.EGnom) / (DS1.CjD1.DjD1.N * DS1.CjD1.DjD1.Vt) + (log(DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.XTI) / DS1.CjD1.DjD1.N);
//   DS1.CjD1.DjD1.ISWval = DS1.CjD1.DjD1.ISW * exp(((-1.0 + DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.EGnom) / (DS1.CjD1.DjD1.N * DS1.CjD1.DjD1.Vt) + (log(DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.XTI) / DS1.CjD1.DjD1.N);
//   DS1.CjD1.DjD1.JSWval = DS1.CjD1.DjD1.JSW * exp(((-1.0 + DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.EGnom) / (DS1.CjD1.DjD1.N * DS1.CjD1.DjD1.Vt) + (log(DS1.CjD1.DjD1.RTemp) * DS1.CjD1.DjD1.XTI) / DS1.CjD1.DjD1.N);
//   DS1.CjD1.DjD1.ISeff = if DS1.CjD1.DjD1.Level == 1 then DS1.CjD1.DjD1.Area * DS1.CjD1.DjD1.ISval + DS1.CjD1.DjD1.PJ * DS1.CjD1.DjD1.ISWval else if DS1.CjD1.DjD1.Level == 3 then DS1.CjD1.DjD1.AREAeff * DS1.CjD1.DjD1.JSval + DS1.CjD1.DjD1.PJeff * DS1.CjD1.DjD1.JSWval else 0.0;
//   DS1.CjD1.DjD1.BVval = if DS1.CjD1.DjD1.BV > 0.0 then DS1.CjD1.DjD1.BV - DS1.CjD1.DjD1.TCV * DS1.CjD1.DjD1.DTemp else 0.0;
//   DS1.CjD1.DjD1.Ibreak = (-DS1.CjD1.DjD1.ISeff) * (-1.0 + exp((-DS1.CjD1.DjD1.BV) / (DS1.CjD1.DjD1.Vt * DS1.CjD1.DjD1.N)));
//   DS1.CjD1.DjD1.IBVval = if DS1.CjD1.DjD1.IBV < DS1.CjD1.DjD1.Ibreak then DS1.CjD1.DjD1.Ibreak else DS1.CjD1.DjD1.IBV;
//   DS1.CjD1.DjD1.BVeff = if noEvent(DS1.CjD1.DjD1.BV > 0.0) then DS1.CjD1.DjD1.BVval + DS1.CjD1.DjD1.N * (DS1.CjD1.DjD1.Vt * log(DS1.CjD1.DjD1.IBVval / DS1.CjD1.DjD1.Ibreak)) else 0.0;
//   DS1.CjD1.DjD1.et = DS1.CjD1.DjD1.e1 / (DS1.CjD1.DjD1.Vt * DS1.CjD1.DjD1.N);
//   DS1.CjD1.DjD1.et2 = (-DS1.CjD1.DjD1.BVeff - DS1.CjD1.DjD1.e1) / (DS1.CjD1.DjD1.Vt * DS1.CjD1.DjD1.N);
//   DS1.CjD1.DjD1.Eq = (DS1.CjD1.DjD1.e1 / DS1.CjD1.DjD1.TOX) ^ 2.0;
//   DS1.CjD1.DjD1.f1a = DS1.CjD1.DjD1.ISeff * (if noEvent(DS1.CjD1.DjD1.et < DS1.CjD1.DjD1.EMin) then DS1.CjD1.DjD1.ExMin * (1.0 + (DS1.CjD1.DjD1.et - DS1.CjD1.DjD1.EMin)) + -1.0 else if noEvent(DS1.CjD1.DjD1.et > DS1.CjD1.DjD1.EMax) then DS1.CjD1.DjD1.ExMax * (1.0 + (DS1.CjD1.DjD1.et - DS1.CjD1.DjD1.EMax)) + -1.0 else exp(DS1.CjD1.DjD1.et) + -1.0);
//   DS1.CjD1.DjD1.f1b = DS1.CjD1.DjD1.ISeff * (if noEvent(DS1.CjD1.DjD1.et2 < DS1.CjD1.DjD1.EMin) then DS1.CjD1.DjD1.ExMin * (1.0 + (DS1.CjD1.DjD1.et2 - DS1.CjD1.DjD1.EMin)) + -1.0 else if noEvent(DS1.CjD1.DjD1.et2 > DS1.CjD1.DjD1.EMax) then DS1.CjD1.DjD1.ExMax * (1.0 + (DS1.CjD1.DjD1.et2 - DS1.CjD1.DjD1.EMax)) + -1.0 else exp(DS1.CjD1.DjD1.et2) + -1.0);
//   DS1.CjD1.DjD1.f1 = if DS1.CjD1.DjD1.BV > 0.0 then DS1.CjD1.DjD1.f1a + ((-DS1.CjD1.DjD1.IBVval) / 2.0 - DS1.CjD1.DjD1.f1b) else DS1.CjD1.DjD1.f1a;
//   DS1.CjD1.DjD1.f2 = 0.0;
//   DS1.CjD1.DjD1.DTemp = DS1.CjD1.DjD1.e2 - DS1.CjD1.DjD1.Tnom;
//   DS1.CjD1.DjD1.DTempSq = DS1.CjD1.DjD1.DTemp ^ 2.0;
//   DS1.CjD1.DjD1.e1 = DS1.CjD1.DjD1.BondCon1.e;
//   DS1.CjD1.DjD1.f1 = DS1.CjD1.DjD1.BondCon1.d * DS1.CjD1.DjD1.BondCon1.f;
//   DS1.CjD1.DjD1.e2 = DS1.CjD1.DjD1.BondCon2.e;
//   DS1.CjD1.DjD1.f2 = (-DS1.CjD1.DjD1.BondCon2.d) * DS1.CjD1.DjD1.BondCon2.f;
//   DS1.CjD1.e1 = DS1.CjD1.BondCon1.e;
//   DS1.CjD1.f1 = DS1.CjD1.BondCon1.d * DS1.CjD1.BondCon1.f;
//   DS1.CjD1.e2 = DS1.CjD1.BondCon2.e;
//   DS1.CjD1.f2 = (-DS1.CjD1.BondCon2.d) * DS1.CjD1.BondCon2.f;
//   DS1.ID0.Vt = 8.61727503842867e-05 * DS1.ID0.Tdev;
//   DS1.ID0.IDstar = DS1.ID0.u;
//   DS1.ID0.IK = if DS1.ID0.v > -5.0 * (DS1.ID0.N * DS1.ID0.Vt) then DS1.ID0.IKF else if DS1.ID0.v > -10.0 * (DS1.ID0.N * DS1.ID0.Vt) then ((DS1.ID0.IKF - DS1.ID0.IKR) * DS1.ID0.v) / (DS1.ID0.Vt * DS1.ID0.N * 5.0) + (2.0 * DS1.ID0.IKF - DS1.ID0.IKR) else DS1.ID0.IKR;
//   DS1.ID0.ID = DS1.ID0.IDstar;
//   DS1.ID0.y = DS1.ID0.ID;
//   DS1.e1 = DS1.BondCon1.e;
//   DS1.f1 = DS1.BondCon1.d * DS1.BondCon1.f;
//   DS1.e2 = DS1.BondCon2.e;
//   DS1.f2 = (-DS1.BondCon2.d) * DS1.BondCon2.f;
//   B4.fBondCon1.e = B4.eBondCon1.e;
//   B4.eBondCon1.f = B4.fBondCon1.f;
//   B4.fBondCon1.d = -1.0;
//   B4.eBondCon1.d = 1.0;
//   B10.fBondCon1.e = B10.eBondCon1.e;
//   B10.eBondCon1.f = B10.fBondCon1.f;
//   B10.fBondCon1.d = -1.0;
//   B10.eBondCon1.d = 1.0;
//   R1.Rval = (R1.R * (1.0 + (R1.TR1 * R1.DTemp + R1.TR2 * R1.DTempSq))) / R1.Area;
//   R1.e1 = R1.Rval * R1.f1;
//   R1.e1 * R1.f1 = R1.e2 * R1.f2;
//   R1.DTemp = R1.e2 - R1.Tnom;
//   R1.DTempSq = R1.DTemp ^ 2.0;
//   R1.e1 = R1.BondCon1.e;
//   R1.f1 = R1.BondCon1.d * R1.BondCon1.f;
//   R1.e2 = R1.BondCon2.e;
//   R1.f2 = (-R1.BondCon2.d) * R1.BondCon2.f;
//   L1.Lval = L1.L * (1.0 + (L1.TL1 * L1.DTemp + L1.TL2 * L1.DTempSq));
//   L1.e1 = L1.Lval * der(L1.f1);
//   L1.f2 = 0.0;
//   L1.DTemp = L1.e2 - L1.Tnom;
//   L1.DTempSq = L1.DTemp ^ 2.0;
//   L1.e1 = L1.BondCon1.e;
//   L1.f1 = L1.BondCon1.d * L1.BondCon1.f;
//   L1.e2 = L1.BondCon2.e;
//   L1.f2 = (-L1.BondCon2.d) * L1.BondCon2.f;
//   B9.fBondCon1.e = B9.eBondCon1.e;
//   B9.eBondCon1.f = B9.fBondCon1.f;
//   B9.eBondCon1.d = -1.0;
//   B9.fBondCon1.d = 1.0;
//   B2.fBondCon1.e = B2.eBondCon1.e;
//   B2.eBondCon1.f = B2.fBondCon1.f;
//   B2.eBondCon1.d = -1.0;
//   B2.fBondCon1.d = 1.0;
//   C1.Cval = C1.C * ((1.0 + (C1.TC1 * C1.DTemp + C1.TC2 * C1.DTempSq)) * C1.Area);
//   C1.f1 = C1.Cval * der(C1.e1);
//   C1.f2 = 0.0;
//   C1.DTemp = C1.e2 - C1.Tnom;
//   C1.DTempSq = C1.DTemp ^ 2.0;
//   C1.e1 = C1.BondCon1.e;
//   C1.f1 = C1.BondCon1.d * C1.BondCon1.f;
//   C1.e2 = C1.BondCon2.e;
//   C1.f2 = (-C1.BondCon2.d) * C1.BondCon2.f;
//   B7.fBondCon1.e = B7.eBondCon1.e;
//   B7.eBondCon1.f = B7.fBondCon1.f;
//   B7.fBondCon1.d = -1.0;
//   B7.eBondCon1.d = 1.0;
//   B5.fBondCon1.e = B5.eBondCon1.e;
//   B5.eBondCon1.f = B5.fBondCon1.f;
//   B5.fBondCon1.d = -1.0;
//   B5.eBondCon1.d = 1.0;
//   vout = Vout.e;
//   DS1.CjD1.B2.eBondCon1.e = DS1.CjD1.Cj1.BondCon1.e;
//   DS1.CjD1.B2.eBondCon1.f = DS1.CjD1.Cj1.BondCon1.f;
//   DS1.CjD1.B2.eBondCon1.d = DS1.CjD1.Cj1.BondCon1.d;
//   DS1.CjD1.B2.fBondCon1.e = DS1.CjD1.J0p3_1.BondCon3.e;
//   DS1.CjD1.B2.fBondCon1.f = DS1.CjD1.J0p3_1.BondCon3.f;
//   DS1.CjD1.B2.fBondCon1.d = DS1.CjD1.J0p3_1.BondCon3.d;
//   DS1.CjD1.B5.eBondCon1.e = DS1.CjD1.J1p3_1.BondCon2.e;
//   DS1.CjD1.B5.eBondCon1.f = DS1.CjD1.J1p3_1.BondCon2.f;
//   DS1.CjD1.B5.eBondCon1.d = DS1.CjD1.J1p3_1.BondCon2.d;
//   DS1.CjD1.B4.fBondCon1.e = DS1.CjD1.J1p3_1.BondCon1.e;
//   DS1.CjD1.B4.fBondCon1.f = DS1.CjD1.J1p3_1.BondCon1.f;
//   DS1.CjD1.B4.fBondCon1.d = DS1.CjD1.J1p3_1.BondCon1.d;
//   DS1.CjD1.B3.fBondCon1.e = DS1.CjD1.J1p3_1.BondCon3.e;
//   DS1.CjD1.B3.fBondCon1.f = DS1.CjD1.J1p3_1.BondCon3.f;
//   DS1.CjD1.B3.fBondCon1.d = DS1.CjD1.J1p3_1.BondCon3.d;
//   DS1.CjD1.B9.eBondCon1.e = DS1.CjD1.J0p3_3.BondCon3.e;
//   DS1.CjD1.B9.eBondCon1.f = DS1.CjD1.J0p3_3.BondCon3.f;
//   DS1.CjD1.B9.eBondCon1.d = DS1.CjD1.J0p3_3.BondCon3.d;
//   DS1.CjD1.B9.fBondCon1.e = DS1.CjD1.DjD1.BondCon2.e;
//   DS1.CjD1.B9.fBondCon1.f = DS1.CjD1.DjD1.BondCon2.f;
//   DS1.CjD1.B9.fBondCon1.d = DS1.CjD1.DjD1.BondCon2.d;
//   DS1.CjD1.B4.eBondCon1.e = DS1.CjD1.id1.BondCon1.e;
//   DS1.CjD1.B4.eBondCon1.f = DS1.CjD1.id1.BondCon1.f;
//   DS1.CjD1.B4.eBondCon1.d = DS1.CjD1.id1.BondCon1.d;
//   DS1.CjD1.id = DS1.CjD1.id1.OutPort1;
//   DS1.CjD1.B5.fBondCon1.e = DS1.CjD1.J0p3_2.BondCon3.e;
//   DS1.CjD1.B5.fBondCon1.f = DS1.CjD1.J0p3_2.BondCon3.f;
//   DS1.CjD1.B5.fBondCon1.d = DS1.CjD1.J0p3_2.BondCon3.d;
//   DS1.CjD1.B8.eBondCon1.e = DS1.CjD1.J0p3_3.BondCon1.e;
//   DS1.CjD1.B8.eBondCon1.f = DS1.CjD1.J0p3_3.BondCon1.f;
//   DS1.CjD1.B8.eBondCon1.d = DS1.CjD1.J0p3_3.BondCon1.d;
//   DS1.CjD1.B8.fBondCon1.e = DS1.CjD1.Tdev.BondCon1.e;
//   DS1.CjD1.B8.fBondCon1.f = DS1.CjD1.Tdev.BondCon1.f;
//   DS1.CjD1.B8.fBondCon1.d = DS1.CjD1.Tdev.BondCon1.d;
//   DS1.CjD1.Tdev.OutPort1 = DS1.CjD1.nlC1.Tdev;
//   DS1.CjD1.B1.fBondCon1.e = DS1.CjD1.vbi.BondCon1.e;
//   DS1.CjD1.B1.fBondCon1.f = DS1.CjD1.vbi.BondCon1.f;
//   DS1.CjD1.B1.fBondCon1.d = DS1.CjD1.vbi.BondCon1.d;
//   DS1.CjD1.B3.eBondCon1.e = DS1.CjD1.Vbi.BondCon1.e;
//   DS1.CjD1.B3.eBondCon1.f = DS1.CjD1.Vbi.BondCon1.f;
//   DS1.CjD1.B3.eBondCon1.d = DS1.CjD1.Vbi.BondCon1.d;
//   DS1.CjD1.B6.eBondCon1.e = DS1.CjD1.J0p3_2.BondCon2.e;
//   DS1.CjD1.B6.eBondCon1.f = DS1.CjD1.J0p3_2.BondCon2.f;
//   DS1.CjD1.B6.eBondCon1.d = DS1.CjD1.J0p3_2.BondCon2.d;
//   DS1.CjD1.B7.eBondCon1.e = DS1.CjD1.J0p3_2.BondCon1.e;
//   DS1.CjD1.B7.eBondCon1.f = DS1.CjD1.J0p3_2.BondCon1.f;
//   DS1.CjD1.B7.eBondCon1.d = DS1.CjD1.J0p3_2.BondCon1.d;
//   DS1.CjD1.B7.fBondCon1.e = DS1.CjD1.Gj1.BondCon1.e;
//   DS1.CjD1.B7.fBondCon1.f = DS1.CjD1.Gj1.BondCon1.f;
//   DS1.CjD1.B7.fBondCon1.d = DS1.CjD1.Gj1.BondCon1.d;
//   DS1.CjD1.BondCon2.e = DS1.CjD1.J0p3_3.BondCon2.e;
//   DS1.CjD1.BondCon2.f = DS1.CjD1.J0p3_3.BondCon2.f;
//   DS1.CjD1.BondCon2.d = DS1.CjD1.J0p3_3.BondCon2.d;
//   DS1.CjD1.BondCon1.e = DS1.CjD1.J0p3_1.BondCon1.e;
//   DS1.CjD1.BondCon1.f = DS1.CjD1.J0p3_1.BondCon1.f;
//   DS1.CjD1.BondCon1.d = DS1.CjD1.J0p3_1.BondCon1.d;
//   DS1.CjD1.B1.eBondCon1.e = DS1.CjD1.J0p3_1.BondCon2.e;
//   DS1.CjD1.B1.eBondCon1.f = DS1.CjD1.J0p3_1.BondCon2.f;
//   DS1.CjD1.B1.eBondCon1.d = DS1.CjD1.J0p3_1.BondCon2.d;
//   DS1.CjD1.Vbi.s = DS1.CjD1.nlC1.u;
//   DS1.CjD1.Vbi.s = DS1.CjD1.vbi.OutPort1;
//   DS1.CjD1.B6.fBondCon1.e = DS1.CjD1.DjD1.BondCon1.e;
//   DS1.CjD1.B6.fBondCon1.f = DS1.CjD1.DjD1.BondCon1.f;
//   DS1.CjD1.B6.fBondCon1.d = DS1.CjD1.DjD1.BondCon1.d;
//   DS1.CjD1.Cj1.s = DS1.CjD1.nlC1.y;
//   DS1.BondCon1.e = DS1.J0p2_1.BondCon1.e;
//   DS1.BondCon1.f = DS1.J0p2_1.BondCon1.f;
//   DS1.BondCon1.d = DS1.J0p2_1.BondCon1.d;
//   DS1.BondCon2.e = DS1.J0p5_1.BondCon2.e;
//   DS1.BondCon2.f = DS1.J0p5_1.BondCon2.f;
//   DS1.BondCon2.d = DS1.J0p5_1.BondCon2.d;
//   DS1.B1.BondCon1.e = DS1.J0p2_1.BondCon2.e;
//   DS1.B1.BondCon1.f = DS1.J0p2_1.BondCon2.f;
//   DS1.B1.BondCon1.d = DS1.J0p2_1.BondCon2.d;
//   DS1.B1.BondCon2.e = DS1.J1p3_1.BondCon1.e;
//   DS1.B1.BondCon2.f = DS1.J1p3_1.BondCon1.f;
//   DS1.B1.BondCon2.d = DS1.J1p3_1.BondCon1.d;
//   DS1.B2.BondCon1.e = DS1.J1p3_1.BondCon2.e;
//   DS1.B2.BondCon1.f = DS1.J1p3_1.BondCon2.f;
//   DS1.B2.BondCon1.d = DS1.J1p3_1.BondCon2.d;
//   DS1.B2.BondCon2.e = DS1.J0p4_1.BondCon1.e;
//   DS1.B2.BondCon2.f = DS1.J0p4_1.BondCon1.f;
//   DS1.B2.BondCon2.d = DS1.J0p4_1.BondCon1.d;
//   DS1.B3.eBondCon1.e = DS1.J0p4_1.BondCon2.e;
//   DS1.B3.eBondCon1.f = DS1.J0p4_1.BondCon2.f;
//   DS1.B3.eBondCon1.d = DS1.J0p4_1.BondCon2.d;
//   DS1.B4.eBondCon1.e = DS1.J0p5_1.BondCon1.e;
//   DS1.B4.eBondCon1.f = DS1.J0p5_1.BondCon1.f;
//   DS1.B4.eBondCon1.d = DS1.J0p5_1.BondCon1.d;
//   DS1.B5.BondCon1.e = DS1.J1p3_1.BondCon3.e;
//   DS1.B5.BondCon1.f = DS1.J1p3_1.BondCon3.f;
//   DS1.B5.BondCon1.d = DS1.J1p3_1.BondCon3.d;
//   DS1.B7.BondCon1.e = DS1.J0p4_1.BondCon4.e;
//   DS1.B7.BondCon1.f = DS1.J0p4_1.BondCon4.f;
//   DS1.B7.BondCon1.d = DS1.J0p4_1.BondCon4.d;
//   DS1.B7.BondCon2.e = DS1.CjD1.BondCon1.e;
//   DS1.B7.BondCon2.f = DS1.CjD1.BondCon1.f;
//   DS1.B7.BondCon2.d = DS1.CjD1.BondCon1.d;
//   DS1.CjD1.id = DS1.ID0.u;
//   DS1.B8.fBondCon1.e = DS1.CjD1.BondCon2.e;
//   DS1.B8.fBondCon1.f = DS1.CjD1.BondCon2.f;
//   DS1.B8.fBondCon1.d = DS1.CjD1.BondCon2.d;
//   DS1.Gain1.u = DS1.ID0.y;
//   DS1.B9.eBondCon1.e = DS1.J0p5_1.BondCon5.e;
//   DS1.B9.eBondCon1.f = DS1.J0p5_1.BondCon5.f;
//   DS1.B9.eBondCon1.d = DS1.J0p5_1.BondCon5.d;
//   DS1.B9.fBondCon1.e = DS1.Tdev.BondCon1.e;
//   DS1.B9.fBondCon1.f = DS1.Tdev.BondCon1.f;
//   DS1.B9.fBondCon1.d = DS1.Tdev.BondCon1.d;
//   DS1.ID0.Tdev = DS1.Tdev.OutPort1;
//   DS1.B10.eBondCon1.e = DS1.J0p4_1.BondCon3.e;
//   DS1.B10.eBondCon1.f = DS1.J0p4_1.BondCon3.f;
//   DS1.B10.eBondCon1.d = DS1.J0p4_1.BondCon3.d;
//   DS1.B10.fBondCon1.e = DS1.vd.BondCon1.e;
//   DS1.B10.fBondCon1.f = DS1.vd.BondCon1.f;
//   DS1.B10.fBondCon1.d = DS1.vd.BondCon1.d;
//   DS1.ID0.v = DS1.vd.OutPort1;
//   DS1.B6.eBondCon1.e = DS1.J0p5_1.BondCon3.e;
//   DS1.B6.eBondCon1.f = DS1.J0p5_1.BondCon3.f;
//   DS1.B6.eBondCon1.d = DS1.J0p5_1.BondCon3.d;
//   DS1.B8.eBondCon1.e = DS1.J0p5_1.BondCon4.e;
//   DS1.B8.eBondCon1.f = DS1.J0p5_1.BondCon4.f;
//   DS1.B8.eBondCon1.d = DS1.J0p5_1.BondCon4.d;
//   DS1.B5.BondCon2.e = DS1.RS1.BondCon1.e;
//   DS1.B5.BondCon2.f = DS1.RS1.BondCon1.f;
//   DS1.B5.BondCon2.d = DS1.RS1.BondCon1.d;
//   DS1.B6.fBondCon1.e = DS1.RS1.BondCon2.e;
//   DS1.B6.fBondCon1.f = DS1.RS1.BondCon2.f;
//   DS1.B6.fBondCon1.d = DS1.RS1.BondCon2.d;
//   DS1.B3.fBondCon1.e = DS1.mSf_int1.BondCon2.e;
//   DS1.B3.fBondCon1.f = DS1.mSf_int1.BondCon2.f;
//   DS1.B3.fBondCon1.d = DS1.mSf_int1.BondCon2.d;
//   DS1.B4.fBondCon1.e = DS1.mSf_int1.BondCon1.e;
//   DS1.B4.fBondCon1.f = DS1.mSf_int1.BondCon1.f;
//   DS1.B4.fBondCon1.d = DS1.mSf_int1.BondCon1.d;
//   DS1.Gain1.y = DS1.mSf_int1.s;
//   B5.eBondCon1.e = J0p5_1.BondCon4.e;
//   B5.eBondCon1.f = J0p5_1.BondCon4.f;
//   B5.eBondCon1.d = J0p5_1.BondCon4.d;
//   B5.fBondCon1.e = DS1.BondCon2.e;
//   B5.fBondCon1.f = DS1.BondCon2.f;
//   B5.fBondCon1.d = DS1.BondCon2.d;
//   B7.eBondCon1.e = C1.BondCon1.e;
//   B7.eBondCon1.f = C1.BondCon1.f;
//   B7.eBondCon1.d = C1.BondCon1.d;
//   B7.fBondCon1.e = J0p4_1.BondCon4.e;
//   B7.fBondCon1.f = J0p4_1.BondCon4.f;
//   B7.fBondCon1.d = J0p4_1.BondCon4.d;
//   B8.fBondCon1.e = C1.BondCon2.e;
//   B8.fBondCon1.f = C1.BondCon2.f;
//   B8.fBondCon1.d = C1.BondCon2.d;
//   B2.fBondCon1.e = L1.BondCon1.e;
//   B2.fBondCon1.f = L1.BondCon1.f;
//   B2.fBondCon1.d = L1.BondCon1.d;
//   B2.eBondCon1.e = J1p4_1.BondCon4.e;
//   B2.eBondCon1.f = J1p4_1.BondCon4.f;
//   B2.eBondCon1.d = J1p4_1.BondCon4.d;
//   B9.fBondCon1.e = R1.BondCon1.e;
//   B9.fBondCon1.f = R1.BondCon1.f;
//   B9.fBondCon1.d = R1.BondCon1.d;
//   B9.eBondCon1.e = J0p4_1.BondCon3.e;
//   B9.eBondCon1.f = J0p4_1.BondCon3.f;
//   B9.eBondCon1.d = J0p4_1.BondCon3.d;
//   B3.fBondCon1.e = L1.BondCon2.e;
//   B3.fBondCon1.f = L1.BondCon2.f;
//   B3.fBondCon1.d = L1.BondCon2.d;
//   B10.fBondCon1.e = R1.BondCon2.e;
//   B10.fBondCon1.f = R1.BondCon2.f;
//   B10.fBondCon1.d = R1.BondCon2.d;
//   B10.eBondCon1.e = J0p5_1.BondCon3.e;
//   B10.eBondCon1.f = J0p5_1.BondCon3.f;
//   B10.eBondCon1.d = J0p5_1.BondCon3.d;
//   B4.eBondCon1.e = DS1.BondCon1.e;
//   B4.eBondCon1.f = DS1.BondCon1.f;
//   B4.eBondCon1.d = DS1.BondCon1.d;
//   B4.fBondCon1.e = J1p4_1.BondCon3.e;
//   B4.fBondCon1.f = J1p4_1.BondCon3.f;
//   B4.fBondCon1.d = J1p4_1.BondCon3.d;
//   B8.eBondCon1.e = J0p5_1.BondCon1.e;
//   B8.eBondCon1.f = J0p5_1.BondCon1.f;
//   B8.eBondCon1.d = J0p5_1.BondCon1.d;
//   B3.eBondCon1.e = J0p5_1.BondCon5.e;
//   B3.eBondCon1.f = J0p5_1.BondCon5.f;
//   B3.eBondCon1.d = J0p5_1.BondCon5.d;
//   B1.eBondCon1.e = V0.BondCon1.e;
//   B1.eBondCon1.f = V0.BondCon1.f;
//   B1.eBondCon1.d = V0.BondCon1.d;
//   B1.fBondCon1.e = J1p4_1.BondCon1.e;
//   B1.fBondCon1.f = J1p4_1.BondCon1.f;
//   B1.fBondCon1.d = J1p4_1.BondCon1.d;
//   B6.fBondCon1.e = J1p4_1.BondCon2.e;
//   B6.fBondCon1.f = J1p4_1.BondCon2.f;
//   B6.fBondCon1.d = J1p4_1.BondCon2.d;
//   B6.eBondCon1.e = J0p4_1.BondCon1.e;
//   B6.eBondCon1.f = J0p4_1.BondCon1.f;
//   B6.eBondCon1.d = J0p4_1.BondCon1.d;
//   B11.eBondCon1.e = J0p4_1.BondCon2.e;
//   B11.eBondCon1.f = J0p4_1.BondCon2.f;
//   B11.eBondCon1.d = J0p4_1.BondCon2.d;
//   B11.fBondCon1.e = Vout.BondCon1.e;
//   B11.fBondCon1.f = Vout.BondCon1.f;
//   B11.fBondCon1.d = Vout.BondCon1.d;
//   B12.fBondCon1.e = J0p5_1.BondCon2.e;
//   B12.fBondCon1.f = J0p5_1.BondCon2.f;
//   B12.fBondCon1.d = J0p5_1.BondCon2.d;
//   B12.eBondCon1.e = Tdev.BondCon1.e;
//   B12.eBondCon1.f = Tdev.BondCon1.f;
//   B12.eBondCon1.d = Tdev.BondCon1.d;
// end BondLib_Examples_ModelicaSpice_OneWayRectifierBG;
// "
// "Warning: Parameter DS1.BVval has neither value nor start value, and is fixed during initialization (fixed=true)
// "
// endResult
