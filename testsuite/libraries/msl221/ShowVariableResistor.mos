//name:         ShowVariableResistor
//keyword:      instantiating msl221
//status:       correct
//
// instantiate example
//

loadModel(Modelica,{"2.2.1"});
instantiateModel(Modelica.Electrical.Analog.Examples.ShowVariableResistor);
getErrorString();
// Result:
// true
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\");
// 
//   external \"C\";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\");
//   output Real y;
// 
//   external \"C\";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.ShowVariableResistor
//   Real VariableResistor.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins (= p.v - n.v)\";
//   Real VariableResistor.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real VariableResistor.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VariableResistor.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VariableResistor.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VariableResistor.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real VariableResistor.R(quantity = \"Resistance\", unit = \"Ohm\");
//   Real Ground1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Ground1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Ground2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Ground2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real R1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins (= p.v - n.v)\";
//   Real R1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real R1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real R1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real R1.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 \"Resistance\";
//   Real R2.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins (= p.v - n.v)\";
//   Real R2.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real R2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real R2.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R2.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real R2.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 \"Resistance\";
//   Real R3.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins (= p.v - n.v)\";
//   Real R3.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real R3.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R3.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real R3.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R3.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real R3.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 \"Resistance\";
//   Real R4.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins (= p.v - n.v)\";
//   Real R4.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real R4.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R4.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real R4.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R4.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real R4.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 \"Resistance\";
//   Real R5.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins (= p.v - n.v)\";
//   Real R5.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real R5.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R5.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real R5.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real R5.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real R5.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 \"Resistance\";
//   Real SineVoltage1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins (= p.v - n.v)\";
//   Real SineVoltage1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real SineVoltage1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real SineVoltage1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real SineVoltage1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real SineVoltage1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real SineVoltage1.offset(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Voltage offset\";
//   parameter Real SineVoltage1.startTime(quantity = \"Time\", unit = \"s\") = 0.0 \"Time offset\";
//   output Real SineVoltage1.signalSource.y \"Connector of Real output signal\";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V \"Amplitude of sine wave\";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = \"Frequency\", unit = \"Hz\") = SineVoltage1.freqHz \"Frequency of sine wave\";
//   parameter Real SineVoltage1.signalSource.phase(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\") = SineVoltage1.phase \"Phase of sine wave\";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset \"Offset of output signal\";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = \"Time\", unit = \"s\") = SineVoltage1.startTime \"Output = offset for time < startTime\";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = \"ElectricPotential\", unit = \"V\") = 1.0 \"Amplitude of sine wave\";
//   parameter Real SineVoltage1.phase(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\") = 0.0 \"Phase of sine wave\";
//   parameter Real SineVoltage1.freqHz(quantity = \"Frequency\", unit = \"Hz\") = 1.0 \"Frequency of sine wave\";
//   output Real Ramp1.y \"Connector of Real output signal\";
//   parameter Real Ramp1.height = 5.0 \"Height of ramps\";
//   parameter Real Ramp1.duration(min = 1e-60) = 2.0 \"Durations of ramp\";
//   parameter Real Ramp1.offset = 2.0 \"Offset of output signal\";
//   parameter Real Ramp1.startTime(quantity = \"Time\", unit = \"s\") = 0.0 \"Output = offset for time < startTime\";
// equation
//   VariableResistor.v = VariableResistor.R * VariableResistor.i;
//   VariableResistor.v = VariableResistor.p.v - VariableResistor.n.v;
//   0.0 = VariableResistor.p.i + VariableResistor.n.i;
//   VariableResistor.i = VariableResistor.p.i;
//   Ground1.p.v = 0.0;
//   Ground2.p.v = 0.0;
//   R1.R * R1.i = R1.v;
//   R1.v = R1.p.v - R1.n.v;
//   0.0 = R1.p.i + R1.n.i;
//   R1.i = R1.p.i;
//   R2.R * R2.i = R2.v;
//   R2.v = R2.p.v - R2.n.v;
//   0.0 = R2.p.i + R2.n.i;
//   R2.i = R2.p.i;
//   R3.R * R3.i = R3.v;
//   R3.v = R3.p.v - R3.n.v;
//   0.0 = R3.p.i + R3.n.i;
//   R3.i = R3.p.i;
//   R4.R * R4.i = R4.v;
//   R4.v = R4.p.v - R4.n.v;
//   0.0 = R4.p.i + R4.n.i;
//   R4.i = R4.p.i;
//   R5.R * R5.i = R5.v;
//   R5.v = R5.p.v - R5.n.v;
//   0.0 = R5.p.i + R5.n.i;
//   R5.i = R5.p.i;
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   Ramp1.y = Ramp1.offset + (if time < Ramp1.startTime then 0.0 else if time < Ramp1.startTime + Ramp1.duration then ((time - Ramp1.startTime) * Ramp1.height) / Ramp1.duration else Ramp1.height);
//   Ramp1.y = VariableResistor.R;
//   SineVoltage1.n.i + (R1.p.i + R4.p.i) = 0.0;
//   R1.p.v = R4.p.v;
//   R1.p.v = SineVoltage1.n.v;
//   SineVoltage1.p.i + Ground1.p.i = 0.0;
//   Ground1.p.v = SineVoltage1.p.v;
//   R1.n.i + R2.p.i = 0.0;
//   R1.n.v = R2.p.v;
//   R2.n.i + R3.p.i = 0.0;
//   R2.n.v = R3.p.v;
//   R4.n.i + VariableResistor.p.i = 0.0;
//   R4.n.v = VariableResistor.p.v;
//   VariableResistor.n.i + R5.p.i = 0.0;
//   R5.p.v = VariableResistor.n.v;
//   R3.n.i + (Ground2.p.i + R5.n.i) = 0.0;
//   Ground2.p.v = R3.n.v;
//   Ground2.p.v = R5.n.v;
// end Modelica.Electrical.Analog.Examples.ShowVariableResistor;
// "
// "[ShowVariableResistor.mo:24:3-24:179:writable] Warning: Component VariableResistor has the same name as its type Modelica.Electrical.Analog.Basic.VariableResistor.
// 	This is forbidden by Modelica specification and may lead to lookup errors.
// "
// endResult
