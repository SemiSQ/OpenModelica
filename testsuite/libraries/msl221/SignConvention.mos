//name:         SignConvention
//keyword:      instantiating msl221
//status:       correct
//
// instantiate example
//

loadModel(Modelica,{"2.2.1"});
instantiateModel(Modelica.Mechanics.Translational.Examples.SignConvention);
getErrorString();
// Result:
// true
// "class Modelica.Mechanics.Translational.Examples.SignConvention
//   Real SlidingMass1.s(quantity = \"Length\", unit = \"m\") \"absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2)\";
//   parameter Real SlidingMass1.L(quantity = \"Length\", unit = \"m\") = 1.0 \"length of component from left flange to right flange (= flange_b.s - flange_a.s)\";
//   Real SlidingMass1.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SlidingMass1.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real SlidingMass1.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SlidingMass1.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real SlidingMass1.m(quantity = \"Mass\", unit = \"kg\", min = 0.0) = 1.0 \"mass of the sliding mass\";
//   Real SlidingMass1.v(quantity = \"Velocity\", unit = \"m/s\") \"absolute velocity of component\";
//   Real SlidingMass1.a(quantity = \"Acceleration\", unit = \"m/s2\") \"absolute acceleration of component\";
//   Real Force1.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real Force1.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   input Real Force1.f(quantity = \"Force\", unit = \"N\") \"driving force as input signal\";
//   output Real Constant1.y \"Connector of Real output signal\";
//   parameter Real Constant1.k = 1.0 \"Constant output value\";
//   Real SlidingMass2.s(quantity = \"Length\", unit = \"m\") \"absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2)\";
//   parameter Real SlidingMass2.L(quantity = \"Length\", unit = \"m\") = 1.0 \"length of component from left flange to right flange (= flange_b.s - flange_a.s)\";
//   Real SlidingMass2.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SlidingMass2.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real SlidingMass2.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SlidingMass2.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real SlidingMass2.m(quantity = \"Mass\", unit = \"kg\", min = 0.0) = 1.0 \"mass of the sliding mass\";
//   Real SlidingMass2.v(quantity = \"Velocity\", unit = \"m/s\") \"absolute velocity of component\";
//   Real SlidingMass2.a(quantity = \"Acceleration\", unit = \"m/s2\") \"absolute acceleration of component\";
//   Real Force2.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real Force2.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   input Real Force2.f(quantity = \"Force\", unit = \"N\") \"driving force as input signal\";
//   output Real Constant2.y \"Connector of Real output signal\";
//   parameter Real Constant2.k = 1.0 \"Constant output value\";
//   Real SlidingMass3.s(quantity = \"Length\", unit = \"m\") \"absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2)\";
//   parameter Real SlidingMass3.L(quantity = \"Length\", unit = \"m\") = 1.0 \"length of component from left flange to right flange (= flange_b.s - flange_a.s)\";
//   Real SlidingMass3.flange_a.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SlidingMass3.flange_a.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   Real SlidingMass3.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real SlidingMass3.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   parameter Real SlidingMass3.m(quantity = \"Mass\", unit = \"kg\", min = 0.0) = 1.0 \"mass of the sliding mass\";
//   Real SlidingMass3.v(quantity = \"Velocity\", unit = \"m/s\") \"absolute velocity of component\";
//   Real SlidingMass3.a(quantity = \"Acceleration\", unit = \"m/s2\") \"absolute acceleration of component\";
//   Real Force3.flange_b.s(quantity = \"Length\", unit = \"m\") \"absolute position of flange\";
//   Real Force3.flange_b.f(quantity = \"Force\", unit = \"N\") \"cut force directed into flange\";
//   input Real Force3.f(quantity = \"Force\", unit = \"N\") \"driving force as input signal\";
//   output Real Constant3.y \"Connector of Real output signal\";
//   parameter Real Constant3.k = 1.0 \"Constant output value\";
// equation
//   SlidingMass1.v = der(SlidingMass1.s);
//   SlidingMass1.a = der(SlidingMass1.v);
//   SlidingMass1.m * SlidingMass1.a = SlidingMass1.flange_a.f + SlidingMass1.flange_b.f;
//   SlidingMass1.flange_a.s = SlidingMass1.s + (-SlidingMass1.L) / 2.0;
//   SlidingMass1.flange_b.s = SlidingMass1.s + SlidingMass1.L / 2.0;
//   Force1.flange_b.f = -Force1.f;
//   Constant1.y = Constant1.k;
//   SlidingMass2.v = der(SlidingMass2.s);
//   SlidingMass2.a = der(SlidingMass2.v);
//   SlidingMass2.m * SlidingMass2.a = SlidingMass2.flange_a.f + SlidingMass2.flange_b.f;
//   SlidingMass2.flange_a.s = SlidingMass2.s + (-SlidingMass2.L) / 2.0;
//   SlidingMass2.flange_b.s = SlidingMass2.s + SlidingMass2.L / 2.0;
//   Force2.flange_b.f = -Force2.f;
//   Constant2.y = Constant2.k;
//   SlidingMass3.v = der(SlidingMass3.s);
//   SlidingMass3.a = der(SlidingMass3.v);
//   SlidingMass3.m * SlidingMass3.a = SlidingMass3.flange_a.f + SlidingMass3.flange_b.f;
//   SlidingMass3.flange_a.s = SlidingMass3.s + (-SlidingMass3.L) / 2.0;
//   SlidingMass3.flange_b.s = SlidingMass3.s + SlidingMass3.L / 2.0;
//   Force3.flange_b.f = -Force3.f;
//   Constant3.y = Constant3.k;
//   Force1.flange_b.f + SlidingMass1.flange_a.f = 0.0;
//   Force1.flange_b.s = SlidingMass1.flange_a.s;
//   Force2.flange_b.f + SlidingMass2.flange_b.f = 0.0;
//   Force2.flange_b.s = SlidingMass2.flange_b.s;
//   SlidingMass3.flange_b.f + Force3.flange_b.f = 0.0;
//   Force3.flange_b.s = SlidingMass3.flange_b.s;
//   Constant1.y = Force1.f;
//   Constant2.y = Force2.f;
//   Constant3.y = Force3.f;
//   SlidingMass3.flange_a.f = 0.0;
//   SlidingMass2.flange_a.f = 0.0;
//   SlidingMass1.flange_b.f = 0.0;
// end Modelica.Mechanics.Translational.Examples.SignConvention;
// "
// ""
// endResult
