// name:     TestNand 
// keywords: instantiate, bondlib
// status:   correct
// 
//  simulate TestNand BondLib Spice example
//

loadFile("TestNandTotal.mo");
instantiateModel(BondLib_Examples_ModelicaSpice_NandGate_TestNand);
getErrorString();
// Result:
// true
// "function BondLib.Spice.Utilities.MOSeq3 \"Computation of injected drain-source current for Level=3\"
//   input Real vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   input Real vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   input Real Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   input Real sig \"sign(vds)\";
//   input Integer Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   input Real Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Reference temperature\";
//   input Real VFB(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at reference temperature\";
//   input Real KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at reference temperature\";
//   input Real GAMMA(unit = \"V^0.5\") \"Body-effect parameter\";
//   input Real PHI(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at reference temperature\";
//   input Real COX(unit = \"F/m2\") \"Specific capacitance of SiO2\";
//   input Real NFS(unit = \"1/m2\") \"Surface fast state density\";
//   input Real XJ(quantity = \"Length\", unit = \"m\") \"Metallurgical junction depth\";
//   input Real L(quantity = \"Length\", unit = \"m\") \"Effective hannel length\";
//   input Real W(quantity = \"Length\", unit = \"m\") \"Effective channel width\";
//   input Real LD(quantity = \"Length\", unit = \"m\") \"Lateral diffusion\";
//   input Real XD(unit = \"m/V^0.5\") \"Depletion factor\";
//   input Real U0(unit = \"m2/(V.s)\") \"Surface mobility at reference temperature\";
//   input Real VMAX(quantity = \"Velocity\", unit = \"m/s\") \"Maximum drift velocity of carriers\";
//   input Real DELTA \"Width effect on threshold voltage\";
//   input Real KAPPA \"Saturation field factor\";
//   input Real ETA \"Static feedback on threshold voltage\";
//   input Real THETA(quantity = \"InversePotential\", unit = \"1/V\") \"Mobility modulation\";
//   input Real EG(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real EMin \"if x < EMin, the exp(x) function is linearized\";
//   input Real EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real ids0(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Effective flat band voltage at device temperature\";
//   output Real Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   output Real vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   output Real vpof(quantity = \"ElectricPotential\", unit = \"V\") \"Pinch-off voltage\";
//   protected constant Real pi = 3.14159265358979;
//   protected constant Real k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   protected constant Real e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   protected constant Real q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   protected constant Real ks = 11.8 \"Dielectric constant of Si\";
//   protected constant Real GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   protected constant Real GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   protected constant Real c0 = 0.0631353;
//   protected constant Real c1 = 0.8013292;
//   protected constant Real c2 = -0.01110777;
//   protected Real Fn = (3.14159265358979 * (es * DELTA)) / (W * COX * 2.0) \"Working function\";
//   protected Real SIGMA = (8.15e-22 * (ETA * L ^ -3.0)) / COX \"Static feedback on threshold voltage\";
//   protected Real ExMin = exp(EMin);
//   protected Real ExMax = exp(EMax);
//   protected Real RTemp \"Temperature quotient\";
//   protected Real facTemp \"Temperature coefficient\";
//   protected Real EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   protected Real Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   protected Real Vgst(quantity = \"ElectricPotential\", unit = \"V\") \"vgs - vth\";
//   protected Real idlin(quantity = \"ElectricCurrent\", unit = \"A\") \"Linear current\";
//   protected Real idsat(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current\";
//   protected Real ids(quantity = \"ElectricCurrent\", unit = \"A\") \"Drain-source current\";
//   protected Real gdsat(quantity = \"Conductance\", unit = \"S\") \"Saturation region conductance\";
//   protected Real cdlin(unit = \"V2\") \"Linear region current factor\";
//   protected Real cdsat(unit = \"V2\") \"Saturation region current factor\";
//   protected Real cdsub(unit = \"V2\") \"Subthreshold region current factor\";
//   protected Real et \"Subthreshold voltage coefficient\";
//   protected Real KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real BETAval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Adjusted transconductance at device temperature\";
//   protected Real BETAeff(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Adjusted transconductance at device temperature\";
//   protected Real Beta(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Final transconductance at device temperature\";
//   protected Real LAMBDAval \"Channel length modulation\";
//   protected Real Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real WpXJ \"WP/XJ\";
//   protected Real WcXJ \"WC/XJ\";
//   protected Real Us(unit = \"m2/(V.s)\") \"Dependence of mobility on gate electric field\";
//   protected Real CB \"Specific capacitance of depleted region\";
//   protected Real N \"Intrinsic carrier concentration at device temperature\";
//   protected Real Ep(quantity = \"ElectricFieldStrength\", unit = \"V/m\") \"Lateral field at channel pinch-off\";
//   protected Real Fs \"Short channel working function\";
//   protected Real FB \"Body effect working function\";
//   protected Real Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real vgsx(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real vdsx(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Va(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Vb(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real DL(quantity = \"Length\", unit = \"m\");
//   protected Real DLval(quantity = \"Length\", unit = \"m\");
//   protected Real DLfac(quantity = \"Length\", unit = \"m\");
//   protected Real ALPHA(unit = \"m2/V\");
//   protected Real Sarg(unit = \"V^0.5\");
//   protected Real Lfact;
//   protected Real Fd;
//   protected Real FG;
//   protected parameter Real es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of silicon\";
// algorithm
//   RTemp := Tdev / Tnom;
//   facTemp := RTemp ^ 1.5;
//   Vt := 8.61727503842867e-05 * Tdev;
//   EGref := EG + (-0.000702 * Tnom ^ 2.0) / (1108.0 + Tnom);
//   EGval := EG + (-0.000702 * Tdev ^ 2.0) / (1108.0 + Tdev);
//   PHIval := RTemp * PHI + EGval + -3.0 * Vt * log(RTemp) - RTemp * EGref;
//   Vfb := VFB + /*REAL*/(Type) * (PHIval / 2.0 + -PHI / 2.0 + EGref / 2.0 + -EGval / 2.0);
//   KPval := KP / facTemp;
//   BETA := (KPval * W) / L;
//   Sarg := if vbs <= 0.0 then sqrt(PHIval - vbs) else sqrt(PHIval) / (1.0 + vbs / (PHIval * 2.0));
//   if XJ > 0.0 then
//     Wp := Sarg * XD;
//     WpXJ := Wp / XJ;
//     WcXJ := 0.0631353 + 0.8013292 * WpXJ + -0.01110777 * WpXJ ^ 2.0;
//     Wc := WcXJ * XJ;
//     Fs := 1.0 + (LD - (LD + Wc) * sqrt(1.0 - (Wp / (XJ + Wp)) ^ 2.0)) / L;
//   else
//     Fs := 1.0;
//   end if;
//   FB := Fn + if noEvent(Sarg > 0.0) then (GAMMA * Fs) / (Sarg * 4.0) else 0.0;
//   Vbody := GAMMA * Fs * Sarg + Fn * Sarg ^ 2.0;
//   Vth := Vfb + /*REAL*/(Type) * (PHIval + Vbody - SIGMA * vds);
//   if NFS > 0.0 then
//     CB := if noEvent(Vbody > 0.0) and noEvent(Sarg > 0.0) then (Vbody * Sarg ^ -2.0) / 2.0 else 0.0;
//     N := 1.0 + (1.6021892e-19 * NFS) / COX + CB;
//     Von := /*REAL*/(Type) * Vth + N * Vt;
//   else
//     N := 1.0;
//     Von := /*REAL*/(Type) * Vth;
//   end if;
//   Vgst := vgs - Von;
//   vgsx := if vgs > Von then vgs else Von;
//   FG := 1.0 / (1.0 + THETA * (vgsx - /*REAL*/(Type) * Vth));
//   Us := FG * U0;
//   BETAval := FG * BETA;
//   Va := (vgsx - /*REAL*/(Type) * Vth) / (1.0 + FB);
//   Vb := (VMAX * L) / Us;
//   vdsat := if VMAX > 0.0 then Va + Vb - sqrt(Va ^ 2.0 + Vb ^ 2.0) else Va;
//   vpof := Va;
//   vdsx := if vds < vdsat then vds else vdsat;
//   Fd := if vdsx > 0.0 and VMAX > 0.0 then 1.0 / (1.0 + vdsx / Vb) else 1.0;
//   BETAeff := Fd * BETAval;
//   cdlin := vdsx * (vgsx + (-1.0 - FB * vdsx) / 2.0 - /*REAL*/(Type) * Vth);
//   idlin := BETAeff * cdlin;
//   if vds > vdsat then
//     if VMAX > 0.0 then
//       idsat := idlin;
//       gdsat := (idsat * (1.0 - Fd)) / Vb;
//       Ep := idsat / (L * gdsat);
//       ALPHA := XD ^ 2.0;
//       DLfac := (Ep * ALPHA) / 2.0;
//       DL := sqrt(DLfac ^ 2.0 + KAPPA * ALPHA * (vds - vdsat)) - DLfac;
//     else
//       DL := sqrt(KAPPA * ALPHA * (vds - vdsat));
//     end if;
//   else
//     DL := 0.0;
//   end if;
//   DLval := if DL > 0.5 * L then L + -L ^ 2.0 / (DL * 4.0) else DL;
//   LAMBDAval := DLval / L;
//   Lfact := 1.0 / (1.0 - LAMBDAval);
//   Beta := Lfact * BETAeff;
//   cdsat := cdlin;
//   et := (vgs - Von) / (Vt * N);
//   cdsub := cdlin * if et < EMin then ExMin * (1.0 + et - EMin) else if et > EMax then ExMax * (1.0 + et - EMax) else exp(et);
//   ids := sig * Beta * if vdsx > 0.0 and vds <= vdsat then cdlin else if vdsx > 0.0 and vds > vdsat and Vgst >= 0.0 then cdsat else if vdsx > 0.0 and vds > vdsat and Vgst < 0.0 then cdsub else 0.0;
//   ids0 := if NFS == 0.0 and Vgst <= 0.0 then 0.0 else ids;
// end BondLib.Spice.Utilities.MOSeq3;
// 
// function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = \"Angle\", unit = \"rad\", displayUnit = \"deg\");
// 
//   external \"C\" y = asin(u);
// end Modelica.Math.asin;
// 
// class BondLib_Examples_ModelicaSpice_NandGate_TestNand
//   parameter Integer Level = 3 \"MOSFET modeling level\";
//   output Real vA(quantity = \"ElectricPotential\", unit = \"V\") \"First input voltage\";
//   output Real vB(quantity = \"ElectricPotential\", unit = \"V\") \"Second input voltage\";
//   output Real vNAND(quantity = \"ElectricPotential\", unit = \"V\") \"Output voltage\";
//   output Real Pth(quantity = \"Power\", unit = \"W\") \"Total heat dissipated by NAND gate\";
//   Real VDD.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real VDD.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real VDD.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VDD.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VDD.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VDD.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real VDD.V(quantity = \"ElectricPotential\", unit = \"V\") = 5.0 \"Height of ramp\";
//   parameter Real VDD.duration(quantity = \"Time\", unit = \"s\", min = 1e-60) = 1e-09 \"Duration of ramp\";
//   parameter Real VDD.offset(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Voltage offset\";
//   parameter Real VDD.startTime(quantity = \"Time\", unit = \"s\") = 0.0 \"Time offset\";
//   Real VDD.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VDD.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VDD.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VDD.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VDD.El2BG1.BondCon1.d \"Directional variable\";
//   Real VDD.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VDD.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VDD.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VDD.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VDD.BG2El1.BondCon1.d \"Directional variable\";
//   Real VDD.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real VDD.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real VDD.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real VDD.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real VDD.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real VDD.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real VDD.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VDD.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VDD.J1p3_1.BondCon1.d \"Directional variable\";
//   Real VDD.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real VDD.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real VDD.J1p3_1.BondCon2.d \"Directional variable\";
//   Real VDD.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real VDD.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real VDD.J1p3_1.BondCon3.d \"Directional variable\";
//   Real VDD.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VDD.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VDD.B1.BondCon1.d \"Directional variable\";
//   Real VDD.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real VDD.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real VDD.B1.BondCon2.d \"Directional variable\";
//   Real VDD.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real VDD.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real VDD.B2.BondCon1.d \"Directional variable\";
//   Real VDD.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real VDD.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real VDD.B2.BondCon2.d \"Directional variable\";
//   Real VDD.V1.e \"Bondgraphic effort\";
//   Real VDD.V1.f \"Bondgraphic flow\";
//   Real VDD.V1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VDD.V1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VDD.V1.BondCon1.d \"Directional variable\";
//   parameter Real VDD.V1.e0 = VDD.V \"Height of ramp\";
//   parameter Real VDD.V1.duration(quantity = \"Time\", unit = \"s\") = VDD.duration \"Duration of ramp\";
//   parameter Real VDD.V1.offset = VDD.offset \"Offset of ramp\";
//   parameter Real VDD.V1.startTime(quantity = \"Time\", unit = \"s\") = VDD.startTime \"Start time of ramp\";
//   output Real VDD.V1.Ramp1.y \"Connector of Real output signal\";
//   parameter Real VDD.V1.Ramp1.height = VDD.V1.e0 \"Height of ramps\";
//   parameter Real VDD.V1.Ramp1.duration(min = 1e-60) = VDD.V1.duration \"Durations of ramp\";
//   parameter Real VDD.V1.Ramp1.offset = VDD.V1.offset \"Offset of output signal\";
//   parameter Real VDD.V1.Ramp1.startTime(quantity = \"Time\", unit = \"s\") = VDD.V1.startTime \"Output = offset for time < startTime\";
//   input Real VDD.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real VDD.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real VDD.B3.eBondCon1.d \"Direction variable\";
//   output Real VDD.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real VDD.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real VDD.B3.fBondCon1.d \"Direction variable\";
//   Real Gnd4.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd4.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd4.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd4.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd4.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd4.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd4.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd4.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd4.V0.e \"Bondgraphic effort\";
//   Real Gnd4.V0.f \"Bondgraphic flow\";
//   Real Gnd4.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd4.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd4.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd4.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd4.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd4.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd4.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd4.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd4.El2BG1.BondCon1.d \"Directional variable\";
//   Real VIN2.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real VIN2.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real VIN2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VIN2.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN2.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real VIN2.V(quantity = \"ElectricPotential\", unit = \"V\") = 3.5 \"Amplitude of trapezoidal function\";
//   parameter Real VIN2.rising(quantity = \"Time\", unit = \"s\", min = 0.0) = 1e-09 \"Rising duration of trapezoid\";
//   parameter Real VIN2.width(quantity = \"Time\", unit = \"s\", min = 0.0) = 1.9e-08 \"Width duration of trapezoid\";
//   parameter Real VIN2.falling(quantity = \"Time\", unit = \"s\", min = 0.0) = 1e-09 \"Falling duration of trapezoid\";
//   parameter Real VIN2.period(quantity = \"Time\", unit = \"s\", min = 1e-60) = 4e-08 \"Time for one period\";
//   parameter Integer VIN2.nperiod = -1 \"Number of periods (< 0 means infinite number of periods)\";
//   parameter Real VIN2.offset(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Voltage offset\";
//   parameter Real VIN2.startTime(quantity = \"Time\", unit = \"s\") = 1e-08 \"Time offset\";
//   Real VIN2.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN2.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VIN2.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN2.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN2.El2BG1.BondCon1.d \"Directional variable\";
//   Real VIN2.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN2.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VIN2.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN2.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN2.BG2El1.BondCon1.d \"Directional variable\";
//   Real VIN2.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real VIN2.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real VIN2.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real VIN2.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real VIN2.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real VIN2.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real VIN2.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN2.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN2.J1p3_1.BondCon1.d \"Directional variable\";
//   Real VIN2.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real VIN2.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real VIN2.J1p3_1.BondCon2.d \"Directional variable\";
//   Real VIN2.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real VIN2.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real VIN2.J1p3_1.BondCon3.d \"Directional variable\";
//   Real VIN2.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN2.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN2.B1.BondCon1.d \"Directional variable\";
//   Real VIN2.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real VIN2.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real VIN2.B1.BondCon2.d \"Directional variable\";
//   Real VIN2.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN2.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN2.B2.BondCon1.d \"Directional variable\";
//   Real VIN2.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real VIN2.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real VIN2.B2.BondCon2.d \"Directional variable\";
//   Real VIN2.V1.e \"Bondgraphic effort\";
//   Real VIN2.V1.f \"Bondgraphic flow\";
//   Real VIN2.V1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN2.V1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN2.V1.BondCon1.d \"Directional variable\";
//   parameter Real VIN2.V1.e0 = VIN2.V \"Amplitude of trapezoidal function\";
//   parameter Real VIN2.V1.rising(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN2.rising \"Rising duration of trapezoid\";
//   parameter Real VIN2.V1.width(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN2.width \"Width duration of trapezoid\";
//   parameter Real VIN2.V1.falling(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN2.falling \"Falling duration of trapezoid\";
//   parameter Real VIN2.V1.period(quantity = \"Time\", unit = \"s\", min = 1e-60) = VIN2.period \"Time for one period\";
//   parameter Integer VIN2.V1.nperiod = VIN2.nperiod \"Number of periods (< 0 means infinite number of periods)\";
//   parameter Real VIN2.V1.offset = VIN2.offset \"Offset of trapezoidal function\";
//   parameter Real VIN2.V1.startTime(quantity = \"Time\", unit = \"s\") = VIN2.startTime \"Start time of trapezoidal function\";
//   output Real VIN2.V1.Trapezoid1.y \"Connector of Real output signal\";
//   parameter Real VIN2.V1.Trapezoid1.amplitude = VIN2.V1.e0 \"Amplitude of trapezoid\";
//   parameter Real VIN2.V1.Trapezoid1.rising(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN2.V1.rising \"Rising duration of trapezoid\";
//   parameter Real VIN2.V1.Trapezoid1.width(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN2.V1.width \"Width duration of trapezoid\";
//   parameter Real VIN2.V1.Trapezoid1.falling(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN2.V1.falling \"Falling duration of trapezoid\";
//   parameter Real VIN2.V1.Trapezoid1.period(quantity = \"Time\", unit = \"s\", min = 1e-60) = VIN2.V1.period \"Time for one period\";
//   parameter Integer VIN2.V1.Trapezoid1.nperiod = VIN2.V1.nperiod \"Number of periods (< 0 means infinite number of periods)\";
//   parameter Real VIN2.V1.Trapezoid1.offset = VIN2.V1.offset \"Offset of output signal\";
//   parameter Real VIN2.V1.Trapezoid1.startTime(quantity = \"Time\", unit = \"s\") = VIN2.V1.startTime \"Output = offset for time < startTime\";
//   protected Real VIN2.V1.Trapezoid1.T0(quantity = \"Time\", unit = \"s\", start = VIN2.V1.Trapezoid1.startTime) \"Start time of current period\";
//   protected Integer VIN2.V1.Trapezoid1.counter(start = VIN2.V1.Trapezoid1.nperiod) \"Period counter\";
//   protected Integer VIN2.V1.Trapezoid1.counter2(start = VIN2.V1.Trapezoid1.nperiod);
//   protected parameter Real VIN2.V1.Trapezoid1.T_rising(quantity = \"Time\", unit = \"s\") = VIN2.V1.Trapezoid1.rising \"End time of rising phase within one period\";
//   protected parameter Real VIN2.V1.Trapezoid1.T_width(quantity = \"Time\", unit = \"s\") = VIN2.V1.Trapezoid1.T_rising + VIN2.V1.Trapezoid1.width \"End time of width phase within one period\";
//   protected parameter Real VIN2.V1.Trapezoid1.T_falling(quantity = \"Time\", unit = \"s\") = VIN2.V1.Trapezoid1.T_width + VIN2.V1.Trapezoid1.falling \"End time of falling phase within one period\";
//   input Real VIN2.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real VIN2.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real VIN2.B3.eBondCon1.d \"Direction variable\";
//   output Real VIN2.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real VIN2.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real VIN2.B3.fBondCon1.d \"Direction variable\";
//   Real Gnd5.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd5.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd5.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd5.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd5.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd5.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd5.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd5.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd5.V0.e \"Bondgraphic effort\";
//   Real Gnd5.V0.f \"Bondgraphic flow\";
//   Real Gnd5.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd5.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd5.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd5.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd5.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd5.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd5.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd5.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd5.El2BG1.BondCon1.d \"Directional variable\";
//   Real Gnd1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd1.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd1.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd1.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd1.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd1.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd1.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd1.V0.e \"Bondgraphic effort\";
//   Real Gnd1.V0.f \"Bondgraphic flow\";
//   Real Gnd1.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd1.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd1.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd1.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Vnand.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Vnand.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Vnand.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vnand.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vnand.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vnand.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Vnand.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Vnand.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Vnand.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Vnand.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Vnand.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Vnand.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Vnand.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Vnand.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vnand.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vnand.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Vnand.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vnand.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vnand.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Vnand.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Vnand.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Vnand.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Vnand.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vnand.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vnand.B1.BondCon1.d \"Directional variable\";
//   Real Vnand.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vnand.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vnand.B1.BondCon2.d \"Directional variable\";
//   Real Vnand.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vnand.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vnand.B2.BondCon1.d \"Directional variable\";
//   Real Vnand.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vnand.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vnand.B2.BondCon2.d \"Directional variable\";
//   Real Vnand.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vnand.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vnand.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vnand.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vnand.El2BG1.BondCon1.d \"Directional variable\";
//   Real Vnand.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Vnand.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Vnand.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vnand.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vnand.BG2El1.BondCon1.d \"Directional variable\";
//   Real Vnand.De1.e \"Bondgraphic effort\";
//   Real Vnand.De1.f \"Bondgraphic flow\";
//   Real Vnand.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vnand.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vnand.De1.BondCon1.d \"Directional variable\";
//   output Real Vnand.De1.OutPort1 \"Connector of Real output signal\";
//   Real Vnand.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Vnand.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Vnand.B3.BondCon1.d \"Directional variable\";
//   Real Vnand.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Vnand.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Vnand.B3.BondCon2.d \"Directional variable\";
//   Real Gnd2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Gnd2.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Gnd2.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd2.B1.eBondCon1.d \"Direction variable\";
//   output Real Gnd2.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Gnd2.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Gnd2.B1.fBondCon1.d \"Direction variable\";
//   Real Gnd2.V0.e \"Bondgraphic effort\";
//   Real Gnd2.V0.f \"Bondgraphic flow\";
//   Real Gnd2.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd2.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd2.V0.BondCon1.d \"Directional variable\";
//   parameter Real Gnd2.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Gnd2.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Gnd2.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Gnd2.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Gnd2.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Gnd2.El2BG1.BondCon1.d \"Directional variable\";
//   Real Qtot.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate from port_a -> port_b\";
//   Real Qtot.dT(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"port_a.T - port_b.T\";
//   Real Qtot.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Qtot.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Qtot.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Qtot.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   output Real Qtot.Q_flow1(quantity = \"Power\", unit = \"W\") \"Heat flow from port_a to port_b\";
//   Real Qtot.Heat2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Qtot.Heat2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Qtot.Heat2BG1.BondCon1.d \"Directional variable\";
//   Real Qtot.Heat2BG1.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Qtot.Heat2BG1.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Qtot.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Qtot.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Qtot.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Qtot.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Qtot.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Qtot.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Qtot.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Qtot.B1.BondCon1.d \"Directional variable\";
//   Real Qtot.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Qtot.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Qtot.B1.BondCon2.d \"Directional variable\";
//   output Real Qtot.B1.P(quantity = \"Power\", unit = \"W\") \"Power\";
//   Real FixedTemperature1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real FixedTemperature1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real FixedTemperature1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real FixedTemperature1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real FixedTemperature1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real FixedTemperature1.Tabs.e \"Bondgraphic effort\";
//   Real FixedTemperature1.Tabs.f \"Bondgraphic flow\";
//   Real FixedTemperature1.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real FixedTemperature1.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real FixedTemperature1.Tabs.BondCon1.d \"Directional variable\";
//   input Real FixedTemperature1.Tabs.s \"Signal input\";
//   Real FixedTemperature1.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real FixedTemperature1.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real FixedTemperature1.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real FixedTemperature1.B1.eBondCon1.d \"Direction variable\";
//   output Real FixedTemperature1.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real FixedTemperature1.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real FixedTemperature1.B1.fBondCon1.d \"Direction variable\";
//   Real FixedTemperature1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real FixedTemperature1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real FixedTemperature1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Fixed temperature at port\";
//   Real VIN1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real VIN1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real VIN1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VIN1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real VIN1.V(quantity = \"ElectricPotential\", unit = \"V\") = 3.5 \"Amplitude of trapezoidal function\";
//   parameter Real VIN1.rising(quantity = \"Time\", unit = \"s\", min = 0.0) = 1e-09 \"Rising duration of trapezoid\";
//   parameter Real VIN1.width(quantity = \"Time\", unit = \"s\", min = 0.0) = 1.9e-08 \"Width duration of trapezoid\";
//   parameter Real VIN1.falling(quantity = \"Time\", unit = \"s\", min = 0.0) = 1e-09 \"Falling duration of trapezoid\";
//   parameter Real VIN1.period(quantity = \"Time\", unit = \"s\", min = 1e-60) = 4e-08 \"Time for one period\";
//   parameter Integer VIN1.nperiod = -1 \"Number of periods (< 0 means infinite number of periods)\";
//   parameter Real VIN1.offset(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Voltage offset\";
//   parameter Real VIN1.startTime(quantity = \"Time\", unit = \"s\") = 2e-08 \"Time offset\";
//   Real VIN1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VIN1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN1.El2BG1.BondCon1.d \"Directional variable\";
//   Real VIN1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real VIN1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real VIN1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN1.BG2El1.BondCon1.d \"Directional variable\";
//   Real VIN1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real VIN1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real VIN1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real VIN1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real VIN1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real VIN1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real VIN1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real VIN1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real VIN1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real VIN1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real VIN1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real VIN1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real VIN1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real VIN1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN1.B1.BondCon1.d \"Directional variable\";
//   Real VIN1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real VIN1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real VIN1.B1.BondCon2.d \"Directional variable\";
//   Real VIN1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN1.B2.BondCon1.d \"Directional variable\";
//   Real VIN1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real VIN1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real VIN1.B2.BondCon2.d \"Directional variable\";
//   Real VIN1.V1.e \"Bondgraphic effort\";
//   Real VIN1.V1.f \"Bondgraphic flow\";
//   Real VIN1.V1.BondCon1.e \"Bondgraphic effort variable\";
//   Real VIN1.V1.BondCon1.f \"Bondgraphic flow variable\";
//   Real VIN1.V1.BondCon1.d \"Directional variable\";
//   parameter Real VIN1.V1.e0 = VIN1.V \"Amplitude of trapezoidal function\";
//   parameter Real VIN1.V1.rising(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN1.rising \"Rising duration of trapezoid\";
//   parameter Real VIN1.V1.width(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN1.width \"Width duration of trapezoid\";
//   parameter Real VIN1.V1.falling(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN1.falling \"Falling duration of trapezoid\";
//   parameter Real VIN1.V1.period(quantity = \"Time\", unit = \"s\", min = 1e-60) = VIN1.period \"Time for one period\";
//   parameter Integer VIN1.V1.nperiod = VIN1.nperiod \"Number of periods (< 0 means infinite number of periods)\";
//   parameter Real VIN1.V1.offset = VIN1.offset \"Offset of trapezoidal function\";
//   parameter Real VIN1.V1.startTime(quantity = \"Time\", unit = \"s\") = VIN1.startTime \"Start time of trapezoidal function\";
//   output Real VIN1.V1.Trapezoid1.y \"Connector of Real output signal\";
//   parameter Real VIN1.V1.Trapezoid1.amplitude = VIN1.V1.e0 \"Amplitude of trapezoid\";
//   parameter Real VIN1.V1.Trapezoid1.rising(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN1.V1.rising \"Rising duration of trapezoid\";
//   parameter Real VIN1.V1.Trapezoid1.width(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN1.V1.width \"Width duration of trapezoid\";
//   parameter Real VIN1.V1.Trapezoid1.falling(quantity = \"Time\", unit = \"s\", min = 0.0) = VIN1.V1.falling \"Falling duration of trapezoid\";
//   parameter Real VIN1.V1.Trapezoid1.period(quantity = \"Time\", unit = \"s\", min = 1e-60) = VIN1.V1.period \"Time for one period\";
//   parameter Integer VIN1.V1.Trapezoid1.nperiod = VIN1.V1.nperiod \"Number of periods (< 0 means infinite number of periods)\";
//   parameter Real VIN1.V1.Trapezoid1.offset = VIN1.V1.offset \"Offset of output signal\";
//   parameter Real VIN1.V1.Trapezoid1.startTime(quantity = \"Time\", unit = \"s\") = VIN1.V1.startTime \"Output = offset for time < startTime\";
//   protected Real VIN1.V1.Trapezoid1.T0(quantity = \"Time\", unit = \"s\", start = VIN1.V1.Trapezoid1.startTime) \"Start time of current period\";
//   protected Integer VIN1.V1.Trapezoid1.counter(start = VIN1.V1.Trapezoid1.nperiod) \"Period counter\";
//   protected Integer VIN1.V1.Trapezoid1.counter2(start = VIN1.V1.Trapezoid1.nperiod);
//   protected parameter Real VIN1.V1.Trapezoid1.T_rising(quantity = \"Time\", unit = \"s\") = VIN1.V1.Trapezoid1.rising \"End time of rising phase within one period\";
//   protected parameter Real VIN1.V1.Trapezoid1.T_width(quantity = \"Time\", unit = \"s\") = VIN1.V1.Trapezoid1.T_rising + VIN1.V1.Trapezoid1.width \"End time of width phase within one period\";
//   protected parameter Real VIN1.V1.Trapezoid1.T_falling(quantity = \"Time\", unit = \"s\") = VIN1.V1.Trapezoid1.T_width + VIN1.V1.Trapezoid1.falling \"End time of falling phase within one period\";
//   input Real VIN1.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real VIN1.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real VIN1.B3.eBondCon1.d \"Direction variable\";
//   output Real VIN1.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real VIN1.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real VIN1.B3.fBondCon1.d \"Direction variable\";
//   parameter Integer Nand1.Level = Level \"MOSFET modeling level\";
//   Real Nand1.x1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.x1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.x2.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.x2.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Vdd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Vdd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.y.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.y.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   constant Real Nand1.Mp1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.ni(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 \"Intrinsic carrier concentration at 300 K\";
//   constant Real Nand1.Mp1.kox = 3.9 \"Dielectric constant of SiO2\";
//   constant Real Nand1.Mp1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp1.GapC1(unit = \"V/K\") = 0.000702 \"Sze's first bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Sze's second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Fn0(quantity = \"ElectricPotential\", unit = \"V\") = 3.25 \"Work function constant for computation of flat band voltage\";
//   constant Real Nand1.Mp1.TOXdef = 1e-07 \"Default oxide thickness\";
//   parameter Integer Nand1.Mp1.Level(min = 0, max = 4) = Nand1.Level \"Level of MOSFET model\";
//   parameter Real Nand1.Mp1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = 3.1e-06 \"Channel length\";
//   parameter Real Nand1.Mp1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = 6.5e-06 \"Channel width\";
//   parameter Real Nand1.Mp1.TPG(min = 1.0, max = 2.0) = 1.0 \"Type of gate material\";
//   parameter Real Nand1.Mp1.COX(unit = \"F/m2\") = 0.000335 \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1e+21 \"Substrate doping\";
//   parameter Real Nand1.Mp1.U0(unit = \"m2/(V.s)\") = 0.07 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mp1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = -1.0 \"Zero-bias threshold voltage (VT0<0: enhancement type, VT0>0: depletion type)\";
//   parameter Real Nand1.Mp1.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\", min = 0.0) = 0.02 \"Channel length modulation\";
//   parameter Real Nand1.Mp1.LD(quantity = \"Length\", unit = \"m\", min = 0.0) = 2.5e-07 \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.WD(quantity = \"Length\", unit = \"m\", min = 0.0) = 1.25e-06 \"Width diffusion\";
//   parameter Real Nand1.Mp1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = 1.05e-05 \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.GAMMA(unit = \"V^0.5\") = 0.35 \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = 0.65 \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.NSS(unit = \"1/m2\") = 100000000000000.0 \"Surface state density\";
//   parameter Real Nand1.Mp1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   parameter Real Nand1.Mp1.EG(quantity = \"ElectricPotential\", unit = \"V\") = 1.11 \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mp1.AD(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Drain diffusion area\";
//   parameter Real Nand1.Mp1.PD(quantity = \"Length\", unit = \"m\") = 8e-07 \"Drain perimeter width\";
//   parameter Real Nand1.Mp1.AS(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Source diffusion area\";
//   parameter Real Nand1.Mp1.PS(quantity = \"Length\", unit = \"m\") = 8e-07 \"Source perimeter width\";
//   parameter Real Nand1.Mp1.ISD(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.ISS(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.JS(quantity = \"CurrentDensity\", unit = \"A/m2\", min = 0.0) = 1e-08 \"Saturation current density at reference temperature\";
//   parameter Real Nand1.Mp1.PB(quantity = \"ElectricPotential\", unit = \"V\", min = 0.2) = 0.75 \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp1.RD(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Drain Ohmic resistance\";
//   parameter Real Nand1.Mp1.RS(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Source Ohmic resistance\";
//   parameter Real Nand1.Mp1.CJ(unit = \"F/m2\", min = 0.0) = 0.0002 \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp1.MJ(min = 0.3, max = 0.5) = 0.5 \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp1.CJSW(unit = \"F/m\", min = 0.0) = 1e-09 \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp1.MJSW(min = 0.3, max = 0.5) = 0.33 \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp1.FC(min = 0.0, max = 0.95) = 0.5 \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp1.CGB0(unit = \"F/m\", min = 0.0) = 2e-10 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.CGD0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.CGS0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.TRD1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mp1.TRD2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mp1.TRS1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of source resistance\";
//   parameter Real Nand1.Mp1.TRS2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of source resistance\";
//   parameter Real Nand1.Mp1.XJ(quantity = \"Length\", unit = \"m\") = 1e-06 \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 1000000.0 \"Critical electric field for mobility\";
//   parameter Real Nand1.Mp1.UEXP = 0.1 \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mp1.UTRA(min = 0.0, max = 0.5) = 0.5 \"Transverse field coefficient\";
//   parameter Real Nand1.Mp1.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 0.0 \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mp1.DELTA = 1.0 \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.VMAX(quantity = \"Velocity\", unit = \"m/s\") = 0.0 \"Maximum drift velocity of carriers (VMAX=0: Frohman-Grove model, VMAX>0: Baum-Beneking model)\";
//   parameter Real Nand1.Mp1.NFS(unit = \"1/m2\") = 100000000000000.0 \"Surface fast state density\";
//   parameter Real Nand1.Mp1.NEFF(min = 1e-60) = 5.0 \"Total channel charge coefficient\";
//   parameter Real Nand1.Mp1.XQC = 0.0 \"Coefficient of channel charge share (XQC<=0.5: Ward-Dutton model, XQC>0.5: Meyer model)\";
//   parameter Real Nand1.Mp1.KAPPA(min = 1e-60) = 0.2 \"Saturation field factor\";
//   parameter Real Nand1.Mp1.ETA = 1.0 \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.THETA(quantity = \"InversePotential\", unit = \"1/V\") = 0.05 \"Mobility modulation\";
//   parameter Real Nand1.Mp1.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.GminDC(quantity = \"Conductance\", unit = \"S\") = 1e-16 \"Leakage conductance\";
//   parameter Boolean Nand1.Mp1.enforceStates = true \"State selector\";
//   Real Nand1.Mp1.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Csg1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp1.Csg1.enforceStates = Nand1.Mp1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp1.Csg1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp1.Csg1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Csg1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Csg1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Csg1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Csg1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Csg1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Csg1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Csg1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Csg1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Csg1.Level = Nand1.Mp1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Csg1.Type = Nand1.Mp1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Csg1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp1.Csg1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Csg1.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Csg1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Csg1.COX(unit = \"F/m2\") = Nand1.Mp1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Csg1.NFS(unit = \"1/m2\") = Nand1.Mp1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Csg1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Csg1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Leff \"Channel length\";
//   parameter Real Nand1.Mp1.Csg1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Weff \"Channel width\";
//   parameter Real Nand1.Mp1.Csg1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Csg1.XD(unit = \"m/V^0.5\") = Nand1.Mp1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Csg1.XQC = Nand1.Mp1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp1.Csg1.DELTA = Nand1.Mp1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Csg1.ETA = Nand1.Mp1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Csg1.CGS0(unit = \"F/m\") = Nand1.Mp1.CGS0eff \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.Csg1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp1.Csg1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Csg1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Csg1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Csg1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Csg1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Csg1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Csg1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Csg1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Csg1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Csg1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.Cgs1.e1(start = Nand1.Mp1.Csg1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Csg1.Cgs1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Csg1.Cgs1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Csg1.Cgs1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Csg1.Cgs1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.Cgs1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.Cgs1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.Cgs1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.Cgs1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.Cgs1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Csg1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Csg1.Cgs1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Csg1.Cgs1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp1.Csg1.Cgs1.pi = 3.14159265358979;
//   constant Real Nand1.Mp1.Csg1.Cgs1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.Csg1.Cgs1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp1.Csg1.Cgs1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.Csg1.Cgs1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp1.Csg1.Cgs1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Csg1.Cgs1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Csg1.Cgs1.c0 = 0.0631353;
//   constant Real Nand1.Mp1.Csg1.Cgs1.c1 = 0.8013292;
//   constant Real Nand1.Mp1.Csg1.Cgs1.c2 = -0.01110777;
//   parameter Integer Nand1.Mp1.Csg1.Cgs1.Level = Nand1.Mp1.Csg1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Csg1.Cgs1.Type = Nand1.Mp1.Csg1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Csg1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.Csg1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.Csg1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Csg1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.COX(unit = \"F/m2\") = Nand1.Mp1.Csg1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.NFS(unit = \"1/m2\") = Nand1.Mp1.Csg1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Csg1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Csg1.L \"Channel length\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Csg1.W \"Channel width\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Csg1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.XD(unit = \"m/V^0.5\") = Nand1.Mp1.Csg1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.XQC = Nand1.Mp1.Csg1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.DELTA = Nand1.Mp1.Csg1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.ETA = Nand1.Mp1.Csg1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.CGS0(unit = \"F/m\") = Nand1.Mp1.Csg1.CGS0 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.Csg1.Cgs1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Csg1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp1.Csg1.Cgs1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mp1.Csg1.Cgs1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mp1.Csg1.Cgs1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mp1.Csg1.Cgs1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp1.Csg1.Cgs1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mp1.Csg1.Cgs1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mp1.Csg1.Cgs1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mp1.Csg1.Cgs1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mp1.Csg1.Cgs1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mp1.Csg1.Cgs1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mp1.Csg1.Cgs1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.sig \"sign(vds)\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.N \"Current emission coefficient\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.Fs \"Short channel working function\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mp1.Csg1.Cgs1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Csg1.Cgs1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Csg1.Cgs1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Csg1.Cgs1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mp1.Csg1.Cgs1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.WSfac;
//   protected Real Nand1.Mp1.Csg1.Cgs1.WDfac;
//   protected Real Nand1.Mp1.Csg1.Cgs1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mp1.Csg1.Cgs1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mp1.Csg1.Cgs1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp1.Csg1.Cgs1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mp1.Csg1.Cgs1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.Cgs1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.Cgs1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.Cgs1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.Cgs1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mp1.Csg1.Cgs1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mp1.Csg1.Cgs1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mp1.Csg1.Cgs1.W * (Nand1.Mp1.Csg1.Cgs1.L * Nand1.Mp1.Csg1.Cgs1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mp1.Csg1.Cgs1.SIGMA = (8.15e-22 * (Nand1.Mp1.Csg1.Cgs1.ETA * Nand1.Mp1.Csg1.Cgs1.L ^ -3.0)) / Nand1.Mp1.Csg1.Cgs1.COX;
//   protected parameter Real Nand1.Mp1.Csg1.Cgs1.Fn = (3.14159265358979 * (Nand1.Mp1.Csg1.Cgs1.es * Nand1.Mp1.Csg1.Cgs1.DELTA)) / (Nand1.Mp1.Csg1.Cgs1.W * Nand1.Mp1.Csg1.Cgs1.COX * 2.0);
//   Real Nand1.Mp1.Csg1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Csg1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Csg1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Csg1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Csg1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Csg1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Csg1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Csg1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Csg1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Csg1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Csg1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Csg1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp1.Csg1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mp1.Csg1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mp1.Csg1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Csg1.u[5] \"Connector of Real input signals\";
//   parameter Real Nand1.Mp1.Cdg1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp1.Cdg1.enforceStates = Nand1.Mp1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp1.Cdg1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp1.Cdg1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Cdg1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Cdg1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cdg1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Cdg1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cdg1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Cdg1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Cdg1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Cdg1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Cdg1.Level = Nand1.Mp1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Cdg1.Type = Nand1.Mp1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Cdg1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp1.Cdg1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Cdg1.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Cdg1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Cdg1.COX(unit = \"F/m2\") = Nand1.Mp1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Cdg1.NFS(unit = \"1/m2\") = Nand1.Mp1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Cdg1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Cdg1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Leff \"Channel length\";
//   parameter Real Nand1.Mp1.Cdg1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Weff \"Channel width\";
//   parameter Real Nand1.Mp1.Cdg1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Cdg1.XD(unit = \"m/V^0.5\") = Nand1.Mp1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Cdg1.XQC = Nand1.Mp1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp1.Cdg1.DELTA = Nand1.Mp1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Cdg1.ETA = Nand1.Mp1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Cdg1.CGD0(unit = \"F/m\") = Nand1.Mp1.CGD0eff \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.Cdg1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp1.Cdg1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mp1.Cdg1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mp1.Cdg1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cdg1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Cdg1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cdg1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Cdg1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.Cgd1.e1(start = Nand1.Mp1.Cdg1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Cdg1.Cgd1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Cdg1.Cgd1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Cdg1.Cgd1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Cdg1.Cgd1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.Cgd1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.Cgd1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.Cgd1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.Cgd1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.Cgd1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Cdg1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Cdg1.Cgd1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Cdg1.Cgd1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp1.Cdg1.Cgd1.pi = 3.14159265358979;
//   constant Real Nand1.Mp1.Cdg1.Cgd1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.Cdg1.Cgd1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp1.Cdg1.Cgd1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.Cdg1.Cgd1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp1.Cdg1.Cgd1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Cdg1.Cgd1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Cdg1.Cgd1.c0 = 0.0631353;
//   constant Real Nand1.Mp1.Cdg1.Cgd1.c1 = 0.8013292;
//   constant Real Nand1.Mp1.Cdg1.Cgd1.c2 = -0.01110777;
//   parameter Integer Nand1.Mp1.Cdg1.Cgd1.Level = Nand1.Mp1.Cdg1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Cdg1.Cgd1.Type = Nand1.Mp1.Cdg1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Cdg1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.Cdg1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.Cdg1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Cdg1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.COX(unit = \"F/m2\") = Nand1.Mp1.Cdg1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.NFS(unit = \"1/m2\") = Nand1.Mp1.Cdg1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Cdg1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Cdg1.L \"Channel length\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Cdg1.W \"Channel width\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Cdg1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.XD(unit = \"m/V^0.5\") = Nand1.Mp1.Cdg1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.XQC = Nand1.Mp1.Cdg1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.DELTA = Nand1.Mp1.Cdg1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.ETA = Nand1.Mp1.Cdg1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.CGD0(unit = \"F/m\") = Nand1.Mp1.Cdg1.CGD0 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.Cdg1.Cgd1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Cdg1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp1.Cdg1.Cgd1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mp1.Cdg1.Cgd1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mp1.Cdg1.Cgd1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mp1.Cdg1.Cgd1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp1.Cdg1.Cgd1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mp1.Cdg1.Cgd1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mp1.Cdg1.Cgd1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mp1.Cdg1.Cgd1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mp1.Cdg1.Cgd1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mp1.Cdg1.Cgd1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mp1.Cdg1.Cgd1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.sig \"sign(vds)\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.N \"Current emission coefficient\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.Fs \"Short channel working function\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mp1.Cdg1.Cgd1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Cdg1.Cgd1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Cdg1.Cgd1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Cdg1.Cgd1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mp1.Cdg1.Cgd1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.WSfac;
//   protected Real Nand1.Mp1.Cdg1.Cgd1.WDfac;
//   protected Real Nand1.Mp1.Cdg1.Cgd1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mp1.Cdg1.Cgd1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mp1.Cdg1.Cgd1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp1.Cdg1.Cgd1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mp1.Cdg1.Cgd1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.Cgd1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.Cgd1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.Cgd1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cdg1.Cgd1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mp1.Cdg1.Cgd1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mp1.Cdg1.Cgd1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mp1.Cdg1.Cgd1.W * (Nand1.Mp1.Cdg1.Cgd1.L * Nand1.Mp1.Cdg1.Cgd1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mp1.Cdg1.Cgd1.SIGMA = (8.15e-22 * (Nand1.Mp1.Cdg1.Cgd1.ETA * Nand1.Mp1.Cdg1.Cgd1.L ^ -3.0)) / Nand1.Mp1.Cdg1.Cgd1.COX;
//   protected parameter Real Nand1.Mp1.Cdg1.Cgd1.Fn = (3.14159265358979 * (Nand1.Mp1.Cdg1.Cgd1.es * Nand1.Mp1.Cdg1.Cgd1.DELTA)) / (Nand1.Mp1.Cdg1.Cgd1.W * Nand1.Mp1.Cdg1.Cgd1.COX * 2.0);
//   output Real Nand1.Mp1.Cdg1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Cdg1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Cdg1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Cdg1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Cdg1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Cdg1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Cdg1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Cdg1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cdg1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cdg1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cdg1.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Cbg1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp1.Cbg1.enforceStates = Nand1.Mp1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp1.Cbg1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp1.Cbg1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Cbg1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Cbg1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cbg1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Cbg1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cbg1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Cbg1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Cbg1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Cbg1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Cbg1.Level = Nand1.Mp1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Cbg1.Type = Nand1.Mp1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Cbg1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp1.Cbg1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Cbg1.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Cbg1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Cbg1.COX(unit = \"F/m2\") = Nand1.Mp1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Cbg1.NFS(unit = \"1/m2\") = Nand1.Mp1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Cbg1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Cbg1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Leff \"Channel length\";
//   parameter Real Nand1.Mp1.Cbg1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Weff \"Channel width\";
//   parameter Real Nand1.Mp1.Cbg1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Cbg1.XD(unit = \"m/V^0.5\") = Nand1.Mp1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Cbg1.XQC = Nand1.Mp1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp1.Cbg1.DELTA = Nand1.Mp1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Cbg1.ETA = Nand1.Mp1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Cbg1.CGB0(unit = \"F/m\") = Nand1.Mp1.CGB0eff \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.Cbg1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp1.Cbg1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mp1.Cbg1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mp1.Cbg1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cbg1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Cbg1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Cbg1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Cbg1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.Cgb1.e1(start = Nand1.Mp1.Cbg1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Cbg1.Cgb1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Cbg1.Cgb1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Cbg1.Cgb1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Cbg1.Cgb1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.Cgb1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.Cgb1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.Cgb1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.Cgb1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.Cgb1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Cbg1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Cbg1.Cgb1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Cbg1.Cgb1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp1.Cbg1.Cgb1.pi = 3.14159265358979;
//   constant Real Nand1.Mp1.Cbg1.Cgb1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.Cbg1.Cgb1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp1.Cbg1.Cgb1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.Cbg1.Cgb1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp1.Cbg1.Cgb1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Cbg1.Cgb1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Cbg1.Cgb1.c0 = 0.0631353;
//   constant Real Nand1.Mp1.Cbg1.Cgb1.c1 = 0.8013292;
//   constant Real Nand1.Mp1.Cbg1.Cgb1.c2 = -0.01110777;
//   parameter Integer Nand1.Mp1.Cbg1.Cgb1.Level = Nand1.Mp1.Cbg1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Cbg1.Cgb1.Type = Nand1.Mp1.Cbg1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Cbg1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.Cbg1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.Cbg1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Cbg1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.COX(unit = \"F/m2\") = Nand1.Mp1.Cbg1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.NFS(unit = \"1/m2\") = Nand1.Mp1.Cbg1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Cbg1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Cbg1.L \"Channel length\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Cbg1.W \"Channel width\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Cbg1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.XD(unit = \"m/V^0.5\") = Nand1.Mp1.Cbg1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.XQC = Nand1.Mp1.Cbg1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.DELTA = Nand1.Mp1.Cbg1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.ETA = Nand1.Mp1.Cbg1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.CGB0(unit = \"F/m\") = Nand1.Mp1.Cbg1.CGB0 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mp1.Cbg1.Cgb1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Cbg1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp1.Cbg1.Cgb1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mp1.Cbg1.Cgb1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mp1.Cbg1.Cgb1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mp1.Cbg1.Cgb1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp1.Cbg1.Cgb1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mp1.Cbg1.Cgb1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mp1.Cbg1.Cgb1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mp1.Cbg1.Cgb1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mp1.Cbg1.Cgb1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mp1.Cbg1.Cgb1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mp1.Cbg1.Cgb1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   input Real Nand1.Mp1.Cbg1.Cgb1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.Cgb1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.Cgb1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.Cgb1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.Cgb1.u[5] \"Connector of Real input signals\";
//   input Real Nand1.Mp1.Cbg1.Cgb1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp1.Cbg1.Cgb1.u2 \"Connector of Real input signal 2\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.sig \"sign(vds)\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.N \"Current emission coefficient\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.Fs \"Short channel working function\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mp1.Cbg1.Cgb1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Cbg1.Cgb1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Cbg1.Cgb1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mp1.Cbg1.Cgb1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mp1.Cbg1.Cgb1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.WSfac;
//   protected Real Nand1.Mp1.Cbg1.Cgb1.WDfac;
//   protected Real Nand1.Mp1.Cbg1.Cgb1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mp1.Cbg1.Cgb1.WcXJ \"WC/XJ\";
//   protected parameter Real Nand1.Mp1.Cbg1.Cgb1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mp1.Cbg1.Cgb1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mp1.Cbg1.Cgb1.W * (Nand1.Mp1.Cbg1.Cgb1.L * Nand1.Mp1.Cbg1.Cgb1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mp1.Cbg1.Cgb1.SIGMA = (8.15e-22 * (Nand1.Mp1.Cbg1.Cgb1.ETA * Nand1.Mp1.Cbg1.Cgb1.L ^ -3.0)) / Nand1.Mp1.Cbg1.Cgb1.COX;
//   protected parameter Real Nand1.Mp1.Cbg1.Cgb1.Fn = (3.14159265358979 * (Nand1.Mp1.Cbg1.Cgb1.es * Nand1.Mp1.Cbg1.Cgb1.DELTA)) / (Nand1.Mp1.Cbg1.Cgb1.W * Nand1.Mp1.Cbg1.Cgb1.COX * 2.0);
//   output Real Nand1.Mp1.Cbg1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Cbg1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Cbg1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Cbg1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Cbg1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Cbg1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Cbg1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Cbg1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Cbg1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Cbg1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Cbg1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Vsb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Vsb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Vsb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp1.Vsb.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp1.Vsb.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Vsb.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Vsb.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Vsb.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Vsb.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Vsb.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsb.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Vsb.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsb.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Vsb.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Vsb.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Vsb.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp1.Vsb.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp1.Vsb.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsb.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsb.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsb.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.RD \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Rd.TR1(unit = \"1/K\") = Nand1.Mp1.TRD1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Rd.TR2(unit = \"1/K2\") = Nand1.Mp1.TRD2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mp1.Rd.Level = Nand1.Mp1.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mp1.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Rd.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Rd.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Rd.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Rd.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Rd.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Rd.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Rd.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Rd.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Rd.RM1.TR1(unit = \"1/K\") = Nand1.Mp1.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Rd.RM1.TR2(unit = \"1/K2\") = Nand1.Mp1.Rd.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mp1.Rd.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mp1.Rd.RM1.Level = Nand1.Mp1.Rd.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mp1.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Rs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Rs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Rs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Rs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Rs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Rs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Rs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Rs.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.RS \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Rs.TR1(unit = \"1/K\") = Nand1.Mp1.TRS1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Rs.TR2(unit = \"1/K2\") = Nand1.Mp1.TRS2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mp1.Rs.Level = Nand1.Mp1.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mp1.Rs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Rs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Rs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Rs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Rs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Rs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Rs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Rs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Rs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Rs.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Rs.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Rs.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Rs.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Rs.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Rs.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Rs.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Rs.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Rs.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Rs.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Rs.RM1.TR1(unit = \"1/K\") = Nand1.Mp1.Rs.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Rs.RM1.TR2(unit = \"1/K2\") = Nand1.Mp1.Rs.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mp1.Rs.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mp1.Rs.RM1.Level = Nand1.Mp1.Rs.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mp1.Rs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Rs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Rs.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Rs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Rs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Rs.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Rs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Rs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Rs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Rs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Rs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Mpi.Level = Nand1.Mp1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Mpi.Type = -1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Mpi.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.VT0eff \"Zero-bias threshold voltage\";
//   parameter Real Nand1.Mp1.Mpi.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.VFBeff \"Flat band voltage\";
//   parameter Real Nand1.Mp1.Mpi.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Mpi.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp1.LAMBDAeff \"Channel length modulation\";
//   parameter Real Nand1.Mp1.Mpi.TOX(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.TOXeff \"Thin oxide thickness\";
//   parameter Real Nand1.Mp1.Mpi.COX(unit = \"F/m2\") = Nand1.Mp1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Mpi.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = Nand1.Mp1.NSUBeff \"Substrate doping\";
//   parameter Real Nand1.Mp1.Mpi.NSS(unit = \"1/m2\") = Nand1.Mp1.NSS \"Surface state density\";
//   parameter Real Nand1.Mp1.Mpi.NFS(unit = \"1/m2\") = Nand1.Mp1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Mpi.NEFF = Nand1.Mp1.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mp1.Mpi.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Leff \"Channel length\";
//   parameter Real Nand1.Mp1.Mpi.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Weff \"Channel width\";
//   parameter Real Nand1.Mp1.Mpi.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Mpi.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Mpi.AD(quantity = \"Area\", unit = \"m2\") = Nand1.Mp1.AD \"Drain diffusion area\";
//   parameter Real Nand1.Mp1.Mpi.PD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.PD \"Drain perimeter width\";
//   parameter Real Nand1.Mp1.Mpi.AS(quantity = \"Area\", unit = \"m2\") = Nand1.Mp1.AS \"Source diffusion area\";
//   parameter Real Nand1.Mp1.Mpi.PS(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.PS \"Source perimeter width\";
//   parameter Real Nand1.Mp1.Mpi.XD(unit = \"m/V^0.5\") = Nand1.Mp1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Mpi.TPG = Nand1.Mp1.TPG \"Type of gate material\";
//   parameter Real Nand1.Mp1.Mpi.U0(unit = \"m2/(V.s)\") = Nand1.Mp1.U0eff \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mp1.UCRIT \"Critical electric field for mobility\";
//   parameter Real Nand1.Mp1.Mpi.UEXP = Nand1.Mp1.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mp1.Mpi.UTRA = Nand1.Mp1.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mp1.Mpi.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mp1.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mp1.Mpi.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mp1.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mp1.Mpi.XQC = Nand1.Mp1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp1.Mpi.DELTA = Nand1.Mp1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Mpi.KAPPA = Nand1.Mp1.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mp1.Mpi.ETA = Nand1.Mp1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Mpi.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp1.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mp1.Mpi.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mp1.Mpi.ISD(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.ISDeff \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.ISS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.ISSeff \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.CJ(unit = \"F/m2\") = Nand1.Mp1.CJeff \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.MJ = Nand1.Mp1.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.CJSW(unit = \"F/m\") = Nand1.Mp1.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.MJSW = Nand1.Mp1.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.FC = Nand1.Mp1.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp1.Mpi.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mp1.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mp1.Mpi.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mp1.Mpi.EMin = Nand1.Mp1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.EMax = Nand1.Mp1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mp1.Mpi.enforceStates = Nand1.Mp1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp1.Mpi.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp1.Mpi.IDS0.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp1.Mpi.IDS0.u2 \"Connector of Real input signal 2\";
//   output Real Nand1.Mp1.Mpi.IDS0.y \"Connector of Real output signal\";
//   parameter Integer Nand1.Mp1.Mpi.IDS0.Level = Nand1.Mp1.Mpi.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp1.Mpi.IDS0.Type = Nand1.Mp1.Mpi.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.VFB \"Flat band voltage\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp1.Mpi.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.GAMMA(unit = \"V^0.5\") = Nand1.Mp1.Mpi.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp1.Mpi.LAMBDA \"Channel length modulation\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.COX(unit = \"F/m2\") = Nand1.Mp1.Mpi.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.NFS(unit = \"1/m2\") = Nand1.Mp1.Mpi.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.NEFF = Nand1.Mp1.Mpi.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Mpi.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Mpi.L \"Channel length\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp1.Mpi.W \"Channel width\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Mpi.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.XD(unit = \"m/V^0.5\") = Nand1.Mp1.Mpi.XD \"Depletion factor\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.U0(unit = \"m2/(V.s)\") = Nand1.Mp1.Mpi.U0 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.UEXP = Nand1.Mp1.Mpi.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.UTRA = Nand1.Mp1.Mpi.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mp1.Mpi.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mp1.Mpi.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.DELTA = Nand1.Mp1.Mpi.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.KAPPA = Nand1.Mp1.Mpi.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.ETA = Nand1.Mp1.Mpi.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp1.Mpi.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.EMin = Nand1.Mp1.Mpi.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.IDS0.EMax = Nand1.Mp1.Mpi.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Nand1.Mp1.Mpi.IDS0.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.ids(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real Nand1.Mp1.Mpi.IDS0.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.vdsat1(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted saturation voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.vpof(quantity = \"ElectricPotential\", unit = \"V\") \"Punch-through voltage\";
//   output Real Nand1.Mp1.Mpi.IDS0.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.IDS0.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.IDS0.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.IDS0.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.IDS0.y1[5] \"Connector of Real output signals\";
//   input Real Nand1.Mp1.Mpi.IDS0.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   input Real Nand1.Mp1.Mpi.IDS0.u3 \"Connector of Real input signal 3\";
//   protected Real Nand1.Mp1.Mpi.IDS0.sig \"sign(vds)\";
//   output Real Nand1.Mp1.Mpi.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mp1.Mpi.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Vsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Vsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Vsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp1.Mpi.Vsg.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Vsg.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Vsg.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Vsg.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp1.Mpi.Vsg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Vsb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Vsb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp1.Mpi.Vsb.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsb.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsb.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Vsb.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Vsb.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Vsb.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp1.Mpi.Vsb.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsb.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mp1.Mpi.y1[5] \"Connector of Real output signals\";
//   Real Nand1.Mp1.Mpi.Dsb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Dsb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Dsb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Mpi.Dsb.Level = Nand1.Mp1.Mpi.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.Mpi.ISS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.CJ(unit = \"F/m2\") = Nand1.Mp1.Mpi.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.MJ = Nand1.Mp1.Mpi.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.CJSW(unit = \"F/m\") = Nand1.Mp1.Mpi.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.MJSW = Nand1.Mp1.Mpi.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.FC = Nand1.Mp1.Mpi.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp1.Mpi.AS \"Diffusion area\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Mpi.PS \"Perimeter width\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mp1.Mpi.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mp1.Mpi.Dsb.enforceStates = Nand1.Mp1.Mpi.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mp1.Mpi.Dsb.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mp1.Mpi.Dsb.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mp1.Mpi.Dsb.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.Mpi.Dsb.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.Mpi.Dsb.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Mpi.Dsb.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp1.Mpi.Dsb.nlCM1.Level = Nand1.Mp1.Mpi.Dsb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Dsb.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Dsb.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mp1.Mpi.Dsb.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.MJ = Nand1.Mp1.Mpi.Dsb.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mp1.Mpi.Dsb.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.MJSW = Nand1.Mp1.Mpi.Dsb.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.FC = Nand1.Mp1.Mpi.Dsb.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp1.Mpi.Dsb.A \"Diffusion area\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Mpi.Dsb.P \"Perimeter width\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Dsb.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp1.Mpi.Dsb.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mp1.Mpi.Dsb.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mp1.Mpi.Dsb.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Dsb.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp1.Mpi.Dsb.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.T_nom.e0 = Nand1.Mp1.Mpi.Dsb.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Dsb.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Mpi.Dsb.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mp1.Mpi.Dsb.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mp1.Mpi.Dsb.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.Rd.R1.Area = Nand1.Mp1.Mpi.Dsb.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp1.Mpi.Dsb.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Dsb.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Mpi.Dsb.DjM1.Level = Nand1.Mp1.Mpi.Dsb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.Mpi.Dsb.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Dsb.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.EMin = Nand1.Mp1.Mpi.Dsb.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.EMax = Nand1.Mp1.Mpi.Dsb.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Dsb.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Level = Nand1.Mp1.Mpi.Dsb.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.Mpi.Dsb.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Dsb.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMin = Nand1.Mp1.Mpi.Dsb.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMax = Nand1.Mp1.Mpi.Dsb.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.ExMin = exp(Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.ExMax = exp(Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMax);
//   output Real Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp1.Mpi.Dsb.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Dsb.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Dsb.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp1.Mpi.Dsb.VarC1.enforceStates = Nand1.Mp1.Mpi.Dsb.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp1.Mpi.Dsb.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mp1.Mpi.Dsb.VarC1.u \"Modulation signal\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.mC1.e(start = Nand1.Mp1.Mpi.Dsb.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Dsb.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mp1.Mpi.Dsb.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mp1.Mpi.Ddb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Ddb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Ddb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Mpi.Ddb.Level = Nand1.Mp1.Mpi.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.Mpi.ISD \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.CJ(unit = \"F/m2\") = Nand1.Mp1.Mpi.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.MJ = Nand1.Mp1.Mpi.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.CJSW(unit = \"F/m\") = Nand1.Mp1.Mpi.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.MJSW = Nand1.Mp1.Mpi.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.FC = Nand1.Mp1.Mpi.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp1.Mpi.AD \"Diffusion area\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Mpi.PD \"Perimeter width\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mp1.Mpi.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mp1.Mpi.Ddb.enforceStates = Nand1.Mp1.Mpi.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mp1.Mpi.Ddb.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mp1.Mpi.Ddb.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mp1.Mpi.Ddb.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.Mpi.Ddb.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.Mpi.Ddb.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Mpi.Ddb.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp1.Mpi.Ddb.nlCM1.Level = Nand1.Mp1.Mpi.Ddb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Ddb.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Ddb.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mp1.Mpi.Ddb.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.MJ = Nand1.Mp1.Mpi.Ddb.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mp1.Mpi.Ddb.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.MJSW = Nand1.Mp1.Mpi.Ddb.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.FC = Nand1.Mp1.Mpi.Ddb.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp1.Mpi.Ddb.A \"Diffusion area\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.Mpi.Ddb.P \"Perimeter width\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Ddb.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp1.Mpi.Ddb.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mp1.Mpi.Ddb.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mp1.Mpi.Ddb.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Ddb.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp1.Mpi.Ddb.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.T_nom.e0 = Nand1.Mp1.Mpi.Ddb.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Ddb.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Mpi.Ddb.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mp1.Mpi.Ddb.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mp1.Mpi.Ddb.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.Rd.R1.Area = Nand1.Mp1.Mpi.Ddb.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp1.Mpi.Ddb.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Ddb.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp1.Mpi.Ddb.DjM1.Level = Nand1.Mp1.Mpi.Ddb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.Mpi.Ddb.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Ddb.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.EMin = Nand1.Mp1.Mpi.Ddb.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.EMax = Nand1.Mp1.Mpi.Ddb.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Ddb.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Level = Nand1.Mp1.Mpi.Ddb.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp1.Mpi.Ddb.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Mpi.Ddb.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMin = Nand1.Mp1.Mpi.Ddb.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMax = Nand1.Mp1.Mpi.Ddb.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.ExMin = exp(Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.ExMax = exp(Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMax);
//   output Real Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp1.Mpi.Ddb.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Ddb.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Ddb.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp1.Mpi.Ddb.VarC1.enforceStates = Nand1.Mp1.Mpi.Ddb.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp1.Mpi.Ddb.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mp1.Mpi.Ddb.VarC1.u \"Modulation signal\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.mC1.e(start = Nand1.Mp1.Mpi.Ddb.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Ddb.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mp1.Mpi.Ddb.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mp1.Mpi.Vsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Vsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Vsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp1.Mpi.Vsd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Vsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Vsd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Vsd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Vsd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp1.Mpi.Vsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Vsd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Isd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Isd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Isd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Isd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Isd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Isd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Isd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp1.Mpi.Isd.InPort1(quantity = \"ElectricCurrent\", unit = \"A\") \"Current source\";
//   Real Nand1.Mp1.Mpi.Isd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Isd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Isd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Isd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp1.Mpi.Isd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B4.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Isd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B4.fBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Isd.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B3.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Isd.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Isd.B3.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Isd.I1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Isd.I1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Isd.I1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Isd.I1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Isd.I1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.I1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.I1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Isd.I1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Isd.I1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Isd.I1.BondCon2.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Isd.I1.s \"Signal input\";
//   Real Nand1.Mp1.Mpi.Isd.I1.f0 \"Bondgraphic Flow Source\";
//   Real Nand1.Mp1.Mpi.Rsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Rsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Rsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rsg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rsg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp1.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rsg.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rsg.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.T_nom.e0 = Nand1.Mp1.Mpi.Rsg.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Rsg.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Mpi.Rsg.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.R1.TR1(unit = \"1/K\") = Nand1.Mp1.Mpi.Rsg.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.R1.TR2(unit = \"1/K2\") = Nand1.Mp1.Mpi.Rsg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsg.R1.Area = Nand1.Mp1.Mpi.Rsg.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rsg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp1.Mpi.Rsg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rsg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Rdg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Rdg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Rdg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rdg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rdg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rdg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rdg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rdg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp1.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rdg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rdg.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rdg.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.T_nom.e0 = Nand1.Mp1.Mpi.Rdg.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Rdg.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Mpi.Rdg.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.R1.TR1(unit = \"1/K\") = Nand1.Mp1.Mpi.Rdg.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.R1.TR2(unit = \"1/K2\") = Nand1.Mp1.Mpi.Rdg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rdg.R1.Area = Nand1.Mp1.Mpi.Rdg.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rdg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp1.Mpi.Rdg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rdg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Rbg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Rbg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Rbg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rbg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rbg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rbg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rbg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rbg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp1.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rbg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rbg.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rbg.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.T_nom.e0 = Nand1.Mp1.Mpi.Rbg.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Rbg.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Mpi.Rbg.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.R1.TR1(unit = \"1/K\") = Nand1.Mp1.Mpi.Rbg.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.R1.TR2(unit = \"1/K2\") = Nand1.Mp1.Mpi.Rbg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rbg.R1.Area = Nand1.Mp1.Mpi.Rbg.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rbg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp1.Mpi.Rbg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rbg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Mpi.Rsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Mpi.Rsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Mpi.Rsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rsd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rsd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp1.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rsd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rsd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.T_nom.e0 = Nand1.Mp1.Mpi.Rsd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Mpi.Rsd.Tnom \"Reference temperature\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp1.Mpi.Rsd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.R1.TR1(unit = \"1/K\") = Nand1.Mp1.Mpi.Rsd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.R1.TR2(unit = \"1/K2\") = Nand1.Mp1.Mpi.Rsd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp1.Mpi.Rsd.R1.Area = Nand1.Mp1.Mpi.Rsd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp1.Mpi.Rsd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp1.Mpi.Rsd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Mpi.Rsd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.T_nom.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.T_nom.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.T_nom.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.T_nom.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.T_nom.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.T_nom.Tabs.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.T_nom.Tabs.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.T_nom.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.T_nom.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.T_nom.Tabs.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp1.T_nom.Tabs.s \"Signal input\";
//   Real Nand1.Mp1.T_nom.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real Nand1.Mp1.T_nom.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp1.T_nom.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.T_nom.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp1.T_nom.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp1.T_nom.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp1.T_nom.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp1.T_nom.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.T_nom.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp1.T_nom.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp1.Tnom \"Fixed temperature at port\";
//   Real Nand1.Mp1.Sw1.p.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Sw1.p.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Sw1.n1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Sw1.n1.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Sw1.n2.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Sw1.n2.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Boolean Nand1.Mp1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Heat2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Heat2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Heat2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Heat2BG1.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Sw1.Heat2BG1.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Sw1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Sw1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Sw1.BG2Heat2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.BG2Heat2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.BG2Heat2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.BG2Heat2.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp1.Sw1.BG2Heat2.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp1.Sw1.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp1.Sw1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Sw1.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp1.Sw1.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp1.Sw1.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp1.Sw1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Sw1.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp1.Vsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp1.Vsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Vsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp1.Vsd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp1.Vsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Vsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Vsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp1.Vsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Vsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Vsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Vsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp1.Vsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp1.Vsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp1.Vsd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp1.Vsd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp1.Vsd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp1.Vsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp1.Vsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp1.Vsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp1.Vsd.B3.BondCon2.d \"Directional variable\";
//   protected parameter Integer Nand1.Mp1.Type = -1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   protected parameter Real Nand1.Mp1.U0def(unit = \"m2/(V.s)\") = 0.06;
//   protected parameter Real Nand1.Mp1.eox(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 3.45313324887195e-11 \"Permittivity of SiO2\";
//   protected parameter Real Nand1.Mp1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of silicon\";
//   parameter Real Nand1.Mp1.TOX(quantity = \"Length\", unit = \"m\") = 1e-07 \"Thin oxide thickness\";
//   protected parameter Real Nand1.Mp1.LDeff(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.LD;
//   protected parameter Real Nand1.Mp1.Weff(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.W + -2.0 * Nand1.Mp1.WD;
//   protected parameter Real Nand1.Mp1.GAMMAtmp(unit = \"V^0.5\") = if Nand1.Mp1.GAMMA == 0.0 and Nand1.Mp1.NSUB == 0.0 then 0.35 else Nand1.Mp1.GAMMA;
//   protected parameter Real Nand1.Mp1.VTref(quantity = \"ElectricPotential\", unit = \"V\") = 8.61727503842867e-05 * Nand1.Mp1.Tnom \"Thermal voltage at reference temperature\";
//   protected parameter Real Nand1.Mp1.EGref(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.EG + (-0.000702 * Nand1.Mp1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Tnom) \"Energy gap for temperature effect on saturation current at reference temperature\";
//   protected parameter Real Nand1.Mp1.ISDeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mp1.ISD > 0.0 then Nand1.Mp1.ISD else if Nand1.Mp1.AD * Nand1.Mp1.JS > 0.0 then Nand1.Mp1.AD * Nand1.Mp1.JS else 1e-15;
//   protected parameter Real Nand1.Mp1.ISSeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mp1.ISS > 0.0 then Nand1.Mp1.ISS else if Nand1.Mp1.AS * Nand1.Mp1.JS > 0.0 then Nand1.Mp1.AS * Nand1.Mp1.JS else 1e-15;
//   protected parameter Real Nand1.Mp1.CGB0eff(unit = \"F/m\") = Nand1.Mp1.CGB0;
//   protected parameter Real Nand1.Mp1.CGD0eff(unit = \"F/m\") = Nand1.Mp1.CGD0;
//   protected parameter Real Nand1.Mp1.CGS0eff(unit = \"F/m\") = Nand1.Mp1.CGS0;
//   protected parameter Real Nand1.Mp1.U0tmp(unit = \"m2/(V.s)\") = if Nand1.Mp1.KP == 0.0 and Nand1.Mp1.U0 == 0.0 then Nand1.Mp1.U0def else Nand1.Mp1.U0;
//   protected parameter Real Nand1.Mp1.TOXeff(quantity = \"Length\", unit = \"m\") = if Nand1.Mp1.TOX == 1e-07 and Nand1.Mp1.COX > 0.0 then Nand1.Mp1.eox / Nand1.Mp1.COX else Nand1.Mp1.TOX;
//   protected parameter Real Nand1.Mp1.COXeff(unit = \"F/m2\") = if Nand1.Mp1.COX > 0.0 then Nand1.Mp1.COX else Nand1.Mp1.eox / Nand1.Mp1.TOX;
//   protected parameter Real Nand1.Mp1.Leff(quantity = \"Length\", unit = \"m\") = Nand1.Mp1.L + -2.0 * Nand1.Mp1.LDeff;
//   protected parameter Real Nand1.Mp1.XNI(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 * ((Nand1.Mp1.Tnom / 300.0) ^ 1.5 * exp(5802.2982644775 * (Nand1.Mp1.EGref * (0.00333333333333333 + -1.0 / Nand1.Mp1.Tnom)))) \"Intrinsic carrier concentration at reference temperature\";
//   protected parameter Real Nand1.Mp1.FermiG(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mp1.Type) * (Nand1.Mp1.TPG * Nand1.Mp1.EGref)) / 2.0;
//   protected parameter Real Nand1.Mp1.EGeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mp1.Level == 3 and Nand1.Mp1.EG == 0.0 then 0.2 else Nand1.Mp1.EGref;
//   protected parameter Real Nand1.Mp1.KPeff(quantity = \"Transconductance\", unit = \"A/(V*V)\") = if Nand1.Mp1.KP > 0.0 then Nand1.Mp1.KP else Nand1.Mp1.U0tmp * Nand1.Mp1.COXeff;
//   protected parameter Real Nand1.Mp1.U0eff(unit = \"m2/(V.s)\") = if Nand1.Mp1.KP > 0.0 and Nand1.Mp1.U0 == 0.0 then Nand1.Mp1.KP / Nand1.Mp1.COXeff else Nand1.Mp1.U0tmp;
//   protected parameter Real Nand1.Mp1.NSUBeff(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = if Nand1.Mp1.NSUB > 0.0 then Nand1.Mp1.NSUB else (Nand1.Mp1.GAMMAtmp * Nand1.Mp1.COXeff) ^ 2.0 / (Nand1.Mp1.es * 3.2043784e-19);
//   protected parameter Real Nand1.Mp1.GAMMAeff(unit = \"V^0.5\") = if Nand1.Mp1.GAMMA == 0.0 and Nand1.Mp1.NSUB > 0.0 then sqrt(3.2043784e-19 * (Nand1.Mp1.es * Nand1.Mp1.NSUB)) / Nand1.Mp1.COXeff else Nand1.Mp1.GAMMAtmp;
//   protected parameter Real Nand1.Mp1.VBP(quantity = \"ElectricPotential\", unit = \"V\") = (Nand1.Mp1.UCRIT * Nand1.Mp1.es) / Nand1.Mp1.COXeff \"Gate to channel critical voltage\";
//   protected parameter Real Nand1.Mp1.PHIeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mp1.PHI > 0.0 then Nand1.Mp1.PHI else if Nand1.Mp1.NSUB > 0.0 then max(2.0 * (Nand1.Mp1.VTref * log(Nand1.Mp1.NSUB / Nand1.Mp1.XNI)),0.1) else 0.6;
//   protected parameter Real Nand1.Mp1.Fn1(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mp1.TPG == 0.0 then 3.2 else 3.25 + (Nand1.Mp1.EGref / 2.0 - Nand1.Mp1.FermiG);
//   protected parameter Real Nand1.Mp1.LAMBDAeff(quantity = \"InversePotential\", unit = \"1/V\") = if Nand1.Mp1.LAMBDA > 0.0 then Nand1.Mp1.LAMBDA else if Nand1.Mp1.Level <> 2 then sqrt((2.0 * Nand1.Mp1.es) / (Nand1.Mp1.NSUBeff * 1.6021892e-19)) else Nand1.Mp1.LAMBDA;
//   protected parameter Real Nand1.Mp1.XD(unit = \"m/V^0.5\") = sqrt((2.0 * Nand1.Mp1.es) / (Nand1.Mp1.NSUBeff * 1.6021892e-19)) \"Depletion factor\";
//   protected parameter Real Nand1.Mp1.CJeff(unit = \"F/m2\") = if Nand1.Mp1.CJ > 0.0 then Nand1.Mp1.CJ else sqrt((1.6021892e-19 * (Nand1.Mp1.es * Nand1.Mp1.NSUBeff)) / (Nand1.Mp1.PB * 2.0));
//   protected parameter Real Nand1.Mp1.FermiS(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mp1.Type) * Nand1.Mp1.PHIeff) / 2.0;
//   protected parameter Real Nand1.Mp1.Vcorr(quantity = \"ElectricPotential\", unit = \"V\") = Real(Nand1.Mp1.Type) * (Nand1.Mp1.GAMMAeff * sqrt(Nand1.Mp1.PHIeff) + Nand1.Mp1.PHIeff);
//   protected parameter Real Nand1.Mp1.Fn2(quantity = \"ElectricPotential\", unit = \"V\") = -3.25 + (Nand1.Mp1.Fn1 + ((-Nand1.Mp1.EGref) / 2.0 - Nand1.Mp1.FermiS));
//   protected parameter Real Nand1.Mp1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp1.Fn2 + (-1.6021892e-19 * Nand1.Mp1.NSS) / Nand1.Mp1.COXeff;
//   protected parameter Real Nand1.Mp1.VT0eff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mp1.Type) * Nand1.Mp1.VT0 > 0.0 then Nand1.Mp1.VT0 else Nand1.Mp1.VFB + Nand1.Mp1.Vcorr;
//   protected parameter Real Nand1.Mp1.VFBeff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mp1.Type) * Nand1.Mp1.VT0 > 0.0 then Nand1.Mp1.VT0 - Nand1.Mp1.Vcorr else Nand1.Mp1.VFB;
//   constant Real Nand1.Mp2.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp2.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.ni(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 \"Intrinsic carrier concentration at 300 K\";
//   constant Real Nand1.Mp2.kox = 3.9 \"Dielectric constant of SiO2\";
//   constant Real Nand1.Mp2.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp2.GapC1(unit = \"V/K\") = 0.000702 \"Sze's first bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Sze's second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Fn0(quantity = \"ElectricPotential\", unit = \"V\") = 3.25 \"Work function constant for computation of flat band voltage\";
//   constant Real Nand1.Mp2.TOXdef = 1e-07 \"Default oxide thickness\";
//   parameter Integer Nand1.Mp2.Level(min = 0, max = 4) = Nand1.Level \"Level of MOSFET model\";
//   parameter Real Nand1.Mp2.L(quantity = \"Length\", unit = \"m\", min = 0.0) = 3.1e-06 \"Channel length\";
//   parameter Real Nand1.Mp2.W(quantity = \"Length\", unit = \"m\", min = 0.0) = 6.5e-06 \"Channel width\";
//   parameter Real Nand1.Mp2.TPG(min = 1.0, max = 2.0) = 1.0 \"Type of gate material\";
//   parameter Real Nand1.Mp2.COX(unit = \"F/m2\") = 0.000335 \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1e+21 \"Substrate doping\";
//   parameter Real Nand1.Mp2.U0(unit = \"m2/(V.s)\") = 0.07 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mp2.VT0(quantity = \"ElectricPotential\", unit = \"V\") = -1.0 \"Zero-bias threshold voltage (VT0<0: enhancement type, VT0>0: depletion type)\";
//   parameter Real Nand1.Mp2.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\", min = 0.0) = 0.02 \"Channel length modulation\";
//   parameter Real Nand1.Mp2.LD(quantity = \"Length\", unit = \"m\", min = 0.0) = 2.5e-07 \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.WD(quantity = \"Length\", unit = \"m\", min = 0.0) = 1.25e-06 \"Width diffusion\";
//   parameter Real Nand1.Mp2.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = 1.05e-05 \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.GAMMA(unit = \"V^0.5\") = 0.35 \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.PHI(quantity = \"ElectricPotential\", unit = \"V\") = 0.65 \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.NSS(unit = \"1/m2\") = 100000000000000.0 \"Surface state density\";
//   parameter Real Nand1.Mp2.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   parameter Real Nand1.Mp2.EG(quantity = \"ElectricPotential\", unit = \"V\") = 1.11 \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mp2.AD(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Drain diffusion area\";
//   parameter Real Nand1.Mp2.PD(quantity = \"Length\", unit = \"m\") = 8e-07 \"Drain perimeter width\";
//   parameter Real Nand1.Mp2.AS(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Source diffusion area\";
//   parameter Real Nand1.Mp2.PS(quantity = \"Length\", unit = \"m\") = 8e-07 \"Source perimeter width\";
//   parameter Real Nand1.Mp2.ISD(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.ISS(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.JS(quantity = \"CurrentDensity\", unit = \"A/m2\", min = 0.0) = 1e-08 \"Saturation current density at reference temperature\";
//   parameter Real Nand1.Mp2.PB(quantity = \"ElectricPotential\", unit = \"V\", min = 0.2) = 0.75 \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp2.RD(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Drain Ohmic resistance\";
//   parameter Real Nand1.Mp2.RS(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Source Ohmic resistance\";
//   parameter Real Nand1.Mp2.CJ(unit = \"F/m2\", min = 0.0) = 0.0002 \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp2.MJ(min = 0.3, max = 0.5) = 0.5 \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp2.CJSW(unit = \"F/m\", min = 0.0) = 1e-09 \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp2.MJSW(min = 0.3, max = 0.5) = 0.33 \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp2.FC(min = 0.0, max = 0.95) = 0.5 \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp2.CGB0(unit = \"F/m\", min = 0.0) = 2e-10 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.CGD0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.CGS0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.TRD1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mp2.TRD2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mp2.TRS1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of source resistance\";
//   parameter Real Nand1.Mp2.TRS2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of source resistance\";
//   parameter Real Nand1.Mp2.XJ(quantity = \"Length\", unit = \"m\") = 1e-06 \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 1000000.0 \"Critical electric field for mobility\";
//   parameter Real Nand1.Mp2.UEXP = 0.1 \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mp2.UTRA(min = 0.0, max = 0.5) = 0.5 \"Transverse field coefficient\";
//   parameter Real Nand1.Mp2.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 0.0 \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mp2.DELTA = 1.0 \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.VMAX(quantity = \"Velocity\", unit = \"m/s\") = 0.0 \"Maximum drift velocity of carriers (VMAX=0: Frohman-Grove model, VMAX>0: Baum-Beneking model)\";
//   parameter Real Nand1.Mp2.NFS(unit = \"1/m2\") = 100000000000000.0 \"Surface fast state density\";
//   parameter Real Nand1.Mp2.NEFF(min = 1e-60) = 5.0 \"Total channel charge coefficient\";
//   parameter Real Nand1.Mp2.XQC = 0.0 \"Coefficient of channel charge share (XQC<=0.5: Ward-Dutton model, XQC>0.5: Meyer model)\";
//   parameter Real Nand1.Mp2.KAPPA(min = 1e-60) = 0.2 \"Saturation field factor\";
//   parameter Real Nand1.Mp2.ETA = 1.0 \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.THETA(quantity = \"InversePotential\", unit = \"1/V\") = 0.05 \"Mobility modulation\";
//   parameter Real Nand1.Mp2.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.GminDC(quantity = \"Conductance\", unit = \"S\") = 1e-16 \"Leakage conductance\";
//   parameter Boolean Nand1.Mp2.enforceStates = true \"State selector\";
//   Real Nand1.Mp2.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Csg1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp2.Csg1.enforceStates = Nand1.Mp2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp2.Csg1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp2.Csg1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Csg1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Csg1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Csg1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Csg1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Csg1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Csg1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Csg1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Csg1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Csg1.Level = Nand1.Mp2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Csg1.Type = Nand1.Mp2.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Csg1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp2.Csg1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Csg1.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Csg1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Csg1.COX(unit = \"F/m2\") = Nand1.Mp2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Csg1.NFS(unit = \"1/m2\") = Nand1.Mp2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Csg1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Csg1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Leff \"Channel length\";
//   parameter Real Nand1.Mp2.Csg1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Weff \"Channel width\";
//   parameter Real Nand1.Mp2.Csg1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Csg1.XD(unit = \"m/V^0.5\") = Nand1.Mp2.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Csg1.XQC = Nand1.Mp2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp2.Csg1.DELTA = Nand1.Mp2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Csg1.ETA = Nand1.Mp2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Csg1.CGS0(unit = \"F/m\") = Nand1.Mp2.CGS0eff \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.Csg1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp2.Csg1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Csg1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Csg1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Csg1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Csg1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Csg1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Csg1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Csg1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Csg1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Csg1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.Cgs1.e1(start = Nand1.Mp2.Csg1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Csg1.Cgs1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Csg1.Cgs1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Csg1.Cgs1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Csg1.Cgs1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.Cgs1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.Cgs1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.Cgs1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.Cgs1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.Cgs1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Csg1.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Csg1.Cgs1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Csg1.Cgs1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp2.Csg1.Cgs1.pi = 3.14159265358979;
//   constant Real Nand1.Mp2.Csg1.Cgs1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.Csg1.Cgs1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp2.Csg1.Cgs1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.Csg1.Cgs1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp2.Csg1.Cgs1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Csg1.Cgs1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Csg1.Cgs1.c0 = 0.0631353;
//   constant Real Nand1.Mp2.Csg1.Cgs1.c1 = 0.8013292;
//   constant Real Nand1.Mp2.Csg1.Cgs1.c2 = -0.01110777;
//   parameter Integer Nand1.Mp2.Csg1.Cgs1.Level = Nand1.Mp2.Csg1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Csg1.Cgs1.Type = Nand1.Mp2.Csg1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Csg1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.Csg1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.Csg1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Csg1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.COX(unit = \"F/m2\") = Nand1.Mp2.Csg1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.NFS(unit = \"1/m2\") = Nand1.Mp2.Csg1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Csg1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Csg1.L \"Channel length\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Csg1.W \"Channel width\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Csg1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.XD(unit = \"m/V^0.5\") = Nand1.Mp2.Csg1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.XQC = Nand1.Mp2.Csg1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.DELTA = Nand1.Mp2.Csg1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.ETA = Nand1.Mp2.Csg1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.CGS0(unit = \"F/m\") = Nand1.Mp2.Csg1.CGS0 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.Csg1.Cgs1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Csg1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp2.Csg1.Cgs1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mp2.Csg1.Cgs1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mp2.Csg1.Cgs1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mp2.Csg1.Cgs1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp2.Csg1.Cgs1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mp2.Csg1.Cgs1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mp2.Csg1.Cgs1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mp2.Csg1.Cgs1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mp2.Csg1.Cgs1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mp2.Csg1.Cgs1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mp2.Csg1.Cgs1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.sig \"sign(vds)\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.N \"Current emission coefficient\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.Fs \"Short channel working function\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mp2.Csg1.Cgs1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Csg1.Cgs1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Csg1.Cgs1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Csg1.Cgs1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mp2.Csg1.Cgs1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.WSfac;
//   protected Real Nand1.Mp2.Csg1.Cgs1.WDfac;
//   protected Real Nand1.Mp2.Csg1.Cgs1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mp2.Csg1.Cgs1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mp2.Csg1.Cgs1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp2.Csg1.Cgs1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mp2.Csg1.Cgs1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.Cgs1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.Cgs1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.Cgs1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.Cgs1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mp2.Csg1.Cgs1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mp2.Csg1.Cgs1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mp2.Csg1.Cgs1.W * (Nand1.Mp2.Csg1.Cgs1.L * Nand1.Mp2.Csg1.Cgs1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mp2.Csg1.Cgs1.SIGMA = (8.15e-22 * (Nand1.Mp2.Csg1.Cgs1.ETA * Nand1.Mp2.Csg1.Cgs1.L ^ -3.0)) / Nand1.Mp2.Csg1.Cgs1.COX;
//   protected parameter Real Nand1.Mp2.Csg1.Cgs1.Fn = (3.14159265358979 * (Nand1.Mp2.Csg1.Cgs1.es * Nand1.Mp2.Csg1.Cgs1.DELTA)) / (Nand1.Mp2.Csg1.Cgs1.W * Nand1.Mp2.Csg1.Cgs1.COX * 2.0);
//   Real Nand1.Mp2.Csg1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Csg1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Csg1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Csg1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Csg1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Csg1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Csg1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Csg1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Csg1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Csg1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Csg1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Csg1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp2.Csg1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mp2.Csg1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mp2.Csg1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Csg1.u[5] \"Connector of Real input signals\";
//   parameter Real Nand1.Mp2.Cdg1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp2.Cdg1.enforceStates = Nand1.Mp2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp2.Cdg1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp2.Cdg1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Cdg1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Cdg1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cdg1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Cdg1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cdg1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Cdg1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Cdg1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Cdg1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Cdg1.Level = Nand1.Mp2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Cdg1.Type = Nand1.Mp2.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Cdg1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp2.Cdg1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Cdg1.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Cdg1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Cdg1.COX(unit = \"F/m2\") = Nand1.Mp2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Cdg1.NFS(unit = \"1/m2\") = Nand1.Mp2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Cdg1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Cdg1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Leff \"Channel length\";
//   parameter Real Nand1.Mp2.Cdg1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Weff \"Channel width\";
//   parameter Real Nand1.Mp2.Cdg1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Cdg1.XD(unit = \"m/V^0.5\") = Nand1.Mp2.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Cdg1.XQC = Nand1.Mp2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp2.Cdg1.DELTA = Nand1.Mp2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Cdg1.ETA = Nand1.Mp2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Cdg1.CGD0(unit = \"F/m\") = Nand1.Mp2.CGD0eff \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.Cdg1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp2.Cdg1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mp2.Cdg1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mp2.Cdg1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cdg1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Cdg1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cdg1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Cdg1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.Cgd1.e1(start = Nand1.Mp2.Cdg1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Cdg1.Cgd1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Cdg1.Cgd1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Cdg1.Cgd1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Cdg1.Cgd1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.Cgd1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.Cgd1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.Cgd1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.Cgd1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.Cgd1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Cdg1.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Cdg1.Cgd1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Cdg1.Cgd1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp2.Cdg1.Cgd1.pi = 3.14159265358979;
//   constant Real Nand1.Mp2.Cdg1.Cgd1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.Cdg1.Cgd1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp2.Cdg1.Cgd1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.Cdg1.Cgd1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp2.Cdg1.Cgd1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Cdg1.Cgd1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Cdg1.Cgd1.c0 = 0.0631353;
//   constant Real Nand1.Mp2.Cdg1.Cgd1.c1 = 0.8013292;
//   constant Real Nand1.Mp2.Cdg1.Cgd1.c2 = -0.01110777;
//   parameter Integer Nand1.Mp2.Cdg1.Cgd1.Level = Nand1.Mp2.Cdg1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Cdg1.Cgd1.Type = Nand1.Mp2.Cdg1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Cdg1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.Cdg1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.Cdg1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Cdg1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.COX(unit = \"F/m2\") = Nand1.Mp2.Cdg1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.NFS(unit = \"1/m2\") = Nand1.Mp2.Cdg1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Cdg1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Cdg1.L \"Channel length\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Cdg1.W \"Channel width\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Cdg1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.XD(unit = \"m/V^0.5\") = Nand1.Mp2.Cdg1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.XQC = Nand1.Mp2.Cdg1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.DELTA = Nand1.Mp2.Cdg1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.ETA = Nand1.Mp2.Cdg1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.CGD0(unit = \"F/m\") = Nand1.Mp2.Cdg1.CGD0 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.Cdg1.Cgd1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Cdg1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp2.Cdg1.Cgd1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mp2.Cdg1.Cgd1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mp2.Cdg1.Cgd1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mp2.Cdg1.Cgd1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp2.Cdg1.Cgd1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mp2.Cdg1.Cgd1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mp2.Cdg1.Cgd1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mp2.Cdg1.Cgd1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mp2.Cdg1.Cgd1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mp2.Cdg1.Cgd1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mp2.Cdg1.Cgd1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.sig \"sign(vds)\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.N \"Current emission coefficient\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.Fs \"Short channel working function\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mp2.Cdg1.Cgd1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Cdg1.Cgd1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Cdg1.Cgd1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Cdg1.Cgd1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mp2.Cdg1.Cgd1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.WSfac;
//   protected Real Nand1.Mp2.Cdg1.Cgd1.WDfac;
//   protected Real Nand1.Mp2.Cdg1.Cgd1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mp2.Cdg1.Cgd1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mp2.Cdg1.Cgd1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp2.Cdg1.Cgd1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mp2.Cdg1.Cgd1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.Cgd1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.Cgd1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.Cgd1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cdg1.Cgd1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mp2.Cdg1.Cgd1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mp2.Cdg1.Cgd1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mp2.Cdg1.Cgd1.W * (Nand1.Mp2.Cdg1.Cgd1.L * Nand1.Mp2.Cdg1.Cgd1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mp2.Cdg1.Cgd1.SIGMA = (8.15e-22 * (Nand1.Mp2.Cdg1.Cgd1.ETA * Nand1.Mp2.Cdg1.Cgd1.L ^ -3.0)) / Nand1.Mp2.Cdg1.Cgd1.COX;
//   protected parameter Real Nand1.Mp2.Cdg1.Cgd1.Fn = (3.14159265358979 * (Nand1.Mp2.Cdg1.Cgd1.es * Nand1.Mp2.Cdg1.Cgd1.DELTA)) / (Nand1.Mp2.Cdg1.Cgd1.W * Nand1.Mp2.Cdg1.Cgd1.COX * 2.0);
//   output Real Nand1.Mp2.Cdg1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Cdg1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Cdg1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Cdg1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Cdg1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Cdg1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Cdg1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Cdg1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cdg1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cdg1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cdg1.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Cbg1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp2.Cbg1.enforceStates = Nand1.Mp2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp2.Cbg1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp2.Cbg1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Cbg1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Cbg1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cbg1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Cbg1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cbg1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Cbg1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Cbg1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Cbg1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Cbg1.Level = Nand1.Mp2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Cbg1.Type = Nand1.Mp2.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Cbg1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp2.Cbg1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Cbg1.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Cbg1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Cbg1.COX(unit = \"F/m2\") = Nand1.Mp2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Cbg1.NFS(unit = \"1/m2\") = Nand1.Mp2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Cbg1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Cbg1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Leff \"Channel length\";
//   parameter Real Nand1.Mp2.Cbg1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Weff \"Channel width\";
//   parameter Real Nand1.Mp2.Cbg1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Cbg1.XD(unit = \"m/V^0.5\") = Nand1.Mp2.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Cbg1.XQC = Nand1.Mp2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp2.Cbg1.DELTA = Nand1.Mp2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Cbg1.ETA = Nand1.Mp2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Cbg1.CGB0(unit = \"F/m\") = Nand1.Mp2.CGB0eff \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.Cbg1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp2.Cbg1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mp2.Cbg1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mp2.Cbg1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cbg1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Cbg1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Cbg1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Cbg1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.Cgb1.e1(start = Nand1.Mp2.Cbg1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Cbg1.Cgb1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Cbg1.Cgb1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Cbg1.Cgb1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Cbg1.Cgb1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.Cgb1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.Cgb1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.Cgb1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.Cgb1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.Cgb1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Cbg1.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Cbg1.Cgb1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Cbg1.Cgb1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp2.Cbg1.Cgb1.pi = 3.14159265358979;
//   constant Real Nand1.Mp2.Cbg1.Cgb1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.Cbg1.Cgb1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mp2.Cbg1.Cgb1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.Cbg1.Cgb1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mp2.Cbg1.Cgb1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Cbg1.Cgb1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Cbg1.Cgb1.c0 = 0.0631353;
//   constant Real Nand1.Mp2.Cbg1.Cgb1.c1 = 0.8013292;
//   constant Real Nand1.Mp2.Cbg1.Cgb1.c2 = -0.01110777;
//   parameter Integer Nand1.Mp2.Cbg1.Cgb1.Level = Nand1.Mp2.Cbg1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Cbg1.Cgb1.Type = Nand1.Mp2.Cbg1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Cbg1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.Cbg1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.Cbg1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Cbg1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.COX(unit = \"F/m2\") = Nand1.Mp2.Cbg1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.NFS(unit = \"1/m2\") = Nand1.Mp2.Cbg1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Cbg1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Cbg1.L \"Channel length\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Cbg1.W \"Channel width\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Cbg1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.XD(unit = \"m/V^0.5\") = Nand1.Mp2.Cbg1.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.XQC = Nand1.Mp2.Cbg1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.DELTA = Nand1.Mp2.Cbg1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.ETA = Nand1.Mp2.Cbg1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.CGB0(unit = \"F/m\") = Nand1.Mp2.Cbg1.CGB0 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mp2.Cbg1.Cgb1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Cbg1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mp2.Cbg1.Cgb1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mp2.Cbg1.Cgb1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mp2.Cbg1.Cgb1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mp2.Cbg1.Cgb1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp2.Cbg1.Cgb1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mp2.Cbg1.Cgb1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mp2.Cbg1.Cgb1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mp2.Cbg1.Cgb1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mp2.Cbg1.Cgb1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mp2.Cbg1.Cgb1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mp2.Cbg1.Cgb1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   input Real Nand1.Mp2.Cbg1.Cgb1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.Cgb1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.Cgb1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.Cgb1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.Cgb1.u[5] \"Connector of Real input signals\";
//   input Real Nand1.Mp2.Cbg1.Cgb1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp2.Cbg1.Cgb1.u2 \"Connector of Real input signal 2\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.sig \"sign(vds)\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.N \"Current emission coefficient\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.Fs \"Short channel working function\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mp2.Cbg1.Cgb1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Cbg1.Cgb1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Cbg1.Cgb1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mp2.Cbg1.Cgb1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mp2.Cbg1.Cgb1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.WSfac;
//   protected Real Nand1.Mp2.Cbg1.Cgb1.WDfac;
//   protected Real Nand1.Mp2.Cbg1.Cgb1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mp2.Cbg1.Cgb1.WcXJ \"WC/XJ\";
//   protected parameter Real Nand1.Mp2.Cbg1.Cgb1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mp2.Cbg1.Cgb1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mp2.Cbg1.Cgb1.W * (Nand1.Mp2.Cbg1.Cgb1.L * Nand1.Mp2.Cbg1.Cgb1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mp2.Cbg1.Cgb1.SIGMA = (8.15e-22 * (Nand1.Mp2.Cbg1.Cgb1.ETA * Nand1.Mp2.Cbg1.Cgb1.L ^ -3.0)) / Nand1.Mp2.Cbg1.Cgb1.COX;
//   protected parameter Real Nand1.Mp2.Cbg1.Cgb1.Fn = (3.14159265358979 * (Nand1.Mp2.Cbg1.Cgb1.es * Nand1.Mp2.Cbg1.Cgb1.DELTA)) / (Nand1.Mp2.Cbg1.Cgb1.W * Nand1.Mp2.Cbg1.Cgb1.COX * 2.0);
//   output Real Nand1.Mp2.Cbg1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Cbg1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Cbg1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Cbg1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Cbg1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Cbg1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Cbg1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Cbg1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Cbg1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Cbg1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Cbg1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Vsb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Vsb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Vsb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp2.Vsb.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp2.Vsb.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Vsb.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Vsb.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Vsb.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Vsb.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Vsb.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsb.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Vsb.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsb.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Vsb.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Vsb.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Vsb.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp2.Vsb.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp2.Vsb.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsb.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsb.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsb.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.RD \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Rd.TR1(unit = \"1/K\") = Nand1.Mp2.TRD1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Rd.TR2(unit = \"1/K2\") = Nand1.Mp2.TRD2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mp2.Rd.Level = Nand1.Mp2.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mp2.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Rd.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Rd.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Rd.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Rd.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Rd.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Rd.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Rd.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Rd.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Rd.RM1.TR1(unit = \"1/K\") = Nand1.Mp2.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Rd.RM1.TR2(unit = \"1/K2\") = Nand1.Mp2.Rd.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mp2.Rd.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mp2.Rd.RM1.Level = Nand1.Mp2.Rd.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mp2.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Rs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Rs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Rs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Rs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Rs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Rs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Rs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Rs.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.RS \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Rs.TR1(unit = \"1/K\") = Nand1.Mp2.TRS1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Rs.TR2(unit = \"1/K2\") = Nand1.Mp2.TRS2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mp2.Rs.Level = Nand1.Mp2.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mp2.Rs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Rs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Rs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Rs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Rs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Rs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Rs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Rs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Rs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Rs.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Rs.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Rs.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Rs.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Rs.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Rs.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Rs.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Rs.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Rs.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Rs.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Rs.RM1.TR1(unit = \"1/K\") = Nand1.Mp2.Rs.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Rs.RM1.TR2(unit = \"1/K2\") = Nand1.Mp2.Rs.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mp2.Rs.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mp2.Rs.RM1.Level = Nand1.Mp2.Rs.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mp2.Rs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Rs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Rs.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Rs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Rs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Rs.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Rs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Rs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Rs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Rs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Rs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Mpi.Level = Nand1.Mp2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Mpi.Type = -1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Mpi.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.VT0eff \"Zero-bias threshold voltage\";
//   parameter Real Nand1.Mp2.Mpi.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.VFBeff \"Flat band voltage\";
//   parameter Real Nand1.Mp2.Mpi.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Mpi.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp2.LAMBDAeff \"Channel length modulation\";
//   parameter Real Nand1.Mp2.Mpi.TOX(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.TOXeff \"Thin oxide thickness\";
//   parameter Real Nand1.Mp2.Mpi.COX(unit = \"F/m2\") = Nand1.Mp2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Mpi.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = Nand1.Mp2.NSUBeff \"Substrate doping\";
//   parameter Real Nand1.Mp2.Mpi.NSS(unit = \"1/m2\") = Nand1.Mp2.NSS \"Surface state density\";
//   parameter Real Nand1.Mp2.Mpi.NFS(unit = \"1/m2\") = Nand1.Mp2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Mpi.NEFF = Nand1.Mp2.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mp2.Mpi.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Leff \"Channel length\";
//   parameter Real Nand1.Mp2.Mpi.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Weff \"Channel width\";
//   parameter Real Nand1.Mp2.Mpi.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Mpi.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Mpi.AD(quantity = \"Area\", unit = \"m2\") = Nand1.Mp2.AD \"Drain diffusion area\";
//   parameter Real Nand1.Mp2.Mpi.PD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.PD \"Drain perimeter width\";
//   parameter Real Nand1.Mp2.Mpi.AS(quantity = \"Area\", unit = \"m2\") = Nand1.Mp2.AS \"Source diffusion area\";
//   parameter Real Nand1.Mp2.Mpi.PS(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.PS \"Source perimeter width\";
//   parameter Real Nand1.Mp2.Mpi.XD(unit = \"m/V^0.5\") = Nand1.Mp2.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Mpi.TPG = Nand1.Mp2.TPG \"Type of gate material\";
//   parameter Real Nand1.Mp2.Mpi.U0(unit = \"m2/(V.s)\") = Nand1.Mp2.U0eff \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mp2.UCRIT \"Critical electric field for mobility\";
//   parameter Real Nand1.Mp2.Mpi.UEXP = Nand1.Mp2.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mp2.Mpi.UTRA = Nand1.Mp2.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mp2.Mpi.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mp2.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mp2.Mpi.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mp2.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mp2.Mpi.XQC = Nand1.Mp2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mp2.Mpi.DELTA = Nand1.Mp2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Mpi.KAPPA = Nand1.Mp2.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mp2.Mpi.ETA = Nand1.Mp2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Mpi.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp2.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mp2.Mpi.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mp2.Mpi.ISD(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.ISDeff \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.ISS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.ISSeff \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.CJ(unit = \"F/m2\") = Nand1.Mp2.CJeff \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.MJ = Nand1.Mp2.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.CJSW(unit = \"F/m\") = Nand1.Mp2.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.MJSW = Nand1.Mp2.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.FC = Nand1.Mp2.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp2.Mpi.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mp2.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mp2.Mpi.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mp2.Mpi.EMin = Nand1.Mp2.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.EMax = Nand1.Mp2.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mp2.Mpi.enforceStates = Nand1.Mp2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp2.Mpi.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp2.Mpi.IDS0.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mp2.Mpi.IDS0.u2 \"Connector of Real input signal 2\";
//   output Real Nand1.Mp2.Mpi.IDS0.y \"Connector of Real output signal\";
//   parameter Integer Nand1.Mp2.Mpi.IDS0.Level = Nand1.Mp2.Mpi.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mp2.Mpi.IDS0.Type = Nand1.Mp2.Mpi.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.VFB \"Flat band voltage\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mp2.Mpi.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.GAMMA(unit = \"V^0.5\") = Nand1.Mp2.Mpi.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp2.Mpi.LAMBDA \"Channel length modulation\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.COX(unit = \"F/m2\") = Nand1.Mp2.Mpi.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.NFS(unit = \"1/m2\") = Nand1.Mp2.Mpi.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.NEFF = Nand1.Mp2.Mpi.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Mpi.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Mpi.L \"Channel length\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mp2.Mpi.W \"Channel width\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Mpi.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.XD(unit = \"m/V^0.5\") = Nand1.Mp2.Mpi.XD \"Depletion factor\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.U0(unit = \"m2/(V.s)\") = Nand1.Mp2.Mpi.U0 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.UEXP = Nand1.Mp2.Mpi.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.UTRA = Nand1.Mp2.Mpi.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mp2.Mpi.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mp2.Mpi.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.DELTA = Nand1.Mp2.Mpi.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.KAPPA = Nand1.Mp2.Mpi.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.ETA = Nand1.Mp2.Mpi.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mp2.Mpi.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.EMin = Nand1.Mp2.Mpi.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.IDS0.EMax = Nand1.Mp2.Mpi.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Nand1.Mp2.Mpi.IDS0.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.ids(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real Nand1.Mp2.Mpi.IDS0.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.vdsat1(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted saturation voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.vpof(quantity = \"ElectricPotential\", unit = \"V\") \"Punch-through voltage\";
//   output Real Nand1.Mp2.Mpi.IDS0.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.IDS0.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.IDS0.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.IDS0.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.IDS0.y1[5] \"Connector of Real output signals\";
//   input Real Nand1.Mp2.Mpi.IDS0.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   input Real Nand1.Mp2.Mpi.IDS0.u3 \"Connector of Real input signal 3\";
//   protected Real Nand1.Mp2.Mpi.IDS0.sig \"sign(vds)\";
//   output Real Nand1.Mp2.Mpi.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mp2.Mpi.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Vsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Vsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Vsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp2.Mpi.Vsg.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Vsg.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Vsg.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Vsg.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp2.Mpi.Vsg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Vsb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Vsb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp2.Mpi.Vsb.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsb.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsb.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Vsb.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Vsb.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Vsb.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp2.Mpi.Vsb.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsb.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mp2.Mpi.y1[5] \"Connector of Real output signals\";
//   Real Nand1.Mp2.Mpi.Dsb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Dsb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Dsb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Mpi.Dsb.Level = Nand1.Mp2.Mpi.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.Mpi.ISS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.CJ(unit = \"F/m2\") = Nand1.Mp2.Mpi.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.MJ = Nand1.Mp2.Mpi.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.CJSW(unit = \"F/m\") = Nand1.Mp2.Mpi.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.MJSW = Nand1.Mp2.Mpi.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.FC = Nand1.Mp2.Mpi.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp2.Mpi.AS \"Diffusion area\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Mpi.PS \"Perimeter width\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mp2.Mpi.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mp2.Mpi.Dsb.enforceStates = Nand1.Mp2.Mpi.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mp2.Mpi.Dsb.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mp2.Mpi.Dsb.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mp2.Mpi.Dsb.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.Mpi.Dsb.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.Mpi.Dsb.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Mpi.Dsb.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp2.Mpi.Dsb.nlCM1.Level = Nand1.Mp2.Mpi.Dsb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Dsb.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Dsb.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mp2.Mpi.Dsb.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.MJ = Nand1.Mp2.Mpi.Dsb.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mp2.Mpi.Dsb.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.MJSW = Nand1.Mp2.Mpi.Dsb.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.FC = Nand1.Mp2.Mpi.Dsb.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp2.Mpi.Dsb.A \"Diffusion area\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Mpi.Dsb.P \"Perimeter width\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Dsb.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp2.Mpi.Dsb.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mp2.Mpi.Dsb.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mp2.Mpi.Dsb.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Dsb.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp2.Mpi.Dsb.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.T_nom.e0 = Nand1.Mp2.Mpi.Dsb.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Dsb.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Mpi.Dsb.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mp2.Mpi.Dsb.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mp2.Mpi.Dsb.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.Rd.R1.Area = Nand1.Mp2.Mpi.Dsb.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp2.Mpi.Dsb.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Dsb.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Mpi.Dsb.DjM1.Level = Nand1.Mp2.Mpi.Dsb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.Mpi.Dsb.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Dsb.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.EMin = Nand1.Mp2.Mpi.Dsb.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.EMax = Nand1.Mp2.Mpi.Dsb.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Dsb.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Level = Nand1.Mp2.Mpi.Dsb.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.Mpi.Dsb.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Dsb.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMin = Nand1.Mp2.Mpi.Dsb.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMax = Nand1.Mp2.Mpi.Dsb.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.ExMin = exp(Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.ExMax = exp(Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMax);
//   output Real Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp2.Mpi.Dsb.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Dsb.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Dsb.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp2.Mpi.Dsb.VarC1.enforceStates = Nand1.Mp2.Mpi.Dsb.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp2.Mpi.Dsb.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mp2.Mpi.Dsb.VarC1.u \"Modulation signal\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.mC1.e(start = Nand1.Mp2.Mpi.Dsb.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Dsb.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mp2.Mpi.Dsb.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mp2.Mpi.Ddb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Ddb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Ddb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Mpi.Ddb.Level = Nand1.Mp2.Mpi.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.Mpi.ISD \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.CJ(unit = \"F/m2\") = Nand1.Mp2.Mpi.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.MJ = Nand1.Mp2.Mpi.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.CJSW(unit = \"F/m\") = Nand1.Mp2.Mpi.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.MJSW = Nand1.Mp2.Mpi.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.FC = Nand1.Mp2.Mpi.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp2.Mpi.AD \"Diffusion area\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Mpi.PD \"Perimeter width\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mp2.Mpi.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mp2.Mpi.Ddb.enforceStates = Nand1.Mp2.Mpi.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mp2.Mpi.Ddb.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mp2.Mpi.Ddb.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mp2.Mpi.Ddb.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.Mpi.Ddb.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.Mpi.Ddb.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Mpi.Ddb.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp2.Mpi.Ddb.nlCM1.Level = Nand1.Mp2.Mpi.Ddb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Ddb.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Ddb.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mp2.Mpi.Ddb.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.MJ = Nand1.Mp2.Mpi.Ddb.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mp2.Mpi.Ddb.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.MJSW = Nand1.Mp2.Mpi.Ddb.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.FC = Nand1.Mp2.Mpi.Ddb.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mp2.Mpi.Ddb.A \"Diffusion area\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.Mpi.Ddb.P \"Perimeter width\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Ddb.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mp2.Mpi.Ddb.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mp2.Mpi.Ddb.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mp2.Mpi.Ddb.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Ddb.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp2.Mpi.Ddb.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.T_nom.e0 = Nand1.Mp2.Mpi.Ddb.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Ddb.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Mpi.Ddb.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mp2.Mpi.Ddb.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mp2.Mpi.Ddb.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.Rd.R1.Area = Nand1.Mp2.Mpi.Ddb.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp2.Mpi.Ddb.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Ddb.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mp2.Mpi.Ddb.DjM1.Level = Nand1.Mp2.Mpi.Ddb.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.Mpi.Ddb.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Ddb.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.EMin = Nand1.Mp2.Mpi.Ddb.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.EMax = Nand1.Mp2.Mpi.Ddb.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Ddb.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Level = Nand1.Mp2.Mpi.Ddb.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mp2.Mpi.Ddb.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Mpi.Ddb.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMin = Nand1.Mp2.Mpi.Ddb.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMax = Nand1.Mp2.Mpi.Ddb.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.ExMin = exp(Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.ExMax = exp(Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMax);
//   output Real Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp2.Mpi.Ddb.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Ddb.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Ddb.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mp2.Mpi.Ddb.VarC1.enforceStates = Nand1.Mp2.Mpi.Ddb.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mp2.Mpi.Ddb.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mp2.Mpi.Ddb.VarC1.u \"Modulation signal\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.mC1.e(start = Nand1.Mp2.Mpi.Ddb.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Ddb.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mp2.Mpi.Ddb.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mp2.Mpi.Vsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Vsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Vsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp2.Mpi.Vsd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Vsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Vsd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Vsd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Vsd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp2.Mpi.Vsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Vsd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Isd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Isd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Isd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Isd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Isd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Isd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Isd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp2.Mpi.Isd.InPort1(quantity = \"ElectricCurrent\", unit = \"A\") \"Current source\";
//   Real Nand1.Mp2.Mpi.Isd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Isd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Isd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Isd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mp2.Mpi.Isd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B4.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Isd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B4.fBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Isd.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B3.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Isd.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Isd.B3.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Isd.I1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Isd.I1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Isd.I1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Isd.I1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Isd.I1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.I1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.I1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Isd.I1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Isd.I1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Isd.I1.BondCon2.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Isd.I1.s \"Signal input\";
//   Real Nand1.Mp2.Mpi.Isd.I1.f0 \"Bondgraphic Flow Source\";
//   Real Nand1.Mp2.Mpi.Rsg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Rsg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Rsg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rsg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rsg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rsg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp2.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rsg.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rsg.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.T_nom.e0 = Nand1.Mp2.Mpi.Rsg.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Rsg.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Mpi.Rsg.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.R1.TR1(unit = \"1/K\") = Nand1.Mp2.Mpi.Rsg.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.R1.TR2(unit = \"1/K2\") = Nand1.Mp2.Mpi.Rsg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsg.R1.Area = Nand1.Mp2.Mpi.Rsg.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rsg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp2.Mpi.Rsg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rsg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Rdg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Rdg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Rdg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rdg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rdg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rdg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rdg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rdg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp2.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rdg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rdg.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rdg.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.T_nom.e0 = Nand1.Mp2.Mpi.Rdg.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Rdg.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Mpi.Rdg.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.R1.TR1(unit = \"1/K\") = Nand1.Mp2.Mpi.Rdg.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.R1.TR2(unit = \"1/K2\") = Nand1.Mp2.Mpi.Rdg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rdg.R1.Area = Nand1.Mp2.Mpi.Rdg.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rdg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp2.Mpi.Rdg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rdg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Rbg.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Rbg.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Rbg.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rbg.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rbg.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rbg.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rbg.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rbg.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp2.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rbg.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rbg.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rbg.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.T_nom.e0 = Nand1.Mp2.Mpi.Rbg.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Rbg.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Mpi.Rbg.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.R1.TR1(unit = \"1/K\") = Nand1.Mp2.Mpi.Rbg.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.R1.TR2(unit = \"1/K2\") = Nand1.Mp2.Mpi.Rbg.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rbg.R1.Area = Nand1.Mp2.Mpi.Rbg.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rbg.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp2.Mpi.Rbg.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rbg.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Mpi.Rsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Mpi.Rsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Mpi.Rsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rsd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rsd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mp2.Mpi.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rsd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rsd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.T_nom.e0 = Nand1.Mp2.Mpi.Rsd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Mpi.Rsd.Tnom \"Reference temperature\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mp2.Mpi.Rsd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.R1.TR1(unit = \"1/K\") = Nand1.Mp2.Mpi.Rsd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.R1.TR2(unit = \"1/K2\") = Nand1.Mp2.Mpi.Rsd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mp2.Mpi.Rsd.R1.Area = Nand1.Mp2.Mpi.Rsd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mp2.Mpi.Rsd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp2.Mpi.Rsd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Mpi.Rsd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.T_nom.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.T_nom.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.T_nom.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.T_nom.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.T_nom.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.T_nom.Tabs.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.T_nom.Tabs.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.T_nom.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.T_nom.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.T_nom.Tabs.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mp2.T_nom.Tabs.s \"Signal input\";
//   Real Nand1.Mp2.T_nom.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real Nand1.Mp2.T_nom.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mp2.T_nom.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.T_nom.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mp2.T_nom.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mp2.T_nom.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mp2.T_nom.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mp2.T_nom.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.T_nom.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mp2.T_nom.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mp2.Tnom \"Fixed temperature at port\";
//   Real Nand1.Mp2.Sw1.p.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Sw1.p.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Sw1.n1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Sw1.n1.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Sw1.n2.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Sw1.n2.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Boolean Nand1.Mp2.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Heat2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Heat2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Heat2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Heat2BG1.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Sw1.Heat2BG1.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Sw1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Sw1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Sw1.BG2Heat2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.BG2Heat2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.BG2Heat2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.BG2Heat2.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mp2.Sw1.BG2Heat2.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mp2.Sw1.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mp2.Sw1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Sw1.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mp2.Sw1.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mp2.Sw1.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mp2.Sw1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Sw1.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mp2.Vsd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mp2.Vsd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Vsd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mp2.Vsd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mp2.Vsd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Vsd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Vsd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mp2.Vsd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Vsd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Vsd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Vsd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mp2.Vsd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mp2.Vsd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mp2.Vsd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mp2.Vsd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mp2.Vsd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mp2.Vsd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mp2.Vsd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mp2.Vsd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mp2.Vsd.B3.BondCon2.d \"Directional variable\";
//   protected parameter Integer Nand1.Mp2.Type = -1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   protected parameter Real Nand1.Mp2.U0def(unit = \"m2/(V.s)\") = 0.06;
//   protected parameter Real Nand1.Mp2.eox(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 3.45313324887195e-11 \"Permittivity of SiO2\";
//   protected parameter Real Nand1.Mp2.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of silicon\";
//   parameter Real Nand1.Mp2.TOX(quantity = \"Length\", unit = \"m\") = 1e-07 \"Thin oxide thickness\";
//   protected parameter Real Nand1.Mp2.LDeff(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.LD;
//   protected parameter Real Nand1.Mp2.Weff(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.W + -2.0 * Nand1.Mp2.WD;
//   protected parameter Real Nand1.Mp2.GAMMAtmp(unit = \"V^0.5\") = if Nand1.Mp2.GAMMA == 0.0 and Nand1.Mp2.NSUB == 0.0 then 0.35 else Nand1.Mp2.GAMMA;
//   protected parameter Real Nand1.Mp2.VTref(quantity = \"ElectricPotential\", unit = \"V\") = 8.61727503842867e-05 * Nand1.Mp2.Tnom \"Thermal voltage at reference temperature\";
//   protected parameter Real Nand1.Mp2.EGref(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.EG + (-0.000702 * Nand1.Mp2.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Tnom) \"Energy gap for temperature effect on saturation current at reference temperature\";
//   protected parameter Real Nand1.Mp2.ISDeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mp2.ISD > 0.0 then Nand1.Mp2.ISD else if Nand1.Mp2.AD * Nand1.Mp2.JS > 0.0 then Nand1.Mp2.AD * Nand1.Mp2.JS else 1e-15;
//   protected parameter Real Nand1.Mp2.ISSeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mp2.ISS > 0.0 then Nand1.Mp2.ISS else if Nand1.Mp2.AS * Nand1.Mp2.JS > 0.0 then Nand1.Mp2.AS * Nand1.Mp2.JS else 1e-15;
//   protected parameter Real Nand1.Mp2.CGB0eff(unit = \"F/m\") = Nand1.Mp2.CGB0;
//   protected parameter Real Nand1.Mp2.CGD0eff(unit = \"F/m\") = Nand1.Mp2.CGD0;
//   protected parameter Real Nand1.Mp2.CGS0eff(unit = \"F/m\") = Nand1.Mp2.CGS0;
//   protected parameter Real Nand1.Mp2.U0tmp(unit = \"m2/(V.s)\") = if Nand1.Mp2.KP == 0.0 and Nand1.Mp2.U0 == 0.0 then Nand1.Mp2.U0def else Nand1.Mp2.U0;
//   protected parameter Real Nand1.Mp2.TOXeff(quantity = \"Length\", unit = \"m\") = if Nand1.Mp2.TOX == 1e-07 and Nand1.Mp2.COX > 0.0 then Nand1.Mp2.eox / Nand1.Mp2.COX else Nand1.Mp2.TOX;
//   protected parameter Real Nand1.Mp2.COXeff(unit = \"F/m2\") = if Nand1.Mp2.COX > 0.0 then Nand1.Mp2.COX else Nand1.Mp2.eox / Nand1.Mp2.TOX;
//   protected parameter Real Nand1.Mp2.Leff(quantity = \"Length\", unit = \"m\") = Nand1.Mp2.L + -2.0 * Nand1.Mp2.LDeff;
//   protected parameter Real Nand1.Mp2.XNI(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 * ((Nand1.Mp2.Tnom / 300.0) ^ 1.5 * exp(5802.2982644775 * (Nand1.Mp2.EGref * (0.00333333333333333 + -1.0 / Nand1.Mp2.Tnom)))) \"Intrinsic carrier concentration at reference temperature\";
//   protected parameter Real Nand1.Mp2.FermiG(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mp2.Type) * (Nand1.Mp2.TPG * Nand1.Mp2.EGref)) / 2.0;
//   protected parameter Real Nand1.Mp2.EGeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mp2.Level == 3 and Nand1.Mp2.EG == 0.0 then 0.2 else Nand1.Mp2.EGref;
//   protected parameter Real Nand1.Mp2.KPeff(quantity = \"Transconductance\", unit = \"A/(V*V)\") = if Nand1.Mp2.KP > 0.0 then Nand1.Mp2.KP else Nand1.Mp2.U0tmp * Nand1.Mp2.COXeff;
//   protected parameter Real Nand1.Mp2.U0eff(unit = \"m2/(V.s)\") = if Nand1.Mp2.KP > 0.0 and Nand1.Mp2.U0 == 0.0 then Nand1.Mp2.KP / Nand1.Mp2.COXeff else Nand1.Mp2.U0tmp;
//   protected parameter Real Nand1.Mp2.NSUBeff(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = if Nand1.Mp2.NSUB > 0.0 then Nand1.Mp2.NSUB else (Nand1.Mp2.GAMMAtmp * Nand1.Mp2.COXeff) ^ 2.0 / (Nand1.Mp2.es * 3.2043784e-19);
//   protected parameter Real Nand1.Mp2.GAMMAeff(unit = \"V^0.5\") = if Nand1.Mp2.GAMMA == 0.0 and Nand1.Mp2.NSUB > 0.0 then sqrt(3.2043784e-19 * (Nand1.Mp2.es * Nand1.Mp2.NSUB)) / Nand1.Mp2.COXeff else Nand1.Mp2.GAMMAtmp;
//   protected parameter Real Nand1.Mp2.VBP(quantity = \"ElectricPotential\", unit = \"V\") = (Nand1.Mp2.UCRIT * Nand1.Mp2.es) / Nand1.Mp2.COXeff \"Gate to channel critical voltage\";
//   protected parameter Real Nand1.Mp2.PHIeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mp2.PHI > 0.0 then Nand1.Mp2.PHI else if Nand1.Mp2.NSUB > 0.0 then max(2.0 * (Nand1.Mp2.VTref * log(Nand1.Mp2.NSUB / Nand1.Mp2.XNI)),0.1) else 0.6;
//   protected parameter Real Nand1.Mp2.Fn1(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mp2.TPG == 0.0 then 3.2 else 3.25 + (Nand1.Mp2.EGref / 2.0 - Nand1.Mp2.FermiG);
//   protected parameter Real Nand1.Mp2.LAMBDAeff(quantity = \"InversePotential\", unit = \"1/V\") = if Nand1.Mp2.LAMBDA > 0.0 then Nand1.Mp2.LAMBDA else if Nand1.Mp2.Level <> 2 then sqrt((2.0 * Nand1.Mp2.es) / (Nand1.Mp2.NSUBeff * 1.6021892e-19)) else Nand1.Mp2.LAMBDA;
//   protected parameter Real Nand1.Mp2.XD(unit = \"m/V^0.5\") = sqrt((2.0 * Nand1.Mp2.es) / (Nand1.Mp2.NSUBeff * 1.6021892e-19)) \"Depletion factor\";
//   protected parameter Real Nand1.Mp2.CJeff(unit = \"F/m2\") = if Nand1.Mp2.CJ > 0.0 then Nand1.Mp2.CJ else sqrt((1.6021892e-19 * (Nand1.Mp2.es * Nand1.Mp2.NSUBeff)) / (Nand1.Mp2.PB * 2.0));
//   protected parameter Real Nand1.Mp2.FermiS(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mp2.Type) * Nand1.Mp2.PHIeff) / 2.0;
//   protected parameter Real Nand1.Mp2.Vcorr(quantity = \"ElectricPotential\", unit = \"V\") = Real(Nand1.Mp2.Type) * (Nand1.Mp2.GAMMAeff * sqrt(Nand1.Mp2.PHIeff) + Nand1.Mp2.PHIeff);
//   protected parameter Real Nand1.Mp2.Fn2(quantity = \"ElectricPotential\", unit = \"V\") = -3.25 + (Nand1.Mp2.Fn1 + ((-Nand1.Mp2.EGref) / 2.0 - Nand1.Mp2.FermiS));
//   protected parameter Real Nand1.Mp2.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mp2.Fn2 + (-1.6021892e-19 * Nand1.Mp2.NSS) / Nand1.Mp2.COXeff;
//   protected parameter Real Nand1.Mp2.VT0eff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mp2.Type) * Nand1.Mp2.VT0 > 0.0 then Nand1.Mp2.VT0 else Nand1.Mp2.VFB + Nand1.Mp2.Vcorr;
//   protected parameter Real Nand1.Mp2.VFBeff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mp2.Type) * Nand1.Mp2.VT0 > 0.0 then Nand1.Mp2.VT0 - Nand1.Mp2.Vcorr else Nand1.Mp2.VFB;
//   constant Real Nand1.Mn1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.ni(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 \"Intrinsic carrier concentration at 300 K\";
//   constant Real Nand1.Mn1.kox = 3.9 \"Dielectric constant of SiO2\";
//   constant Real Nand1.Mn1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn1.GapC1(unit = \"V/K\") = 0.000702 \"Sze's first bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Sze's second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Fn0(quantity = \"ElectricPotential\", unit = \"V\") = 3.25 \"Work function constant for computation of flat band voltage\";
//   constant Real Nand1.Mn1.TOXdef = 1e-07 \"Default oxide thickness\";
//   parameter Integer Nand1.Mn1.Level(min = 0, max = 4) = Nand1.Level \"Level of MOSFET model\";
//   parameter Real Nand1.Mn1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = 3.1e-06 \"Channel length\";
//   parameter Real Nand1.Mn1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = 6.5e-06 \"Channel width\";
//   parameter Real Nand1.Mn1.TPG(min = 1.0, max = 2.0) = 1.0 \"Type of gate material\";
//   parameter Real Nand1.Mn1.COX(unit = \"F/m2\") = 0.000335 \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1e+21 \"Substrate doping\";
//   parameter Real Nand1.Mn1.U0(unit = \"m2/(V.s)\") = 0.07 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mn1.VT0(quantity = \"ElectricPotential\", unit = \"V\") = 0.8 \"Zero-bias threshold voltage (VT0>0: enhancement type, VT0<0: depletion type)\";
//   parameter Real Nand1.Mn1.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\", min = 0.0) = 0.02 \"Channel length modulation\";
//   parameter Real Nand1.Mn1.LD(quantity = \"Length\", unit = \"m\", min = 0.0) = 2.5e-07 \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.WD(quantity = \"Length\", unit = \"m\", min = 0.0) = 1.25e-06 \"Width diffusion\";
//   parameter Real Nand1.Mn1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = 4.1e-05 \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.GAMMA(unit = \"V^0.5\") = 0.35 \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = 0.65 \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.NSS(unit = \"1/m2\") = 100000000000000.0 \"Surface state density\";
//   parameter Real Nand1.Mn1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   parameter Real Nand1.Mn1.EG(quantity = \"ElectricPotential\", unit = \"V\") = 1.11 \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mn1.AD(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Drain diffusion area\";
//   parameter Real Nand1.Mn1.PD(quantity = \"Length\", unit = \"m\") = 8e-07 \"Drain perimeter width\";
//   parameter Real Nand1.Mn1.AS(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Source diffusion area\";
//   parameter Real Nand1.Mn1.PS(quantity = \"Length\", unit = \"m\") = 8e-07 \"Source perimeter width\";
//   parameter Real Nand1.Mn1.ISD(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.ISS(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.JS(quantity = \"CurrentDensity\", unit = \"A/m2\", min = 0.0) = 1e-08 \"Saturation current density at reference temperature\";
//   parameter Real Nand1.Mn1.PB(quantity = \"ElectricPotential\", unit = \"V\", min = 0.2) = 0.75 \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn1.RD(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Drain Ohmic resistance\";
//   parameter Real Nand1.Mn1.RS(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Source Ohmic resistance\";
//   parameter Real Nand1.Mn1.CJ(unit = \"F/m2\", min = 0.0) = 0.0002 \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn1.MJ(min = 0.3, max = 0.5) = 0.5 \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn1.CJSW(unit = \"F/m\", min = 0.0) = 1e-09 \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn1.MJSW(min = 0.3, max = 0.5) = 0.33 \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn1.FC(min = 0.0, max = 0.95) = 0.5 \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn1.CGB0(unit = \"F/m\", min = 0.0) = 2e-10 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.CGD0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.CGS0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.TRD1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mn1.TRD2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mn1.TRS1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of source resistance\";
//   parameter Real Nand1.Mn1.TRS2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of source resistance\";
//   parameter Real Nand1.Mn1.XJ(quantity = \"Length\", unit = \"m\") = 1e-06 \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 1000000.0 \"Critical electric field for mobility\";
//   parameter Real Nand1.Mn1.UEXP = 0.1 \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mn1.UTRA(min = 0.0, max = 0.5) = 0.5 \"Transverse field coefficient\";
//   parameter Real Nand1.Mn1.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 0.0 \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mn1.DELTA = 1.0 \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.VMAX(quantity = \"Velocity\", unit = \"m/s\") = 0.0 \"Maximum drift velocity of carriers (VMAX=0: Frohman-Grove model, VMAX>0: Baum-Beneking model)\";
//   parameter Real Nand1.Mn1.NFS(unit = \"1/m2\") = 100000000000000.0 \"Surface fast state density\";
//   parameter Real Nand1.Mn1.NEFF(min = 1e-60) = 5.0 \"Total channel charge coefficient\";
//   parameter Real Nand1.Mn1.XQC = 0.0 \"Coefficient of channel charge share (XQC<=0.5: Ward-Dutton model, XQC>0.5: Meyer model)\";
//   parameter Real Nand1.Mn1.KAPPA(min = 1e-60) = 0.2 \"Saturation field factor\";
//   parameter Real Nand1.Mn1.ETA = 1.0 \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.THETA(quantity = \"InversePotential\", unit = \"1/V\") = 0.05 \"Mobility modulation\";
//   parameter Real Nand1.Mn1.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.GminDC(quantity = \"Conductance\", unit = \"S\") = 1e-16 \"Leakage conductance\";
//   parameter Boolean Nand1.Mn1.enforceStates = true \"State selector\";
//   Real Nand1.Mn1.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Mni.Level = Nand1.Mn1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Mni.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Mni.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn1.Mni.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.VT0eff \"Zero-bias threshold voltage\";
//   parameter Real Nand1.Mn1.Mni.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.VFBeff \"Flat band voltage\";
//   parameter Real Nand1.Mn1.Mni.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Mni.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn1.LAMBDAeff \"Channel length modulation\";
//   parameter Real Nand1.Mn1.Mni.TOX(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.TOXeff \"Thin oxide thickness\";
//   parameter Real Nand1.Mn1.Mni.COX(unit = \"F/m2\") = Nand1.Mn1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Mni.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = Nand1.Mn1.NSUBeff \"Substrate doping\";
//   parameter Real Nand1.Mn1.Mni.NSS(unit = \"1/m2\") = Nand1.Mn1.NSS \"Surface state density\";
//   parameter Real Nand1.Mn1.Mni.NFS(unit = \"1/m2\") = Nand1.Mn1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Mni.NEFF = Nand1.Mn1.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mn1.Mni.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Leff \"Channel length\";
//   parameter Real Nand1.Mn1.Mni.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Weff \"Channel width\";
//   parameter Real Nand1.Mn1.Mni.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Mni.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Mni.AD(quantity = \"Area\", unit = \"m2\") = Nand1.Mn1.AD \"Drain diffusion area\";
//   parameter Real Nand1.Mn1.Mni.PD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.PD \"Drain perimeter width\";
//   parameter Real Nand1.Mn1.Mni.AS(quantity = \"Area\", unit = \"m2\") = Nand1.Mn1.AS \"Source diffusion area\";
//   parameter Real Nand1.Mn1.Mni.PS(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.PS \"Source perimeter width\";
//   parameter Real Nand1.Mn1.Mni.XD(unit = \"m/V^0.5\") = Nand1.Mn1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Mni.TPG = Nand1.Mn1.TPG \"Type of gate material\";
//   parameter Real Nand1.Mn1.Mni.U0(unit = \"m2/(V.s)\") = Nand1.Mn1.U0eff \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mn1.UCRIT \"Critical electric field for mobility\";
//   parameter Real Nand1.Mn1.Mni.UEXP = Nand1.Mn1.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mn1.Mni.UTRA = Nand1.Mn1.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mn1.Mni.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mn1.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mn1.Mni.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mn1.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mn1.Mni.XQC = Nand1.Mn1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn1.Mni.DELTA = Nand1.Mn1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Mni.KAPPA = Nand1.Mn1.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mn1.Mni.ETA = Nand1.Mn1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Mni.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn1.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mn1.Mni.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mn1.Mni.ISD(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.ISDeff \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.ISS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.ISSeff \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.CJ(unit = \"F/m2\") = Nand1.Mn1.CJeff \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.MJ = Nand1.Mn1.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.CJSW(unit = \"F/m\") = Nand1.Mn1.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.MJSW = Nand1.Mn1.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.FC = Nand1.Mn1.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn1.Mni.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mn1.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mn1.Mni.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mn1.Mni.EMin = Nand1.Mn1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.EMax = Nand1.Mn1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mn1.Mni.enforceStates = Nand1.Mn1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn1.Mni.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Ids.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Ids.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Ids.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Ids.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Ids.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Ids.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Ids.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Ids.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mn1.Mni.Ids.InPort1(quantity = \"ElectricCurrent\", unit = \"A\") \"Current source\";
//   Real Nand1.Mn1.Mni.Ids.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Ids.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Ids.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Ids.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mn1.Mni.Ids.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Ids.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Ids.B4.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Ids.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Ids.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Ids.B4.fBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Ids.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Ids.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Ids.B3.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Ids.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Ids.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Ids.B3.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Ids.I1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Ids.I1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Ids.I1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Ids.I1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Ids.I1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.I1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.I1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Ids.I1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Ids.I1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Ids.I1.BondCon2.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Ids.I1.s \"Signal input\";
//   Real Nand1.Mn1.Mni.Ids.I1.f0 \"Bondgraphic Flow Source\";
//   input Real Nand1.Mn1.Mni.IDS0.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn1.Mni.IDS0.u2 \"Connector of Real input signal 2\";
//   output Real Nand1.Mn1.Mni.IDS0.y \"Connector of Real output signal\";
//   parameter Integer Nand1.Mn1.Mni.IDS0.Level = Nand1.Mn1.Mni.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Mni.IDS0.Type = Nand1.Mn1.Mni.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Mni.IDS0.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn1.Mni.IDS0.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.VFB \"Flat band voltage\";
//   parameter Real Nand1.Mn1.Mni.IDS0.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.Mni.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.IDS0.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.Mni.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Mni.IDS0.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.IDS0.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn1.Mni.LAMBDA \"Channel length modulation\";
//   parameter Real Nand1.Mn1.Mni.IDS0.COX(unit = \"F/m2\") = Nand1.Mn1.Mni.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Mni.IDS0.NFS(unit = \"1/m2\") = Nand1.Mn1.Mni.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Mni.IDS0.NEFF = Nand1.Mn1.Mni.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mn1.Mni.IDS0.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Mni.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Mni.IDS0.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Mni.L \"Channel length\";
//   parameter Real Nand1.Mn1.Mni.IDS0.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Mni.W \"Channel width\";
//   parameter Real Nand1.Mn1.Mni.IDS0.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Mni.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Mni.IDS0.XD(unit = \"m/V^0.5\") = Nand1.Mn1.Mni.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Mni.IDS0.U0(unit = \"m2/(V.s)\") = Nand1.Mn1.Mni.U0 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.IDS0.UEXP = Nand1.Mn1.Mni.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mn1.Mni.IDS0.UTRA = Nand1.Mn1.Mni.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mn1.Mni.IDS0.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mn1.Mni.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mn1.Mni.IDS0.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mn1.Mni.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mn1.Mni.IDS0.DELTA = Nand1.Mn1.Mni.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Mni.IDS0.KAPPA = Nand1.Mn1.Mni.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mn1.Mni.IDS0.ETA = Nand1.Mn1.Mni.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Mni.IDS0.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn1.Mni.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mn1.Mni.IDS0.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mn1.Mni.IDS0.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.IDS0.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn1.Mni.IDS0.EMin = Nand1.Mn1.Mni.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.IDS0.EMax = Nand1.Mn1.Mni.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Nand1.Mn1.Mni.IDS0.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.ids(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real Nand1.Mn1.Mni.IDS0.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.vdsat1(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted saturation voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.vpof(quantity = \"ElectricPotential\", unit = \"V\") \"Punch-through voltage\";
//   output Real Nand1.Mn1.Mni.IDS0.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.IDS0.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.IDS0.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.IDS0.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.IDS0.y1[5] \"Connector of Real output signals\";
//   input Real Nand1.Mn1.Mni.IDS0.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   input Real Nand1.Mn1.Mni.IDS0.u3 \"Connector of Real input signal 3\";
//   protected Real Nand1.Mn1.Mni.IDS0.sig \"sign(vds)\";
//   output Real Nand1.Mn1.Mni.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mn1.Mni.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Vds.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Vds.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Vds.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vds.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vds.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vds.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn1.Mni.Vds.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vds.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vds.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Vds.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Vds.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Vds.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn1.Mni.Vds.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vds.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vds.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vds.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Vgs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Vgs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vgs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vgs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vgs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn1.Mni.Vgs.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vgs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vgs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Vgs.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Vgs.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Vgs.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn1.Mni.Vgs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vgs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vgs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vgs.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mn1.Mni.y1[5] \"Connector of Real output signals\";
//   Real Nand1.Mn1.Mni.Rgs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Rgs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Rgs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Rgs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rgs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rgs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Mni.Rgs.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn1.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rgs.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgs.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgs.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Rgs.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgs.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgs.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rgs.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rgs.T_nom.e0 = Nand1.Mn1.Mni.Rgs.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn1.Mni.Rgs.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgs.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgs.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgs.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgs.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rgs.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Rgs.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rgs.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Rgs.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Mni.Rgs.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Mni.Rgs.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rgs.R1.TR1(unit = \"1/K\") = Nand1.Mn1.Mni.Rgs.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgs.R1.TR2(unit = \"1/K2\") = Nand1.Mn1.Mni.Rgs.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgs.R1.Area = Nand1.Mn1.Mni.Rgs.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rgs.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn1.Mni.Rgs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rgs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn1.Mni.Rgs.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn1.Mni.Rgs.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgs.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rgs.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgs.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rgs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Vbs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Vbs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Vbs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vbs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vbs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vbs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn1.Mni.Vbs.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vbs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Vbs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Vbs.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Vbs.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Vbs.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn1.Mni.Vbs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Vbs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Vbs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Vbs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Mni.Dbs.Level = Nand1.Mn1.Mni.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbs.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.Mni.ISS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.CJ(unit = \"F/m2\") = Nand1.Mn1.Mni.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.MJ = Nand1.Mn1.Mni.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.CJSW(unit = \"F/m\") = Nand1.Mn1.Mni.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.MJSW = Nand1.Mn1.Mni.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.FC = Nand1.Mn1.Mni.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn1.Mni.AS \"Diffusion area\";
//   parameter Real Nand1.Mn1.Mni.Dbs.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Mni.PS \"Perimeter width\";
//   parameter Real Nand1.Mn1.Mni.Dbs.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mn1.Mni.Dbs.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mn1.Mni.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mn1.Mni.Dbs.EMin = Nand1.Mn1.Mni.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.Dbs.EMax = Nand1.Mn1.Mni.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mn1.Mni.Dbs.enforceStates = Nand1.Mn1.Mni.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mn1.Mni.Dbs.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mn1.Mni.Dbs.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mn1.Mni.Dbs.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.Mni.Dbs.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.Mni.Dbs.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Mni.Dbs.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn1.Mni.Dbs.nlCM1.Level = Nand1.Mn1.Mni.Dbs.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbs.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbs.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mn1.Mni.Dbs.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.MJ = Nand1.Mn1.Mni.Dbs.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mn1.Mni.Dbs.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.MJSW = Nand1.Mn1.Mni.Dbs.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.FC = Nand1.Mn1.Mni.Dbs.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn1.Mni.Dbs.A \"Diffusion area\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Mni.Dbs.P \"Perimeter width\";
//   parameter Real Nand1.Mn1.Mni.Dbs.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbs.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn1.Mni.Dbs.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mn1.Mni.Dbs.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mn1.Mni.Dbs.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbs.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbs.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn1.Mni.Dbs.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.T_nom.e0 = Nand1.Mn1.Mni.Dbs.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbs.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Mni.Dbs.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mn1.Mni.Dbs.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mn1.Mni.Dbs.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbs.Rd.R1.Area = Nand1.Mn1.Mni.Dbs.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn1.Mni.Dbs.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbs.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Mni.Dbs.DjM1.Level = Nand1.Mn1.Mni.Dbs.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.Mni.Dbs.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbs.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.EMin = Nand1.Mn1.Mni.Dbs.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.EMax = Nand1.Mn1.Mni.Dbs.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbs.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Level = Nand1.Mn1.Mni.Dbs.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.Mni.Dbs.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbs.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMin = Nand1.Mn1.Mni.Dbs.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMax = Nand1.Mn1.Mni.Dbs.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.ExMin = exp(Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mn1.Mni.Dbs.DjM1.DjM1.ExMax = exp(Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMax);
//   output Real Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn1.Mni.Dbs.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Dbs.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbs.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn1.Mni.Dbs.VarC1.enforceStates = Nand1.Mn1.Mni.Dbs.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn1.Mni.Dbs.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mn1.Mni.Dbs.VarC1.u \"Modulation signal\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.mC1.e(start = Nand1.Mn1.Mni.Dbs.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Dbs.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mn1.Mni.Dbs.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mn1.Mni.Rgd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Rgd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Rgd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Rgd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rgd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rgd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Mni.Rgd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn1.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rgd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Rgd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rgd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rgd.T_nom.e0 = Nand1.Mn1.Mni.Rgd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn1.Mni.Rgd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rgd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Rgd.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rgd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Rgd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Mni.Rgd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Mni.Rgd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rgd.R1.TR1(unit = \"1/K\") = Nand1.Mn1.Mni.Rgd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgd.R1.TR2(unit = \"1/K2\") = Nand1.Mn1.Mni.Rgd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgd.R1.Area = Nand1.Mn1.Mni.Rgd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rgd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn1.Mni.Rgd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rgd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn1.Mni.Rgd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn1.Mni.Rgd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rgd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rgd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Rgb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Rgb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Rgb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Rgb.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rgb.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rgb.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Mni.Rgb.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn1.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rgb.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgb.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgb.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgb.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rgb.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Rgb.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgb.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgb.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rgb.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rgb.T_nom.e0 = Nand1.Mn1.Mni.Rgb.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn1.Mni.Rgb.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgb.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgb.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgb.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgb.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rgb.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Rgb.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rgb.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Rgb.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Mni.Rgb.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Mni.Rgb.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rgb.R1.TR1(unit = \"1/K\") = Nand1.Mn1.Mni.Rgb.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgb.R1.TR2(unit = \"1/K2\") = Nand1.Mn1.Mni.Rgb.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rgb.R1.Area = Nand1.Mn1.Mni.Rgb.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rgb.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn1.Mni.Rgb.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgb.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rgb.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn1.Mni.Rgb.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn1.Mni.Rgb.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rgb.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rgb.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rgb.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rgb.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rgb.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Dbd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Mni.Dbd.Level = Nand1.Mn1.Mni.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbd.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.Mni.ISD \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.CJ(unit = \"F/m2\") = Nand1.Mn1.Mni.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.MJ = Nand1.Mn1.Mni.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.CJSW(unit = \"F/m\") = Nand1.Mn1.Mni.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.MJSW = Nand1.Mn1.Mni.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.FC = Nand1.Mn1.Mni.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn1.Mni.AD \"Diffusion area\";
//   parameter Real Nand1.Mn1.Mni.Dbd.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Mni.PD \"Perimeter width\";
//   parameter Real Nand1.Mn1.Mni.Dbd.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mn1.Mni.Dbd.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mn1.Mni.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mn1.Mni.Dbd.EMin = Nand1.Mn1.Mni.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.Dbd.EMax = Nand1.Mn1.Mni.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mn1.Mni.Dbd.enforceStates = Nand1.Mn1.Mni.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mn1.Mni.Dbd.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mn1.Mni.Dbd.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mn1.Mni.Dbd.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.Mni.Dbd.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.Mni.Dbd.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Mni.Dbd.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn1.Mni.Dbd.nlCM1.Level = Nand1.Mn1.Mni.Dbd.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbd.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbd.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mn1.Mni.Dbd.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.MJ = Nand1.Mn1.Mni.Dbd.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mn1.Mni.Dbd.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.MJSW = Nand1.Mn1.Mni.Dbd.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.FC = Nand1.Mn1.Mni.Dbd.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn1.Mni.Dbd.A \"Diffusion area\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Mni.Dbd.P \"Perimeter width\";
//   parameter Real Nand1.Mn1.Mni.Dbd.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbd.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn1.Mni.Dbd.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mn1.Mni.Dbd.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mn1.Mni.Dbd.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbd.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbd.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn1.Mni.Dbd.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.T_nom.e0 = Nand1.Mn1.Mni.Dbd.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbd.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Mni.Dbd.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mn1.Mni.Dbd.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mn1.Mni.Dbd.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Dbd.Rd.R1.Area = Nand1.Mn1.Mni.Dbd.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn1.Mni.Dbd.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbd.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Mni.Dbd.DjM1.Level = Nand1.Mn1.Mni.Dbd.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.Mni.Dbd.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbd.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.EMin = Nand1.Mn1.Mni.Dbd.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.EMax = Nand1.Mn1.Mni.Dbd.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Dbd.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Level = Nand1.Mn1.Mni.Dbd.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn1.Mni.Dbd.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Mni.Dbd.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMin = Nand1.Mn1.Mni.Dbd.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMax = Nand1.Mn1.Mni.Dbd.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.ExMin = exp(Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mn1.Mni.Dbd.DjM1.DjM1.ExMax = exp(Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMax);
//   output Real Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn1.Mni.Dbd.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Dbd.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Dbd.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn1.Mni.Dbd.VarC1.enforceStates = Nand1.Mn1.Mni.Dbd.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn1.Mni.Dbd.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mn1.Mni.Dbd.VarC1.u \"Modulation signal\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.mC1.e(start = Nand1.Mn1.Mni.Dbd.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Dbd.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mn1.Mni.Dbd.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mn1.Mni.Rds.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Mni.Rds.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Mni.Rds.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rds.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rds.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rds.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Mni.Rds.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rds.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rds.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Mni.Rds.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn1.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rds.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rds.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rds.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rds.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Mni.Rds.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.Mni.Rds.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rds.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rds.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.Mni.Rds.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rds.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rds.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rds.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rds.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rds.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rds.T_nom.e0 = Nand1.Mn1.Mni.Rds.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn1.Mni.Rds.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rds.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rds.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rds.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rds.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Mni.Rds.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Mni.Rds.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Mni.Rds.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Mni.Rds.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Mni.Rds.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Mni.Rds.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Mni.Rds.R1.TR1(unit = \"1/K\") = Nand1.Mn1.Mni.Rds.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rds.R1.TR2(unit = \"1/K2\") = Nand1.Mn1.Mni.Rds.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn1.Mni.Rds.R1.Area = Nand1.Mn1.Mni.Rds.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn1.Mni.Rds.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn1.Mni.Rds.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rds.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rds.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rds.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rds.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rds.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn1.Mni.Rds.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn1.Mni.Rds.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn1.Mni.Rds.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Mni.Rds.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Mni.Rds.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rds.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Mni.Rds.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Mni.Rds.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Mni.Rds.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Mni.Rds.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Mni.Rds.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Cgs1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn1.Cgs1.enforceStates = Nand1.Mn1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn1.Cgs1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn1.Cgs1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Cgs1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Cgs1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgs1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgs1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgs1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Cgs1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Cgs1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Cgs1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Cgs1.Level = Nand1.Mn1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Cgs1.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Cgs1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn1.Cgs1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Cgs1.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Cgs1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Cgs1.COX(unit = \"F/m2\") = Nand1.Mn1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Cgs1.NFS(unit = \"1/m2\") = Nand1.Mn1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Cgs1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Cgs1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Leff \"Channel length\";
//   parameter Real Nand1.Mn1.Cgs1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Weff \"Channel width\";
//   parameter Real Nand1.Mn1.Cgs1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Cgs1.XD(unit = \"m/V^0.5\") = Nand1.Mn1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Cgs1.XQC = Nand1.Mn1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn1.Cgs1.DELTA = Nand1.Mn1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgs1.ETA = Nand1.Mn1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgs1.CGS0(unit = \"F/m\") = Nand1.Mn1.CGS0eff \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.Cgs1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgs1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgs1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgs1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgs1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.Cgs1.e1(start = Nand1.Mn1.Cgs1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Cgs1.Cgs1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Cgs1.Cgs1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Cgs1.Cgs1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Cgs1.Cgs1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.Cgs1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.Cgs1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.Cgs1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.Cgs1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.Cgs1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Cgs1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Cgs1.Cgs1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Cgs1.Cgs1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn1.Cgs1.Cgs1.pi = 3.14159265358979;
//   constant Real Nand1.Mn1.Cgs1.Cgs1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.Cgs1.Cgs1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn1.Cgs1.Cgs1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.Cgs1.Cgs1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn1.Cgs1.Cgs1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Cgs1.Cgs1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Cgs1.Cgs1.c0 = 0.0631353;
//   constant Real Nand1.Mn1.Cgs1.Cgs1.c1 = 0.8013292;
//   constant Real Nand1.Mn1.Cgs1.Cgs1.c2 = -0.01110777;
//   parameter Integer Nand1.Mn1.Cgs1.Cgs1.Level = Nand1.Mn1.Cgs1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Cgs1.Cgs1.Type = Nand1.Mn1.Cgs1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgs1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.Cgs1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.Cgs1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgs1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.COX(unit = \"F/m2\") = Nand1.Mn1.Cgs1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.NFS(unit = \"1/m2\") = Nand1.Mn1.Cgs1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Cgs1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Cgs1.L \"Channel length\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Cgs1.W \"Channel width\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Cgs1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.XD(unit = \"m/V^0.5\") = Nand1.Mn1.Cgs1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.XQC = Nand1.Mn1.Cgs1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.DELTA = Nand1.Mn1.Cgs1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.ETA = Nand1.Mn1.Cgs1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.CGS0(unit = \"F/m\") = Nand1.Mn1.Cgs1.CGS0 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.Cgs1.Cgs1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgs1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn1.Cgs1.Cgs1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mn1.Cgs1.Cgs1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mn1.Cgs1.Cgs1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mn1.Cgs1.Cgs1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn1.Cgs1.Cgs1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mn1.Cgs1.Cgs1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mn1.Cgs1.Cgs1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mn1.Cgs1.Cgs1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mn1.Cgs1.Cgs1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mn1.Cgs1.Cgs1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mn1.Cgs1.Cgs1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.sig \"sign(vds)\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.N \"Current emission coefficient\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.Fs \"Short channel working function\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mn1.Cgs1.Cgs1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgs1.Cgs1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgs1.Cgs1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgs1.Cgs1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mn1.Cgs1.Cgs1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.WSfac;
//   protected Real Nand1.Mn1.Cgs1.Cgs1.WDfac;
//   protected Real Nand1.Mn1.Cgs1.Cgs1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mn1.Cgs1.Cgs1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mn1.Cgs1.Cgs1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn1.Cgs1.Cgs1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mn1.Cgs1.Cgs1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.Cgs1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.Cgs1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.Cgs1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.Cgs1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mn1.Cgs1.Cgs1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mn1.Cgs1.Cgs1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mn1.Cgs1.Cgs1.W * (Nand1.Mn1.Cgs1.Cgs1.L * Nand1.Mn1.Cgs1.Cgs1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mn1.Cgs1.Cgs1.SIGMA = (8.15e-22 * (Nand1.Mn1.Cgs1.Cgs1.ETA * Nand1.Mn1.Cgs1.Cgs1.L ^ -3.0)) / Nand1.Mn1.Cgs1.Cgs1.COX;
//   protected parameter Real Nand1.Mn1.Cgs1.Cgs1.Fn = (3.14159265358979 * (Nand1.Mn1.Cgs1.Cgs1.es * Nand1.Mn1.Cgs1.Cgs1.DELTA)) / (Nand1.Mn1.Cgs1.Cgs1.W * Nand1.Mn1.Cgs1.Cgs1.COX * 2.0);
//   Real Nand1.Mn1.Cgs1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn1.Cgs1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Cgs1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Cgs1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Cgs1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Cgs1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Cgs1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgs1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Cgs1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mn1.Cgs1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mn1.Cgs1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mn1.Cgs1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgs1.u[5] \"Connector of Real input signals\";
//   parameter Real Nand1.Mn1.Cgd1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn1.Cgd1.enforceStates = Nand1.Mn1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn1.Cgd1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn1.Cgd1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Cgd1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Cgd1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgd1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgd1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgd1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Cgd1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Cgd1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Cgd1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Cgd1.Level = Nand1.Mn1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Cgd1.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Cgd1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn1.Cgd1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Cgd1.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Cgd1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Cgd1.COX(unit = \"F/m2\") = Nand1.Mn1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Cgd1.NFS(unit = \"1/m2\") = Nand1.Mn1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Cgd1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Cgd1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Leff \"Channel length\";
//   parameter Real Nand1.Mn1.Cgd1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Weff \"Channel width\";
//   parameter Real Nand1.Mn1.Cgd1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Cgd1.XD(unit = \"m/V^0.5\") = Nand1.Mn1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Cgd1.XQC = Nand1.Mn1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn1.Cgd1.DELTA = Nand1.Mn1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgd1.ETA = Nand1.Mn1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgd1.CGD0(unit = \"F/m\") = Nand1.Mn1.CGD0eff \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.Cgd1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn1.Cgd1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mn1.Cgd1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mn1.Cgd1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgd1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgd1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgd1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgd1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.Cgd1.e1(start = Nand1.Mn1.Cgd1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Cgd1.Cgd1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Cgd1.Cgd1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Cgd1.Cgd1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Cgd1.Cgd1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.Cgd1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.Cgd1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.Cgd1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.Cgd1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.Cgd1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Cgd1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Cgd1.Cgd1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Cgd1.Cgd1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn1.Cgd1.Cgd1.pi = 3.14159265358979;
//   constant Real Nand1.Mn1.Cgd1.Cgd1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.Cgd1.Cgd1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn1.Cgd1.Cgd1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.Cgd1.Cgd1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn1.Cgd1.Cgd1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Cgd1.Cgd1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Cgd1.Cgd1.c0 = 0.0631353;
//   constant Real Nand1.Mn1.Cgd1.Cgd1.c1 = 0.8013292;
//   constant Real Nand1.Mn1.Cgd1.Cgd1.c2 = -0.01110777;
//   parameter Integer Nand1.Mn1.Cgd1.Cgd1.Level = Nand1.Mn1.Cgd1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Cgd1.Cgd1.Type = Nand1.Mn1.Cgd1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgd1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.Cgd1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.Cgd1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgd1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.COX(unit = \"F/m2\") = Nand1.Mn1.Cgd1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.NFS(unit = \"1/m2\") = Nand1.Mn1.Cgd1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Cgd1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Cgd1.L \"Channel length\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Cgd1.W \"Channel width\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Cgd1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.XD(unit = \"m/V^0.5\") = Nand1.Mn1.Cgd1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.XQC = Nand1.Mn1.Cgd1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.DELTA = Nand1.Mn1.Cgd1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.ETA = Nand1.Mn1.Cgd1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.CGD0(unit = \"F/m\") = Nand1.Mn1.Cgd1.CGD0 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.Cgd1.Cgd1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgd1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn1.Cgd1.Cgd1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mn1.Cgd1.Cgd1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mn1.Cgd1.Cgd1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mn1.Cgd1.Cgd1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn1.Cgd1.Cgd1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mn1.Cgd1.Cgd1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mn1.Cgd1.Cgd1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mn1.Cgd1.Cgd1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mn1.Cgd1.Cgd1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mn1.Cgd1.Cgd1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mn1.Cgd1.Cgd1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.sig \"sign(vds)\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.N \"Current emission coefficient\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.Fs \"Short channel working function\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mn1.Cgd1.Cgd1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgd1.Cgd1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgd1.Cgd1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgd1.Cgd1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mn1.Cgd1.Cgd1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.WSfac;
//   protected Real Nand1.Mn1.Cgd1.Cgd1.WDfac;
//   protected Real Nand1.Mn1.Cgd1.Cgd1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mn1.Cgd1.Cgd1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mn1.Cgd1.Cgd1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn1.Cgd1.Cgd1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mn1.Cgd1.Cgd1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.Cgd1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.Cgd1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.Cgd1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgd1.Cgd1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mn1.Cgd1.Cgd1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mn1.Cgd1.Cgd1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mn1.Cgd1.Cgd1.W * (Nand1.Mn1.Cgd1.Cgd1.L * Nand1.Mn1.Cgd1.Cgd1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mn1.Cgd1.Cgd1.SIGMA = (8.15e-22 * (Nand1.Mn1.Cgd1.Cgd1.ETA * Nand1.Mn1.Cgd1.Cgd1.L ^ -3.0)) / Nand1.Mn1.Cgd1.Cgd1.COX;
//   protected parameter Real Nand1.Mn1.Cgd1.Cgd1.Fn = (3.14159265358979 * (Nand1.Mn1.Cgd1.Cgd1.es * Nand1.Mn1.Cgd1.Cgd1.DELTA)) / (Nand1.Mn1.Cgd1.Cgd1.W * Nand1.Mn1.Cgd1.Cgd1.COX * 2.0);
//   output Real Nand1.Mn1.Cgd1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Cgd1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Cgd1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Cgd1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Cgd1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Cgd1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Cgd1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Cgd1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgd1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgd1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgd1.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Cgb1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn1.Cgb1.enforceStates = Nand1.Mn1.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn1.Cgb1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn1.Cgb1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Cgb1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Cgb1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgb1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgb1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgb1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Cgb1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Cgb1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Cgb1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn1.Cgb1.Level = Nand1.Mn1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Cgb1.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Cgb1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn1.Cgb1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Cgb1.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Cgb1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Cgb1.COX(unit = \"F/m2\") = Nand1.Mn1.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Cgb1.NFS(unit = \"1/m2\") = Nand1.Mn1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Cgb1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Cgb1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Leff \"Channel length\";
//   parameter Real Nand1.Mn1.Cgb1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Weff \"Channel width\";
//   parameter Real Nand1.Mn1.Cgb1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Cgb1.XD(unit = \"m/V^0.5\") = Nand1.Mn1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Cgb1.XQC = Nand1.Mn1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn1.Cgb1.DELTA = Nand1.Mn1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgb1.ETA = Nand1.Mn1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgb1.CGB0(unit = \"F/m\") = Nand1.Mn1.CGB0eff \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.Cgb1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn1.Cgb1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mn1.Cgb1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mn1.Cgb1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgb1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgb1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Cgb1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Cgb1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.Cgb1.e1(start = Nand1.Mn1.Cgb1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Cgb1.Cgb1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Cgb1.Cgb1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Cgb1.Cgb1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Cgb1.Cgb1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.Cgb1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.Cgb1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.Cgb1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.Cgb1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.Cgb1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Cgb1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Cgb1.Cgb1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Cgb1.Cgb1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn1.Cgb1.Cgb1.pi = 3.14159265358979;
//   constant Real Nand1.Mn1.Cgb1.Cgb1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn1.Cgb1.Cgb1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn1.Cgb1.Cgb1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn1.Cgb1.Cgb1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn1.Cgb1.Cgb1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Cgb1.Cgb1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn1.Cgb1.Cgb1.c0 = 0.0631353;
//   constant Real Nand1.Mn1.Cgb1.Cgb1.c1 = 0.8013292;
//   constant Real Nand1.Mn1.Cgb1.Cgb1.c2 = -0.01110777;
//   parameter Integer Nand1.Mn1.Cgb1.Cgb1.Level = Nand1.Mn1.Cgb1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn1.Cgb1.Cgb1.Type = Nand1.Mn1.Cgb1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgb1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn1.Cgb1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.GAMMA(unit = \"V^0.5\") = Nand1.Mn1.Cgb1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgb1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.COX(unit = \"F/m2\") = Nand1.Mn1.Cgb1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.NFS(unit = \"1/m2\") = Nand1.Mn1.Cgb1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Cgb1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Cgb1.L \"Channel length\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn1.Cgb1.W \"Channel width\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.Cgb1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.XD(unit = \"m/V^0.5\") = Nand1.Mn1.Cgb1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.XQC = Nand1.Mn1.Cgb1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.DELTA = Nand1.Mn1.Cgb1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.ETA = Nand1.Mn1.Cgb1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.CGB0(unit = \"F/m\") = Nand1.Mn1.Cgb1.CGB0 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mn1.Cgb1.Cgb1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Cgb1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn1.Cgb1.Cgb1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mn1.Cgb1.Cgb1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mn1.Cgb1.Cgb1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mn1.Cgb1.Cgb1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn1.Cgb1.Cgb1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mn1.Cgb1.Cgb1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mn1.Cgb1.Cgb1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mn1.Cgb1.Cgb1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mn1.Cgb1.Cgb1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mn1.Cgb1.Cgb1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mn1.Cgb1.Cgb1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   input Real Nand1.Mn1.Cgb1.Cgb1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.Cgb1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.Cgb1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.Cgb1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.Cgb1.u[5] \"Connector of Real input signals\";
//   input Real Nand1.Mn1.Cgb1.Cgb1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn1.Cgb1.Cgb1.u2 \"Connector of Real input signal 2\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.sig \"sign(vds)\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.N \"Current emission coefficient\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.Fs \"Short channel working function\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mn1.Cgb1.Cgb1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgb1.Cgb1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgb1.Cgb1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mn1.Cgb1.Cgb1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mn1.Cgb1.Cgb1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.WSfac;
//   protected Real Nand1.Mn1.Cgb1.Cgb1.WDfac;
//   protected Real Nand1.Mn1.Cgb1.Cgb1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mn1.Cgb1.Cgb1.WcXJ \"WC/XJ\";
//   protected parameter Real Nand1.Mn1.Cgb1.Cgb1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mn1.Cgb1.Cgb1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mn1.Cgb1.Cgb1.W * (Nand1.Mn1.Cgb1.Cgb1.L * Nand1.Mn1.Cgb1.Cgb1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mn1.Cgb1.Cgb1.SIGMA = (8.15e-22 * (Nand1.Mn1.Cgb1.Cgb1.ETA * Nand1.Mn1.Cgb1.Cgb1.L ^ -3.0)) / Nand1.Mn1.Cgb1.Cgb1.COX;
//   protected parameter Real Nand1.Mn1.Cgb1.Cgb1.Fn = (3.14159265358979 * (Nand1.Mn1.Cgb1.Cgb1.es * Nand1.Mn1.Cgb1.Cgb1.DELTA)) / (Nand1.Mn1.Cgb1.Cgb1.W * Nand1.Mn1.Cgb1.Cgb1.COX * 2.0);
//   output Real Nand1.Mn1.Cgb1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Cgb1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Cgb1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Cgb1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Cgb1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Cgb1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Cgb1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Cgb1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Cgb1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Cgb1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Cgb1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Vds.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Vds.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vds.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Vds.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vds.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn1.Vds.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn1.Vds.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Vds.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Vds.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Vds.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Vds.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Vds.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vds.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Vds.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vds.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Vds.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Vds.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Vds.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn1.Vds.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn1.Vds.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vds.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vds.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vds.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Vbs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Vbs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vbs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Vbs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vbs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn1.Vbs.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn1.Vbs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Vbs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Vbs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Vbs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Vbs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Vbs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vbs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Vbs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Vbs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Vbs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Vbs.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Vbs.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn1.Vbs.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn1.Vbs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Vbs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Vbs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Vbs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.RD \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Rd.TR1(unit = \"1/K\") = Nand1.Mn1.TRD1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Rd.TR2(unit = \"1/K2\") = Nand1.Mn1.TRD2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mn1.Rd.Level = Nand1.Mn1.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mn1.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Rd.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Rd.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Rd.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Rd.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Rd.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Rd.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Rd.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Rd.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Rd.RM1.TR1(unit = \"1/K\") = Nand1.Mn1.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Rd.RM1.TR2(unit = \"1/K2\") = Nand1.Mn1.Rd.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mn1.Rd.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mn1.Rd.RM1.Level = Nand1.Mn1.Rd.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mn1.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Rs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn1.Rs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn1.Rs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Rs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn1.Rs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Rs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn1.Rs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.Rs.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.RS \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Rs.TR1(unit = \"1/K\") = Nand1.Mn1.TRS1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Rs.TR2(unit = \"1/K2\") = Nand1.Mn1.TRS2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mn1.Rs.Level = Nand1.Mn1.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mn1.Rs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Rs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Rs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Rs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Rs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Rs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Rs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn1.Rs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn1.Rs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Rs.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Rs.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Rs.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Rs.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn1.Rs.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Rs.Tnom \"Reference temperature\";
//   Real Nand1.Mn1.Rs.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn1.Rs.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn1.Rs.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn1.Rs.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn1.Rs.RM1.TR1(unit = \"1/K\") = Nand1.Mn1.Rs.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn1.Rs.RM1.TR2(unit = \"1/K2\") = Nand1.Mn1.Rs.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mn1.Rs.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mn1.Rs.RM1.Level = Nand1.Mn1.Rs.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mn1.Rs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.Rs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Rs.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn1.Rs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.Rs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.Rs.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.Rs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Rs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Rs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Rs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Rs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.T_nom.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.T_nom.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.T_nom.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.T_nom.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.T_nom.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.T_nom.Tabs.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.T_nom.Tabs.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.T_nom.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.T_nom.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.T_nom.Tabs.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn1.T_nom.Tabs.s \"Signal input\";
//   Real Nand1.Mn1.T_nom.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real Nand1.Mn1.T_nom.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn1.T_nom.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.T_nom.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn1.T_nom.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn1.T_nom.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn1.T_nom.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn1.T_nom.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.T_nom.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn1.T_nom.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn1.Tnom \"Fixed temperature at port\";
//   Real Nand1.Mn1.Sw1.p.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Sw1.p.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Sw1.n1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Sw1.n1.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Sw1.n2.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Sw1.n2.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Boolean Nand1.Mn1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Heat2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Heat2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Heat2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Heat2BG1.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Sw1.Heat2BG1.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Sw1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Sw1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Sw1.BG2Heat2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.BG2Heat2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.BG2Heat2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.BG2Heat2.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn1.Sw1.BG2Heat2.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn1.Sw1.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn1.Sw1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn1.Sw1.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn1.Sw1.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn1.Sw1.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn1.Sw1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn1.Sw1.Sw1.B3.BondCon2.d \"Directional variable\";
//   protected parameter Integer Nand1.Mn1.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   protected parameter Real Nand1.Mn1.U0def(unit = \"m2/(V.s)\") = 0.06;
//   protected parameter Real Nand1.Mn1.eox(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 3.45313324887195e-11 \"Permittivity of SiO2\";
//   protected parameter Real Nand1.Mn1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of silicon\";
//   parameter Real Nand1.Mn1.TOX(quantity = \"Length\", unit = \"m\") = 1e-07 \"Thin oxide thickness\";
//   protected parameter Real Nand1.Mn1.LDeff(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.LD;
//   protected parameter Real Nand1.Mn1.Weff(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.W + -2.0 * Nand1.Mn1.WD;
//   protected parameter Real Nand1.Mn1.GAMMAtmp(unit = \"V^0.5\") = if Nand1.Mn1.GAMMA == 0.0 and Nand1.Mn1.NSUB == 0.0 then 0.35 else Nand1.Mn1.GAMMA;
//   protected parameter Real Nand1.Mn1.VTref(quantity = \"ElectricPotential\", unit = \"V\") = 8.61727503842867e-05 * Nand1.Mn1.Tnom \"Thermal voltage at reference temperature\";
//   protected parameter Real Nand1.Mn1.EGref(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.EG + (-0.000702 * Nand1.Mn1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Tnom) \"Energy gap for temperature effect on saturation current at reference temperature\";
//   protected parameter Real Nand1.Mn1.ISDeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mn1.ISD > 0.0 then Nand1.Mn1.ISD else if Nand1.Mn1.AD * Nand1.Mn1.JS > 0.0 then Nand1.Mn1.AD * Nand1.Mn1.JS else 1e-15;
//   protected parameter Real Nand1.Mn1.ISSeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mn1.ISS > 0.0 then Nand1.Mn1.ISS else if Nand1.Mn1.AS * Nand1.Mn1.JS > 0.0 then Nand1.Mn1.AS * Nand1.Mn1.JS else 1e-15;
//   protected parameter Real Nand1.Mn1.CGB0eff(unit = \"F/m\") = Nand1.Mn1.CGB0;
//   protected parameter Real Nand1.Mn1.CGD0eff(unit = \"F/m\") = Nand1.Mn1.CGD0;
//   protected parameter Real Nand1.Mn1.CGS0eff(unit = \"F/m\") = Nand1.Mn1.CGS0;
//   protected parameter Real Nand1.Mn1.U0tmp(unit = \"m2/(V.s)\") = if Nand1.Mn1.KP == 0.0 and Nand1.Mn1.U0 == 0.0 then Nand1.Mn1.U0def else Nand1.Mn1.U0;
//   protected parameter Real Nand1.Mn1.TOXeff(quantity = \"Length\", unit = \"m\") = if Nand1.Mn1.TOX == 1e-07 and Nand1.Mn1.COX > 0.0 then Nand1.Mn1.eox / Nand1.Mn1.COX else Nand1.Mn1.TOX;
//   protected parameter Real Nand1.Mn1.COXeff(unit = \"F/m2\") = if Nand1.Mn1.COX > 0.0 then Nand1.Mn1.COX else Nand1.Mn1.eox / Nand1.Mn1.TOX;
//   protected parameter Real Nand1.Mn1.Leff(quantity = \"Length\", unit = \"m\") = Nand1.Mn1.L + -2.0 * Nand1.Mn1.LDeff;
//   protected parameter Real Nand1.Mn1.XNI(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 * ((Nand1.Mn1.Tnom / 300.0) ^ 1.5 * exp(5802.2982644775 * (Nand1.Mn1.EGref * (0.00333333333333333 + -1.0 / Nand1.Mn1.Tnom)))) \"Intrinsic carrier concentration at reference temperature\";
//   protected parameter Real Nand1.Mn1.FermiG(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mn1.Type) * (Nand1.Mn1.TPG * Nand1.Mn1.EGref)) / 2.0;
//   protected parameter Real Nand1.Mn1.EGeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mn1.Level == 3 and Nand1.Mn1.EG == 0.0 then 0.2 else Nand1.Mn1.EGref;
//   protected parameter Real Nand1.Mn1.KPeff(quantity = \"Transconductance\", unit = \"A/(V*V)\") = if Nand1.Mn1.KP > 0.0 then Nand1.Mn1.KP else Nand1.Mn1.U0tmp * Nand1.Mn1.COXeff;
//   protected parameter Real Nand1.Mn1.U0eff(unit = \"m2/(V.s)\") = if Nand1.Mn1.KP > 0.0 and Nand1.Mn1.U0 == 0.0 then Nand1.Mn1.KP / Nand1.Mn1.COXeff else Nand1.Mn1.U0tmp;
//   protected parameter Real Nand1.Mn1.NSUBeff(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = if Nand1.Mn1.NSUB > 0.0 then Nand1.Mn1.NSUB else (Nand1.Mn1.GAMMAtmp * Nand1.Mn1.COXeff) ^ 2.0 / (Nand1.Mn1.es * 3.2043784e-19);
//   protected parameter Real Nand1.Mn1.GAMMAeff(unit = \"V^0.5\") = if Nand1.Mn1.GAMMA == 0.0 and Nand1.Mn1.NSUB > 0.0 then sqrt(3.2043784e-19 * (Nand1.Mn1.es * Nand1.Mn1.NSUB)) / Nand1.Mn1.COXeff else Nand1.Mn1.GAMMAtmp;
//   protected parameter Real Nand1.Mn1.VBP(quantity = \"ElectricPotential\", unit = \"V\") = (Nand1.Mn1.UCRIT * Nand1.Mn1.es) / Nand1.Mn1.COXeff \"Gate to channel critical voltage\";
//   protected parameter Real Nand1.Mn1.PHIeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mn1.PHI > 0.0 then Nand1.Mn1.PHI else if Nand1.Mn1.NSUB > 0.0 then max(2.0 * (Nand1.Mn1.VTref * log(Nand1.Mn1.NSUB / Nand1.Mn1.XNI)),0.1) else 0.6;
//   protected parameter Real Nand1.Mn1.Fn1(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mn1.TPG == 0.0 then 3.2 else 3.25 + (Nand1.Mn1.EGref / 2.0 - Nand1.Mn1.FermiG);
//   protected parameter Real Nand1.Mn1.LAMBDAeff(quantity = \"InversePotential\", unit = \"1/V\") = if Nand1.Mn1.LAMBDA > 0.0 then Nand1.Mn1.LAMBDA else if Nand1.Mn1.Level <> 2 then sqrt((2.0 * Nand1.Mn1.es) / (Nand1.Mn1.NSUBeff * 1.6021892e-19)) else Nand1.Mn1.LAMBDA;
//   protected parameter Real Nand1.Mn1.XD(unit = \"m/V^0.5\") = sqrt((2.0 * Nand1.Mn1.es) / (Nand1.Mn1.NSUBeff * 1.6021892e-19)) \"Depletion factor\";
//   protected parameter Real Nand1.Mn1.CJeff(unit = \"F/m2\") = if Nand1.Mn1.CJ > 0.0 then Nand1.Mn1.CJ else sqrt((1.6021892e-19 * (Nand1.Mn1.es * Nand1.Mn1.NSUBeff)) / (Nand1.Mn1.PB * 2.0));
//   protected parameter Real Nand1.Mn1.FermiS(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mn1.Type) * Nand1.Mn1.PHIeff) / 2.0;
//   protected parameter Real Nand1.Mn1.Vcorr(quantity = \"ElectricPotential\", unit = \"V\") = Real(Nand1.Mn1.Type) * (Nand1.Mn1.GAMMAeff * sqrt(Nand1.Mn1.PHIeff) + Nand1.Mn1.PHIeff);
//   protected parameter Real Nand1.Mn1.Fn2(quantity = \"ElectricPotential\", unit = \"V\") = -3.25 + (Nand1.Mn1.Fn1 + ((-Nand1.Mn1.EGref) / 2.0 - Nand1.Mn1.FermiS));
//   protected parameter Real Nand1.Mn1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn1.Fn2 + (-1.6021892e-19 * Nand1.Mn1.NSS) / Nand1.Mn1.COXeff;
//   protected parameter Real Nand1.Mn1.VT0eff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mn1.Type) * Nand1.Mn1.VT0 > 0.0 then Nand1.Mn1.VT0 else Nand1.Mn1.VFB + Nand1.Mn1.Vcorr;
//   protected parameter Real Nand1.Mn1.VFBeff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mn1.Type) * Nand1.Mn1.VT0 > 0.0 then Nand1.Mn1.VT0 - Nand1.Mn1.Vcorr else Nand1.Mn1.VFB;
//   constant Real Nand1.Mn2.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn2.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.ni(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 \"Intrinsic carrier concentration at 300 K\";
//   constant Real Nand1.Mn2.kox = 3.9 \"Dielectric constant of SiO2\";
//   constant Real Nand1.Mn2.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn2.GapC1(unit = \"V/K\") = 0.000702 \"Sze's first bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Sze's second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Fn0(quantity = \"ElectricPotential\", unit = \"V\") = 3.25 \"Work function constant for computation of flat band voltage\";
//   constant Real Nand1.Mn2.TOXdef = 1e-07 \"Default oxide thickness\";
//   parameter Integer Nand1.Mn2.Level(min = 0, max = 4) = Nand1.Level \"Level of MOSFET model\";
//   parameter Real Nand1.Mn2.L(quantity = \"Length\", unit = \"m\", min = 0.0) = 3.1e-06 \"Channel length\";
//   parameter Real Nand1.Mn2.W(quantity = \"Length\", unit = \"m\", min = 0.0) = 6.5e-06 \"Channel width\";
//   parameter Real Nand1.Mn2.TPG(min = 1.0, max = 2.0) = 1.0 \"Type of gate material\";
//   parameter Real Nand1.Mn2.COX(unit = \"F/m2\") = 0.000335 \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1e+21 \"Substrate doping\";
//   parameter Real Nand1.Mn2.U0(unit = \"m2/(V.s)\") = 0.07 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mn2.VT0(quantity = \"ElectricPotential\", unit = \"V\") = 0.8 \"Zero-bias threshold voltage (VT0>0: enhancement type, VT0<0: depletion type)\";
//   parameter Real Nand1.Mn2.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\", min = 0.0) = 0.02 \"Channel length modulation\";
//   parameter Real Nand1.Mn2.LD(quantity = \"Length\", unit = \"m\", min = 0.0) = 2.5e-07 \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.WD(quantity = \"Length\", unit = \"m\", min = 0.0) = 1.25e-06 \"Width diffusion\";
//   parameter Real Nand1.Mn2.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = 4.1e-05 \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.GAMMA(unit = \"V^0.5\") = 0.35 \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.PHI(quantity = \"ElectricPotential\", unit = \"V\") = 0.65 \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.NSS(unit = \"1/m2\") = 100000000000000.0 \"Surface state density\";
//   parameter Real Nand1.Mn2.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   parameter Real Nand1.Mn2.EG(quantity = \"ElectricPotential\", unit = \"V\") = 1.11 \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mn2.AD(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Drain diffusion area\";
//   parameter Real Nand1.Mn2.PD(quantity = \"Length\", unit = \"m\") = 8e-07 \"Drain perimeter width\";
//   parameter Real Nand1.Mn2.AS(quantity = \"Area\", unit = \"m2\") = 2e-11 \"Source diffusion area\";
//   parameter Real Nand1.Mn2.PS(quantity = \"Length\", unit = \"m\") = 8e-07 \"Source perimeter width\";
//   parameter Real Nand1.Mn2.ISD(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.ISS(quantity = \"ElectricCurrent\", unit = \"A\", min = 0.0) = 1e-15 \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.JS(quantity = \"CurrentDensity\", unit = \"A/m2\", min = 0.0) = 1e-08 \"Saturation current density at reference temperature\";
//   parameter Real Nand1.Mn2.PB(quantity = \"ElectricPotential\", unit = \"V\", min = 0.2) = 0.75 \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn2.RD(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Drain Ohmic resistance\";
//   parameter Real Nand1.Mn2.RS(quantity = \"Resistance\", unit = \"Ohm\", min = 0.0) = 10.0 \"Source Ohmic resistance\";
//   parameter Real Nand1.Mn2.CJ(unit = \"F/m2\", min = 0.0) = 0.0002 \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn2.MJ(min = 0.3, max = 0.5) = 0.5 \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn2.CJSW(unit = \"F/m\", min = 0.0) = 1e-09 \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn2.MJSW(min = 0.3, max = 0.5) = 0.33 \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn2.FC(min = 0.0, max = 0.95) = 0.5 \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn2.CGB0(unit = \"F/m\", min = 0.0) = 2e-10 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.CGD0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.CGS0(unit = \"F/m\", min = 0.0) = 4e-11 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.TRD1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mn2.TRD2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of drain resistance\";
//   parameter Real Nand1.Mn2.TRS1(unit = \"1/K\") = 0.005 \"Linear temperature coefficient of source resistance\";
//   parameter Real Nand1.Mn2.TRS2(unit = \"1/K2\") = 0.0005 \"Quadratic temperature coefficient of source resistance\";
//   parameter Real Nand1.Mn2.XJ(quantity = \"Length\", unit = \"m\") = 1e-06 \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 1000000.0 \"Critical electric field for mobility\";
//   parameter Real Nand1.Mn2.UEXP = 0.1 \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mn2.UTRA(min = 0.0, max = 0.5) = 0.5 \"Transverse field coefficient\";
//   parameter Real Nand1.Mn2.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = 0.0 \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mn2.DELTA = 1.0 \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.VMAX(quantity = \"Velocity\", unit = \"m/s\") = 0.0 \"Maximum drift velocity of carriers (VMAX=0: Frohman-Grove model, VMAX>0: Baum-Beneking model)\";
//   parameter Real Nand1.Mn2.NFS(unit = \"1/m2\") = 100000000000000.0 \"Surface fast state density\";
//   parameter Real Nand1.Mn2.NEFF(min = 1e-60) = 5.0 \"Total channel charge coefficient\";
//   parameter Real Nand1.Mn2.XQC = 0.0 \"Coefficient of channel charge share (XQC<=0.5: Ward-Dutton model, XQC>0.5: Meyer model)\";
//   parameter Real Nand1.Mn2.KAPPA(min = 1e-60) = 0.2 \"Saturation field factor\";
//   parameter Real Nand1.Mn2.ETA = 1.0 \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.THETA(quantity = \"InversePotential\", unit = \"1/V\") = 0.05 \"Mobility modulation\";
//   parameter Real Nand1.Mn2.EMin = -100.0 \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.EMax = 40.0 \"if x > EMax, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.GminDC(quantity = \"Conductance\", unit = \"S\") = 1e-16 \"Leakage conductance\";
//   parameter Boolean Nand1.Mn2.enforceStates = true \"State selector\";
//   Real Nand1.Mn2.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Mni.Level = Nand1.Mn2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Mni.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Mni.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn2.Mni.VT0(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.VT0eff \"Zero-bias threshold voltage\";
//   parameter Real Nand1.Mn2.Mni.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.VFBeff \"Flat band voltage\";
//   parameter Real Nand1.Mn2.Mni.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Mni.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn2.LAMBDAeff \"Channel length modulation\";
//   parameter Real Nand1.Mn2.Mni.TOX(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.TOXeff \"Thin oxide thickness\";
//   parameter Real Nand1.Mn2.Mni.COX(unit = \"F/m2\") = Nand1.Mn2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Mni.NSUB(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = Nand1.Mn2.NSUBeff \"Substrate doping\";
//   parameter Real Nand1.Mn2.Mni.NSS(unit = \"1/m2\") = Nand1.Mn2.NSS \"Surface state density\";
//   parameter Real Nand1.Mn2.Mni.NFS(unit = \"1/m2\") = Nand1.Mn2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Mni.NEFF = Nand1.Mn2.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mn2.Mni.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Leff \"Channel length\";
//   parameter Real Nand1.Mn2.Mni.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Weff \"Channel width\";
//   parameter Real Nand1.Mn2.Mni.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Mni.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Mni.AD(quantity = \"Area\", unit = \"m2\") = Nand1.Mn2.AD \"Drain diffusion area\";
//   parameter Real Nand1.Mn2.Mni.PD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.PD \"Drain perimeter width\";
//   parameter Real Nand1.Mn2.Mni.AS(quantity = \"Area\", unit = \"m2\") = Nand1.Mn2.AS \"Source diffusion area\";
//   parameter Real Nand1.Mn2.Mni.PS(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.PS \"Source perimeter width\";
//   parameter Real Nand1.Mn2.Mni.XD(unit = \"m/V^0.5\") = Nand1.Mn2.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Mni.TPG = Nand1.Mn2.TPG \"Type of gate material\";
//   parameter Real Nand1.Mn2.Mni.U0(unit = \"m2/(V.s)\") = Nand1.Mn2.U0eff \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.UCRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mn2.UCRIT \"Critical electric field for mobility\";
//   parameter Real Nand1.Mn2.Mni.UEXP = Nand1.Mn2.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mn2.Mni.UTRA = Nand1.Mn2.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mn2.Mni.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mn2.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mn2.Mni.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mn2.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mn2.Mni.XQC = Nand1.Mn2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn2.Mni.DELTA = Nand1.Mn2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Mni.KAPPA = Nand1.Mn2.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mn2.Mni.ETA = Nand1.Mn2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Mni.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn2.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mn2.Mni.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mn2.Mni.ISD(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.ISDeff \"Drain junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.ISS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.ISSeff \"Source junction saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.CJ(unit = \"F/m2\") = Nand1.Mn2.CJeff \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.MJ = Nand1.Mn2.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.CJSW(unit = \"F/m\") = Nand1.Mn2.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.MJSW = Nand1.Mn2.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.FC = Nand1.Mn2.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn2.Mni.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mn2.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mn2.Mni.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   parameter Real Nand1.Mn2.Mni.EMin = Nand1.Mn2.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.EMax = Nand1.Mn2.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mn2.Mni.enforceStates = Nand1.Mn2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn2.Mni.D.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.D.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.G.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.G.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.S.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.S.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.B.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.B.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Ids.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Ids.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Ids.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Ids.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Ids.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Ids.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Ids.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Ids.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mn2.Mni.Ids.InPort1(quantity = \"ElectricCurrent\", unit = \"A\") \"Current source\";
//   Real Nand1.Mn2.Mni.Ids.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Ids.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Ids.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Ids.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mn2.Mni.Ids.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Ids.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Ids.B4.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Ids.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Ids.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Ids.B4.fBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Ids.B3.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Ids.B3.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Ids.B3.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Ids.B3.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Ids.B3.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Ids.B3.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Ids.I1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Ids.I1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Ids.I1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Ids.I1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Ids.I1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.I1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.I1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Ids.I1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Ids.I1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Ids.I1.BondCon2.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Ids.I1.s \"Signal input\";
//   Real Nand1.Mn2.Mni.Ids.I1.f0 \"Bondgraphic Flow Source\";
//   input Real Nand1.Mn2.Mni.IDS0.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn2.Mni.IDS0.u2 \"Connector of Real input signal 2\";
//   output Real Nand1.Mn2.Mni.IDS0.y \"Connector of Real output signal\";
//   parameter Integer Nand1.Mn2.Mni.IDS0.Level = Nand1.Mn2.Mni.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Mni.IDS0.Type = Nand1.Mn2.Mni.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Mni.IDS0.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn2.Mni.IDS0.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.VFB \"Flat band voltage\";
//   parameter Real Nand1.Mn2.Mni.IDS0.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.Mni.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.IDS0.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.Mni.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Mni.IDS0.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.IDS0.LAMBDA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn2.Mni.LAMBDA \"Channel length modulation\";
//   parameter Real Nand1.Mn2.Mni.IDS0.COX(unit = \"F/m2\") = Nand1.Mn2.Mni.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Mni.IDS0.NFS(unit = \"1/m2\") = Nand1.Mn2.Mni.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Mni.IDS0.NEFF = Nand1.Mn2.Mni.NEFF \"Total channel charge coefficient\";
//   parameter Real Nand1.Mn2.Mni.IDS0.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Mni.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Mni.IDS0.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Mni.L \"Channel length\";
//   parameter Real Nand1.Mn2.Mni.IDS0.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Mni.W \"Channel width\";
//   parameter Real Nand1.Mn2.Mni.IDS0.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Mni.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Mni.IDS0.XD(unit = \"m/V^0.5\") = Nand1.Mn2.Mni.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Mni.IDS0.U0(unit = \"m2/(V.s)\") = Nand1.Mn2.Mni.U0 \"Surface mobility at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.IDS0.UEXP = Nand1.Mn2.Mni.UEXP \"Exponential coefficient for mobility\";
//   parameter Real Nand1.Mn2.Mni.IDS0.UTRA = Nand1.Mn2.Mni.UTRA \"Transverse field coefficient\";
//   parameter Real Nand1.Mn2.Mni.IDS0.VMAX(quantity = \"Velocity\", unit = \"m/s\") = Nand1.Mn2.Mni.VMAX \"Maximum drift velocity of carriers\";
//   parameter Real Nand1.Mn2.Mni.IDS0.ECRIT(quantity = \"ElectricFieldStrength\", unit = \"V/m\") = Nand1.Mn2.Mni.ECRIT \"Critical electric field for pinch-off\";
//   parameter Real Nand1.Mn2.Mni.IDS0.DELTA = Nand1.Mn2.Mni.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Mni.IDS0.KAPPA = Nand1.Mn2.Mni.KAPPA \"Saturation field factor\";
//   parameter Real Nand1.Mn2.Mni.IDS0.ETA = Nand1.Mn2.Mni.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Mni.IDS0.THETA(quantity = \"InversePotential\", unit = \"1/V\") = Nand1.Mn2.Mni.THETA \"Mobility modulation\";
//   parameter Real Nand1.Mn2.Mni.IDS0.VBP(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.VBP \"Gate to channel critical voltage\";
//   parameter Real Nand1.Mn2.Mni.IDS0.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.IDS0.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn2.Mni.IDS0.EMin = Nand1.Mn2.Mni.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.IDS0.EMax = Nand1.Mn2.Mni.EMax \"if x > EMax, the exp(x) function is linearized\";
//   output Real Nand1.Mn2.Mni.IDS0.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.ids(quantity = \"ElectricCurrent\", unit = \"A\") \"Injected drain-source current\";
//   output Real Nand1.Mn2.Mni.IDS0.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.vdsat(quantity = \"ElectricPotential\", unit = \"V\") \"Saturation voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.vdsat1(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted saturation voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.vpof(quantity = \"ElectricPotential\", unit = \"V\") \"Punch-through voltage\";
//   output Real Nand1.Mn2.Mni.IDS0.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.IDS0.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.IDS0.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.IDS0.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.IDS0.y1[5] \"Connector of Real output signals\";
//   input Real Nand1.Mn2.Mni.IDS0.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   input Real Nand1.Mn2.Mni.IDS0.u3 \"Connector of Real input signal 3\";
//   protected Real Nand1.Mn2.Mni.IDS0.sig \"sign(vds)\";
//   output Real Nand1.Mn2.Mni.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mn2.Mni.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Vds.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Vds.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Vds.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vds.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vds.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vds.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn2.Mni.Vds.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vds.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vds.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Vds.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Vds.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Vds.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn2.Mni.Vds.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vds.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vds.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vds.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Vgs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Vgs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vgs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vgs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vgs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn2.Mni.Vgs.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vgs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vgs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Vgs.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Vgs.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Vgs.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn2.Mni.Vgs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vgs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vgs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vgs.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.y1[1] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.y1[2] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.y1[3] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.y1[4] \"Connector of Real output signals\";
//   output Real Nand1.Mn2.Mni.y1[5] \"Connector of Real output signals\";
//   Real Nand1.Mn2.Mni.Rgs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Rgs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Rgs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Rgs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rgs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rgs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Mni.Rgs.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn2.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rgs.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgs.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgs.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Rgs.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgs.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgs.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rgs.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rgs.T_nom.e0 = Nand1.Mn2.Mni.Rgs.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn2.Mni.Rgs.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgs.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgs.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgs.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgs.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rgs.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Rgs.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rgs.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Rgs.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Mni.Rgs.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Mni.Rgs.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rgs.R1.TR1(unit = \"1/K\") = Nand1.Mn2.Mni.Rgs.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgs.R1.TR2(unit = \"1/K2\") = Nand1.Mn2.Mni.Rgs.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgs.R1.Area = Nand1.Mn2.Mni.Rgs.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rgs.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn2.Mni.Rgs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rgs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn2.Mni.Rgs.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn2.Mni.Rgs.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgs.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rgs.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgs.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rgs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Vbs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Vbs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Vbs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vbs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vbs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vbs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn2.Mni.Vbs.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vbs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Vbs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Vbs.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Vbs.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Vbs.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn2.Mni.Vbs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Vbs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Vbs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Vbs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Mni.Dbs.Level = Nand1.Mn2.Mni.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbs.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.Mni.ISS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.CJ(unit = \"F/m2\") = Nand1.Mn2.Mni.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.MJ = Nand1.Mn2.Mni.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.CJSW(unit = \"F/m\") = Nand1.Mn2.Mni.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.MJSW = Nand1.Mn2.Mni.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.FC = Nand1.Mn2.Mni.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn2.Mni.AS \"Diffusion area\";
//   parameter Real Nand1.Mn2.Mni.Dbs.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Mni.PS \"Perimeter width\";
//   parameter Real Nand1.Mn2.Mni.Dbs.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mn2.Mni.Dbs.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mn2.Mni.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mn2.Mni.Dbs.EMin = Nand1.Mn2.Mni.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.Dbs.EMax = Nand1.Mn2.Mni.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mn2.Mni.Dbs.enforceStates = Nand1.Mn2.Mni.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mn2.Mni.Dbs.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mn2.Mni.Dbs.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mn2.Mni.Dbs.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.Mni.Dbs.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.Mni.Dbs.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Mni.Dbs.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn2.Mni.Dbs.nlCM1.Level = Nand1.Mn2.Mni.Dbs.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbs.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbs.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mn2.Mni.Dbs.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.MJ = Nand1.Mn2.Mni.Dbs.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mn2.Mni.Dbs.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.MJSW = Nand1.Mn2.Mni.Dbs.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.FC = Nand1.Mn2.Mni.Dbs.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn2.Mni.Dbs.A \"Diffusion area\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Mni.Dbs.P \"Perimeter width\";
//   parameter Real Nand1.Mn2.Mni.Dbs.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbs.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn2.Mni.Dbs.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mn2.Mni.Dbs.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mn2.Mni.Dbs.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbs.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbs.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn2.Mni.Dbs.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.T_nom.e0 = Nand1.Mn2.Mni.Dbs.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbs.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Mni.Dbs.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mn2.Mni.Dbs.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mn2.Mni.Dbs.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbs.Rd.R1.Area = Nand1.Mn2.Mni.Dbs.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn2.Mni.Dbs.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbs.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Mni.Dbs.DjM1.Level = Nand1.Mn2.Mni.Dbs.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.Mni.Dbs.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbs.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.EMin = Nand1.Mn2.Mni.Dbs.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.EMax = Nand1.Mn2.Mni.Dbs.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbs.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Level = Nand1.Mn2.Mni.Dbs.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.Mni.Dbs.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbs.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMin = Nand1.Mn2.Mni.Dbs.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMax = Nand1.Mn2.Mni.Dbs.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.ExMin = exp(Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mn2.Mni.Dbs.DjM1.DjM1.ExMax = exp(Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMax);
//   output Real Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn2.Mni.Dbs.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Dbs.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbs.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn2.Mni.Dbs.VarC1.enforceStates = Nand1.Mn2.Mni.Dbs.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn2.Mni.Dbs.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mn2.Mni.Dbs.VarC1.u \"Modulation signal\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.mC1.e(start = Nand1.Mn2.Mni.Dbs.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Dbs.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mn2.Mni.Dbs.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mn2.Mni.Rgd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Rgd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Rgd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Rgd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rgd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rgd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Mni.Rgd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn2.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rgd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Rgd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rgd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rgd.T_nom.e0 = Nand1.Mn2.Mni.Rgd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn2.Mni.Rgd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rgd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Rgd.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rgd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Rgd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Mni.Rgd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Mni.Rgd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rgd.R1.TR1(unit = \"1/K\") = Nand1.Mn2.Mni.Rgd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgd.R1.TR2(unit = \"1/K2\") = Nand1.Mn2.Mni.Rgd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgd.R1.Area = Nand1.Mn2.Mni.Rgd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rgd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn2.Mni.Rgd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rgd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn2.Mni.Rgd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn2.Mni.Rgd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rgd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rgd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Rgb.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Rgb.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Rgb.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgb.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgb.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgb.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Rgb.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rgb.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rgb.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Mni.Rgb.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn2.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rgb.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgb.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgb.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgb.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rgb.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Rgb.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgb.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgb.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rgb.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rgb.T_nom.e0 = Nand1.Mn2.Mni.Rgb.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn2.Mni.Rgb.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgb.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgb.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgb.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgb.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rgb.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Rgb.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rgb.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Rgb.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Mni.Rgb.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Mni.Rgb.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rgb.R1.TR1(unit = \"1/K\") = Nand1.Mn2.Mni.Rgb.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgb.R1.TR2(unit = \"1/K2\") = Nand1.Mn2.Mni.Rgb.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rgb.R1.Area = Nand1.Mn2.Mni.Rgb.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rgb.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn2.Mni.Rgb.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgb.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rgb.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn2.Mni.Rgb.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn2.Mni.Rgb.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rgb.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rgb.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rgb.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rgb.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rgb.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Dbd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Mni.Dbd.Level = Nand1.Mn2.Mni.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbd.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.Mni.ISD \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.CJ(unit = \"F/m2\") = Nand1.Mn2.Mni.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.MJ = Nand1.Mn2.Mni.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.CJSW(unit = \"F/m\") = Nand1.Mn2.Mni.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.MJSW = Nand1.Mn2.Mni.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.FC = Nand1.Mn2.Mni.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn2.Mni.AD \"Diffusion area\";
//   parameter Real Nand1.Mn2.Mni.Dbd.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Mni.PD \"Perimeter width\";
//   parameter Real Nand1.Mn2.Mni.Dbd.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.EG \"Energy gap for temperature effect on saturation current at 300 K\";
//   parameter Real Nand1.Mn2.Mni.Dbd.GminDC(quantity = \"Conductance\", unit = \"S\") = Nand1.Mn2.Mni.GminDC \"Leakage conductance\";
//   parameter Real Nand1.Mn2.Mni.Dbd.EMin = Nand1.Mn2.Mni.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.Dbd.EMax = Nand1.Mn2.Mni.EMax \"if x > EMax, the exp(x) function is linearized\";
//   parameter Boolean Nand1.Mn2.Mni.Dbd.enforceStates = Nand1.Mn2.Mni.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   input Real Nand1.Mn2.Mni.Dbd.nlCM1.u \"Connector of Real input signal\";
//   output Real Nand1.Mn2.Mni.Dbd.nlCM1.y \"Connector of Real output signal\";
//   constant Real Nand1.Mn2.Mni.Dbd.nlCM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.Mni.Dbd.nlCM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.Mni.Dbd.nlCM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Mni.Dbd.nlCM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn2.Mni.Dbd.nlCM1.Level = Nand1.Mn2.Mni.Dbd.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbd.Tnom \"Reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.PB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbd.PB \"Built-in potential at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.CJ(unit = \"F/m2\") = Nand1.Mn2.Mni.Dbd.CJ \"Zero-bias bulk capacitance per square meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.MJ = Nand1.Mn2.Mni.Dbd.MJ \"Bulk junction grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.CJSW(unit = \"F/m\") = Nand1.Mn2.Mni.Dbd.CJSW \"Zero-bias perimeter capacitance per meter at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.MJSW = Nand1.Mn2.Mni.Dbd.MJSW \"Perimeter capacitance grading coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.FC = Nand1.Mn2.Mni.Dbd.FC \"Forward-bias depletion capacitance coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.A(quantity = \"Area\", unit = \"m2\") = Nand1.Mn2.Mni.Dbd.A \"Diffusion area\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.P(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Mni.Dbd.P \"Perimeter width\";
//   parameter Real Nand1.Mn2.Mni.Dbd.nlCM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbd.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn2.Mni.Dbd.nlCM1.Tdev(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.PBval(quantity = \"ElectricPotential\", unit = \"V\") \"Built-in potential at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.CJval(unit = \"F/m2\") \"Zero-bias bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.CJSWval(unit = \"F/m\") \"Zero-bias perimeter capacitance per meter at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage across capacitance\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Non-linear junction capacitance value\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.Cbulk(unit = \"F/m2\") \"Bulk capacitance per square meter at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.nlCM1.Cperi(unit = \"F/m\") \"Perimeter capacitance per meter at device temperature\";
//   output Real Nand1.Mn2.Mni.Dbd.Tdev1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0);
//   Real Nand1.Mn2.Mni.Dbd.Tdev1.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbd.Tdev1.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbd.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn2.Mni.Dbd.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.T_nom.e0 = Nand1.Mn2.Mni.Dbd.Rd.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbd.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Mni.Dbd.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.R1.TR1(unit = \"1/K\") = Nand1.Mn2.Mni.Dbd.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.R1.TR2(unit = \"1/K2\") = Nand1.Mn2.Mni.Dbd.Rd.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Dbd.Rd.R1.Area = Nand1.Mn2.Mni.Dbd.Rd.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn2.Mni.Dbd.Rd.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbd.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Mni.Dbd.DjM1.Level = Nand1.Mn2.Mni.Dbd.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.Mni.Dbd.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbd.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.EMin = Nand1.Mn2.Mni.Dbd.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.EMax = Nand1.Mn2.Mni.Dbd.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Dbd.DjM1.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   parameter Integer Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Level = Nand1.Mn2.Mni.Dbd.DjM1.Level \"MOSFET modeling level (check documentation window for details)\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.IS(quantity = \"ElectricCurrent\", unit = \"A\") = Nand1.Mn2.Mni.Dbd.DjM1.IS \"Saturation current at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Mni.Dbd.DjM1.EG \"Energy gap for temperature effect on saturation current\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMin = Nand1.Mn2.Mni.Dbd.DjM1.EMin \"if x < EMin, the exp(x) function is linearized\";
//   parameter Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMax = Nand1.Mn2.Mni.Dbd.DjM1.EMax \"if x > EMax, the exp(x) function is linearized\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.ISval(quantity = \"ElectricCurrent\", unit = \"A\") \"Saturation current at device temperature\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EGnom(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at reference temperature\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Activation energy at device temperature\";
//   protected Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.et;
//   protected parameter Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.ExMin = exp(Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMin);
//   protected parameter Real Nand1.Mn2.Mni.Dbd.DjM1.DjM1.ExMax = exp(Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMax);
//   output Real Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn2.Mni.Dbd.Vd.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Dbd.Vd.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Dbd.VarC1.u0 = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn2.Mni.Dbd.VarC1.enforceStates = Nand1.Mn2.Mni.Dbd.enforceStates \"use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn2.Mni.Dbd.VarC1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Mn2.Mni.Dbd.VarC1.u \"Modulation signal\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.mC1.e(start = Nand1.Mn2.Mni.Dbd.VarC1.u0) \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.mC1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Dbd.VarC1.mC1.s \"Signal input\";
//   Real Nand1.Mn2.Mni.Dbd.VarC1.mC1.C \"Bondgraphic Capacitance\";
//   Real Nand1.Mn2.Mni.Rds.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Mni.Rds.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Mni.Rds.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rds.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rds.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rds.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Mni.Rds.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rds.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rds.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Mni.Rds.R(quantity = \"Resistance\", unit = \"Ohm\") = 1.0 / Nand1.Mn2.Mni.GminDC \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rds.TR1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rds.TR2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rds.Area = 1.0 \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rds.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Mni.Rds.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.Mni.Rds.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rds.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rds.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.Mni.Rds.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rds.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rds.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rds.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rds.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rds.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rds.T_nom.e0 = Nand1.Mn2.Mni.Rds.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.Mn2.Mni.Rds.R1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rds.R1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rds.R1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rds.R1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rds.R1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.R1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.R1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.R1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.R1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.R1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Mni.Rds.R1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Mni.Rds.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Mni.Rds.R1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Mni.Rds.R1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Mni.Rds.R1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Mni.Rds.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Mni.Rds.R1.TR1(unit = \"1/K\") = Nand1.Mn2.Mni.Rds.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rds.R1.TR2(unit = \"1/K2\") = Nand1.Mn2.Mni.Rds.TR2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.Mn2.Mni.Rds.R1.Area = Nand1.Mn2.Mni.Rds.Area \"Relative area occupied by resistor\";
//   Real Nand1.Mn2.Mni.Rds.R1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   output Real Nand1.Mn2.Mni.Rds.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rds.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rds.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rds.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rds.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rds.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn2.Mni.Rds.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn2.Mni.Rds.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn2.Mni.Rds.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Mni.Rds.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Mni.Rds.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rds.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Mni.Rds.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Mni.Rds.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Mni.Rds.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Mni.Rds.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Mni.Rds.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Cgs1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn2.Cgs1.enforceStates = Nand1.Mn2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn2.Cgs1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn2.Cgs1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Cgs1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Cgs1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgs1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgs1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgs1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Cgs1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Cgs1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Cgs1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Cgs1.Level = Nand1.Mn2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Cgs1.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Cgs1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn2.Cgs1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Cgs1.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Cgs1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Cgs1.COX(unit = \"F/m2\") = Nand1.Mn2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Cgs1.NFS(unit = \"1/m2\") = Nand1.Mn2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Cgs1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Cgs1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Leff \"Channel length\";
//   parameter Real Nand1.Mn2.Cgs1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Weff \"Channel width\";
//   parameter Real Nand1.Mn2.Cgs1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Cgs1.XD(unit = \"m/V^0.5\") = Nand1.Mn2.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Cgs1.XQC = Nand1.Mn2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn2.Cgs1.DELTA = Nand1.Mn2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgs1.ETA = Nand1.Mn2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgs1.CGS0(unit = \"F/m\") = Nand1.Mn2.CGS0eff \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.Cgs1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgs1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgs1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgs1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgs1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.Cgs1.e1(start = Nand1.Mn2.Cgs1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Cgs1.Cgs1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Cgs1.Cgs1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Cgs1.Cgs1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Cgs1.Cgs1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.Cgs1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.Cgs1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.Cgs1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.Cgs1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.Cgs1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Cgs1.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Cgs1.Cgs1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Cgs1.Cgs1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn2.Cgs1.Cgs1.pi = 3.14159265358979;
//   constant Real Nand1.Mn2.Cgs1.Cgs1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.Cgs1.Cgs1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn2.Cgs1.Cgs1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.Cgs1.Cgs1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn2.Cgs1.Cgs1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Cgs1.Cgs1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Cgs1.Cgs1.c0 = 0.0631353;
//   constant Real Nand1.Mn2.Cgs1.Cgs1.c1 = 0.8013292;
//   constant Real Nand1.Mn2.Cgs1.Cgs1.c2 = -0.01110777;
//   parameter Integer Nand1.Mn2.Cgs1.Cgs1.Level = Nand1.Mn2.Cgs1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Cgs1.Cgs1.Type = Nand1.Mn2.Cgs1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgs1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.Cgs1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.Cgs1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgs1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.COX(unit = \"F/m2\") = Nand1.Mn2.Cgs1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.NFS(unit = \"1/m2\") = Nand1.Mn2.Cgs1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Cgs1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Cgs1.L \"Channel length\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Cgs1.W \"Channel width\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Cgs1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.XD(unit = \"m/V^0.5\") = Nand1.Mn2.Cgs1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.XQC = Nand1.Mn2.Cgs1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.DELTA = Nand1.Mn2.Cgs1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.ETA = Nand1.Mn2.Cgs1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.CGS0(unit = \"F/m\") = Nand1.Mn2.Cgs1.CGS0 \"Gate-source overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.Cgs1.Cgs1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgs1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn2.Cgs1.Cgs1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mn2.Cgs1.Cgs1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mn2.Cgs1.Cgs1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mn2.Cgs1.Cgs1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn2.Cgs1.Cgs1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mn2.Cgs1.Cgs1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mn2.Cgs1.Cgs1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mn2.Cgs1.Cgs1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mn2.Cgs1.Cgs1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mn2.Cgs1.Cgs1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mn2.Cgs1.Cgs1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.sig \"sign(vds)\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.N \"Current emission coefficient\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.Fs \"Short channel working function\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mn2.Cgs1.Cgs1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgs1.Cgs1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgs1.Cgs1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgs1.Cgs1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mn2.Cgs1.Cgs1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.WSfac;
//   protected Real Nand1.Mn2.Cgs1.Cgs1.WDfac;
//   protected Real Nand1.Mn2.Cgs1.Cgs1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mn2.Cgs1.Cgs1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mn2.Cgs1.Cgs1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn2.Cgs1.Cgs1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mn2.Cgs1.Cgs1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.Cgs1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.Cgs1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.Cgs1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.Cgs1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mn2.Cgs1.Cgs1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mn2.Cgs1.Cgs1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mn2.Cgs1.Cgs1.W * (Nand1.Mn2.Cgs1.Cgs1.L * Nand1.Mn2.Cgs1.Cgs1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mn2.Cgs1.Cgs1.SIGMA = (8.15e-22 * (Nand1.Mn2.Cgs1.Cgs1.ETA * Nand1.Mn2.Cgs1.Cgs1.L ^ -3.0)) / Nand1.Mn2.Cgs1.Cgs1.COX;
//   protected parameter Real Nand1.Mn2.Cgs1.Cgs1.Fn = (3.14159265358979 * (Nand1.Mn2.Cgs1.Cgs1.es * Nand1.Mn2.Cgs1.Cgs1.DELTA)) / (Nand1.Mn2.Cgs1.Cgs1.W * Nand1.Mn2.Cgs1.Cgs1.COX * 2.0);
//   Real Nand1.Mn2.Cgs1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.Mn2.Cgs1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Cgs1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Cgs1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Cgs1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Cgs1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Cgs1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgs1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Cgs1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Real Nand1.Mn2.Cgs1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mn2.Cgs1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mn2.Cgs1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgs1.u[5] \"Connector of Real input signals\";
//   parameter Real Nand1.Mn2.Cgd1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn2.Cgd1.enforceStates = Nand1.Mn2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn2.Cgd1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn2.Cgd1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Cgd1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Cgd1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgd1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgd1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgd1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Cgd1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Cgd1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Cgd1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Cgd1.Level = Nand1.Mn2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Cgd1.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Cgd1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn2.Cgd1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Cgd1.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Cgd1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Cgd1.COX(unit = \"F/m2\") = Nand1.Mn2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Cgd1.NFS(unit = \"1/m2\") = Nand1.Mn2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Cgd1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Cgd1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Leff \"Channel length\";
//   parameter Real Nand1.Mn2.Cgd1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Weff \"Channel width\";
//   parameter Real Nand1.Mn2.Cgd1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Cgd1.XD(unit = \"m/V^0.5\") = Nand1.Mn2.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Cgd1.XQC = Nand1.Mn2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn2.Cgd1.DELTA = Nand1.Mn2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgd1.ETA = Nand1.Mn2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgd1.CGD0(unit = \"F/m\") = Nand1.Mn2.CGD0eff \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.Cgd1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn2.Cgd1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mn2.Cgd1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mn2.Cgd1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgd1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgd1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgd1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgd1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.Cgd1.e1(start = Nand1.Mn2.Cgd1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Cgd1.Cgd1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Cgd1.Cgd1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Cgd1.Cgd1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Cgd1.Cgd1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.Cgd1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.Cgd1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.Cgd1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.Cgd1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.Cgd1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Cgd1.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Cgd1.Cgd1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Cgd1.Cgd1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn2.Cgd1.Cgd1.pi = 3.14159265358979;
//   constant Real Nand1.Mn2.Cgd1.Cgd1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.Cgd1.Cgd1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn2.Cgd1.Cgd1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.Cgd1.Cgd1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn2.Cgd1.Cgd1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Cgd1.Cgd1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Cgd1.Cgd1.c0 = 0.0631353;
//   constant Real Nand1.Mn2.Cgd1.Cgd1.c1 = 0.8013292;
//   constant Real Nand1.Mn2.Cgd1.Cgd1.c2 = -0.01110777;
//   parameter Integer Nand1.Mn2.Cgd1.Cgd1.Level = Nand1.Mn2.Cgd1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Cgd1.Cgd1.Type = Nand1.Mn2.Cgd1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgd1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.Cgd1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.Cgd1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgd1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.COX(unit = \"F/m2\") = Nand1.Mn2.Cgd1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.NFS(unit = \"1/m2\") = Nand1.Mn2.Cgd1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Cgd1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Cgd1.L \"Channel length\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Cgd1.W \"Channel width\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Cgd1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.XD(unit = \"m/V^0.5\") = Nand1.Mn2.Cgd1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.XQC = Nand1.Mn2.Cgd1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.DELTA = Nand1.Mn2.Cgd1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.ETA = Nand1.Mn2.Cgd1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.CGD0(unit = \"F/m\") = Nand1.Mn2.Cgd1.CGD0 \"Gate-drain overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.Cgd1.Cgd1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgd1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn2.Cgd1.Cgd1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mn2.Cgd1.Cgd1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mn2.Cgd1.Cgd1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mn2.Cgd1.Cgd1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn2.Cgd1.Cgd1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mn2.Cgd1.Cgd1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mn2.Cgd1.Cgd1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mn2.Cgd1.Cgd1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mn2.Cgd1.Cgd1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mn2.Cgd1.Cgd1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mn2.Cgd1.Cgd1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.sig \"sign(vds)\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.N \"Current emission coefficient\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.Fs \"Short channel working function\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mn2.Cgd1.Cgd1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgd1.Cgd1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgd1.Cgd1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgd1.Cgd1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mn2.Cgd1.Cgd1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.WSfac;
//   protected Real Nand1.Mn2.Cgd1.Cgd1.WDfac;
//   protected Real Nand1.Mn2.Cgd1.Cgd1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mn2.Cgd1.Cgd1.WcXJ \"WC/XJ\";
//   input Real Nand1.Mn2.Cgd1.Cgd1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn2.Cgd1.Cgd1.u2 \"Connector of Real input signal 2\";
//   input Real Nand1.Mn2.Cgd1.Cgd1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.Cgd1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.Cgd1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.Cgd1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgd1.Cgd1.u[5] \"Connector of Real input signals\";
//   protected parameter Real Nand1.Mn2.Cgd1.Cgd1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mn2.Cgd1.Cgd1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mn2.Cgd1.Cgd1.W * (Nand1.Mn2.Cgd1.Cgd1.L * Nand1.Mn2.Cgd1.Cgd1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mn2.Cgd1.Cgd1.SIGMA = (8.15e-22 * (Nand1.Mn2.Cgd1.Cgd1.ETA * Nand1.Mn2.Cgd1.Cgd1.L ^ -3.0)) / Nand1.Mn2.Cgd1.Cgd1.COX;
//   protected parameter Real Nand1.Mn2.Cgd1.Cgd1.Fn = (3.14159265358979 * (Nand1.Mn2.Cgd1.Cgd1.es * Nand1.Mn2.Cgd1.Cgd1.DELTA)) / (Nand1.Mn2.Cgd1.Cgd1.W * Nand1.Mn2.Cgd1.Cgd1.COX * 2.0);
//   output Real Nand1.Mn2.Cgd1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Cgd1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Cgd1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Cgd1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Cgd1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Cgd1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Cgd1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Cgd1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgd1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgd1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgd1.B3.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Cgb1.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.Mn2.Cgb1.enforceStates = Nand1.Mn2.enforceStates \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.Mn2.Cgb1.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.Mn2.Cgb1.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Cgb1.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Cgb1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgb1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgb1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgb1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Cgb1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Cgb1.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Cgb1.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Integer Nand1.Mn2.Cgb1.Level = Nand1.Mn2.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Cgb1.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Cgb1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.VFBeff \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn2.Cgb1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.KPeff \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Cgb1.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.GAMMAeff \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Cgb1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.PHIeff \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Cgb1.COX(unit = \"F/m2\") = Nand1.Mn2.COXeff \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Cgb1.NFS(unit = \"1/m2\") = Nand1.Mn2.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Cgb1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Cgb1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Leff \"Channel length\";
//   parameter Real Nand1.Mn2.Cgb1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Weff \"Channel width\";
//   parameter Real Nand1.Mn2.Cgb1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.LDeff \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Cgb1.XD(unit = \"m/V^0.5\") = Nand1.Mn2.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Cgb1.XQC = Nand1.Mn2.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn2.Cgb1.DELTA = Nand1.Mn2.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgb1.ETA = Nand1.Mn2.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgb1.CGB0(unit = \"F/m\") = Nand1.Mn2.CGB0eff \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.Cgb1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.EGeff \"Energy gap for temperature effect on saturation current at 0 K\";
//   input Real Nand1.Mn2.Cgb1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Base-source voltage\";
//   input Real Nand1.Mn2.Cgb1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   input Real Nand1.Mn2.Cgb1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.u[5] \"Connector of Real input signals\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgb1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgb1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Cgb1.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Cgb1.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.Cgb1.e1(start = Nand1.Mn2.Cgb1.u0) \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Cgb1.Cgb1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Cgb1.Cgb1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Cgb1.Cgb1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Cgb1.Cgb1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.Cgb1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.Cgb1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.Cgb1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.Cgb1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.Cgb1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Cgb1.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Cgb1.Cgb1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Cgb1.Cgb1.DTempSq \"Square of DTemp\";
//   constant Real Nand1.Mn2.Cgb1.Cgb1.pi = 3.14159265358979;
//   constant Real Nand1.Mn2.Cgb1.Cgb1.k(quantity = \"Entropy\", unit = \"J/K\") = 1.3806505e-23 \"Boltzmann's constant\";
//   constant Real Nand1.Mn2.Cgb1.Cgb1.e0(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 8.85418781762039e-12 \"Permittivity of free space\";
//   constant Real Nand1.Mn2.Cgb1.Cgb1.q(quantity = \"ElectricCharge\", unit = \"C\") = 1.6021892e-19 \"Electron charge\";
//   constant Real Nand1.Mn2.Cgb1.Cgb1.ks = 11.8 \"Dielectric constant of Si\";
//   constant Real Nand1.Mn2.Cgb1.Cgb1.GapC1(unit = \"V/K\") = 0.000702 \"First bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Cgb1.Cgb1.GapC2(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 1108.0 \"Second bandgap correction factor Silicon\";
//   constant Real Nand1.Mn2.Cgb1.Cgb1.c0 = 0.0631353;
//   constant Real Nand1.Mn2.Cgb1.Cgb1.c1 = 0.8013292;
//   constant Real Nand1.Mn2.Cgb1.Cgb1.c2 = -0.01110777;
//   parameter Integer Nand1.Mn2.Cgb1.Cgb1.Level = Nand1.Mn2.Cgb1.Level \"Level of MOS model (check documentation window for details)\";
//   parameter Integer Nand1.Mn2.Cgb1.Cgb1.Type = Nand1.Mn2.Cgb1.Type \"Type=1 for NMOS; Type=-1 for PMOS\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgb1.VFB \"Flat band voltage at reference temperature\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.KP(quantity = \"Transconductance\", unit = \"A/(V*V)\") = Nand1.Mn2.Cgb1.KP \"Transconductance parameter at reference temperature\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.GAMMA(unit = \"V^0.5\") = Nand1.Mn2.Cgb1.GAMMA \"Body-effect parameter\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.PHI(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgb1.PHI \"Surface inversion potential at reference temperature\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.COX(unit = \"F/m2\") = Nand1.Mn2.Cgb1.COX \"Specific capacitance of SiO2\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.NFS(unit = \"1/m2\") = Nand1.Mn2.Cgb1.NFS \"Surface fast state density\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.XJ(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Cgb1.XJ \"Metallurgical junction depth\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.L(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Cgb1.L \"Channel length\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.W(quantity = \"Length\", unit = \"m\", min = 0.0) = Nand1.Mn2.Cgb1.W \"Channel width\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.LD(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.Cgb1.LD \"Lateral diffusion\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.XD(unit = \"m/V^0.5\") = Nand1.Mn2.Cgb1.XD \"Depletion factor\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.XQC = Nand1.Mn2.Cgb1.XQC \"Coefficient of channel charge share\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.DELTA = Nand1.Mn2.Cgb1.DELTA \"Width effect on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.ETA = Nand1.Mn2.Cgb1.ETA \"Static feedback on threshold voltage\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.CGB0(unit = \"F/m\") = Nand1.Mn2.Cgb1.CGB0 \"Gate-bulk overlap capacitance per meter\";
//   parameter Real Nand1.Mn2.Cgb1.Cgb1.EG(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Cgb1.EG \"Energy gap for temperature effect on saturation current at 0 K\";
//   Real Nand1.Mn2.Cgb1.Cgb1.vds(quantity = \"ElectricPotential\", unit = \"V\") \"Drain-source voltage\";
//   Real Nand1.Mn2.Cgb1.Cgb1.vgs(quantity = \"ElectricPotential\", unit = \"V\") \"Gate-source voltage\";
//   Real Nand1.Mn2.Cgb1.Cgb1.vbs(quantity = \"ElectricPotential\", unit = \"V\") \"Bulk-source voltage\";
//   Real Nand1.Mn2.Cgb1.Cgb1.Vt(quantity = \"ElectricPotential\", unit = \"V\") \"Thermal voltage\";
//   Real Nand1.Mn2.Cgb1.Cgb1.EGref(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at reference temperature\";
//   Real Nand1.Mn2.Cgb1.Cgb1.EGval(quantity = \"ElectricPotential\", unit = \"V\") \"Energy gap at device temperature\";
//   Real Nand1.Mn2.Cgb1.Cgb1.PHIval(quantity = \"ElectricPotential\", unit = \"V\") \"Surface inversion potential at device temperature\";
//   Real Nand1.Mn2.Cgb1.Cgb1.Vfb(quantity = \"ElectricPotential\", unit = \"V\") \"Flat band voltage at device temperature\";
//   Real Nand1.Mn2.Cgb1.Cgb1.Vth(quantity = \"ElectricPotential\", unit = \"V\") \"Threshold voltage\";
//   Real Nand1.Mn2.Cgb1.Cgb1.Von(quantity = \"ElectricPotential\", unit = \"V\") \"Adjusted threshold voltage\";
//   Real Nand1.Mn2.Cgb1.Cgb1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Gate capacitance between gate and bulk\";
//   input Real Nand1.Mn2.Cgb1.Cgb1.u[1] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.Cgb1.u[2] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.Cgb1.u[3] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.Cgb1.u[4] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.Cgb1.u[5] \"Connector of Real input signals\";
//   input Real Nand1.Mn2.Cgb1.Cgb1.u1 \"Connector of Real input signal 1\";
//   input Real Nand1.Mn2.Cgb1.Cgb1.u2 \"Connector of Real input signal 2\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.sig \"sign(vds)\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.RTemp \"Temperature quotient\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.facTemp \"Temperature coefficient\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.WD(quantity = \"Length\", unit = \"m\") \"Width of drain depletion region\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.WS(quantity = \"Length\", unit = \"m\") \"Width of source depletion region\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.Wp(quantity = \"Length\", unit = \"m\") \"Width of depleted region in flat source junction\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.Wc(quantity = \"Length\", unit = \"m\") \"Width of depleted region in source substrate junction\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.KPval(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance parameter at device temperature\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.BETA(quantity = \"Transconductance\", unit = \"A/(V*V)\") \"Transconductance at device temperature\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.CB \"Specific capacitance of depletion area\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.N \"Current emission coefficient\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.GAMMAval(unit = \"V^0.5\") \"Adjusted body effect parameter\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.Fs \"Short channel working function\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.Vbody(quantity = \"ElectricPotential\", unit = \"V\");
//   protected Real Nand1.Mn2.Cgb1.Cgb1.PHIroot(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgb1.Cgb1.Sarg(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgb1.Cgb1.Barg(unit = \"V^0.5\");
//   protected Real Nand1.Mn2.Cgb1.Cgb1.PHI3(unit = \"V^1.5\");
//   protected Real Nand1.Mn2.Cgb1.Cgb1.DSarg(unit = \"1/V^0.5\") \"der(Sarg,vbs)\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.DBarg(unit = \"1/V^0.5\") \"der(Barg,vbs)\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.DGAMMA(unit = \"1/V^0.5\") \"der(GAMMAval,vbs)\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.WSfac;
//   protected Real Nand1.Mn2.Cgb1.Cgb1.WDfac;
//   protected Real Nand1.Mn2.Cgb1.Cgb1.WpXJ \"WP/XJ\";
//   protected Real Nand1.Mn2.Cgb1.Cgb1.WcXJ \"WC/XJ\";
//   protected parameter Real Nand1.Mn2.Cgb1.Cgb1.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of Si\";
//   protected parameter Real Nand1.Mn2.Cgb1.Cgb1.COXval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.Mn2.Cgb1.Cgb1.W * (Nand1.Mn2.Cgb1.Cgb1.L * Nand1.Mn2.Cgb1.Cgb1.COX) \"Capacitance of SiO2 layer\";
//   protected parameter Real Nand1.Mn2.Cgb1.Cgb1.SIGMA = (8.15e-22 * (Nand1.Mn2.Cgb1.Cgb1.ETA * Nand1.Mn2.Cgb1.Cgb1.L ^ -3.0)) / Nand1.Mn2.Cgb1.Cgb1.COX;
//   protected parameter Real Nand1.Mn2.Cgb1.Cgb1.Fn = (3.14159265358979 * (Nand1.Mn2.Cgb1.Cgb1.es * Nand1.Mn2.Cgb1.Cgb1.DELTA)) / (Nand1.Mn2.Cgb1.Cgb1.W * Nand1.Mn2.Cgb1.Cgb1.COX * 2.0);
//   output Real Nand1.Mn2.Cgb1.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Cgb1.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Cgb1.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Cgb1.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Cgb1.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Cgb1.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Cgb1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Cgb1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Cgb1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Cgb1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Cgb1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Vds.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Vds.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vds.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Vds.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vds.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn2.Vds.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn2.Vds.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Vds.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Vds.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Vds.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Vds.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Vds.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vds.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Vds.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vds.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Vds.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Vds.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Vds.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn2.Vds.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn2.Vds.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vds.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vds.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vds.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Vbs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Vbs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vbs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Vbs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vbs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   output Real Nand1.Mn2.Vbs.V(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage sensor\";
//   Real Nand1.Mn2.Vbs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Vbs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Vbs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Vbs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Vbs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Vbs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vbs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Vbs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Vbs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Vbs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.De1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Vbs.De1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Vbs.De1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.De1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.De1.BondCon1.d \"Directional variable\";
//   output Real Nand1.Mn2.Vbs.De1.OutPort1 \"Connector of Real output signal\";
//   Real Nand1.Mn2.Vbs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Vbs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Vbs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Vbs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Rd.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Rd.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rd.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Rd.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rd.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Rd.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Rd.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Rd.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Rd.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.RD \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Rd.TR1(unit = \"1/K\") = Nand1.Mn2.TRD1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Rd.TR2(unit = \"1/K2\") = Nand1.Mn2.TRD2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mn2.Rd.Level = Nand1.Mn2.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mn2.Rd.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Rd.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Rd.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Rd.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Rd.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Rd.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rd.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Rd.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rd.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Rd.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Rd.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Rd.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Rd.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Rd.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Rd.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Rd.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Rd.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Rd.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Rd.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Rd.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Rd.RM1.TR1(unit = \"1/K\") = Nand1.Mn2.Rd.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Rd.RM1.TR2(unit = \"1/K2\") = Nand1.Mn2.Rd.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mn2.Rd.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mn2.Rd.RM1.Level = Nand1.Mn2.Rd.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mn2.Rd.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Rd.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Rd.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Rd.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Rd.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Rd.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Rd.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rd.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rd.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rd.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Rd.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Rs.v(quantity = \"ElectricPotential\", unit = \"V\") \"Voltage drop between the two pins\";
//   Real Nand1.Mn2.Rs.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.Mn2.Rs.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rs.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Rs.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rs.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.Mn2.Rs.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Rs.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.Mn2.Rs.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.Rs.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.RS \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Rs.TR1(unit = \"1/K\") = Nand1.Mn2.TRS1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Rs.TR2(unit = \"1/K2\") = Nand1.Mn2.TRS2 \"Quadratic temperature coefficient\";
//   parameter Integer Nand1.Mn2.Rs.Level = Nand1.Mn2.Level \"MOSFET modeling level (check documentation window for details)\";
//   Real Nand1.Mn2.Rs.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Rs.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Rs.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Rs.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Rs.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Rs.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rs.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Rs.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Mn2.Rs.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Mn2.Rs.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.BG2El1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.RM1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Rs.RM1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Rs.RM1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Rs.RM1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Rs.RM1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.RM1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.RM1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.RM1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.RM1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.RM1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.Mn2.Rs.RM1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Rs.Tnom \"Reference temperature\";
//   Real Nand1.Mn2.Rs.RM1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.Mn2.Rs.RM1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.Mn2.Rs.RM1.R(quantity = \"Resistance\", unit = \"Ohm\") = Nand1.Mn2.Rs.R \"Resistance at reference temperature\";
//   parameter Real Nand1.Mn2.Rs.RM1.TR1(unit = \"1/K\") = Nand1.Mn2.Rs.TR1 \"Linear temperature coefficient\";
//   parameter Real Nand1.Mn2.Rs.RM1.TR2(unit = \"1/K2\") = Nand1.Mn2.Rs.TR2 \"Quadratic temperature coefficient\";
//   Real Nand1.Mn2.Rs.RM1.Rval(quantity = \"Resistance\", unit = \"Ohm\") \"Resistance value at circuit temperature\";
//   parameter Integer Nand1.Mn2.Rs.RM1.Level = Nand1.Mn2.Rs.Level \"MOSFET modeling level (check documentation window for details)\";
//   output Real Nand1.Mn2.Rs.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.Rs.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Rs.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.Mn2.Rs.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.Rs.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.Rs.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.Rs.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Rs.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Rs.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Rs.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Rs.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.T_nom.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.T_nom.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.T_nom.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.T_nom.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.T_nom.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.T_nom.Tabs.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.T_nom.Tabs.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.T_nom.Tabs.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.T_nom.Tabs.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.T_nom.Tabs.BondCon1.d \"Directional variable\";
//   input Real Nand1.Mn2.T_nom.Tabs.s \"Signal input\";
//   Real Nand1.Mn2.T_nom.Tabs.e0 \"Bondgraphic Effort Source\";
//   input Real Nand1.Mn2.T_nom.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Mn2.T_nom.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.T_nom.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Mn2.T_nom.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Mn2.T_nom.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Mn2.T_nom.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Mn2.T_nom.port.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.T_nom.port.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.Mn2.T_nom.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.Mn2.Tnom \"Fixed temperature at port\";
//   Real Nand1.Mn2.Sw1.p.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Sw1.p.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Sw1.n1.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Sw1.n1.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Sw1.n2.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Sw1.n2.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   input Boolean Nand1.Mn2.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Heat2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Heat2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Heat2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Heat2BG1.port_a.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Sw1.Heat2BG1.port_a.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Sw1.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Sw1.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Sw1.BG2Heat2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.BG2Heat2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.BG2Heat2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.BG2Heat2.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.Mn2.Sw1.BG2Heat2.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   Real Nand1.Mn2.Sw1.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.p.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.n2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.Mn2.Sw1.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.Mn2.Sw1.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.Mn2.Sw1.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.Mn2.Sw1.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.Mn2.Sw1.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.Mn2.Sw1.Sw1.B3.BondCon2.d \"Directional variable\";
//   protected parameter Integer Nand1.Mn2.Type = 1 \"Type=1 for NMOS; Type=-1 for PMOS\";
//   protected parameter Real Nand1.Mn2.U0def(unit = \"m2/(V.s)\") = 0.06;
//   protected parameter Real Nand1.Mn2.eox(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 3.45313324887195e-11 \"Permittivity of SiO2\";
//   protected parameter Real Nand1.Mn2.es(quantity = \"Permittivity\", unit = \"F/m\", min = 0.0) = 1.04479416247921e-10 \"Permittivity of silicon\";
//   parameter Real Nand1.Mn2.TOX(quantity = \"Length\", unit = \"m\") = 1e-07 \"Thin oxide thickness\";
//   protected parameter Real Nand1.Mn2.LDeff(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.LD;
//   protected parameter Real Nand1.Mn2.Weff(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.W + -2.0 * Nand1.Mn2.WD;
//   protected parameter Real Nand1.Mn2.GAMMAtmp(unit = \"V^0.5\") = if Nand1.Mn2.GAMMA == 0.0 and Nand1.Mn2.NSUB == 0.0 then 0.35 else Nand1.Mn2.GAMMA;
//   protected parameter Real Nand1.Mn2.VTref(quantity = \"ElectricPotential\", unit = \"V\") = 8.61727503842867e-05 * Nand1.Mn2.Tnom \"Thermal voltage at reference temperature\";
//   protected parameter Real Nand1.Mn2.EGref(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.EG + (-0.000702 * Nand1.Mn2.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Tnom) \"Energy gap for temperature effect on saturation current at reference temperature\";
//   protected parameter Real Nand1.Mn2.ISDeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mn2.ISD > 0.0 then Nand1.Mn2.ISD else if Nand1.Mn2.AD * Nand1.Mn2.JS > 0.0 then Nand1.Mn2.AD * Nand1.Mn2.JS else 1e-15;
//   protected parameter Real Nand1.Mn2.ISSeff(quantity = \"ElectricCurrent\", unit = \"A\") = if Nand1.Mn2.ISS > 0.0 then Nand1.Mn2.ISS else if Nand1.Mn2.AS * Nand1.Mn2.JS > 0.0 then Nand1.Mn2.AS * Nand1.Mn2.JS else 1e-15;
//   protected parameter Real Nand1.Mn2.CGB0eff(unit = \"F/m\") = Nand1.Mn2.CGB0;
//   protected parameter Real Nand1.Mn2.CGD0eff(unit = \"F/m\") = Nand1.Mn2.CGD0;
//   protected parameter Real Nand1.Mn2.CGS0eff(unit = \"F/m\") = Nand1.Mn2.CGS0;
//   protected parameter Real Nand1.Mn2.U0tmp(unit = \"m2/(V.s)\") = if Nand1.Mn2.KP == 0.0 and Nand1.Mn2.U0 == 0.0 then Nand1.Mn2.U0def else Nand1.Mn2.U0;
//   protected parameter Real Nand1.Mn2.TOXeff(quantity = \"Length\", unit = \"m\") = if Nand1.Mn2.TOX == 1e-07 and Nand1.Mn2.COX > 0.0 then Nand1.Mn2.eox / Nand1.Mn2.COX else Nand1.Mn2.TOX;
//   protected parameter Real Nand1.Mn2.COXeff(unit = \"F/m2\") = if Nand1.Mn2.COX > 0.0 then Nand1.Mn2.COX else Nand1.Mn2.eox / Nand1.Mn2.TOX;
//   protected parameter Real Nand1.Mn2.Leff(quantity = \"Length\", unit = \"m\") = Nand1.Mn2.L + -2.0 * Nand1.Mn2.LDeff;
//   protected parameter Real Nand1.Mn2.XNI(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = 1.45e+16 * ((Nand1.Mn2.Tnom / 300.0) ^ 1.5 * exp(5802.2982644775 * (Nand1.Mn2.EGref * (0.00333333333333333 + -1.0 / Nand1.Mn2.Tnom)))) \"Intrinsic carrier concentration at reference temperature\";
//   protected parameter Real Nand1.Mn2.FermiG(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mn2.Type) * (Nand1.Mn2.TPG * Nand1.Mn2.EGref)) / 2.0;
//   protected parameter Real Nand1.Mn2.EGeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mn2.Level == 3 and Nand1.Mn2.EG == 0.0 then 0.2 else Nand1.Mn2.EGref;
//   protected parameter Real Nand1.Mn2.KPeff(quantity = \"Transconductance\", unit = \"A/(V*V)\") = if Nand1.Mn2.KP > 0.0 then Nand1.Mn2.KP else Nand1.Mn2.U0tmp * Nand1.Mn2.COXeff;
//   protected parameter Real Nand1.Mn2.U0eff(unit = \"m2/(V.s)\") = if Nand1.Mn2.KP > 0.0 and Nand1.Mn2.U0 == 0.0 then Nand1.Mn2.KP / Nand1.Mn2.COXeff else Nand1.Mn2.U0tmp;
//   protected parameter Real Nand1.Mn2.NSUBeff(quantity = \"ElectronNumberDensity\", unit = \"m-3\") = if Nand1.Mn2.NSUB > 0.0 then Nand1.Mn2.NSUB else (Nand1.Mn2.GAMMAtmp * Nand1.Mn2.COXeff) ^ 2.0 / (Nand1.Mn2.es * 3.2043784e-19);
//   protected parameter Real Nand1.Mn2.GAMMAeff(unit = \"V^0.5\") = if Nand1.Mn2.GAMMA == 0.0 and Nand1.Mn2.NSUB > 0.0 then sqrt(3.2043784e-19 * (Nand1.Mn2.es * Nand1.Mn2.NSUB)) / Nand1.Mn2.COXeff else Nand1.Mn2.GAMMAtmp;
//   protected parameter Real Nand1.Mn2.VBP(quantity = \"ElectricPotential\", unit = \"V\") = (Nand1.Mn2.UCRIT * Nand1.Mn2.es) / Nand1.Mn2.COXeff \"Gate to channel critical voltage\";
//   protected parameter Real Nand1.Mn2.PHIeff(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mn2.PHI > 0.0 then Nand1.Mn2.PHI else if Nand1.Mn2.NSUB > 0.0 then max(2.0 * (Nand1.Mn2.VTref * log(Nand1.Mn2.NSUB / Nand1.Mn2.XNI)),0.1) else 0.6;
//   protected parameter Real Nand1.Mn2.Fn1(quantity = \"ElectricPotential\", unit = \"V\") = if Nand1.Mn2.TPG == 0.0 then 3.2 else 3.25 + (Nand1.Mn2.EGref / 2.0 - Nand1.Mn2.FermiG);
//   protected parameter Real Nand1.Mn2.LAMBDAeff(quantity = \"InversePotential\", unit = \"1/V\") = if Nand1.Mn2.LAMBDA > 0.0 then Nand1.Mn2.LAMBDA else if Nand1.Mn2.Level <> 2 then sqrt((2.0 * Nand1.Mn2.es) / (Nand1.Mn2.NSUBeff * 1.6021892e-19)) else Nand1.Mn2.LAMBDA;
//   protected parameter Real Nand1.Mn2.XD(unit = \"m/V^0.5\") = sqrt((2.0 * Nand1.Mn2.es) / (Nand1.Mn2.NSUBeff * 1.6021892e-19)) \"Depletion factor\";
//   protected parameter Real Nand1.Mn2.CJeff(unit = \"F/m2\") = if Nand1.Mn2.CJ > 0.0 then Nand1.Mn2.CJ else sqrt((1.6021892e-19 * (Nand1.Mn2.es * Nand1.Mn2.NSUBeff)) / (Nand1.Mn2.PB * 2.0));
//   protected parameter Real Nand1.Mn2.FermiS(quantity = \"ElectricPotential\", unit = \"V\") = (Real(Nand1.Mn2.Type) * Nand1.Mn2.PHIeff) / 2.0;
//   protected parameter Real Nand1.Mn2.Vcorr(quantity = \"ElectricPotential\", unit = \"V\") = Real(Nand1.Mn2.Type) * (Nand1.Mn2.GAMMAeff * sqrt(Nand1.Mn2.PHIeff) + Nand1.Mn2.PHIeff);
//   protected parameter Real Nand1.Mn2.Fn2(quantity = \"ElectricPotential\", unit = \"V\") = -3.25 + (Nand1.Mn2.Fn1 + ((-Nand1.Mn2.EGref) / 2.0 - Nand1.Mn2.FermiS));
//   protected parameter Real Nand1.Mn2.VFB(quantity = \"ElectricPotential\", unit = \"V\") = Nand1.Mn2.Fn2 + (-1.6021892e-19 * Nand1.Mn2.NSS) / Nand1.Mn2.COXeff;
//   protected parameter Real Nand1.Mn2.VT0eff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mn2.Type) * Nand1.Mn2.VT0 > 0.0 then Nand1.Mn2.VT0 else Nand1.Mn2.VFB + Nand1.Mn2.Vcorr;
//   protected parameter Real Nand1.Mn2.VFBeff(quantity = \"ElectricPotential\", unit = \"V\") = if Real(Nand1.Mn2.Type) * Nand1.Mn2.VT0 > 0.0 then Nand1.Mn2.VT0 - Nand1.Mn2.Vcorr else Nand1.Mn2.VFB;
//   Real Nand1.Gnd1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Gnd1.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Gnd1.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd1.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Gnd1.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Gnd1.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd1.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Gnd1.V0.e \"Bondgraphic effort\";
//   Real Nand1.Gnd1.V0.f \"Bondgraphic flow\";
//   Real Nand1.Gnd1.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd1.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd1.V0.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Gnd1.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Nand1.Gnd1.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd1.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Gnd1.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd1.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd1.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Gnd2.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd2.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Gnd2.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Gnd2.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd2.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Gnd2.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Gnd2.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd2.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Gnd2.V0.e \"Bondgraphic effort\";
//   Real Nand1.Gnd2.V0.f \"Bondgraphic flow\";
//   Real Nand1.Gnd2.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd2.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd2.V0.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Gnd2.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Nand1.Gnd2.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd2.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Gnd2.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd2.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd2.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Gnd3.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd3.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Gnd3.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Gnd3.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd3.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Gnd3.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Gnd3.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd3.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Gnd3.V0.e \"Bondgraphic effort\";
//   Real Nand1.Gnd3.V0.f \"Bondgraphic flow\";
//   Real Nand1.Gnd3.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd3.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd3.V0.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Gnd3.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Nand1.Gnd3.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd3.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Gnd3.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd3.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd3.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.Gnd4.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd4.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   input Real Nand1.Gnd4.B1.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.Gnd4.B1.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd4.B1.eBondCon1.d \"Direction variable\";
//   output Real Nand1.Gnd4.B1.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.Gnd4.B1.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.Gnd4.B1.fBondCon1.d \"Direction variable\";
//   Real Nand1.Gnd4.V0.e \"Bondgraphic effort\";
//   Real Nand1.Gnd4.V0.f \"Bondgraphic flow\";
//   Real Nand1.Gnd4.V0.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd4.V0.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd4.V0.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.Gnd4.V0.e0 = 0.0 \"Bondgraphic Effort Source\";
//   Real Nand1.Gnd4.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.Gnd4.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.Gnd4.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.Gnd4.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.Gnd4.El2BG1.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.C4.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.C4.enforceStates = true \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.C4.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.C4.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.C4.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.C4.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C4.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.C4.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C4.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.C4.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real Nand1.C4.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.C4.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.C4.C(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = 4e-14 \"Capacitance at reference temperature\";
//   parameter Real Nand1.C4.TC1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.C4.TC2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.C4.Area = 1.0 \"Relative area occupied by capacitor\";
//   Real Nand1.C4.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.C4.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.C4.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.C4.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.C4.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.C4.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.C4.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.C4.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C4.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.C4.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C4.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.C4.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.C4.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.C4.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C4.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.C4.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.C4.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C4.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.C4.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.C4.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.C4.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.C4.T_nom.e0 = Nand1.C4.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.C4.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.C1.e1(start = Nand1.C4.u0) \"Bondgraphic primary effort\";
//   Real Nand1.C4.C1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.C4.C1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.C4.C1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.C4.C1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.C1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.C1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.C1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.C1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.C1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.C4.C1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.C4.Tnom \"Reference temperature\";
//   Real Nand1.C4.C1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.C4.C1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.C4.C1.C(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.C4.C \"Capacitance at reference temperature\";
//   parameter Real Nand1.C4.C1.TC1(unit = \"1/K\") = Nand1.C4.TC1 \"Linear temperature coefficient\";
//   parameter Real Nand1.C4.C1.TC2(unit = \"1/K2\") = Nand1.C4.TC2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.C4.C1.Area = Nand1.C4.Area \"Relative area occupied by capacitor\";
//   Real Nand1.C4.C1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Capacitance value at circuit temperature\";
//   output Real Nand1.C4.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.C4.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C4.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.C4.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.C4.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C4.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.C4.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.p.d \"Directional variable\";
//   Real Nand1.C4.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.n2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.C4.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.C4.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.C4.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.C4.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.C4.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.C4.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.C4.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.C4.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.C4.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.C4.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.C4.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.C4.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.C4.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.C4.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.C4.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.C4.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.C4.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.C4.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.C4.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.C4.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.C4.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.C4.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.C4.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.C4.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.C4.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.C4.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.C4.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.C4.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.C4.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.C4.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C4.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.C4.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.C4.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C4.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.C4.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C4.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C4.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.C4.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.C4.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.C7.u0(quantity = \"ElectricPotential\", unit = \"V\") = 0.0 \"Initial voltage across capacitor\";
//   parameter Boolean Nand1.C7.enforceStates = true \"Use electrical variables as states instead of bond graph variables\";
//   Real Nand1.C7.v(quantity = \"ElectricPotential\", unit = \"V\", start = Nand1.C7.u0, StateSelect = StateSelect.prefer) \"Voltage drop between the two pins\";
//   Real Nand1.C7.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing from pin p to pin n\";
//   Real Nand1.C7.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C7.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.C7.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C7.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   parameter Real Nand1.C7.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = 300.15 \"Reference temperature\";
//   Real Nand1.C7.heatPort.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0, start = 300.15) \"Port temperature\";
//   Real Nand1.C7.heatPort.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
//   parameter Real Nand1.C7.C(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = 4e-14 \"Capacitance at reference temperature\";
//   parameter Real Nand1.C7.TC1(unit = \"1/K\") = 0.0 \"Linear temperature coefficient\";
//   parameter Real Nand1.C7.TC2(unit = \"1/K2\") = 0.0 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.C7.Area = 1.0 \"Relative area occupied by capacitor\";
//   Real Nand1.C7.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.C7.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.C7.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.C7.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.C7.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.C7.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.C7.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.C7.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.El2BG1.p.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C7.El2BG1.p.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.C7.El2BG1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.El2BG1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.El2BG1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.BG2El1.n.v(quantity = \"ElectricPotential\", unit = \"V\") \"Potential at the pin\";
//   Real Nand1.C7.BG2El1.n.i(quantity = \"ElectricCurrent\", unit = \"A\") \"Current flowing into the pin\";
//   Real Nand1.C7.BG2El1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.BG2El1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.BG2El1.BondCon1.d \"Directional variable\";
//   input Real Nand1.C7.B6.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.C7.B6.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C7.B6.eBondCon1.d \"Direction variable\";
//   output Real Nand1.C7.B6.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.C7.B6.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C7.B6.fBondCon1.d \"Direction variable\";
//   Real Nand1.C7.T_nom.e \"Bondgraphic effort\";
//   Real Nand1.C7.T_nom.f \"Bondgraphic flow\";
//   Real Nand1.C7.T_nom.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.T_nom.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.T_nom.BondCon1.d \"Directional variable\";
//   parameter Real Nand1.C7.T_nom.e0 = Nand1.C7.Tnom \"Bondgraphic Effort Source\";
//   Real Nand1.C7.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.B3.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.C1.e1(start = Nand1.C7.u0) \"Bondgraphic primary effort\";
//   Real Nand1.C7.C1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.C7.C1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.C7.C1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.C7.C1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.C1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.C1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.C1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.C1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.C1.BondCon2.d \"Directional variable\";
//   parameter Real Nand1.C7.C1.Tnom(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) = Nand1.C7.Tnom \"Reference temperature\";
//   Real Nand1.C7.C1.DTemp(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Difference between circuit temperature and reference temperature\";
//   Real Nand1.C7.C1.DTempSq \"Square of DTemp\";
//   parameter Real Nand1.C7.C1.C(quantity = \"Capacitance\", unit = \"F\", min = 0.0) = Nand1.C7.C \"Capacitance at reference temperature\";
//   parameter Real Nand1.C7.C1.TC1(unit = \"1/K\") = Nand1.C7.TC1 \"Linear temperature coefficient\";
//   parameter Real Nand1.C7.C1.TC2(unit = \"1/K2\") = Nand1.C7.TC2 \"Quadratic temperature coefficient\";
//   parameter Real Nand1.C7.C1.Area = Nand1.C7.Area \"Relative area occupied by capacitor\";
//   Real Nand1.C7.C1.Cval(quantity = \"Capacitance\", unit = \"F\", min = 0.0) \"Capacitance value at circuit temperature\";
//   output Real Nand1.C7.B4.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.C7.B4.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C7.B4.fBondCon1.d \"Direction variable\";
//   input Real Nand1.C7.B4.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.C7.B4.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C7.B4.eBondCon1.d \"Direction variable\";
//   Real Nand1.C7.Sw1.p.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.p.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.p.d \"Directional variable\";
//   Real Nand1.C7.Sw1.n2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.n2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.n2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.n1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.n1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.n1.d \"Directional variable\";
//   input Boolean Nand1.C7.Sw1.control \"true => p--n2 connected, false => p--n1 connected\";
//   Real Nand1.C7.Sw1.J1p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.C7.Sw1.J1p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.C7.Sw1.J1p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.C7.Sw1.J1p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.C7.Sw1.J1p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.C7.Sw1.J1p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.J1p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.C7.Sw1.B1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.B1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B1.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.B2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B2.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.B2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B2.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.J0p3_1.e[1] \"Bondgraphic effort vector\";
//   Real Nand1.C7.Sw1.J0p3_1.e[2] \"Bondgraphic effort vector\";
//   Real Nand1.C7.Sw1.J0p3_1.e[3] \"Bondgraphic effort vector\";
//   Real Nand1.C7.Sw1.J0p3_1.f[1] \"Bondgraphic flow vector\";
//   Real Nand1.C7.Sw1.J0p3_1.f[2] \"Bondgraphic flow vector\";
//   Real Nand1.C7.Sw1.J0p3_1.f[3] \"Bondgraphic flow vector\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon3.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon3.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.J0p3_1.BondCon3.d \"Directional variable\";
//   Real Nand1.C7.Sw1.B4.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B4.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B4.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.B4.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B4.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B4.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.j0p2_1.e1 \"Bondgraphic primary effort\";
//   Real Nand1.C7.Sw1.j0p2_1.f1 \"Bondgraphic primary flow\";
//   Real Nand1.C7.Sw1.j0p2_1.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.C7.Sw1.j0p2_1.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.C7.Sw1.j0p2_1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.j0p2_1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.j0p2_1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.j0p2_1.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.j0p2_1.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.j0p2_1.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.j0p2_2.e1 \"Bondgraphic primary effort\";
//   Real Nand1.C7.Sw1.j0p2_2.f1 \"Bondgraphic primary flow\";
//   Real Nand1.C7.Sw1.j0p2_2.e2 \"Bondgraphic secondary effort\";
//   Real Nand1.C7.Sw1.j0p2_2.f2 \"Bondgraphic secondary flow\";
//   Real Nand1.C7.Sw1.j0p2_2.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.j0p2_2.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.j0p2_2.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.j0p2_2.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.j0p2_2.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.j0p2_2.BondCon2.d \"Directional variable\";
//   Real Nand1.C7.Sw1.Sw1.e \"Bondgraphic effort\";
//   Real Nand1.C7.Sw1.Sw1.f \"Bondgraphic flow\";
//   Real Nand1.C7.Sw1.Sw1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.Sw1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.Sw1.BondCon1.d \"Directional variable\";
//   Boolean Nand1.C7.Sw1.Sw1.open \"Switch position\";
//   input Boolean Nand1.C7.Sw1.Sw1.BooleanInPort1 \"Boolean input signal (true if switch is open)\";
//   Real Nand1.C7.Sw1.B3.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B3.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B3.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.Sw1.B3.BondCon2.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.Sw1.B3.BondCon2.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.Sw1.B3.BondCon2.d \"Directional variable\";
//   output Real Nand1.C7.B5.fBondCon1.e \"Bondgraphic effort variable\";
//   input Real Nand1.C7.B5.fBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C7.B5.fBondCon1.d \"Direction variable\";
//   input Real Nand1.C7.B5.eBondCon1.e \"Bondgraphic effort variable\";
//   output Real Nand1.C7.B5.eBondCon1.f \"Bondgraphic flow variable\";
//   output Real Nand1.C7.B5.eBondCon1.d \"Direction variable\";
//   Real Nand1.C7.BG2Heat1.BondCon1.e \"Bondgraphic effort variable\";
//   Real Nand1.C7.BG2Heat1.BondCon1.f \"Bondgraphic flow variable\";
//   Real Nand1.C7.BG2Heat1.BondCon1.d \"Directional variable\";
//   Real Nand1.C7.BG2Heat1.port_b.T(quantity = \"ThermodynamicTemperature\", unit = \"K\", displayUnit = \"degC\", min = 0.0) \"Port temperature\";
//   Real Nand1.C7.BG2Heat1.port_b.Q_flow(quantity = \"Power\", unit = \"W\") \"Heat flow rate (positive if flowing from outside into the component)\";
// equation
//   VDD.El2BG1.BondCon1.e = VDD.El2BG1.p.v;
//   VDD.El2BG1.BondCon1.f = VDD.El2BG1.p.i;
//   VDD.BG2El1.BondCon1.e = VDD.BG2El1.n.v;
//   VDD.BG2El1.BondCon1.f = -VDD.BG2El1.n.i;
//   VDD.J1p3_1.f[2] = VDD.J1p3_1.f[1];
//   VDD.J1p3_1.f[3] = VDD.J1p3_1.f[2];
//   VDD.J1p3_1.e[1] + (VDD.J1p3_1.e[2] + VDD.J1p3_1.e[3]) = 0.0;
//   VDD.J1p3_1.e[1] = VDD.J1p3_1.BondCon1.d * VDD.J1p3_1.BondCon1.e;
//   VDD.J1p3_1.f[1] = VDD.J1p3_1.BondCon1.f;
//   VDD.J1p3_1.e[2] = VDD.J1p3_1.BondCon2.d * VDD.J1p3_1.BondCon2.e;
//   VDD.J1p3_1.f[2] = VDD.J1p3_1.BondCon2.f;
//   VDD.J1p3_1.e[3] = VDD.J1p3_1.BondCon3.d * VDD.J1p3_1.BondCon3.e;
//   VDD.J1p3_1.f[3] = VDD.J1p3_1.BondCon3.f;
//   VDD.B1.BondCon2.e = VDD.B1.BondCon1.e;
//   VDD.B1.BondCon2.f = VDD.B1.BondCon1.f;
//   VDD.B1.BondCon1.d = -1.0;
//   VDD.B1.BondCon2.d = 1.0;
//   VDD.B2.BondCon2.e = VDD.B2.BondCon1.e;
//   VDD.B2.BondCon2.f = VDD.B2.BondCon1.f;
//   VDD.B2.BondCon1.d = -1.0;
//   VDD.B2.BondCon2.d = 1.0;
//   VDD.V1.Ramp1.y = VDD.V1.Ramp1.offset + (if time < VDD.V1.Ramp1.startTime then 0.0 else if time < VDD.V1.Ramp1.startTime + VDD.V1.Ramp1.duration then ((time - VDD.V1.Ramp1.startTime) * VDD.V1.Ramp1.height) / VDD.V1.Ramp1.duration else VDD.V1.Ramp1.height);
//   VDD.V1.e = VDD.V1.Ramp1.y;
//   VDD.V1.e = VDD.V1.BondCon1.e;
//   VDD.V1.f = (-VDD.V1.BondCon1.d) * VDD.V1.BondCon1.f;
//   VDD.B3.fBondCon1.e = VDD.B3.eBondCon1.e;
//   VDD.B3.eBondCon1.f = VDD.B3.fBondCon1.f;
//   VDD.B3.eBondCon1.d = -1.0;
//   VDD.B3.fBondCon1.d = 1.0;
//   VDD.v = VDD.p.v - VDD.n.v;
//   VDD.i = VDD.p.i;
//   Gnd4.B1.fBondCon1.e = Gnd4.B1.eBondCon1.e;
//   Gnd4.B1.eBondCon1.f = Gnd4.B1.fBondCon1.f;
//   Gnd4.B1.eBondCon1.d = -1.0;
//   Gnd4.B1.fBondCon1.d = 1.0;
//   Gnd4.V0.e = Gnd4.V0.e0;
//   Gnd4.V0.e = Gnd4.V0.BondCon1.e;
//   Gnd4.V0.f = (-Gnd4.V0.BondCon1.d) * Gnd4.V0.BondCon1.f;
//   Gnd4.El2BG1.BondCon1.e = Gnd4.El2BG1.p.v;
//   Gnd4.El2BG1.BondCon1.f = Gnd4.El2BG1.p.i;
//   VIN2.El2BG1.BondCon1.e = VIN2.El2BG1.p.v;
//   VIN2.El2BG1.BondCon1.f = VIN2.El2BG1.p.i;
//   VIN2.BG2El1.BondCon1.e = VIN2.BG2El1.n.v;
//   VIN2.BG2El1.BondCon1.f = -VIN2.BG2El1.n.i;
//   VIN2.J1p3_1.f[2] = VIN2.J1p3_1.f[1];
//   VIN2.J1p3_1.f[3] = VIN2.J1p3_1.f[2];
//   VIN2.J1p3_1.e[1] + (VIN2.J1p3_1.e[2] + VIN2.J1p3_1.e[3]) = 0.0;
//   VIN2.J1p3_1.e[1] = VIN2.J1p3_1.BondCon1.d * VIN2.J1p3_1.BondCon1.e;
//   VIN2.J1p3_1.f[1] = VIN2.J1p3_1.BondCon1.f;
//   VIN2.J1p3_1.e[2] = VIN2.J1p3_1.BondCon2.d * VIN2.J1p3_1.BondCon2.e;
//   VIN2.J1p3_1.f[2] = VIN2.J1p3_1.BondCon2.f;
//   VIN2.J1p3_1.e[3] = VIN2.J1p3_1.BondCon3.d * VIN2.J1p3_1.BondCon3.e;
//   VIN2.J1p3_1.f[3] = VIN2.J1p3_1.BondCon3.f;
//   VIN2.B1.BondCon2.e = VIN2.B1.BondCon1.e;
//   VIN2.B1.BondCon2.f = VIN2.B1.BondCon1.f;
//   VIN2.B1.BondCon1.d = -1.0;
//   VIN2.B1.BondCon2.d = 1.0;
//   VIN2.B2.BondCon2.e = VIN2.B2.BondCon1.e;
//   VIN2.B2.BondCon2.f = VIN2.B2.BondCon1.f;
//   VIN2.B2.BondCon1.d = -1.0;
//   VIN2.B2.BondCon2.d = 1.0;
//   when pre(VIN2.V1.Trapezoid1.counter2) <> 0 and sample(VIN2.V1.Trapezoid1.startTime,VIN2.V1.Trapezoid1.period) then
//   VIN2.V1.Trapezoid1.T0 = time;
//   VIN2.V1.Trapezoid1.counter2 = pre(VIN2.V1.Trapezoid1.counter);
//   VIN2.V1.Trapezoid1.counter = pre(VIN2.V1.Trapezoid1.counter) - (if pre(VIN2.V1.Trapezoid1.counter) > 0 then 1 else 0);
//   end when;
//   VIN2.V1.Trapezoid1.y = VIN2.V1.Trapezoid1.offset + (if time < VIN2.V1.Trapezoid1.startTime or VIN2.V1.Trapezoid1.counter2 == 0 or time >= VIN2.V1.Trapezoid1.T0 + VIN2.V1.Trapezoid1.T_falling then 0.0 else if time < VIN2.V1.Trapezoid1.T0 + VIN2.V1.Trapezoid1.T_rising then ((time - VIN2.V1.Trapezoid1.T0) * VIN2.V1.Trapezoid1.amplitude) / VIN2.V1.Trapezoid1.T_rising else if time < VIN2.V1.Trapezoid1.T0 + VIN2.V1.Trapezoid1.T_width then VIN2.V1.Trapezoid1.amplitude else ((VIN2.V1.Trapezoid1.T0 + (VIN2.V1.Trapezoid1.T_falling - time)) * VIN2.V1.Trapezoid1.amplitude) / (VIN2.V1.Trapezoid1.T_falling - VIN2.V1.Trapezoid1.T_width));
//   VIN2.V1.e = VIN2.V1.Trapezoid1.y;
//   VIN2.V1.e = VIN2.V1.BondCon1.e;
//   VIN2.V1.f = (-VIN2.V1.BondCon1.d) * VIN2.V1.BondCon1.f;
//   VIN2.B3.fBondCon1.e = VIN2.B3.eBondCon1.e;
//   VIN2.B3.eBondCon1.f = VIN2.B3.fBondCon1.f;
//   VIN2.B3.eBondCon1.d = -1.0;
//   VIN2.B3.fBondCon1.d = 1.0;
//   VIN2.v = VIN2.p.v - VIN2.n.v;
//   VIN2.i = VIN2.p.i;
//   Gnd5.B1.fBondCon1.e = Gnd5.B1.eBondCon1.e;
//   Gnd5.B1.eBondCon1.f = Gnd5.B1.fBondCon1.f;
//   Gnd5.B1.eBondCon1.d = -1.0;
//   Gnd5.B1.fBondCon1.d = 1.0;
//   Gnd5.V0.e = Gnd5.V0.e0;
//   Gnd5.V0.e = Gnd5.V0.BondCon1.e;
//   Gnd5.V0.f = (-Gnd5.V0.BondCon1.d) * Gnd5.V0.BondCon1.f;
//   Gnd5.El2BG1.BondCon1.e = Gnd5.El2BG1.p.v;
//   Gnd5.El2BG1.BondCon1.f = Gnd5.El2BG1.p.i;
//   Gnd1.B1.fBondCon1.e = Gnd1.B1.eBondCon1.e;
//   Gnd1.B1.eBondCon1.f = Gnd1.B1.fBondCon1.f;
//   Gnd1.B1.eBondCon1.d = -1.0;
//   Gnd1.B1.fBondCon1.d = 1.0;
//   Gnd1.V0.e = Gnd1.V0.e0;
//   Gnd1.V0.e = Gnd1.V0.BondCon1.e;
//   Gnd1.V0.f = (-Gnd1.V0.BondCon1.d) * Gnd1.V0.BondCon1.f;
//   Gnd1.El2BG1.BondCon1.e = Gnd1.El2BG1.p.v;
//   Gnd1.El2BG1.BondCon1.f = Gnd1.El2BG1.p.i;
//   Vnand.J1p3_1.f[2] = Vnand.J1p3_1.f[1];
//   Vnand.J1p3_1.f[3] = Vnand.J1p3_1.f[2];
//   Vnand.J1p3_1.e[1] + (Vnand.J1p3_1.e[2] + Vnand.J1p3_1.e[3]) = 0.0;
//   Vnand.J1p3_1.e[1] = Vnand.J1p3_1.BondCon1.d * Vnand.J1p3_1.BondCon1.e;
//   Vnand.J1p3_1.f[1] = Vnand.J1p3_1.BondCon1.f;
//   Vnand.J1p3_1.e[2] = Vnand.J1p3_1.BondCon2.d * Vnand.J1p3_1.BondCon2.e;
//   Vnand.J1p3_1.f[2] = Vnand.J1p3_1.BondCon2.f;
//   Vnand.J1p3_1.e[3] = Vnand.J1p3_1.BondCon3.d * Vnand.J1p3_1.BondCon3.e;
//   Vnand.J1p3_1.f[3] = Vnand.J1p3_1.BondCon3.f;
//   Vnand.B1.BondCon2.e = Vnand.B1.BondCon1.e;
//   Vnand.B1.BondCon2.f = Vnand.B1.BondCon1.f;
//   Vnand.B1.BondCon1.d = -1.0;
//   Vnand.B1.BondCon2.d = 1.0;
//   Vnand.B2.BondCon2.e = Vnand.B2.BondCon1.e;
//   Vnand.B2.BondCon2.f = Vnand.B2.BondCon1.f;
//   Vnand.B2.BondCon1.d = -1.0;
//   Vnand.B2.BondCon2.d = 1.0;
//   Vnand.El2BG1.BondCon1.e = Vnand.El2BG1.p.v;
//   Vnand.El2BG1.BondCon1.f = Vnand.El2BG1.p.i;
//   Vnand.BG2El1.BondCon1.e = Vnand.BG2El1.n.v;
//   Vnand.BG2El1.BondCon1.f = -Vnand.BG2El1.n.i;
//   Vnand.De1.OutPort1 = Vnand.De1.e;
//   Vnand.De1.f = 0.0;
//   Vnand.De1.e = Vnand.De1.BondCon1.e;
//   Vnand.De1.f = Vnand.De1.BondCon1.d * Vnand.De1.BondCon1.f;
//   Vnand.B3.BondCon2.e = Vnand.B3.BondCon1.e;
//   Vnand.B3.BondCon2.f = Vnand.B3.BondCon1.f;
//   Vnand.B3.BondCon1.d = -1.0;
//   Vnand.B3.BondCon2.d = 1.0;
//   Vnand.v = Vnand.p.v - Vnand.n.v;
//   Vnand.i = Vnand.p.i;
//   Gnd2.B1.fBondCon1.e = Gnd2.B1.eBondCon1.e;
//   Gnd2.B1.eBondCon1.f = Gnd2.B1.fBondCon1.f;
//   Gnd2.B1.eBondCon1.d = -1.0;
//   Gnd2.B1.fBondCon1.d = 1.0;
//   Gnd2.V0.e = Gnd2.V0.e0;
//   Gnd2.V0.e = Gnd2.V0.BondCon1.e;
//   Gnd2.V0.f = (-Gnd2.V0.BondCon1.d) * Gnd2.V0.BondCon1.f;
//   Gnd2.El2BG1.BondCon1.e = Gnd2.El2BG1.p.v;
//   Gnd2.El2BG1.BondCon1.f = Gnd2.El2BG1.p.i;
//   Qtot.Heat2BG1.BondCon1.e = Qtot.Heat2BG1.port_a.T;
//   Qtot.Heat2BG1.BondCon1.e * Qtot.Heat2BG1.BondCon1.f = Qtot.Heat2BG1.port_a.Q_flow;
//   Qtot.BG2Heat1.BondCon1.e = Qtot.BG2Heat1.port_b.T;
//   Qtot.BG2Heat1.BondCon1.e * Qtot.BG2Heat1.BondCon1.f = -Qtot.BG2Heat1.port_b.Q_flow;
//   Qtot.B1.P = Qtot.B1.BondCon1.e * Qtot.B1.BondCon1.f;
//   Qtot.B1.BondCon2.e = Qtot.B1.BondCon1.e;
//   Qtot.B1.BondCon2.f = Qtot.B1.BondCon1.f;
//   Qtot.B1.BondCon1.d = -1.0;
//   Qtot.B1.BondCon2.d = 1.0;
//   Qtot.dT = Qtot.port_a.T - Qtot.port_b.T;
//   Qtot.Q_flow = Qtot.port_a.Q_flow;
//   FixedTemperature1.BG2Heat1.BondCon1.e = FixedTemperature1.BG2Heat1.port_b.T;
//   FixedTemperature1.BG2Heat1.BondCon1.e * FixedTemperature1.BG2Heat1.BondCon1.f = -FixedTemperature1.BG2Heat1.port_b.Q_flow;
//   FixedTemperature1.Tabs.e0 = FixedTemperature1.Tabs.s;
//   FixedTemperature1.Tabs.e = FixedTemperature1.Tabs.e0;
//   FixedTemperature1.Tabs.e = FixedTemperature1.Tabs.BondCon1.e;
//   FixedTemperature1.Tabs.f = (-FixedTemperature1.Tabs.BondCon1.d) * FixedTemperature1.Tabs.BondCon1.f;
//   FixedTemperature1.B1.fBondCon1.e = FixedTemperature1.B1.eBondCon1.e;
//   FixedTemperature1.B1.eBondCon1.f = FixedTemperature1.B1.fBondCon1.f;
//   FixedTemperature1.B1.eBondCon1.d = -1.0;
//   FixedTemperature1.B1.fBondCon1.d = 1.0;
//   FixedTemperature1.Tabs.s = FixedTemperature1.T;
//   VIN1.El2BG1.BondCon1.e = VIN1.El2BG1.p.v;
//   VIN1.El2BG1.BondCon1.f = VIN1.El2BG1.p.i;
//   VIN1.BG2El1.BondCon1.e = VIN1.BG2El1.n.v;
//   VIN1.BG2El1.BondCon1.f = -VIN1.BG2El1.n.i;
//   VIN1.J1p3_1.f[2] = VIN1.J1p3_1.f[1];
//   VIN1.J1p3_1.f[3] = VIN1.J1p3_1.f[2];
//   VIN1.J1p3_1.e[1] + (VIN1.J1p3_1.e[2] + VIN1.J1p3_1.e[3]) = 0.0;
//   VIN1.J1p3_1.e[1] = VIN1.J1p3_1.BondCon1.d * VIN1.J1p3_1.BondCon1.e;
//   VIN1.J1p3_1.f[1] = VIN1.J1p3_1.BondCon1.f;
//   VIN1.J1p3_1.e[2] = VIN1.J1p3_1.BondCon2.d * VIN1.J1p3_1.BondCon2.e;
//   VIN1.J1p3_1.f[2] = VIN1.J1p3_1.BondCon2.f;
//   VIN1.J1p3_1.e[3] = VIN1.J1p3_1.BondCon3.d * VIN1.J1p3_1.BondCon3.e;
//   VIN1.J1p3_1.f[3] = VIN1.J1p3_1.BondCon3.f;
//   VIN1.B1.BondCon2.e = VIN1.B1.BondCon1.e;
//   VIN1.B1.BondCon2.f = VIN1.B1.BondCon1.f;
//   VIN1.B1.BondCon1.d = -1.0;
//   VIN1.B1.BondCon2.d = 1.0;
//   VIN1.B2.BondCon2.e = VIN1.B2.BondCon1.e;
//   VIN1.B2.BondCon2.f = VIN1.B2.BondCon1.f;
//   VIN1.B2.BondCon1.d = -1.0;
//   VIN1.B2.BondCon2.d = 1.0;
//   when pre(VIN1.V1.Trapezoid1.counter2) <> 0 and sample(VIN1.V1.Trapezoid1.startTime,VIN1.V1.Trapezoid1.period) then
//   VIN1.V1.Trapezoid1.T0 = time;
//   VIN1.V1.Trapezoid1.counter2 = pre(VIN1.V1.Trapezoid1.counter);
//   VIN1.V1.Trapezoid1.counter = pre(VIN1.V1.Trapezoid1.counter) - (if pre(VIN1.V1.Trapezoid1.counter) > 0 then 1 else 0);
//   end when;
//   VIN1.V1.Trapezoid1.y = VIN1.V1.Trapezoid1.offset + (if time < VIN1.V1.Trapezoid1.startTime or VIN1.V1.Trapezoid1.counter2 == 0 or time >= VIN1.V1.Trapezoid1.T0 + VIN1.V1.Trapezoid1.T_falling then 0.0 else if time < VIN1.V1.Trapezoid1.T0 + VIN1.V1.Trapezoid1.T_rising then ((time - VIN1.V1.Trapezoid1.T0) * VIN1.V1.Trapezoid1.amplitude) / VIN1.V1.Trapezoid1.T_rising else if time < VIN1.V1.Trapezoid1.T0 + VIN1.V1.Trapezoid1.T_width then VIN1.V1.Trapezoid1.amplitude else ((VIN1.V1.Trapezoid1.T0 + (VIN1.V1.Trapezoid1.T_falling - time)) * VIN1.V1.Trapezoid1.amplitude) / (VIN1.V1.Trapezoid1.T_falling - VIN1.V1.Trapezoid1.T_width));
//   VIN1.V1.e = VIN1.V1.Trapezoid1.y;
//   VIN1.V1.e = VIN1.V1.BondCon1.e;
//   VIN1.V1.f = (-VIN1.V1.BondCon1.d) * VIN1.V1.BondCon1.f;
//   VIN1.B3.fBondCon1.e = VIN1.B3.eBondCon1.e;
//   VIN1.B3.eBondCon1.f = VIN1.B3.fBondCon1.f;
//   VIN1.B3.eBondCon1.d = -1.0;
//   VIN1.B3.fBondCon1.d = 1.0;
//   VIN1.v = VIN1.p.v - VIN1.n.v;
//   VIN1.i = VIN1.p.i;
//   Nand1.Mp1.Csg1.J1p3_1.f[2] = Nand1.Mp1.Csg1.J1p3_1.f[1];
//   Nand1.Mp1.Csg1.J1p3_1.f[3] = Nand1.Mp1.Csg1.J1p3_1.f[2];
//   Nand1.Mp1.Csg1.J1p3_1.e[1] + (Nand1.Mp1.Csg1.J1p3_1.e[2] + Nand1.Mp1.Csg1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Csg1.J1p3_1.e[1] = Nand1.Mp1.Csg1.J1p3_1.BondCon1.d * Nand1.Mp1.Csg1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Csg1.J1p3_1.f[1] = Nand1.Mp1.Csg1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Csg1.J1p3_1.e[2] = Nand1.Mp1.Csg1.J1p3_1.BondCon2.d * Nand1.Mp1.Csg1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Csg1.J1p3_1.f[2] = Nand1.Mp1.Csg1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Csg1.J1p3_1.e[3] = Nand1.Mp1.Csg1.J1p3_1.BondCon3.d * Nand1.Mp1.Csg1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Csg1.J1p3_1.f[3] = Nand1.Mp1.Csg1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Csg1.B1.BondCon2.e = Nand1.Mp1.Csg1.B1.BondCon1.e;
//   Nand1.Mp1.Csg1.B1.BondCon2.f = Nand1.Mp1.Csg1.B1.BondCon1.f;
//   Nand1.Mp1.Csg1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Csg1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Csg1.B2.BondCon2.e = Nand1.Mp1.Csg1.B2.BondCon1.e;
//   Nand1.Mp1.Csg1.B2.BondCon2.f = Nand1.Mp1.Csg1.B2.BondCon1.f;
//   Nand1.Mp1.Csg1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Csg1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Csg1.El2BG1.BondCon1.e = Nand1.Mp1.Csg1.El2BG1.p.v;
//   Nand1.Mp1.Csg1.El2BG1.BondCon1.f = Nand1.Mp1.Csg1.El2BG1.p.i;
//   Nand1.Mp1.Csg1.BG2El1.BondCon1.e = Nand1.Mp1.Csg1.BG2El1.n.v;
//   Nand1.Mp1.Csg1.BG2El1.BondCon1.f = -Nand1.Mp1.Csg1.BG2El1.n.i;
//   Nand1.Mp1.Csg1.Cgs1.RTemp = Nand1.Mp1.Csg1.Cgs1.e2 / Nand1.Mp1.Csg1.Cgs1.Tnom;
//   Nand1.Mp1.Csg1.Cgs1.facTemp = Nand1.Mp1.Csg1.Cgs1.RTemp ^ 1.5;
//   Nand1.Mp1.Csg1.Cgs1.Vt = 8.61727503842867e-05 * Nand1.Mp1.Csg1.Cgs1.e2;
//   Nand1.Mp1.Csg1.Cgs1.EGref = Nand1.Mp1.Csg1.Cgs1.EG + (-0.000702 * Nand1.Mp1.Csg1.Cgs1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Csg1.Cgs1.Tnom);
//   Nand1.Mp1.Csg1.Cgs1.EGval = Nand1.Mp1.Csg1.Cgs1.EG + (-0.000702 * Nand1.Mp1.Csg1.Cgs1.e2 ^ 2.0) / (1108.0 + Nand1.Mp1.Csg1.Cgs1.e2);
//   Nand1.Mp1.Csg1.Cgs1.PHIval = Nand1.Mp1.Csg1.Cgs1.RTemp * Nand1.Mp1.Csg1.Cgs1.PHI + (Nand1.Mp1.Csg1.Cgs1.EGval + (-3.0 * (Nand1.Mp1.Csg1.Cgs1.Vt * log(Nand1.Mp1.Csg1.Cgs1.RTemp)) - Nand1.Mp1.Csg1.Cgs1.RTemp * Nand1.Mp1.Csg1.Cgs1.EGref));
//   Nand1.Mp1.Csg1.Cgs1.Vfb = Nand1.Mp1.Csg1.Cgs1.VFB + Real(Nand1.Mp1.Csg1.Cgs1.Type) * (Nand1.Mp1.Csg1.Cgs1.PHIval / 2.0 + ((-Nand1.Mp1.Csg1.Cgs1.PHI) / 2.0 + (Nand1.Mp1.Csg1.Cgs1.EGref / 2.0 + (-Nand1.Mp1.Csg1.Cgs1.EGval) / 2.0)));
//   Nand1.Mp1.Csg1.Cgs1.KPval = Nand1.Mp1.Csg1.Cgs1.KP / Nand1.Mp1.Csg1.Cgs1.facTemp;
//   Nand1.Mp1.Csg1.Cgs1.BETA = (Nand1.Mp1.Csg1.Cgs1.KPval * Nand1.Mp1.Csg1.Cgs1.W) / Nand1.Mp1.Csg1.Cgs1.L;
//   if noEvent(Nand1.Mp1.Csg1.Cgs1.u1 > 0.0) then
//   Nand1.Mp1.Csg1.Cgs1.sig = 1.0;
//   Nand1.Mp1.Csg1.Cgs1.vds = Nand1.Mp1.Csg1.Cgs1.u1;
//   Nand1.Mp1.Csg1.Cgs1.vgs = Nand1.Mp1.Csg1.Cgs1.e1 + Nand1.Mp1.Csg1.Cgs1.u2;
//   Nand1.Mp1.Csg1.Cgs1.vbs = Nand1.Mp1.Csg1.Cgs1.u2;
//   else
//   Nand1.Mp1.Csg1.Cgs1.sig = -1.0;
//   Nand1.Mp1.Csg1.Cgs1.vds = -Nand1.Mp1.Csg1.Cgs1.u1;
//   Nand1.Mp1.Csg1.Cgs1.vgs = Nand1.Mp1.Csg1.Cgs1.e1 - Nand1.Mp1.Csg1.Cgs1.u1;
//   Nand1.Mp1.Csg1.Cgs1.vbs = Nand1.Mp1.Csg1.Cgs1.u2 - Nand1.Mp1.Csg1.Cgs1.u1;
//   end if;
//   Nand1.Mp1.Csg1.Cgs1.PHIroot = sqrt(Nand1.Mp1.Csg1.Cgs1.PHIval);
//   Nand1.Mp1.Csg1.Cgs1.PHI3 = Nand1.Mp1.Csg1.Cgs1.PHIval * Nand1.Mp1.Csg1.Cgs1.PHIroot;
//   Nand1.Mp1.Csg1.Cgs1.Sarg = if Nand1.Mp1.Csg1.Cgs1.vbs <= 0.0 then sqrt(Nand1.Mp1.Csg1.Cgs1.PHIval - Nand1.Mp1.Csg1.Cgs1.vbs) else Nand1.Mp1.Csg1.Cgs1.PHIroot / (1.0 + Nand1.Mp1.Csg1.Cgs1.vbs / (Nand1.Mp1.Csg1.Cgs1.PHIval * 2.0));
//   Nand1.Mp1.Csg1.Cgs1.DSarg = 0.0;
//   Nand1.Mp1.Csg1.Cgs1.Barg = 0.0;
//   Nand1.Mp1.Csg1.Cgs1.DBarg = 0.0;
//   Nand1.Mp1.Csg1.Cgs1.WS = Nand1.Mp1.Csg1.Cgs1.XD * Nand1.Mp1.Csg1.Cgs1.Sarg;
//   Nand1.Mp1.Csg1.Cgs1.WD = Nand1.Mp1.Csg1.Cgs1.XD * Nand1.Mp1.Csg1.Cgs1.Barg;
//   Nand1.Mp1.Csg1.Cgs1.WSfac = if Nand1.Mp1.Csg1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp1.Csg1.Cgs1.WS) / Nand1.Mp1.Csg1.Cgs1.XJ) else 0.0;
//   Nand1.Mp1.Csg1.Cgs1.WDfac = if Nand1.Mp1.Csg1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp1.Csg1.Cgs1.WD) / Nand1.Mp1.Csg1.Cgs1.XJ) else 0.0;
//   Nand1.Mp1.Csg1.Cgs1.GAMMAval = Nand1.Mp1.Csg1.Cgs1.GAMMA * (if Nand1.Mp1.Csg1.Cgs1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mp1.Csg1.Cgs1.XJ * (-2.0 + (Nand1.Mp1.Csg1.Cgs1.WSfac + Nand1.Mp1.Csg1.Cgs1.WDfac)))) / Nand1.Mp1.Csg1.Cgs1.L else 1.0);
//   Nand1.Mp1.Csg1.Cgs1.DGAMMA = Nand1.Mp1.Csg1.Cgs1.GAMMA * (if Nand1.Mp1.Csg1.Cgs1.XJ > 0.0 then (-0.5 * (Nand1.Mp1.Csg1.Cgs1.XD * (Nand1.Mp1.Csg1.Cgs1.DSarg / Nand1.Mp1.Csg1.Cgs1.WSfac + Nand1.Mp1.Csg1.Cgs1.DBarg / Nand1.Mp1.Csg1.Cgs1.WDfac))) / Nand1.Mp1.Csg1.Cgs1.L else 0.0);
//   Nand1.Mp1.Csg1.Cgs1.Wp = Nand1.Mp1.Csg1.Cgs1.Sarg * Nand1.Mp1.Csg1.Cgs1.XD;
//   Nand1.Mp1.Csg1.Cgs1.WpXJ = if Nand1.Mp1.Csg1.Cgs1.XJ > 0.0 then Nand1.Mp1.Csg1.Cgs1.Wp / Nand1.Mp1.Csg1.Cgs1.XJ else 0.0;
//   Nand1.Mp1.Csg1.Cgs1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mp1.Csg1.Cgs1.WpXJ + -0.01110777 * Nand1.Mp1.Csg1.Cgs1.WpXJ ^ 2.0);
//   Nand1.Mp1.Csg1.Cgs1.Wc = Nand1.Mp1.Csg1.Cgs1.WcXJ * Nand1.Mp1.Csg1.Cgs1.XJ;
//   Nand1.Mp1.Csg1.Cgs1.Fs = if Nand1.Mp1.Csg1.Cgs1.XJ > 0.0 then 1.0 + (Nand1.Mp1.Csg1.Cgs1.LD - (Nand1.Mp1.Csg1.Cgs1.LD + Nand1.Mp1.Csg1.Cgs1.Wc) * sqrt(1.0 - (Nand1.Mp1.Csg1.Cgs1.Wp / (Nand1.Mp1.Csg1.Cgs1.XJ + Nand1.Mp1.Csg1.Cgs1.Wp)) ^ 2.0)) / Nand1.Mp1.Csg1.Cgs1.L else 1.0;
//   Nand1.Mp1.Csg1.Cgs1.Vbody = Nand1.Mp1.Csg1.Cgs1.GAMMA * (Nand1.Mp1.Csg1.Cgs1.Fs * Nand1.Mp1.Csg1.Cgs1.Sarg) + Nand1.Mp1.Csg1.Cgs1.Fn * Nand1.Mp1.Csg1.Cgs1.Sarg ^ 2.0;
//   Nand1.Mp1.Csg1.Cgs1.Vth = Nand1.Mp1.Csg1.Cgs1.Vfb + Real(Nand1.Mp1.Csg1.Cgs1.Type) * (Nand1.Mp1.Csg1.Cgs1.PHIval + (Nand1.Mp1.Csg1.Cgs1.Vbody - Nand1.Mp1.Csg1.Cgs1.SIGMA * Nand1.Mp1.Csg1.Cgs1.vds));
//   Nand1.Mp1.Csg1.Cgs1.CB = if noEvent(Nand1.Mp1.Csg1.Cgs1.Vbody > 0.0) and noEvent(Nand1.Mp1.Csg1.Cgs1.Sarg > 0.0) then (Nand1.Mp1.Csg1.Cgs1.Vbody * Nand1.Mp1.Csg1.Cgs1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mp1.Csg1.Cgs1.N = 1.0 + ((1.6021892e-19 * Nand1.Mp1.Csg1.Cgs1.NFS) / Nand1.Mp1.Csg1.Cgs1.COX + Nand1.Mp1.Csg1.Cgs1.CB);
//   Nand1.Mp1.Csg1.Cgs1.Von = if Nand1.Mp1.Csg1.Cgs1.NFS > 0.0 then Real(Nand1.Mp1.Csg1.Cgs1.Type) * Nand1.Mp1.Csg1.Cgs1.Vth + Nand1.Mp1.Csg1.Cgs1.N * Nand1.Mp1.Csg1.Cgs1.Vt else Real(Nand1.Mp1.Csg1.Cgs1.Type) * Nand1.Mp1.Csg1.Cgs1.Vth;
//   if noEvent(Nand1.Mp1.Csg1.Cgs1.sig > 0.0) then
//   Nand1.Mp1.Csg1.Cgs1.Cval = Nand1.Mp1.Csg1.Cgs1.W * Nand1.Mp1.Csg1.Cgs1.CGS0 + (if noEvent(Nand1.Mp1.Csg1.Cgs1.vgs < Nand1.Mp1.Csg1.Cgs1.Von - Nand1.Mp1.Csg1.Cgs1.PHIval) then 0.0 else if noEvent(Nand1.Mp1.Csg1.Cgs1.vgs >= Nand1.Mp1.Csg1.Cgs1.Von - Nand1.Mp1.Csg1.Cgs1.PHIval) and noEvent(Nand1.Mp1.Csg1.Cgs1.vgs < Nand1.Mp1.Csg1.Cgs1.Von) then 0.666666666666667 * (Nand1.Mp1.Csg1.Cgs1.COXval * (1.0 + (Nand1.Mp1.Csg1.Cgs1.vgs - Nand1.Mp1.Csg1.Cgs1.Von) / Nand1.Mp1.Csg1.Cgs1.PHIval)) else if noEvent(Nand1.Mp1.Csg1.Cgs1.vgs >= Nand1.Mp1.Csg1.Cgs1.Von) and noEvent(Nand1.Mp1.Csg1.Cgs1.vgs < Nand1.Mp1.Csg1.Cgs1.Von + Nand1.Mp1.Csg1.Cgs1.vds) then 0.666666666666667 * Nand1.Mp1.Csg1.Cgs1.COXval else 0.666666666666667 * (Nand1.Mp1.Csg1.Cgs1.COXval * (1.0 - ((Nand1.Mp1.Csg1.Cgs1.vgs + ((-Nand1.Mp1.Csg1.Cgs1.vds) - Nand1.Mp1.Csg1.Cgs1.Von)) / (2.0 * (Nand1.Mp1.Csg1.Cgs1.vgs - Nand1.Mp1.Csg1.Cgs1.Von) - Nand1.Mp1.Csg1.Cgs1.vds)) ^ 2.0)));
//   else
//   Nand1.Mp1.Csg1.Cgs1.Cval = Nand1.Mp1.Csg1.Cgs1.W * Nand1.Mp1.Csg1.Cgs1.CGS0 + (if noEvent(Nand1.Mp1.Csg1.Cgs1.vgs < Nand1.Mp1.Csg1.Cgs1.Von + Nand1.Mp1.Csg1.Cgs1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mp1.Csg1.Cgs1.COXval * (1.0 - ((Nand1.Mp1.Csg1.Cgs1.vgs - Nand1.Mp1.Csg1.Cgs1.Von) / (2.0 * (Nand1.Mp1.Csg1.Cgs1.vgs - Nand1.Mp1.Csg1.Cgs1.Von) - Nand1.Mp1.Csg1.Cgs1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mp1.Csg1.Cgs1.f1 = Nand1.Mp1.Csg1.Cgs1.Cval * der(Nand1.Mp1.Csg1.Cgs1.e1);
//   Nand1.Mp1.Csg1.Cgs1.f2 = 0.0;
//   Nand1.Mp1.Csg1.Cgs1.DTempSq = Nand1.Mp1.Csg1.Cgs1.DTemp ^ 2.0;
//   Nand1.Mp1.Csg1.Cgs1.DTemp = Nand1.Mp1.Csg1.Cgs1.e2 - Nand1.Mp1.Csg1.Cgs1.Tnom;
//   Nand1.Mp1.Csg1.Cgs1.e1 = Nand1.Mp1.Csg1.Cgs1.BondCon1.e;
//   Nand1.Mp1.Csg1.Cgs1.f1 = Nand1.Mp1.Csg1.Cgs1.BondCon1.d * Nand1.Mp1.Csg1.Cgs1.BondCon1.f;
//   Nand1.Mp1.Csg1.Cgs1.e2 = Nand1.Mp1.Csg1.Cgs1.BondCon2.e;
//   Nand1.Mp1.Csg1.Cgs1.f2 = (-Nand1.Mp1.Csg1.Cgs1.BondCon2.d) * Nand1.Mp1.Csg1.Cgs1.BondCon2.f;
//   Nand1.Mp1.Csg1.B3.BondCon2.e = Nand1.Mp1.Csg1.B3.BondCon1.e;
//   Nand1.Mp1.Csg1.B3.BondCon2.f = Nand1.Mp1.Csg1.B3.BondCon1.f;
//   Nand1.Mp1.Csg1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Csg1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Csg1.B4.fBondCon1.e = Nand1.Mp1.Csg1.B4.eBondCon1.e;
//   Nand1.Mp1.Csg1.B4.eBondCon1.f = Nand1.Mp1.Csg1.B4.fBondCon1.f;
//   Nand1.Mp1.Csg1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Csg1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Csg1.BG2Heat1.BondCon1.e = Nand1.Mp1.Csg1.BG2Heat1.port_b.T;
//   Nand1.Mp1.Csg1.BG2Heat1.BondCon1.e * Nand1.Mp1.Csg1.BG2Heat1.BondCon1.f = -Nand1.Mp1.Csg1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Csg1.v = Nand1.Mp1.Csg1.p.v - Nand1.Mp1.Csg1.n.v;
//   Nand1.Mp1.Csg1.i = Nand1.Mp1.Csg1.p.i;
//   Nand1.Mp1.Cdg1.J1p3_1.f[2] = Nand1.Mp1.Cdg1.J1p3_1.f[1];
//   Nand1.Mp1.Cdg1.J1p3_1.f[3] = Nand1.Mp1.Cdg1.J1p3_1.f[2];
//   Nand1.Mp1.Cdg1.J1p3_1.e[1] + (Nand1.Mp1.Cdg1.J1p3_1.e[2] + Nand1.Mp1.Cdg1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Cdg1.J1p3_1.e[1] = Nand1.Mp1.Cdg1.J1p3_1.BondCon1.d * Nand1.Mp1.Cdg1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Cdg1.J1p3_1.f[1] = Nand1.Mp1.Cdg1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Cdg1.J1p3_1.e[2] = Nand1.Mp1.Cdg1.J1p3_1.BondCon2.d * Nand1.Mp1.Cdg1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Cdg1.J1p3_1.f[2] = Nand1.Mp1.Cdg1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Cdg1.J1p3_1.e[3] = Nand1.Mp1.Cdg1.J1p3_1.BondCon3.d * Nand1.Mp1.Cdg1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Cdg1.J1p3_1.f[3] = Nand1.Mp1.Cdg1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Cdg1.B1.BondCon2.e = Nand1.Mp1.Cdg1.B1.BondCon1.e;
//   Nand1.Mp1.Cdg1.B1.BondCon2.f = Nand1.Mp1.Cdg1.B1.BondCon1.f;
//   Nand1.Mp1.Cdg1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Cdg1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Cdg1.B2.BondCon2.e = Nand1.Mp1.Cdg1.B2.BondCon1.e;
//   Nand1.Mp1.Cdg1.B2.BondCon2.f = Nand1.Mp1.Cdg1.B2.BondCon1.f;
//   Nand1.Mp1.Cdg1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Cdg1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Cdg1.El2BG1.BondCon1.e = Nand1.Mp1.Cdg1.El2BG1.p.v;
//   Nand1.Mp1.Cdg1.El2BG1.BondCon1.f = Nand1.Mp1.Cdg1.El2BG1.p.i;
//   Nand1.Mp1.Cdg1.BG2El1.BondCon1.e = Nand1.Mp1.Cdg1.BG2El1.n.v;
//   Nand1.Mp1.Cdg1.BG2El1.BondCon1.f = -Nand1.Mp1.Cdg1.BG2El1.n.i;
//   Nand1.Mp1.Cdg1.Cgd1.RTemp = Nand1.Mp1.Cdg1.Cgd1.e2 / Nand1.Mp1.Cdg1.Cgd1.Tnom;
//   Nand1.Mp1.Cdg1.Cgd1.facTemp = Nand1.Mp1.Cdg1.Cgd1.RTemp ^ 1.5;
//   Nand1.Mp1.Cdg1.Cgd1.Vt = 8.61727503842867e-05 * Nand1.Mp1.Cdg1.Cgd1.e2;
//   Nand1.Mp1.Cdg1.Cgd1.EGref = Nand1.Mp1.Cdg1.Cgd1.EG + (-0.000702 * Nand1.Mp1.Cdg1.Cgd1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Cdg1.Cgd1.Tnom);
//   Nand1.Mp1.Cdg1.Cgd1.EGval = Nand1.Mp1.Cdg1.Cgd1.EG + (-0.000702 * Nand1.Mp1.Cdg1.Cgd1.e2 ^ 2.0) / (1108.0 + Nand1.Mp1.Cdg1.Cgd1.e2);
//   Nand1.Mp1.Cdg1.Cgd1.PHIval = Nand1.Mp1.Cdg1.Cgd1.RTemp * Nand1.Mp1.Cdg1.Cgd1.PHI + (Nand1.Mp1.Cdg1.Cgd1.EGval + (-3.0 * (Nand1.Mp1.Cdg1.Cgd1.Vt * log(Nand1.Mp1.Cdg1.Cgd1.RTemp)) - Nand1.Mp1.Cdg1.Cgd1.RTemp * Nand1.Mp1.Cdg1.Cgd1.EGref));
//   Nand1.Mp1.Cdg1.Cgd1.Vfb = Nand1.Mp1.Cdg1.Cgd1.VFB + Real(Nand1.Mp1.Cdg1.Cgd1.Type) * (Nand1.Mp1.Cdg1.Cgd1.PHIval / 2.0 + ((-Nand1.Mp1.Cdg1.Cgd1.PHI) / 2.0 + (Nand1.Mp1.Cdg1.Cgd1.EGref / 2.0 + (-Nand1.Mp1.Cdg1.Cgd1.EGval) / 2.0)));
//   Nand1.Mp1.Cdg1.Cgd1.KPval = Nand1.Mp1.Cdg1.Cgd1.KP / Nand1.Mp1.Cdg1.Cgd1.facTemp;
//   Nand1.Mp1.Cdg1.Cgd1.BETA = (Nand1.Mp1.Cdg1.Cgd1.KPval * Nand1.Mp1.Cdg1.Cgd1.W) / Nand1.Mp1.Cdg1.Cgd1.L;
//   if noEvent(Nand1.Mp1.Cdg1.Cgd1.u1 > 0.0) then
//   Nand1.Mp1.Cdg1.Cgd1.sig = 1.0;
//   Nand1.Mp1.Cdg1.Cgd1.vds = Nand1.Mp1.Cdg1.Cgd1.u1;
//   Nand1.Mp1.Cdg1.Cgd1.vgs = Nand1.Mp1.Cdg1.Cgd1.e1 + Nand1.Mp1.Cdg1.Cgd1.u1;
//   Nand1.Mp1.Cdg1.Cgd1.vbs = Nand1.Mp1.Cdg1.Cgd1.u2;
//   else
//   Nand1.Mp1.Cdg1.Cgd1.sig = -1.0;
//   Nand1.Mp1.Cdg1.Cgd1.vds = -Nand1.Mp1.Cdg1.Cgd1.u1;
//   Nand1.Mp1.Cdg1.Cgd1.vgs = Nand1.Mp1.Cdg1.Cgd1.e1 + (Nand1.Mp1.Cdg1.Cgd1.u2 - Nand1.Mp1.Cdg1.Cgd1.u1);
//   Nand1.Mp1.Cdg1.Cgd1.vbs = Nand1.Mp1.Cdg1.Cgd1.u2 - Nand1.Mp1.Cdg1.Cgd1.u1;
//   end if;
//   Nand1.Mp1.Cdg1.Cgd1.PHIroot = sqrt(Nand1.Mp1.Cdg1.Cgd1.PHIval);
//   Nand1.Mp1.Cdg1.Cgd1.PHI3 = Nand1.Mp1.Cdg1.Cgd1.PHIval * Nand1.Mp1.Cdg1.Cgd1.PHIroot;
//   Nand1.Mp1.Cdg1.Cgd1.Sarg = if Nand1.Mp1.Cdg1.Cgd1.vbs <= 0.0 then sqrt(Nand1.Mp1.Cdg1.Cgd1.PHIval - Nand1.Mp1.Cdg1.Cgd1.vbs) else Nand1.Mp1.Cdg1.Cgd1.PHIroot / (1.0 + Nand1.Mp1.Cdg1.Cgd1.vbs / (Nand1.Mp1.Cdg1.Cgd1.PHIval * 2.0));
//   Nand1.Mp1.Cdg1.Cgd1.DSarg = 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.Barg = 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.DBarg = 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.WS = Nand1.Mp1.Cdg1.Cgd1.XD * Nand1.Mp1.Cdg1.Cgd1.Sarg;
//   Nand1.Mp1.Cdg1.Cgd1.WD = Nand1.Mp1.Cdg1.Cgd1.XD * Nand1.Mp1.Cdg1.Cgd1.Barg;
//   Nand1.Mp1.Cdg1.Cgd1.WSfac = if Nand1.Mp1.Cdg1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp1.Cdg1.Cgd1.WS) / Nand1.Mp1.Cdg1.Cgd1.XJ) else 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.WDfac = if Nand1.Mp1.Cdg1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp1.Cdg1.Cgd1.WD) / Nand1.Mp1.Cdg1.Cgd1.XJ) else 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.GAMMAval = Nand1.Mp1.Cdg1.Cgd1.GAMMA * (if Nand1.Mp1.Cdg1.Cgd1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mp1.Cdg1.Cgd1.XJ * (-2.0 + (Nand1.Mp1.Cdg1.Cgd1.WSfac + Nand1.Mp1.Cdg1.Cgd1.WDfac)))) / Nand1.Mp1.Cdg1.Cgd1.L else 1.0);
//   Nand1.Mp1.Cdg1.Cgd1.DGAMMA = Nand1.Mp1.Cdg1.Cgd1.GAMMA * (if Nand1.Mp1.Cdg1.Cgd1.XJ > 0.0 then (-0.5 * (Nand1.Mp1.Cdg1.Cgd1.XD * (Nand1.Mp1.Cdg1.Cgd1.DSarg / Nand1.Mp1.Cdg1.Cgd1.WSfac + Nand1.Mp1.Cdg1.Cgd1.DBarg / Nand1.Mp1.Cdg1.Cgd1.WDfac))) / Nand1.Mp1.Cdg1.Cgd1.L else 0.0);
//   Nand1.Mp1.Cdg1.Cgd1.Wp = Nand1.Mp1.Cdg1.Cgd1.Sarg * Nand1.Mp1.Cdg1.Cgd1.XD;
//   Nand1.Mp1.Cdg1.Cgd1.WpXJ = if Nand1.Mp1.Cdg1.Cgd1.XJ > 0.0 then Nand1.Mp1.Cdg1.Cgd1.Wp / Nand1.Mp1.Cdg1.Cgd1.XJ else 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mp1.Cdg1.Cgd1.WpXJ + -0.01110777 * Nand1.Mp1.Cdg1.Cgd1.WpXJ ^ 2.0);
//   Nand1.Mp1.Cdg1.Cgd1.Wc = Nand1.Mp1.Cdg1.Cgd1.WcXJ * Nand1.Mp1.Cdg1.Cgd1.XJ;
//   Nand1.Mp1.Cdg1.Cgd1.Fs = if Nand1.Mp1.Cdg1.Cgd1.XJ > 0.0 then 1.0 + (Nand1.Mp1.Cdg1.Cgd1.LD - (Nand1.Mp1.Cdg1.Cgd1.LD + Nand1.Mp1.Cdg1.Cgd1.Wc) * sqrt(1.0 - (Nand1.Mp1.Cdg1.Cgd1.Wp / (Nand1.Mp1.Cdg1.Cgd1.XJ + Nand1.Mp1.Cdg1.Cgd1.Wp)) ^ 2.0)) / Nand1.Mp1.Cdg1.Cgd1.L else 1.0;
//   Nand1.Mp1.Cdg1.Cgd1.Vbody = Nand1.Mp1.Cdg1.Cgd1.GAMMA * (Nand1.Mp1.Cdg1.Cgd1.Fs * Nand1.Mp1.Cdg1.Cgd1.Sarg) + Nand1.Mp1.Cdg1.Cgd1.Fn * Nand1.Mp1.Cdg1.Cgd1.Sarg ^ 2.0;
//   Nand1.Mp1.Cdg1.Cgd1.Vth = Nand1.Mp1.Cdg1.Cgd1.Vfb + Real(Nand1.Mp1.Cdg1.Cgd1.Type) * (Nand1.Mp1.Cdg1.Cgd1.PHIval + (Nand1.Mp1.Cdg1.Cgd1.Vbody - Nand1.Mp1.Cdg1.Cgd1.SIGMA * Nand1.Mp1.Cdg1.Cgd1.vds));
//   Nand1.Mp1.Cdg1.Cgd1.CB = if noEvent(Nand1.Mp1.Cdg1.Cgd1.Vbody > 0.0) and noEvent(Nand1.Mp1.Cdg1.Cgd1.Sarg > 0.0) then (Nand1.Mp1.Cdg1.Cgd1.Vbody * Nand1.Mp1.Cdg1.Cgd1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.N = 1.0 + ((1.6021892e-19 * Nand1.Mp1.Cdg1.Cgd1.NFS) / Nand1.Mp1.Cdg1.Cgd1.COX + Nand1.Mp1.Cdg1.Cgd1.CB);
//   Nand1.Mp1.Cdg1.Cgd1.Von = if Nand1.Mp1.Cdg1.Cgd1.NFS > 0.0 then Real(Nand1.Mp1.Cdg1.Cgd1.Type) * Nand1.Mp1.Cdg1.Cgd1.Vth + Nand1.Mp1.Cdg1.Cgd1.N * Nand1.Mp1.Cdg1.Cgd1.Vt else Real(Nand1.Mp1.Cdg1.Cgd1.Type) * Nand1.Mp1.Cdg1.Cgd1.Vth;
//   if noEvent(Nand1.Mp1.Cdg1.Cgd1.sig > 0.0) then
//   Nand1.Mp1.Cdg1.Cgd1.Cval = Nand1.Mp1.Cdg1.Cgd1.W * Nand1.Mp1.Cdg1.Cgd1.CGD0 + (if noEvent(Nand1.Mp1.Cdg1.Cgd1.vgs < Nand1.Mp1.Cdg1.Cgd1.Von + Nand1.Mp1.Cdg1.Cgd1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mp1.Cdg1.Cgd1.COXval * (1.0 - ((Nand1.Mp1.Cdg1.Cgd1.vgs - Nand1.Mp1.Cdg1.Cgd1.Von) / (2.0 * (Nand1.Mp1.Cdg1.Cgd1.vgs - Nand1.Mp1.Cdg1.Cgd1.Von) - Nand1.Mp1.Cdg1.Cgd1.vds)) ^ 2.0)));
//   else
//   Nand1.Mp1.Cdg1.Cgd1.Cval = Nand1.Mp1.Cdg1.Cgd1.W * Nand1.Mp1.Cdg1.Cgd1.CGD0 + (if noEvent(Nand1.Mp1.Cdg1.Cgd1.vgs < Nand1.Mp1.Cdg1.Cgd1.Von - Nand1.Mp1.Cdg1.Cgd1.PHIval) then 0.0 else if noEvent(Nand1.Mp1.Cdg1.Cgd1.vgs >= Nand1.Mp1.Cdg1.Cgd1.Von - Nand1.Mp1.Cdg1.Cgd1.PHIval) and noEvent(Nand1.Mp1.Cdg1.Cgd1.vgs < Nand1.Mp1.Cdg1.Cgd1.Von) then 0.666666666666667 * (Nand1.Mp1.Cdg1.Cgd1.COXval * (1.0 + (Nand1.Mp1.Cdg1.Cgd1.vgs - Nand1.Mp1.Cdg1.Cgd1.Von) / Nand1.Mp1.Cdg1.Cgd1.PHIval)) else if noEvent(Nand1.Mp1.Cdg1.Cgd1.vgs >= Nand1.Mp1.Cdg1.Cgd1.Von) and noEvent(Nand1.Mp1.Cdg1.Cgd1.vgs < Nand1.Mp1.Cdg1.Cgd1.Von + Nand1.Mp1.Cdg1.Cgd1.vds) then 0.666666666666667 * Nand1.Mp1.Cdg1.Cgd1.COXval else 0.666666666666667 * (Nand1.Mp1.Cdg1.Cgd1.COXval * (1.0 - ((Nand1.Mp1.Cdg1.Cgd1.vgs + ((-Nand1.Mp1.Cdg1.Cgd1.vds) - Nand1.Mp1.Cdg1.Cgd1.Von)) / (2.0 * (Nand1.Mp1.Cdg1.Cgd1.vgs - Nand1.Mp1.Cdg1.Cgd1.Von) - Nand1.Mp1.Cdg1.Cgd1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mp1.Cdg1.Cgd1.f1 = Nand1.Mp1.Cdg1.Cgd1.Cval * der(Nand1.Mp1.Cdg1.Cgd1.e1);
//   Nand1.Mp1.Cdg1.Cgd1.f2 = 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.DTempSq = Nand1.Mp1.Cdg1.Cgd1.DTemp ^ 2.0;
//   Nand1.Mp1.Cdg1.Cgd1.DTemp = Nand1.Mp1.Cdg1.Cgd1.e2 - Nand1.Mp1.Cdg1.Cgd1.Tnom;
//   Nand1.Mp1.Cdg1.Cgd1.e1 = Nand1.Mp1.Cdg1.Cgd1.BondCon1.e;
//   Nand1.Mp1.Cdg1.Cgd1.f1 = Nand1.Mp1.Cdg1.Cgd1.BondCon1.d * Nand1.Mp1.Cdg1.Cgd1.BondCon1.f;
//   Nand1.Mp1.Cdg1.Cgd1.e2 = Nand1.Mp1.Cdg1.Cgd1.BondCon2.e;
//   Nand1.Mp1.Cdg1.Cgd1.f2 = (-Nand1.Mp1.Cdg1.Cgd1.BondCon2.d) * Nand1.Mp1.Cdg1.Cgd1.BondCon2.f;
//   Nand1.Mp1.Cdg1.B4.fBondCon1.e = Nand1.Mp1.Cdg1.B4.eBondCon1.e;
//   Nand1.Mp1.Cdg1.B4.eBondCon1.f = Nand1.Mp1.Cdg1.B4.fBondCon1.f;
//   Nand1.Mp1.Cdg1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Cdg1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.e = Nand1.Mp1.Cdg1.BG2Heat1.port_b.T;
//   Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.e * Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.f = -Nand1.Mp1.Cdg1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Cdg1.B3.BondCon2.e = Nand1.Mp1.Cdg1.B3.BondCon1.e;
//   Nand1.Mp1.Cdg1.B3.BondCon2.f = Nand1.Mp1.Cdg1.B3.BondCon1.f;
//   Nand1.Mp1.Cdg1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Cdg1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Cdg1.v = Nand1.Mp1.Cdg1.p.v - Nand1.Mp1.Cdg1.n.v;
//   Nand1.Mp1.Cdg1.i = Nand1.Mp1.Cdg1.p.i;
//   Nand1.Mp1.Cbg1.J1p3_1.f[2] = Nand1.Mp1.Cbg1.J1p3_1.f[1];
//   Nand1.Mp1.Cbg1.J1p3_1.f[3] = Nand1.Mp1.Cbg1.J1p3_1.f[2];
//   Nand1.Mp1.Cbg1.J1p3_1.e[1] + (Nand1.Mp1.Cbg1.J1p3_1.e[2] + Nand1.Mp1.Cbg1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Cbg1.J1p3_1.e[1] = Nand1.Mp1.Cbg1.J1p3_1.BondCon1.d * Nand1.Mp1.Cbg1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Cbg1.J1p3_1.f[1] = Nand1.Mp1.Cbg1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Cbg1.J1p3_1.e[2] = Nand1.Mp1.Cbg1.J1p3_1.BondCon2.d * Nand1.Mp1.Cbg1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Cbg1.J1p3_1.f[2] = Nand1.Mp1.Cbg1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Cbg1.J1p3_1.e[3] = Nand1.Mp1.Cbg1.J1p3_1.BondCon3.d * Nand1.Mp1.Cbg1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Cbg1.J1p3_1.f[3] = Nand1.Mp1.Cbg1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Cbg1.B1.BondCon2.e = Nand1.Mp1.Cbg1.B1.BondCon1.e;
//   Nand1.Mp1.Cbg1.B1.BondCon2.f = Nand1.Mp1.Cbg1.B1.BondCon1.f;
//   Nand1.Mp1.Cbg1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Cbg1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Cbg1.B2.BondCon2.e = Nand1.Mp1.Cbg1.B2.BondCon1.e;
//   Nand1.Mp1.Cbg1.B2.BondCon2.f = Nand1.Mp1.Cbg1.B2.BondCon1.f;
//   Nand1.Mp1.Cbg1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Cbg1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Cbg1.El2BG1.BondCon1.e = Nand1.Mp1.Cbg1.El2BG1.p.v;
//   Nand1.Mp1.Cbg1.El2BG1.BondCon1.f = Nand1.Mp1.Cbg1.El2BG1.p.i;
//   Nand1.Mp1.Cbg1.BG2El1.BondCon1.e = Nand1.Mp1.Cbg1.BG2El1.n.v;
//   Nand1.Mp1.Cbg1.BG2El1.BondCon1.f = -Nand1.Mp1.Cbg1.BG2El1.n.i;
//   Nand1.Mp1.Cbg1.Cgb1.RTemp = Nand1.Mp1.Cbg1.Cgb1.e2 / Nand1.Mp1.Cbg1.Cgb1.Tnom;
//   Nand1.Mp1.Cbg1.Cgb1.facTemp = Nand1.Mp1.Cbg1.Cgb1.RTemp ^ 1.5;
//   Nand1.Mp1.Cbg1.Cgb1.Vt = 8.61727503842867e-05 * Nand1.Mp1.Cbg1.Cgb1.e2;
//   Nand1.Mp1.Cbg1.Cgb1.EGref = Nand1.Mp1.Cbg1.Cgb1.EG + (-0.000702 * Nand1.Mp1.Cbg1.Cgb1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Cbg1.Cgb1.Tnom);
//   Nand1.Mp1.Cbg1.Cgb1.EGval = Nand1.Mp1.Cbg1.Cgb1.EG + (-0.000702 * Nand1.Mp1.Cbg1.Cgb1.e2 ^ 2.0) / (1108.0 + Nand1.Mp1.Cbg1.Cgb1.e2);
//   Nand1.Mp1.Cbg1.Cgb1.PHIval = Nand1.Mp1.Cbg1.Cgb1.RTemp * Nand1.Mp1.Cbg1.Cgb1.PHI + (Nand1.Mp1.Cbg1.Cgb1.EGval + (-3.0 * (Nand1.Mp1.Cbg1.Cgb1.Vt * log(Nand1.Mp1.Cbg1.Cgb1.RTemp)) - Nand1.Mp1.Cbg1.Cgb1.RTemp * Nand1.Mp1.Cbg1.Cgb1.EGref));
//   Nand1.Mp1.Cbg1.Cgb1.Vfb = Nand1.Mp1.Cbg1.Cgb1.VFB + Real(Nand1.Mp1.Cbg1.Cgb1.Type) * (Nand1.Mp1.Cbg1.Cgb1.PHIval / 2.0 + ((-Nand1.Mp1.Cbg1.Cgb1.PHI) / 2.0 + (Nand1.Mp1.Cbg1.Cgb1.EGref / 2.0 + (-Nand1.Mp1.Cbg1.Cgb1.EGval) / 2.0)));
//   Nand1.Mp1.Cbg1.Cgb1.KPval = Nand1.Mp1.Cbg1.Cgb1.KP / Nand1.Mp1.Cbg1.Cgb1.facTemp;
//   Nand1.Mp1.Cbg1.Cgb1.BETA = (Nand1.Mp1.Cbg1.Cgb1.KPval * Nand1.Mp1.Cbg1.Cgb1.W) / Nand1.Mp1.Cbg1.Cgb1.L;
//   if noEvent(Nand1.Mp1.Cbg1.Cgb1.u1 > 0.0) then
//   Nand1.Mp1.Cbg1.Cgb1.sig = 1.0;
//   Nand1.Mp1.Cbg1.Cgb1.vds = Nand1.Mp1.Cbg1.Cgb1.u1;
//   Nand1.Mp1.Cbg1.Cgb1.vgs = Nand1.Mp1.Cbg1.Cgb1.e1 + Nand1.Mp1.Cbg1.Cgb1.u2;
//   Nand1.Mp1.Cbg1.Cgb1.vbs = Nand1.Mp1.Cbg1.Cgb1.u2;
//   else
//   Nand1.Mp1.Cbg1.Cgb1.sig = -1.0;
//   Nand1.Mp1.Cbg1.Cgb1.vds = -Nand1.Mp1.Cbg1.Cgb1.u1;
//   Nand1.Mp1.Cbg1.Cgb1.vgs = Nand1.Mp1.Cbg1.Cgb1.e1 + (Nand1.Mp1.Cbg1.Cgb1.u2 - Nand1.Mp1.Cbg1.Cgb1.u1);
//   Nand1.Mp1.Cbg1.Cgb1.vbs = Nand1.Mp1.Cbg1.Cgb1.u2 - Nand1.Mp1.Cbg1.Cgb1.u1;
//   end if;
//   Nand1.Mp1.Cbg1.Cgb1.PHIroot = sqrt(Nand1.Mp1.Cbg1.Cgb1.PHIval);
//   Nand1.Mp1.Cbg1.Cgb1.PHI3 = Nand1.Mp1.Cbg1.Cgb1.PHIval * Nand1.Mp1.Cbg1.Cgb1.PHIroot;
//   Nand1.Mp1.Cbg1.Cgb1.Sarg = if Nand1.Mp1.Cbg1.Cgb1.vbs <= 0.0 then sqrt(Nand1.Mp1.Cbg1.Cgb1.PHIval - Nand1.Mp1.Cbg1.Cgb1.vbs) else Nand1.Mp1.Cbg1.Cgb1.PHIroot / (1.0 + Nand1.Mp1.Cbg1.Cgb1.vbs / (Nand1.Mp1.Cbg1.Cgb1.PHIval * 2.0));
//   Nand1.Mp1.Cbg1.Cgb1.DSarg = 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.Barg = 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.DBarg = 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.WS = Nand1.Mp1.Cbg1.Cgb1.XD * Nand1.Mp1.Cbg1.Cgb1.Sarg;
//   Nand1.Mp1.Cbg1.Cgb1.WD = Nand1.Mp1.Cbg1.Cgb1.XD * Nand1.Mp1.Cbg1.Cgb1.Barg;
//   Nand1.Mp1.Cbg1.Cgb1.WSfac = if Nand1.Mp1.Cbg1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp1.Cbg1.Cgb1.WS) / Nand1.Mp1.Cbg1.Cgb1.XJ) else 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.WDfac = if Nand1.Mp1.Cbg1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp1.Cbg1.Cgb1.WD) / Nand1.Mp1.Cbg1.Cgb1.XJ) else 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.GAMMAval = Nand1.Mp1.Cbg1.Cgb1.GAMMA * (if Nand1.Mp1.Cbg1.Cgb1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mp1.Cbg1.Cgb1.XJ * (-2.0 + (Nand1.Mp1.Cbg1.Cgb1.WSfac + Nand1.Mp1.Cbg1.Cgb1.WDfac)))) / Nand1.Mp1.Cbg1.Cgb1.L else 1.0);
//   Nand1.Mp1.Cbg1.Cgb1.DGAMMA = Nand1.Mp1.Cbg1.Cgb1.GAMMA * (if Nand1.Mp1.Cbg1.Cgb1.XJ > 0.0 then (-0.5 * (Nand1.Mp1.Cbg1.Cgb1.XD * (Nand1.Mp1.Cbg1.Cgb1.DSarg / Nand1.Mp1.Cbg1.Cgb1.WSfac + Nand1.Mp1.Cbg1.Cgb1.DBarg / Nand1.Mp1.Cbg1.Cgb1.WDfac))) / Nand1.Mp1.Cbg1.Cgb1.L else 0.0);
//   Nand1.Mp1.Cbg1.Cgb1.Wp = Nand1.Mp1.Cbg1.Cgb1.Sarg * Nand1.Mp1.Cbg1.Cgb1.XD;
//   Nand1.Mp1.Cbg1.Cgb1.WpXJ = if Nand1.Mp1.Cbg1.Cgb1.XJ > 0.0 then Nand1.Mp1.Cbg1.Cgb1.Wp / Nand1.Mp1.Cbg1.Cgb1.XJ else 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mp1.Cbg1.Cgb1.WpXJ + -0.01110777 * Nand1.Mp1.Cbg1.Cgb1.WpXJ ^ 2.0);
//   Nand1.Mp1.Cbg1.Cgb1.Wc = Nand1.Mp1.Cbg1.Cgb1.WcXJ * Nand1.Mp1.Cbg1.Cgb1.XJ;
//   Nand1.Mp1.Cbg1.Cgb1.Fs = if Nand1.Mp1.Cbg1.Cgb1.XJ > 0.0 then 1.0 + (Nand1.Mp1.Cbg1.Cgb1.LD - (Nand1.Mp1.Cbg1.Cgb1.LD + Nand1.Mp1.Cbg1.Cgb1.Wc) * sqrt(1.0 - (Nand1.Mp1.Cbg1.Cgb1.Wp / (Nand1.Mp1.Cbg1.Cgb1.XJ + Nand1.Mp1.Cbg1.Cgb1.Wp)) ^ 2.0)) / Nand1.Mp1.Cbg1.Cgb1.L else 1.0;
//   Nand1.Mp1.Cbg1.Cgb1.Vbody = Nand1.Mp1.Cbg1.Cgb1.GAMMA * (Nand1.Mp1.Cbg1.Cgb1.Fs * Nand1.Mp1.Cbg1.Cgb1.Sarg) + Nand1.Mp1.Cbg1.Cgb1.Fn * Nand1.Mp1.Cbg1.Cgb1.Sarg ^ 2.0;
//   Nand1.Mp1.Cbg1.Cgb1.Vth = Nand1.Mp1.Cbg1.Cgb1.Vfb + Real(Nand1.Mp1.Cbg1.Cgb1.Type) * (Nand1.Mp1.Cbg1.Cgb1.PHIval + (Nand1.Mp1.Cbg1.Cgb1.Vbody - Nand1.Mp1.Cbg1.Cgb1.SIGMA * Nand1.Mp1.Cbg1.Cgb1.vds));
//   Nand1.Mp1.Cbg1.Cgb1.CB = if noEvent(Nand1.Mp1.Cbg1.Cgb1.Vbody > 0.0) and noEvent(Nand1.Mp1.Cbg1.Cgb1.Sarg > 0.0) then (Nand1.Mp1.Cbg1.Cgb1.Vbody * Nand1.Mp1.Cbg1.Cgb1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.N = 1.0 + ((1.6021892e-19 * Nand1.Mp1.Cbg1.Cgb1.NFS) / Nand1.Mp1.Cbg1.Cgb1.COX + Nand1.Mp1.Cbg1.Cgb1.CB);
//   Nand1.Mp1.Cbg1.Cgb1.Von = if Nand1.Mp1.Cbg1.Cgb1.NFS > 0.0 then Real(Nand1.Mp1.Cbg1.Cgb1.Type) * Nand1.Mp1.Cbg1.Cgb1.Vth + Nand1.Mp1.Cbg1.Cgb1.N * Nand1.Mp1.Cbg1.Cgb1.Vt else Real(Nand1.Mp1.Cbg1.Cgb1.Type) * Nand1.Mp1.Cbg1.Cgb1.Vth;
//   Nand1.Mp1.Cbg1.Cgb1.Cval = Nand1.Mp1.Cbg1.Cgb1.L * Nand1.Mp1.Cbg1.Cgb1.CGB0 + (if noEvent(Nand1.Mp1.Cbg1.Cgb1.vgs < Nand1.Mp1.Cbg1.Cgb1.Von - Nand1.Mp1.Cbg1.Cgb1.PHIval) then Nand1.Mp1.Cbg1.Cgb1.COXval else if noEvent(Nand1.Mp1.Cbg1.Cgb1.vgs >= Nand1.Mp1.Cbg1.Cgb1.Von - Nand1.Mp1.Cbg1.Cgb1.PHIval) and noEvent(Nand1.Mp1.Cbg1.Cgb1.vgs < Nand1.Mp1.Cbg1.Cgb1.Von) then (Nand1.Mp1.Cbg1.Cgb1.COXval * (Nand1.Mp1.Cbg1.Cgb1.Von - Nand1.Mp1.Cbg1.Cgb1.vgs)) / Nand1.Mp1.Cbg1.Cgb1.PHIval else 0.0);
//   Nand1.Mp1.Cbg1.Cgb1.f1 = Nand1.Mp1.Cbg1.Cgb1.Cval * der(Nand1.Mp1.Cbg1.Cgb1.e1);
//   Nand1.Mp1.Cbg1.Cgb1.f2 = 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.DTempSq = Nand1.Mp1.Cbg1.Cgb1.DTemp ^ 2.0;
//   Nand1.Mp1.Cbg1.Cgb1.DTemp = Nand1.Mp1.Cbg1.Cgb1.e2 - Nand1.Mp1.Cbg1.Cgb1.Tnom;
//   Nand1.Mp1.Cbg1.Cgb1.e1 = Nand1.Mp1.Cbg1.Cgb1.BondCon1.e;
//   Nand1.Mp1.Cbg1.Cgb1.f1 = Nand1.Mp1.Cbg1.Cgb1.BondCon1.d * Nand1.Mp1.Cbg1.Cgb1.BondCon1.f;
//   Nand1.Mp1.Cbg1.Cgb1.e2 = Nand1.Mp1.Cbg1.Cgb1.BondCon2.e;
//   Nand1.Mp1.Cbg1.Cgb1.f2 = (-Nand1.Mp1.Cbg1.Cgb1.BondCon2.d) * Nand1.Mp1.Cbg1.Cgb1.BondCon2.f;
//   Nand1.Mp1.Cbg1.B4.fBondCon1.e = Nand1.Mp1.Cbg1.B4.eBondCon1.e;
//   Nand1.Mp1.Cbg1.B4.eBondCon1.f = Nand1.Mp1.Cbg1.B4.fBondCon1.f;
//   Nand1.Mp1.Cbg1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Cbg1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.e = Nand1.Mp1.Cbg1.BG2Heat1.port_b.T;
//   Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.e * Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.f = -Nand1.Mp1.Cbg1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Cbg1.B3.BondCon2.e = Nand1.Mp1.Cbg1.B3.BondCon1.e;
//   Nand1.Mp1.Cbg1.B3.BondCon2.f = Nand1.Mp1.Cbg1.B3.BondCon1.f;
//   Nand1.Mp1.Cbg1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Cbg1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Cbg1.v = Nand1.Mp1.Cbg1.p.v - Nand1.Mp1.Cbg1.n.v;
//   Nand1.Mp1.Cbg1.i = Nand1.Mp1.Cbg1.p.i;
//   Nand1.Mp1.Vsb.J1p3_1.f[2] = Nand1.Mp1.Vsb.J1p3_1.f[1];
//   Nand1.Mp1.Vsb.J1p3_1.f[3] = Nand1.Mp1.Vsb.J1p3_1.f[2];
//   Nand1.Mp1.Vsb.J1p3_1.e[1] + (Nand1.Mp1.Vsb.J1p3_1.e[2] + Nand1.Mp1.Vsb.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Vsb.J1p3_1.e[1] = Nand1.Mp1.Vsb.J1p3_1.BondCon1.d * Nand1.Mp1.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Vsb.J1p3_1.f[1] = Nand1.Mp1.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Vsb.J1p3_1.e[2] = Nand1.Mp1.Vsb.J1p3_1.BondCon2.d * Nand1.Mp1.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Vsb.J1p3_1.f[2] = Nand1.Mp1.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Vsb.J1p3_1.e[3] = Nand1.Mp1.Vsb.J1p3_1.BondCon3.d * Nand1.Mp1.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Vsb.J1p3_1.f[3] = Nand1.Mp1.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Vsb.B1.BondCon2.e = Nand1.Mp1.Vsb.B1.BondCon1.e;
//   Nand1.Mp1.Vsb.B1.BondCon2.f = Nand1.Mp1.Vsb.B1.BondCon1.f;
//   Nand1.Mp1.Vsb.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Vsb.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Vsb.B2.BondCon2.e = Nand1.Mp1.Vsb.B2.BondCon1.e;
//   Nand1.Mp1.Vsb.B2.BondCon2.f = Nand1.Mp1.Vsb.B2.BondCon1.f;
//   Nand1.Mp1.Vsb.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Vsb.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Vsb.El2BG1.BondCon1.e = Nand1.Mp1.Vsb.El2BG1.p.v;
//   Nand1.Mp1.Vsb.El2BG1.BondCon1.f = Nand1.Mp1.Vsb.El2BG1.p.i;
//   Nand1.Mp1.Vsb.BG2El1.BondCon1.e = Nand1.Mp1.Vsb.BG2El1.n.v;
//   Nand1.Mp1.Vsb.BG2El1.BondCon1.f = -Nand1.Mp1.Vsb.BG2El1.n.i;
//   Nand1.Mp1.Vsb.De1.OutPort1 = Nand1.Mp1.Vsb.De1.e;
//   Nand1.Mp1.Vsb.De1.f = 0.0;
//   Nand1.Mp1.Vsb.De1.e = Nand1.Mp1.Vsb.De1.BondCon1.e;
//   Nand1.Mp1.Vsb.De1.f = Nand1.Mp1.Vsb.De1.BondCon1.d * Nand1.Mp1.Vsb.De1.BondCon1.f;
//   Nand1.Mp1.Vsb.B3.BondCon2.e = Nand1.Mp1.Vsb.B3.BondCon1.e;
//   Nand1.Mp1.Vsb.B3.BondCon2.f = Nand1.Mp1.Vsb.B3.BondCon1.f;
//   Nand1.Mp1.Vsb.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Vsb.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Vsb.v = Nand1.Mp1.Vsb.p.v - Nand1.Mp1.Vsb.n.v;
//   Nand1.Mp1.Vsb.i = Nand1.Mp1.Vsb.p.i;
//   Nand1.Mp1.Rd.J1p3_1.f[2] = Nand1.Mp1.Rd.J1p3_1.f[1];
//   Nand1.Mp1.Rd.J1p3_1.f[3] = Nand1.Mp1.Rd.J1p3_1.f[2];
//   Nand1.Mp1.Rd.J1p3_1.e[1] + (Nand1.Mp1.Rd.J1p3_1.e[2] + Nand1.Mp1.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Rd.J1p3_1.e[1] = Nand1.Mp1.Rd.J1p3_1.BondCon1.d * Nand1.Mp1.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Rd.J1p3_1.f[1] = Nand1.Mp1.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Rd.J1p3_1.e[2] = Nand1.Mp1.Rd.J1p3_1.BondCon2.d * Nand1.Mp1.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Rd.J1p3_1.f[2] = Nand1.Mp1.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Rd.J1p3_1.e[3] = Nand1.Mp1.Rd.J1p3_1.BondCon3.d * Nand1.Mp1.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Rd.J1p3_1.f[3] = Nand1.Mp1.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Rd.B1.BondCon2.e = Nand1.Mp1.Rd.B1.BondCon1.e;
//   Nand1.Mp1.Rd.B1.BondCon2.f = Nand1.Mp1.Rd.B1.BondCon1.f;
//   Nand1.Mp1.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Rd.B2.BondCon2.e = Nand1.Mp1.Rd.B2.BondCon1.e;
//   Nand1.Mp1.Rd.B2.BondCon2.f = Nand1.Mp1.Rd.B2.BondCon1.f;
//   Nand1.Mp1.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Rd.El2BG1.BondCon1.e = Nand1.Mp1.Rd.El2BG1.p.v;
//   Nand1.Mp1.Rd.El2BG1.BondCon1.f = Nand1.Mp1.Rd.El2BG1.p.i;
//   Nand1.Mp1.Rd.BG2El1.BondCon1.e = Nand1.Mp1.Rd.BG2El1.n.v;
//   Nand1.Mp1.Rd.BG2El1.BondCon1.f = -Nand1.Mp1.Rd.BG2El1.n.i;
//   Nand1.Mp1.Rd.B3.BondCon2.e = Nand1.Mp1.Rd.B3.BondCon1.e;
//   Nand1.Mp1.Rd.B3.BondCon2.f = Nand1.Mp1.Rd.B3.BondCon1.f;
//   Nand1.Mp1.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Rd.RM1.Rval = Nand1.Mp1.Rd.RM1.R * (1.0 + (Nand1.Mp1.Rd.RM1.TR1 * Nand1.Mp1.Rd.RM1.DTemp + Nand1.Mp1.Rd.RM1.TR2 * Nand1.Mp1.Rd.RM1.DTempSq));
//   Nand1.Mp1.Rd.RM1.e1 = Nand1.Mp1.Rd.RM1.Rval * Nand1.Mp1.Rd.RM1.f1;
//   Nand1.Mp1.Rd.RM1.e1 * Nand1.Mp1.Rd.RM1.f1 = Nand1.Mp1.Rd.RM1.e2 * Nand1.Mp1.Rd.RM1.f2;
//   Nand1.Mp1.Rd.RM1.DTempSq = Nand1.Mp1.Rd.RM1.DTemp ^ 2.0;
//   Nand1.Mp1.Rd.RM1.DTemp = Nand1.Mp1.Rd.RM1.e2 - Nand1.Mp1.Rd.RM1.Tnom;
//   Nand1.Mp1.Rd.RM1.e1 = Nand1.Mp1.Rd.RM1.BondCon1.e;
//   Nand1.Mp1.Rd.RM1.f1 = Nand1.Mp1.Rd.RM1.BondCon1.d * Nand1.Mp1.Rd.RM1.BondCon1.f;
//   Nand1.Mp1.Rd.RM1.e2 = Nand1.Mp1.Rd.RM1.BondCon2.e;
//   Nand1.Mp1.Rd.RM1.f2 = (-Nand1.Mp1.Rd.RM1.BondCon2.d) * Nand1.Mp1.Rd.RM1.BondCon2.f;
//   Nand1.Mp1.Rd.B4.fBondCon1.e = Nand1.Mp1.Rd.B4.eBondCon1.e;
//   Nand1.Mp1.Rd.B4.eBondCon1.f = Nand1.Mp1.Rd.B4.fBondCon1.f;
//   Nand1.Mp1.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Rd.BG2Heat1.BondCon1.e = Nand1.Mp1.Rd.BG2Heat1.port_b.T;
//   Nand1.Mp1.Rd.BG2Heat1.BondCon1.e * Nand1.Mp1.Rd.BG2Heat1.BondCon1.f = -Nand1.Mp1.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Rd.v = Nand1.Mp1.Rd.p.v - Nand1.Mp1.Rd.n.v;
//   Nand1.Mp1.Rd.i = Nand1.Mp1.Rd.p.i;
//   Nand1.Mp1.Rs.J1p3_1.f[2] = Nand1.Mp1.Rs.J1p3_1.f[1];
//   Nand1.Mp1.Rs.J1p3_1.f[3] = Nand1.Mp1.Rs.J1p3_1.f[2];
//   Nand1.Mp1.Rs.J1p3_1.e[1] + (Nand1.Mp1.Rs.J1p3_1.e[2] + Nand1.Mp1.Rs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Rs.J1p3_1.e[1] = Nand1.Mp1.Rs.J1p3_1.BondCon1.d * Nand1.Mp1.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Rs.J1p3_1.f[1] = Nand1.Mp1.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Rs.J1p3_1.e[2] = Nand1.Mp1.Rs.J1p3_1.BondCon2.d * Nand1.Mp1.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Rs.J1p3_1.f[2] = Nand1.Mp1.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Rs.J1p3_1.e[3] = Nand1.Mp1.Rs.J1p3_1.BondCon3.d * Nand1.Mp1.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Rs.J1p3_1.f[3] = Nand1.Mp1.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Rs.B1.BondCon2.e = Nand1.Mp1.Rs.B1.BondCon1.e;
//   Nand1.Mp1.Rs.B1.BondCon2.f = Nand1.Mp1.Rs.B1.BondCon1.f;
//   Nand1.Mp1.Rs.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Rs.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Rs.B2.BondCon2.e = Nand1.Mp1.Rs.B2.BondCon1.e;
//   Nand1.Mp1.Rs.B2.BondCon2.f = Nand1.Mp1.Rs.B2.BondCon1.f;
//   Nand1.Mp1.Rs.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Rs.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Rs.El2BG1.BondCon1.e = Nand1.Mp1.Rs.El2BG1.p.v;
//   Nand1.Mp1.Rs.El2BG1.BondCon1.f = Nand1.Mp1.Rs.El2BG1.p.i;
//   Nand1.Mp1.Rs.BG2El1.BondCon1.e = Nand1.Mp1.Rs.BG2El1.n.v;
//   Nand1.Mp1.Rs.BG2El1.BondCon1.f = -Nand1.Mp1.Rs.BG2El1.n.i;
//   Nand1.Mp1.Rs.B3.BondCon2.e = Nand1.Mp1.Rs.B3.BondCon1.e;
//   Nand1.Mp1.Rs.B3.BondCon2.f = Nand1.Mp1.Rs.B3.BondCon1.f;
//   Nand1.Mp1.Rs.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Rs.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Rs.RM1.Rval = Nand1.Mp1.Rs.RM1.R * (1.0 + (Nand1.Mp1.Rs.RM1.TR1 * Nand1.Mp1.Rs.RM1.DTemp + Nand1.Mp1.Rs.RM1.TR2 * Nand1.Mp1.Rs.RM1.DTempSq));
//   Nand1.Mp1.Rs.RM1.e1 = Nand1.Mp1.Rs.RM1.Rval * Nand1.Mp1.Rs.RM1.f1;
//   Nand1.Mp1.Rs.RM1.e1 * Nand1.Mp1.Rs.RM1.f1 = Nand1.Mp1.Rs.RM1.e2 * Nand1.Mp1.Rs.RM1.f2;
//   Nand1.Mp1.Rs.RM1.DTempSq = Nand1.Mp1.Rs.RM1.DTemp ^ 2.0;
//   Nand1.Mp1.Rs.RM1.DTemp = Nand1.Mp1.Rs.RM1.e2 - Nand1.Mp1.Rs.RM1.Tnom;
//   Nand1.Mp1.Rs.RM1.e1 = Nand1.Mp1.Rs.RM1.BondCon1.e;
//   Nand1.Mp1.Rs.RM1.f1 = Nand1.Mp1.Rs.RM1.BondCon1.d * Nand1.Mp1.Rs.RM1.BondCon1.f;
//   Nand1.Mp1.Rs.RM1.e2 = Nand1.Mp1.Rs.RM1.BondCon2.e;
//   Nand1.Mp1.Rs.RM1.f2 = (-Nand1.Mp1.Rs.RM1.BondCon2.d) * Nand1.Mp1.Rs.RM1.BondCon2.f;
//   Nand1.Mp1.Rs.B4.fBondCon1.e = Nand1.Mp1.Rs.B4.eBondCon1.e;
//   Nand1.Mp1.Rs.B4.eBondCon1.f = Nand1.Mp1.Rs.B4.fBondCon1.f;
//   Nand1.Mp1.Rs.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Rs.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Rs.BG2Heat1.BondCon1.e = Nand1.Mp1.Rs.BG2Heat1.port_b.T;
//   Nand1.Mp1.Rs.BG2Heat1.BondCon1.e * Nand1.Mp1.Rs.BG2Heat1.BondCon1.f = -Nand1.Mp1.Rs.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Rs.v = Nand1.Mp1.Rs.p.v - Nand1.Mp1.Rs.n.v;
//   Nand1.Mp1.Rs.i = Nand1.Mp1.Rs.p.i;
//   if noEvent(Nand1.Mp1.Mpi.IDS0.u1 > 0.0) then
//   Nand1.Mp1.Mpi.IDS0.sig = 1.0;
//   Nand1.Mp1.Mpi.IDS0.vds = Nand1.Mp1.Mpi.IDS0.u1;
//   Nand1.Mp1.Mpi.IDS0.vgs = Nand1.Mp1.Mpi.IDS0.u2;
//   Nand1.Mp1.Mpi.IDS0.vbs = Nand1.Mp1.Mpi.IDS0.u3;
//   else
//   Nand1.Mp1.Mpi.IDS0.sig = -1.0;
//   Nand1.Mp1.Mpi.IDS0.vds = -Nand1.Mp1.Mpi.IDS0.u1;
//   Nand1.Mp1.Mpi.IDS0.vgs = Nand1.Mp1.Mpi.IDS0.u2 - Nand1.Mp1.Mpi.IDS0.u1;
//   Nand1.Mp1.Mpi.IDS0.vbs = Nand1.Mp1.Mpi.IDS0.u3 - Nand1.Mp1.Mpi.IDS0.u1;
//   end if;
//   (Nand1.Mp1.Mpi.IDS0.ids,Nand1.Mp1.Mpi.IDS0.Vfb,Nand1.Mp1.Mpi.IDS0.Vth,Nand1.Mp1.Mpi.IDS0.vdsat,Nand1.Mp1.Mpi.IDS0.vpof) = BondLib.Spice.Utilities.MOSeq3(Nand1.Mp1.Mpi.IDS0.vds,Nand1.Mp1.Mpi.IDS0.vgs,Nand1.Mp1.Mpi.IDS0.vbs,Nand1.Mp1.Mpi.IDS0.Tdev,Nand1.Mp1.Mpi.IDS0.sig,Nand1.Mp1.Mpi.IDS0.Type,Nand1.Mp1.Mpi.IDS0.Tnom,Nand1.Mp1.Mpi.IDS0.VFB,Nand1.Mp1.Mpi.IDS0.KP,Nand1.Mp1.Mpi.IDS0.GAMMA,Nand1.Mp1.Mpi.IDS0.PHI,Nand1.Mp1.Mpi.IDS0.COX,Nand1.Mp1.Mpi.IDS0.NFS,Nand1.Mp1.Mpi.IDS0.XJ,Nand1.Mp1.Mpi.IDS0.L,Nand1.Mp1.Mpi.IDS0.W,Nand1.Mp1.Mpi.IDS0.LD,Nand1.Mp1.Mpi.IDS0.XD,Nand1.Mp1.Mpi.IDS0.U0,Nand1.Mp1.Mpi.IDS0.VMAX,Nand1.Mp1.Mpi.IDS0.DELTA,Nand1.Mp1.Mpi.IDS0.KAPPA,Nand1.Mp1.Mpi.IDS0.ETA,Nand1.Mp1.Mpi.IDS0.THETA,Nand1.Mp1.Mpi.IDS0.EG,Nand1.Mp1.Mpi.IDS0.EMin,Nand1.Mp1.Mpi.IDS0.EMax);
//   Nand1.Mp1.Mpi.IDS0.vdsat1 = 0.0;
//   Nand1.Mp1.Mpi.IDS0.y = Nand1.Mp1.Mpi.IDS0.ids;
//   Nand1.Mp1.Mpi.IDS0.y1[1] = Nand1.Mp1.Mpi.IDS0.Vfb;
//   Nand1.Mp1.Mpi.IDS0.y1[2] = Nand1.Mp1.Mpi.IDS0.Vth;
//   Nand1.Mp1.Mpi.IDS0.y1[3] = Nand1.Mp1.Mpi.IDS0.vdsat;
//   Nand1.Mp1.Mpi.IDS0.y1[4] = Nand1.Mp1.Mpi.IDS0.vdsat1;
//   Nand1.Mp1.Mpi.IDS0.y1[5] = Nand1.Mp1.Mpi.IDS0.vpof;
//   Nand1.Mp1.Mpi.Tdev1.T = Nand1.Mp1.Mpi.Tdev1.port.T;
//   Nand1.Mp1.Mpi.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Vsg.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Vsg.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Vsg.J1p3_1.e[2] + Nand1.Mp1.Mpi.Vsg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.e[1] = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.f[1] = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.e[2] = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.e[3] = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Vsg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon2.e = Nand1.Mp1.Mpi.Vsg.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon2.f = Nand1.Mp1.Mpi.Vsg.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon2.e = Nand1.Mp1.Mpi.Vsg.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon2.f = Nand1.Mp1.Mpi.Vsg.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Vsg.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Vsg.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Vsg.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Vsg.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Vsg.De1.OutPort1 = Nand1.Mp1.Mpi.Vsg.De1.e;
//   Nand1.Mp1.Mpi.Vsg.De1.f = 0.0;
//   Nand1.Mp1.Mpi.Vsg.De1.e = Nand1.Mp1.Mpi.Vsg.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.De1.f = Nand1.Mp1.Mpi.Vsg.De1.BondCon1.d * Nand1.Mp1.Mpi.Vsg.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon2.e = Nand1.Mp1.Mpi.Vsg.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon2.f = Nand1.Mp1.Mpi.Vsg.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsg.v = Nand1.Mp1.Mpi.Vsg.p.v - Nand1.Mp1.Mpi.Vsg.n.v;
//   Nand1.Mp1.Mpi.Vsg.i = Nand1.Mp1.Mpi.Vsg.p.i;
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.f[2] = Nand1.Mp1.Mpi.Vsb.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.f[3] = Nand1.Mp1.Mpi.Vsb.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Vsb.J1p3_1.e[2] + Nand1.Mp1.Mpi.Vsb.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.e[1] = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.f[1] = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.e[2] = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.f[2] = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.e[3] = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Vsb.J1p3_1.f[3] = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon2.e = Nand1.Mp1.Mpi.Vsb.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon2.f = Nand1.Mp1.Mpi.Vsb.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon2.e = Nand1.Mp1.Mpi.Vsb.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon2.f = Nand1.Mp1.Mpi.Vsb.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Vsb.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Vsb.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Vsb.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Vsb.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Vsb.De1.OutPort1 = Nand1.Mp1.Mpi.Vsb.De1.e;
//   Nand1.Mp1.Mpi.Vsb.De1.f = 0.0;
//   Nand1.Mp1.Mpi.Vsb.De1.e = Nand1.Mp1.Mpi.Vsb.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.De1.f = Nand1.Mp1.Mpi.Vsb.De1.BondCon1.d * Nand1.Mp1.Mpi.Vsb.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon2.e = Nand1.Mp1.Mpi.Vsb.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon2.f = Nand1.Mp1.Mpi.Vsb.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsb.v = Nand1.Mp1.Mpi.Vsb.p.v - Nand1.Mp1.Mpi.Vsb.n.v;
//   Nand1.Mp1.Mpi.Vsb.i = Nand1.Mp1.Mpi.Vsb.p.i;
//   Nand1.Mp1.Mpi.Dsb.nlCM1.v = Nand1.Mp1.Mpi.Dsb.nlCM1.u;
//   Nand1.Mp1.Mpi.Dsb.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mp1.Mpi.Dsb.nlCM1.Tdev;
//   Nand1.Mp1.Mpi.Dsb.nlCM1.DTemp = Nand1.Mp1.Mpi.Dsb.nlCM1.Tdev - Nand1.Mp1.Mpi.Dsb.nlCM1.Tnom;
//   Nand1.Mp1.Mpi.Dsb.nlCM1.RTemp = Nand1.Mp1.Mpi.Dsb.nlCM1.Tdev / Nand1.Mp1.Mpi.Dsb.nlCM1.Tnom;
//   Nand1.Mp1.Mpi.Dsb.nlCM1.EGval = Nand1.Mp1.Mpi.Dsb.nlCM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Dsb.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Dsb.nlCM1.Tdev);
//   Nand1.Mp1.Mpi.Dsb.nlCM1.EGnom = Nand1.Mp1.Mpi.Dsb.nlCM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Dsb.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Dsb.nlCM1.Tnom);
//   Nand1.Mp1.Mpi.Dsb.nlCM1.PBval = Nand1.Mp1.Mpi.Dsb.nlCM1.PB * Nand1.Mp1.Mpi.Dsb.nlCM1.RTemp + (Nand1.Mp1.Mpi.Dsb.nlCM1.EGval + (-3.0 * (Nand1.Mp1.Mpi.Dsb.nlCM1.Vt * log(Nand1.Mp1.Mpi.Dsb.nlCM1.RTemp)) - Nand1.Mp1.Mpi.Dsb.nlCM1.EGnom * Nand1.Mp1.Mpi.Dsb.nlCM1.RTemp));
//   Nand1.Mp1.Mpi.Dsb.nlCM1.CJval = Nand1.Mp1.Mpi.Dsb.nlCM1.CJ * (1.0 + Nand1.Mp1.Mpi.Dsb.nlCM1.MJ * (1.0 + ((-Nand1.Mp1.Mpi.Dsb.nlCM1.PBval) / Nand1.Mp1.Mpi.Dsb.nlCM1.PB + 0.0004 * Nand1.Mp1.Mpi.Dsb.nlCM1.DTemp)));
//   Nand1.Mp1.Mpi.Dsb.nlCM1.CJSWval = Nand1.Mp1.Mpi.Dsb.nlCM1.CJSW * (1.0 + Nand1.Mp1.Mpi.Dsb.nlCM1.MJSW * (1.0 + ((-Nand1.Mp1.Mpi.Dsb.nlCM1.PBval) / Nand1.Mp1.Mpi.Dsb.nlCM1.PB + 0.0004 * Nand1.Mp1.Mpi.Dsb.nlCM1.DTemp)));
//   Nand1.Mp1.Mpi.Dsb.nlCM1.Cbulk = Nand1.Mp1.Mpi.Dsb.nlCM1.CJval * (if Nand1.Mp1.Mpi.Dsb.nlCM1.v > Nand1.Mp1.Mpi.Dsb.nlCM1.FC * Nand1.Mp1.Mpi.Dsb.nlCM1.PBval then (1.0 + ((Nand1.Mp1.Mpi.Dsb.nlCM1.MJ * Nand1.Mp1.Mpi.Dsb.nlCM1.v) / Nand1.Mp1.Mpi.Dsb.nlCM1.PBval - Nand1.Mp1.Mpi.Dsb.nlCM1.FC * (1.0 + Nand1.Mp1.Mpi.Dsb.nlCM1.MJ))) * (1.0 - Nand1.Mp1.Mpi.Dsb.nlCM1.FC) ^ (-1.0 - Nand1.Mp1.Mpi.Dsb.nlCM1.MJ) else abs(1.0 + (-Nand1.Mp1.Mpi.Dsb.nlCM1.v) / Nand1.Mp1.Mpi.Dsb.nlCM1.PBval) ^ (-Nand1.Mp1.Mpi.Dsb.nlCM1.MJ));
//   Nand1.Mp1.Mpi.Dsb.nlCM1.Cperi = Nand1.Mp1.Mpi.Dsb.nlCM1.CJSWval * (if Nand1.Mp1.Mpi.Dsb.nlCM1.v > Nand1.Mp1.Mpi.Dsb.nlCM1.FC * Nand1.Mp1.Mpi.Dsb.nlCM1.PBval then (1.0 + ((Nand1.Mp1.Mpi.Dsb.nlCM1.MJSW * Nand1.Mp1.Mpi.Dsb.nlCM1.v) / Nand1.Mp1.Mpi.Dsb.nlCM1.PBval - Nand1.Mp1.Mpi.Dsb.nlCM1.FC * (1.0 + Nand1.Mp1.Mpi.Dsb.nlCM1.MJSW))) * (1.0 - Nand1.Mp1.Mpi.Dsb.nlCM1.FC) ^ (-1.0 - Nand1.Mp1.Mpi.Dsb.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mp1.Mpi.Dsb.nlCM1.v) / Nand1.Mp1.Mpi.Dsb.nlCM1.PBval) ^ (-Nand1.Mp1.Mpi.Dsb.nlCM1.MJSW));
//   Nand1.Mp1.Mpi.Dsb.nlCM1.Cval = if Nand1.Mp1.Mpi.Dsb.nlCM1.A * Nand1.Mp1.Mpi.Dsb.nlCM1.Cbulk + Nand1.Mp1.Mpi.Dsb.nlCM1.P * Nand1.Mp1.Mpi.Dsb.nlCM1.Cperi > 0.0 then Nand1.Mp1.Mpi.Dsb.nlCM1.A * Nand1.Mp1.Mpi.Dsb.nlCM1.Cbulk + Nand1.Mp1.Mpi.Dsb.nlCM1.P * Nand1.Mp1.Mpi.Dsb.nlCM1.Cperi else 1e-16;
//   Nand1.Mp1.Mpi.Dsb.nlCM1.y = Nand1.Mp1.Mpi.Dsb.nlCM1.Cval;
//   Nand1.Mp1.Mpi.Dsb.Tdev1.T = Nand1.Mp1.Mpi.Dsb.Tdev1.port.T;
//   Nand1.Mp1.Mpi.Dsb.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[2] + Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[1] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[1] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[2] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.e[3] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.T_nom.e = Nand1.Mp1.Mpi.Dsb.Rd.T_nom.e0;
//   Nand1.Mp1.Mpi.Dsb.Rd.T_nom.e = Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.T_nom.f = (-Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.d) * Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.Rval = (Nand1.Mp1.Mpi.Dsb.Rd.R1.R * (1.0 + (Nand1.Mp1.Mpi.Dsb.Rd.R1.TR1 * Nand1.Mp1.Mpi.Dsb.Rd.R1.DTemp + Nand1.Mp1.Mpi.Dsb.Rd.R1.TR2 * Nand1.Mp1.Mpi.Dsb.Rd.R1.DTempSq))) / Nand1.Mp1.Mpi.Dsb.Rd.R1.Area;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.e1 = Nand1.Mp1.Mpi.Dsb.Rd.R1.Rval * Nand1.Mp1.Mpi.Dsb.Rd.R1.f1;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.e1 * Nand1.Mp1.Mpi.Dsb.Rd.R1.f1 = Nand1.Mp1.Mpi.Dsb.Rd.R1.e2 * Nand1.Mp1.Mpi.Dsb.Rd.R1.f2;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.DTempSq = Nand1.Mp1.Mpi.Dsb.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.DTemp = Nand1.Mp1.Mpi.Dsb.Rd.R1.e2 - Nand1.Mp1.Mpi.Dsb.Rd.R1.Tnom;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.e1 = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.f1 = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.e2 = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.R1.f2 = (-Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.d) * Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[2] + Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[1] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[1] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.f1 + Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.e1 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.f1 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.f2 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.f1 + Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.e1 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.f1 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.f2 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.open = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.open then Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.f else Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.control = true;
//   Nand1.Mp1.Mpi.Dsb.Rd.v = Nand1.Mp1.Mpi.Dsb.Rd.p.v - Nand1.Mp1.Mpi.Dsb.Rd.n.v;
//   Nand1.Mp1.Mpi.Dsb.Rd.i = Nand1.Mp1.Mpi.Dsb.Rd.p.i;
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.RTemp = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2 / Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Tnom;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EGval = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2);
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EGnom = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Tnom);
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.ISval = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.IS * exp((Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EGval - Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EGnom * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.RTemp) / Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Vt);
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.et = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e1 / Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Vt;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.f1 = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.ISval * (if noEvent(Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.et < Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMin) then Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.et - Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.et > Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMax) then Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.et - Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.et) + -1.0);
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2 * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.f2 = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e1 * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.f1;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.DTempSq = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.DTemp = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2 - Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.Tnom;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e1 = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.f1 = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.e2 = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.f2 = (-Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.d) * Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Dsb.DjM1.v = Nand1.Mp1.Mpi.Dsb.DjM1.p.v - Nand1.Mp1.Mpi.Dsb.DjM1.n.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.i = Nand1.Mp1.Mpi.Dsb.DjM1.p.i;
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[2] + Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[1] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[1] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[2] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.e[3] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Dsb.Vd.De1.OutPort1 = Nand1.Mp1.Mpi.Dsb.Vd.De1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.De1.f = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.De1.e = Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.De1.f = Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.v = Nand1.Mp1.Mpi.Dsb.Vd.p.v - Nand1.Mp1.Mpi.Dsb.Vd.n.v;
//   Nand1.Mp1.Mpi.Dsb.Vd.i = Nand1.Mp1.Mpi.Dsb.Vd.p.i;
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.mC1.C = Nand1.Mp1.Mpi.Dsb.VarC1.mC1.s;
//   Nand1.Mp1.Mpi.Dsb.VarC1.mC1.f = Nand1.Mp1.Mpi.Dsb.VarC1.mC1.C * der(Nand1.Mp1.Mpi.Dsb.VarC1.mC1.e);
//   Nand1.Mp1.Mpi.Dsb.VarC1.mC1.e = Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.mC1.f = Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.d * Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.v = Nand1.Mp1.Mpi.Dsb.VarC1.p.v - Nand1.Mp1.Mpi.Dsb.VarC1.n.v;
//   Nand1.Mp1.Mpi.Dsb.VarC1.i = Nand1.Mp1.Mpi.Dsb.VarC1.p.i;
//   Nand1.Mp1.Mpi.Dsb.v = Nand1.Mp1.Mpi.Dsb.p.v - Nand1.Mp1.Mpi.Dsb.n.v;
//   Nand1.Mp1.Mpi.Dsb.i = Nand1.Mp1.Mpi.Dsb.p.i;
//   Nand1.Mp1.Mpi.Ddb.nlCM1.v = Nand1.Mp1.Mpi.Ddb.nlCM1.u;
//   Nand1.Mp1.Mpi.Ddb.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mp1.Mpi.Ddb.nlCM1.Tdev;
//   Nand1.Mp1.Mpi.Ddb.nlCM1.DTemp = Nand1.Mp1.Mpi.Ddb.nlCM1.Tdev - Nand1.Mp1.Mpi.Ddb.nlCM1.Tnom;
//   Nand1.Mp1.Mpi.Ddb.nlCM1.RTemp = Nand1.Mp1.Mpi.Ddb.nlCM1.Tdev / Nand1.Mp1.Mpi.Ddb.nlCM1.Tnom;
//   Nand1.Mp1.Mpi.Ddb.nlCM1.EGval = Nand1.Mp1.Mpi.Ddb.nlCM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Ddb.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Ddb.nlCM1.Tdev);
//   Nand1.Mp1.Mpi.Ddb.nlCM1.EGnom = Nand1.Mp1.Mpi.Ddb.nlCM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Ddb.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Ddb.nlCM1.Tnom);
//   Nand1.Mp1.Mpi.Ddb.nlCM1.PBval = Nand1.Mp1.Mpi.Ddb.nlCM1.PB * Nand1.Mp1.Mpi.Ddb.nlCM1.RTemp + (Nand1.Mp1.Mpi.Ddb.nlCM1.EGval + (-3.0 * (Nand1.Mp1.Mpi.Ddb.nlCM1.Vt * log(Nand1.Mp1.Mpi.Ddb.nlCM1.RTemp)) - Nand1.Mp1.Mpi.Ddb.nlCM1.EGnom * Nand1.Mp1.Mpi.Ddb.nlCM1.RTemp));
//   Nand1.Mp1.Mpi.Ddb.nlCM1.CJval = Nand1.Mp1.Mpi.Ddb.nlCM1.CJ * (1.0 + Nand1.Mp1.Mpi.Ddb.nlCM1.MJ * (1.0 + ((-Nand1.Mp1.Mpi.Ddb.nlCM1.PBval) / Nand1.Mp1.Mpi.Ddb.nlCM1.PB + 0.0004 * Nand1.Mp1.Mpi.Ddb.nlCM1.DTemp)));
//   Nand1.Mp1.Mpi.Ddb.nlCM1.CJSWval = Nand1.Mp1.Mpi.Ddb.nlCM1.CJSW * (1.0 + Nand1.Mp1.Mpi.Ddb.nlCM1.MJSW * (1.0 + ((-Nand1.Mp1.Mpi.Ddb.nlCM1.PBval) / Nand1.Mp1.Mpi.Ddb.nlCM1.PB + 0.0004 * Nand1.Mp1.Mpi.Ddb.nlCM1.DTemp)));
//   Nand1.Mp1.Mpi.Ddb.nlCM1.Cbulk = Nand1.Mp1.Mpi.Ddb.nlCM1.CJval * (if Nand1.Mp1.Mpi.Ddb.nlCM1.v > Nand1.Mp1.Mpi.Ddb.nlCM1.FC * Nand1.Mp1.Mpi.Ddb.nlCM1.PBval then (1.0 + ((Nand1.Mp1.Mpi.Ddb.nlCM1.MJ * Nand1.Mp1.Mpi.Ddb.nlCM1.v) / Nand1.Mp1.Mpi.Ddb.nlCM1.PBval - Nand1.Mp1.Mpi.Ddb.nlCM1.FC * (1.0 + Nand1.Mp1.Mpi.Ddb.nlCM1.MJ))) * (1.0 - Nand1.Mp1.Mpi.Ddb.nlCM1.FC) ^ (-1.0 - Nand1.Mp1.Mpi.Ddb.nlCM1.MJ) else abs(1.0 + (-Nand1.Mp1.Mpi.Ddb.nlCM1.v) / Nand1.Mp1.Mpi.Ddb.nlCM1.PBval) ^ (-Nand1.Mp1.Mpi.Ddb.nlCM1.MJ));
//   Nand1.Mp1.Mpi.Ddb.nlCM1.Cperi = Nand1.Mp1.Mpi.Ddb.nlCM1.CJSWval * (if Nand1.Mp1.Mpi.Ddb.nlCM1.v > Nand1.Mp1.Mpi.Ddb.nlCM1.FC * Nand1.Mp1.Mpi.Ddb.nlCM1.PBval then (1.0 + ((Nand1.Mp1.Mpi.Ddb.nlCM1.MJSW * Nand1.Mp1.Mpi.Ddb.nlCM1.v) / Nand1.Mp1.Mpi.Ddb.nlCM1.PBval - Nand1.Mp1.Mpi.Ddb.nlCM1.FC * (1.0 + Nand1.Mp1.Mpi.Ddb.nlCM1.MJSW))) * (1.0 - Nand1.Mp1.Mpi.Ddb.nlCM1.FC) ^ (-1.0 - Nand1.Mp1.Mpi.Ddb.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mp1.Mpi.Ddb.nlCM1.v) / Nand1.Mp1.Mpi.Ddb.nlCM1.PBval) ^ (-Nand1.Mp1.Mpi.Ddb.nlCM1.MJSW));
//   Nand1.Mp1.Mpi.Ddb.nlCM1.Cval = if Nand1.Mp1.Mpi.Ddb.nlCM1.A * Nand1.Mp1.Mpi.Ddb.nlCM1.Cbulk + Nand1.Mp1.Mpi.Ddb.nlCM1.P * Nand1.Mp1.Mpi.Ddb.nlCM1.Cperi > 0.0 then Nand1.Mp1.Mpi.Ddb.nlCM1.A * Nand1.Mp1.Mpi.Ddb.nlCM1.Cbulk + Nand1.Mp1.Mpi.Ddb.nlCM1.P * Nand1.Mp1.Mpi.Ddb.nlCM1.Cperi else 1e-16;
//   Nand1.Mp1.Mpi.Ddb.nlCM1.y = Nand1.Mp1.Mpi.Ddb.nlCM1.Cval;
//   Nand1.Mp1.Mpi.Ddb.Tdev1.T = Nand1.Mp1.Mpi.Ddb.Tdev1.port.T;
//   Nand1.Mp1.Mpi.Ddb.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[2] + Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[1] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[1] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[2] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.e[3] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.T_nom.e = Nand1.Mp1.Mpi.Ddb.Rd.T_nom.e0;
//   Nand1.Mp1.Mpi.Ddb.Rd.T_nom.e = Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.T_nom.f = (-Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.d) * Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.Rval = (Nand1.Mp1.Mpi.Ddb.Rd.R1.R * (1.0 + (Nand1.Mp1.Mpi.Ddb.Rd.R1.TR1 * Nand1.Mp1.Mpi.Ddb.Rd.R1.DTemp + Nand1.Mp1.Mpi.Ddb.Rd.R1.TR2 * Nand1.Mp1.Mpi.Ddb.Rd.R1.DTempSq))) / Nand1.Mp1.Mpi.Ddb.Rd.R1.Area;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.e1 = Nand1.Mp1.Mpi.Ddb.Rd.R1.Rval * Nand1.Mp1.Mpi.Ddb.Rd.R1.f1;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.e1 * Nand1.Mp1.Mpi.Ddb.Rd.R1.f1 = Nand1.Mp1.Mpi.Ddb.Rd.R1.e2 * Nand1.Mp1.Mpi.Ddb.Rd.R1.f2;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.DTempSq = Nand1.Mp1.Mpi.Ddb.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.DTemp = Nand1.Mp1.Mpi.Ddb.Rd.R1.e2 - Nand1.Mp1.Mpi.Ddb.Rd.R1.Tnom;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.e1 = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.f1 = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.e2 = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.R1.f2 = (-Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.d) * Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[2] + Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[1] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[1] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.f1 + Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.e1 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.f1 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.f2 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.f1 + Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.e1 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.f1 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.f2 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.open = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.open then Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.f else Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.control = true;
//   Nand1.Mp1.Mpi.Ddb.Rd.v = Nand1.Mp1.Mpi.Ddb.Rd.p.v - Nand1.Mp1.Mpi.Ddb.Rd.n.v;
//   Nand1.Mp1.Mpi.Ddb.Rd.i = Nand1.Mp1.Mpi.Ddb.Rd.p.i;
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.RTemp = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2 / Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Tnom;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EGval = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2);
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EGnom = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Tnom);
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.ISval = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.IS * exp((Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EGval - Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EGnom * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.RTemp) / Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Vt);
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.et = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e1 / Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Vt;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.f1 = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.ISval * (if noEvent(Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.et < Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMin) then Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.et - Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.et > Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMax) then Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.et - Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.et) + -1.0);
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2 * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.f2 = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e1 * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.f1;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.DTempSq = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.DTemp = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2 - Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.Tnom;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e1 = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.f1 = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.e2 = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.f2 = (-Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.d) * Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Ddb.DjM1.v = Nand1.Mp1.Mpi.Ddb.DjM1.p.v - Nand1.Mp1.Mpi.Ddb.DjM1.n.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.i = Nand1.Mp1.Mpi.Ddb.DjM1.p.i;
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[2] + Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[1] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[1] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[2] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.e[3] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Ddb.Vd.De1.OutPort1 = Nand1.Mp1.Mpi.Ddb.Vd.De1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.De1.f = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.De1.e = Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.De1.f = Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.v = Nand1.Mp1.Mpi.Ddb.Vd.p.v - Nand1.Mp1.Mpi.Ddb.Vd.n.v;
//   Nand1.Mp1.Mpi.Ddb.Vd.i = Nand1.Mp1.Mpi.Ddb.Vd.p.i;
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.mC1.C = Nand1.Mp1.Mpi.Ddb.VarC1.mC1.s;
//   Nand1.Mp1.Mpi.Ddb.VarC1.mC1.f = Nand1.Mp1.Mpi.Ddb.VarC1.mC1.C * der(Nand1.Mp1.Mpi.Ddb.VarC1.mC1.e);
//   Nand1.Mp1.Mpi.Ddb.VarC1.mC1.e = Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.mC1.f = Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.d * Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.v = Nand1.Mp1.Mpi.Ddb.VarC1.p.v - Nand1.Mp1.Mpi.Ddb.VarC1.n.v;
//   Nand1.Mp1.Mpi.Ddb.VarC1.i = Nand1.Mp1.Mpi.Ddb.VarC1.p.i;
//   Nand1.Mp1.Mpi.Ddb.v = Nand1.Mp1.Mpi.Ddb.p.v - Nand1.Mp1.Mpi.Ddb.n.v;
//   Nand1.Mp1.Mpi.Ddb.i = Nand1.Mp1.Mpi.Ddb.p.i;
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Vsd.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Vsd.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Vsd.J1p3_1.e[2] + Nand1.Mp1.Mpi.Vsd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.e[1] = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.f[1] = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.e[2] = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.e[3] = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Vsd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon2.e = Nand1.Mp1.Mpi.Vsd.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon2.f = Nand1.Mp1.Mpi.Vsd.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon2.e = Nand1.Mp1.Mpi.Vsd.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon2.f = Nand1.Mp1.Mpi.Vsd.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Vsd.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Vsd.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Vsd.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Vsd.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Vsd.De1.OutPort1 = Nand1.Mp1.Mpi.Vsd.De1.e;
//   Nand1.Mp1.Mpi.Vsd.De1.f = 0.0;
//   Nand1.Mp1.Mpi.Vsd.De1.e = Nand1.Mp1.Mpi.Vsd.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.De1.f = Nand1.Mp1.Mpi.Vsd.De1.BondCon1.d * Nand1.Mp1.Mpi.Vsd.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon2.e = Nand1.Mp1.Mpi.Vsd.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon2.f = Nand1.Mp1.Mpi.Vsd.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Vsd.v = Nand1.Mp1.Mpi.Vsd.p.v - Nand1.Mp1.Mpi.Vsd.n.v;
//   Nand1.Mp1.Mpi.Vsd.i = Nand1.Mp1.Mpi.Vsd.p.i;
//   Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Isd.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Isd.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Isd.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Isd.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Isd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Isd.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Isd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Isd.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Isd.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Isd.J1p3_1.e[2] + Nand1.Mp1.Mpi.Isd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Isd.J1p3_1.e[1] = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.J1p3_1.f[1] = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.J1p3_1.e[2] = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Isd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Isd.J1p3_1.e[3] = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Isd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon2.e = Nand1.Mp1.Mpi.Isd.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon2.f = Nand1.Mp1.Mpi.Isd.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon2.e = Nand1.Mp1.Mpi.Isd.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon2.f = Nand1.Mp1.Mpi.Isd.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Isd.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Isd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Isd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Isd.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Isd.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B4.eBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Isd.B4.fBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Isd.B3.fBondCon1.e = Nand1.Mp1.Mpi.Isd.B3.eBondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B3.eBondCon1.f = Nand1.Mp1.Mpi.Isd.B3.fBondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B3.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Isd.B3.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Isd.I1.f0 = Nand1.Mp1.Mpi.Isd.I1.s;
//   Nand1.Mp1.Mpi.Isd.I1.f2 = Nand1.Mp1.Mpi.Isd.I1.f0;
//   Nand1.Mp1.Mpi.Isd.I1.e1 * Nand1.Mp1.Mpi.Isd.I1.f1 = Nand1.Mp1.Mpi.Isd.I1.e2 * Nand1.Mp1.Mpi.Isd.I1.f2;
//   Nand1.Mp1.Mpi.Isd.I1.e1 = Nand1.Mp1.Mpi.Isd.I1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.I1.f1 = Nand1.Mp1.Mpi.Isd.I1.BondCon1.d * Nand1.Mp1.Mpi.Isd.I1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.I1.e2 = Nand1.Mp1.Mpi.Isd.I1.BondCon2.e;
//   Nand1.Mp1.Mpi.Isd.I1.f2 = (-Nand1.Mp1.Mpi.Isd.I1.BondCon2.d) * Nand1.Mp1.Mpi.Isd.I1.BondCon2.f;
//   Nand1.Mp1.Mpi.Isd.v = Nand1.Mp1.Mpi.Isd.p.v - Nand1.Mp1.Mpi.Isd.n.v;
//   Nand1.Mp1.Mpi.Isd.i = Nand1.Mp1.Mpi.Isd.p.i;
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsg.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsg.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rsg.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rsg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsg.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsg.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsg.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsg.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsg.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsg.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Rsg.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Rsg.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Rsg.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Rsg.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.T_nom.e = Nand1.Mp1.Mpi.Rsg.T_nom.e0;
//   Nand1.Mp1.Mpi.Rsg.T_nom.e = Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.T_nom.f = (-Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.d) * Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.R1.Rval = (Nand1.Mp1.Mpi.Rsg.R1.R * (1.0 + (Nand1.Mp1.Mpi.Rsg.R1.TR1 * Nand1.Mp1.Mpi.Rsg.R1.DTemp + Nand1.Mp1.Mpi.Rsg.R1.TR2 * Nand1.Mp1.Mpi.Rsg.R1.DTempSq))) / Nand1.Mp1.Mpi.Rsg.R1.Area;
//   Nand1.Mp1.Mpi.Rsg.R1.e1 = Nand1.Mp1.Mpi.Rsg.R1.Rval * Nand1.Mp1.Mpi.Rsg.R1.f1;
//   Nand1.Mp1.Mpi.Rsg.R1.e1 * Nand1.Mp1.Mpi.Rsg.R1.f1 = Nand1.Mp1.Mpi.Rsg.R1.e2 * Nand1.Mp1.Mpi.Rsg.R1.f2;
//   Nand1.Mp1.Mpi.Rsg.R1.DTempSq = Nand1.Mp1.Mpi.Rsg.R1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Rsg.R1.DTemp = Nand1.Mp1.Mpi.Rsg.R1.e2 - Nand1.Mp1.Mpi.Rsg.R1.Tnom;
//   Nand1.Mp1.Mpi.Rsg.R1.e1 = Nand1.Mp1.Mpi.Rsg.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.R1.f1 = Nand1.Mp1.Mpi.Rsg.R1.BondCon1.d * Nand1.Mp1.Mpi.Rsg.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.R1.e2 = Nand1.Mp1.Mpi.Rsg.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.R1.f2 = (-Nand1.Mp1.Mpi.Rsg.R1.BondCon2.d) * Nand1.Mp1.Mpi.Rsg.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[1];
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[2];
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[1] + (Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[2] + Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[1] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[1] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[2] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.f[3] = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.e1;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.f1 + Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.e1 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.f1 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.d * Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.f2 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.d * Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.e1;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.f1 + Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.e1 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.f1 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.d * Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.f2 = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.d * Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.open = Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.open then Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.f else Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.e = Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.f = Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.d * Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Rsg.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Rsg.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Rsg.Sw1.control = true;
//   Nand1.Mp1.Mpi.Rsg.v = Nand1.Mp1.Mpi.Rsg.p.v - Nand1.Mp1.Mpi.Rsg.n.v;
//   Nand1.Mp1.Mpi.Rsg.i = Nand1.Mp1.Mpi.Rsg.p.i;
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rdg.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rdg.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rdg.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rdg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rdg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon2.e = Nand1.Mp1.Mpi.Rdg.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon2.f = Nand1.Mp1.Mpi.Rdg.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon2.e = Nand1.Mp1.Mpi.Rdg.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon2.f = Nand1.Mp1.Mpi.Rdg.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon2.e = Nand1.Mp1.Mpi.Rdg.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon2.f = Nand1.Mp1.Mpi.Rdg.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Rdg.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Rdg.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Rdg.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Rdg.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.T_nom.e = Nand1.Mp1.Mpi.Rdg.T_nom.e0;
//   Nand1.Mp1.Mpi.Rdg.T_nom.e = Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.T_nom.f = (-Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.d) * Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.R1.Rval = (Nand1.Mp1.Mpi.Rdg.R1.R * (1.0 + (Nand1.Mp1.Mpi.Rdg.R1.TR1 * Nand1.Mp1.Mpi.Rdg.R1.DTemp + Nand1.Mp1.Mpi.Rdg.R1.TR2 * Nand1.Mp1.Mpi.Rdg.R1.DTempSq))) / Nand1.Mp1.Mpi.Rdg.R1.Area;
//   Nand1.Mp1.Mpi.Rdg.R1.e1 = Nand1.Mp1.Mpi.Rdg.R1.Rval * Nand1.Mp1.Mpi.Rdg.R1.f1;
//   Nand1.Mp1.Mpi.Rdg.R1.e1 * Nand1.Mp1.Mpi.Rdg.R1.f1 = Nand1.Mp1.Mpi.Rdg.R1.e2 * Nand1.Mp1.Mpi.Rdg.R1.f2;
//   Nand1.Mp1.Mpi.Rdg.R1.DTempSq = Nand1.Mp1.Mpi.Rdg.R1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Rdg.R1.DTemp = Nand1.Mp1.Mpi.Rdg.R1.e2 - Nand1.Mp1.Mpi.Rdg.R1.Tnom;
//   Nand1.Mp1.Mpi.Rdg.R1.e1 = Nand1.Mp1.Mpi.Rdg.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.R1.f1 = Nand1.Mp1.Mpi.Rdg.R1.BondCon1.d * Nand1.Mp1.Mpi.Rdg.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.R1.e2 = Nand1.Mp1.Mpi.Rdg.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.R1.f2 = (-Nand1.Mp1.Mpi.Rdg.R1.BondCon2.d) * Nand1.Mp1.Mpi.Rdg.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[1];
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[2];
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[1] + (Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[2] + Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[1] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[1] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[2] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.f[3] = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.e1;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.f1 + Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.e1 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.f1 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.d * Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.f2 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.d * Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.e1;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.f1 + Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.e1 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.f1 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.d * Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.f2 = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.d * Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.open = Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.open then Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.f else Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.e = Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.f = Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.d * Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Rdg.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Rdg.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Rdg.Sw1.control = true;
//   Nand1.Mp1.Mpi.Rdg.v = Nand1.Mp1.Mpi.Rdg.p.v - Nand1.Mp1.Mpi.Rdg.n.v;
//   Nand1.Mp1.Mpi.Rdg.i = Nand1.Mp1.Mpi.Rdg.p.i;
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rbg.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rbg.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rbg.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rbg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rbg.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon2.e = Nand1.Mp1.Mpi.Rbg.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon2.f = Nand1.Mp1.Mpi.Rbg.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon2.e = Nand1.Mp1.Mpi.Rbg.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon2.f = Nand1.Mp1.Mpi.Rbg.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon2.e = Nand1.Mp1.Mpi.Rbg.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon2.f = Nand1.Mp1.Mpi.Rbg.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Rbg.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Rbg.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Rbg.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Rbg.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.T_nom.e = Nand1.Mp1.Mpi.Rbg.T_nom.e0;
//   Nand1.Mp1.Mpi.Rbg.T_nom.e = Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.T_nom.f = (-Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.d) * Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.R1.Rval = (Nand1.Mp1.Mpi.Rbg.R1.R * (1.0 + (Nand1.Mp1.Mpi.Rbg.R1.TR1 * Nand1.Mp1.Mpi.Rbg.R1.DTemp + Nand1.Mp1.Mpi.Rbg.R1.TR2 * Nand1.Mp1.Mpi.Rbg.R1.DTempSq))) / Nand1.Mp1.Mpi.Rbg.R1.Area;
//   Nand1.Mp1.Mpi.Rbg.R1.e1 = Nand1.Mp1.Mpi.Rbg.R1.Rval * Nand1.Mp1.Mpi.Rbg.R1.f1;
//   Nand1.Mp1.Mpi.Rbg.R1.e1 * Nand1.Mp1.Mpi.Rbg.R1.f1 = Nand1.Mp1.Mpi.Rbg.R1.e2 * Nand1.Mp1.Mpi.Rbg.R1.f2;
//   Nand1.Mp1.Mpi.Rbg.R1.DTempSq = Nand1.Mp1.Mpi.Rbg.R1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Rbg.R1.DTemp = Nand1.Mp1.Mpi.Rbg.R1.e2 - Nand1.Mp1.Mpi.Rbg.R1.Tnom;
//   Nand1.Mp1.Mpi.Rbg.R1.e1 = Nand1.Mp1.Mpi.Rbg.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.R1.f1 = Nand1.Mp1.Mpi.Rbg.R1.BondCon1.d * Nand1.Mp1.Mpi.Rbg.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.R1.e2 = Nand1.Mp1.Mpi.Rbg.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.R1.f2 = (-Nand1.Mp1.Mpi.Rbg.R1.BondCon2.d) * Nand1.Mp1.Mpi.Rbg.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[1];
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[2];
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[1] + (Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[2] + Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[1] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[1] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[2] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.f[3] = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.e1;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.f1 + Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.e1 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.f1 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.d * Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.f2 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.d * Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.e1;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.f1 + Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.e1 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.f1 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.d * Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.f2 = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.d * Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.open = Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.open then Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.f else Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.e = Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.f = Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.d * Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Rbg.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Rbg.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Rbg.Sw1.control = true;
//   Nand1.Mp1.Mpi.Rbg.v = Nand1.Mp1.Mpi.Rbg.p.v - Nand1.Mp1.Mpi.Rbg.n.v;
//   Nand1.Mp1.Mpi.Rbg.i = Nand1.Mp1.Mpi.Rbg.p.i;
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsd.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsd.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rsd.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rsd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsd.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsd.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsd.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsd.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsd.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsd.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsd.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.e = Nand1.Mp1.Mpi.Rsd.El2BG1.p.v;
//   Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.f = Nand1.Mp1.Mpi.Rsd.El2BG1.p.i;
//   Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.e = Nand1.Mp1.Mpi.Rsd.BG2El1.n.v;
//   Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.f = -Nand1.Mp1.Mpi.Rsd.BG2El1.n.i;
//   Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.T_nom.e = Nand1.Mp1.Mpi.Rsd.T_nom.e0;
//   Nand1.Mp1.Mpi.Rsd.T_nom.e = Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.T_nom.f = (-Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.d) * Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.R1.Rval = (Nand1.Mp1.Mpi.Rsd.R1.R * (1.0 + (Nand1.Mp1.Mpi.Rsd.R1.TR1 * Nand1.Mp1.Mpi.Rsd.R1.DTemp + Nand1.Mp1.Mpi.Rsd.R1.TR2 * Nand1.Mp1.Mpi.Rsd.R1.DTempSq))) / Nand1.Mp1.Mpi.Rsd.R1.Area;
//   Nand1.Mp1.Mpi.Rsd.R1.e1 = Nand1.Mp1.Mpi.Rsd.R1.Rval * Nand1.Mp1.Mpi.Rsd.R1.f1;
//   Nand1.Mp1.Mpi.Rsd.R1.e1 * Nand1.Mp1.Mpi.Rsd.R1.f1 = Nand1.Mp1.Mpi.Rsd.R1.e2 * Nand1.Mp1.Mpi.Rsd.R1.f2;
//   Nand1.Mp1.Mpi.Rsd.R1.DTempSq = Nand1.Mp1.Mpi.Rsd.R1.DTemp ^ 2.0;
//   Nand1.Mp1.Mpi.Rsd.R1.DTemp = Nand1.Mp1.Mpi.Rsd.R1.e2 - Nand1.Mp1.Mpi.Rsd.R1.Tnom;
//   Nand1.Mp1.Mpi.Rsd.R1.e1 = Nand1.Mp1.Mpi.Rsd.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.R1.f1 = Nand1.Mp1.Mpi.Rsd.R1.BondCon1.d * Nand1.Mp1.Mpi.Rsd.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.R1.e2 = Nand1.Mp1.Mpi.Rsd.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.R1.f2 = (-Nand1.Mp1.Mpi.Rsd.R1.BondCon2.d) * Nand1.Mp1.Mpi.Rsd.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[1];
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[2];
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[1] + (Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[2] + Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[1] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[1] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[2] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[2] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.e[3] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.f[3] = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[1];
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[2];
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[1] + (Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[2] + Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[1] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[1] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.d * Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[2] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[2] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.d * Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.e[3] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.f[3] = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.d * Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.e1;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.f1 + Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.e1 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.f1 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.d * Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.e2 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.f2 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.d * Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.e1;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.f1 + Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.e1 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.f1 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.d * Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.e2 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.f2 = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.d * Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.open = Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.open then Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.f else Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.e = Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.f = Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.d * Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.d = -1.0;
//   Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.d = 1.0;
//   Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.e = Nand1.Mp1.Mpi.Rsd.BG2Heat1.port_b.T;
//   Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.e * Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.f = -Nand1.Mp1.Mpi.Rsd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Mpi.Rsd.Sw1.control = true;
//   Nand1.Mp1.Mpi.Rsd.v = Nand1.Mp1.Mpi.Rsd.p.v - Nand1.Mp1.Mpi.Rsd.n.v;
//   Nand1.Mp1.Mpi.Rsd.i = Nand1.Mp1.Mpi.Rsd.p.i;
//   Nand1.Mp1.T_nom.BG2Heat1.BondCon1.e = Nand1.Mp1.T_nom.BG2Heat1.port_b.T;
//   Nand1.Mp1.T_nom.BG2Heat1.BondCon1.e * Nand1.Mp1.T_nom.BG2Heat1.BondCon1.f = -Nand1.Mp1.T_nom.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.T_nom.Tabs.e0 = Nand1.Mp1.T_nom.Tabs.s;
//   Nand1.Mp1.T_nom.Tabs.e = Nand1.Mp1.T_nom.Tabs.e0;
//   Nand1.Mp1.T_nom.Tabs.e = Nand1.Mp1.T_nom.Tabs.BondCon1.e;
//   Nand1.Mp1.T_nom.Tabs.f = (-Nand1.Mp1.T_nom.Tabs.BondCon1.d) * Nand1.Mp1.T_nom.Tabs.BondCon1.f;
//   Nand1.Mp1.T_nom.B1.fBondCon1.e = Nand1.Mp1.T_nom.B1.eBondCon1.e;
//   Nand1.Mp1.T_nom.B1.eBondCon1.f = Nand1.Mp1.T_nom.B1.fBondCon1.f;
//   Nand1.Mp1.T_nom.B1.eBondCon1.d = -1.0;
//   Nand1.Mp1.T_nom.B1.fBondCon1.d = 1.0;
//   Nand1.Mp1.T_nom.Tabs.s = Nand1.Mp1.T_nom.T;
//   Nand1.Mp1.Sw1.B1.BondCon2.e = Nand1.Mp1.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Sw1.B1.BondCon2.f = Nand1.Mp1.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Sw1.B2.BondCon2.e = Nand1.Mp1.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Sw1.B2.BondCon2.f = Nand1.Mp1.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Sw1.B3.BondCon2.e = Nand1.Mp1.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Sw1.B3.BondCon2.f = Nand1.Mp1.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Sw1.Heat2BG1.BondCon1.e = Nand1.Mp1.Sw1.Heat2BG1.port_a.T;
//   Nand1.Mp1.Sw1.Heat2BG1.BondCon1.e * Nand1.Mp1.Sw1.Heat2BG1.BondCon1.f = Nand1.Mp1.Sw1.Heat2BG1.port_a.Q_flow;
//   Nand1.Mp1.Sw1.BG2Heat1.BondCon1.e = Nand1.Mp1.Sw1.BG2Heat1.port_b.T;
//   Nand1.Mp1.Sw1.BG2Heat1.BondCon1.e * Nand1.Mp1.Sw1.BG2Heat1.BondCon1.f = -Nand1.Mp1.Sw1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp1.Sw1.BG2Heat2.BondCon1.e = Nand1.Mp1.Sw1.BG2Heat2.port_b.T;
//   Nand1.Mp1.Sw1.BG2Heat2.BondCon1.e * Nand1.Mp1.Sw1.BG2Heat2.BondCon1.f = -Nand1.Mp1.Sw1.BG2Heat2.port_b.Q_flow;
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mp1.Sw1.Sw1.J1p3_1.f[1];
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mp1.Sw1.Sw1.J1p3_1.f[2];
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.e[1] + (Nand1.Mp1.Sw1.Sw1.J1p3_1.e[2] + Nand1.Mp1.Sw1.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.e[1] = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.d * Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.f[1] = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.e[2] = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.d * Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.e[3] = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.d * Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon2.e = Nand1.Mp1.Sw1.Sw1.B1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon2.f = Nand1.Mp1.Sw1.Sw1.B1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon2.e = Nand1.Mp1.Sw1.Sw1.B2.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon2.f = Nand1.Mp1.Sw1.Sw1.B2.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mp1.Sw1.Sw1.J0p3_1.e[1];
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mp1.Sw1.Sw1.J0p3_1.e[2];
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.f[1] + (Nand1.Mp1.Sw1.Sw1.J0p3_1.f[2] + Nand1.Mp1.Sw1.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.e[1] = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.f[1] = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.d * Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.f[2] = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.d * Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.f[3] = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.d * Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon2.e = Nand1.Mp1.Sw1.Sw1.B4.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon2.f = Nand1.Mp1.Sw1.Sw1.B4.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.e2 = Nand1.Mp1.Sw1.Sw1.j0p2_1.e1;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.f1 + Nand1.Mp1.Sw1.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.e1 = Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.f1 = Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.d * Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.e2 = Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.f2 = Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.d * Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.e2 = Nand1.Mp1.Sw1.Sw1.j0p2_2.e1;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.f1 + Nand1.Mp1.Sw1.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.e1 = Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.f1 = Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.d * Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.e2 = Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.f2 = Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.d * Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp1.Sw1.Sw1.Sw1.open = Nand1.Mp1.Sw1.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp1.Sw1.Sw1.Sw1.open then Nand1.Mp1.Sw1.Sw1.Sw1.f else Nand1.Mp1.Sw1.Sw1.Sw1.e;
//   Nand1.Mp1.Sw1.Sw1.Sw1.e = Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.Sw1.f = Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.d * Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon2.e = Nand1.Mp1.Sw1.Sw1.B3.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon2.f = Nand1.Mp1.Sw1.Sw1.B3.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Vsd.J1p3_1.f[2] = Nand1.Mp1.Vsd.J1p3_1.f[1];
//   Nand1.Mp1.Vsd.J1p3_1.f[3] = Nand1.Mp1.Vsd.J1p3_1.f[2];
//   Nand1.Mp1.Vsd.J1p3_1.e[1] + (Nand1.Mp1.Vsd.J1p3_1.e[2] + Nand1.Mp1.Vsd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp1.Vsd.J1p3_1.e[1] = Nand1.Mp1.Vsd.J1p3_1.BondCon1.d * Nand1.Mp1.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Vsd.J1p3_1.f[1] = Nand1.Mp1.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Vsd.J1p3_1.e[2] = Nand1.Mp1.Vsd.J1p3_1.BondCon2.d * Nand1.Mp1.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Vsd.J1p3_1.f[2] = Nand1.Mp1.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Vsd.J1p3_1.e[3] = Nand1.Mp1.Vsd.J1p3_1.BondCon3.d * Nand1.Mp1.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Vsd.J1p3_1.f[3] = Nand1.Mp1.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Vsd.B1.BondCon2.e = Nand1.Mp1.Vsd.B1.BondCon1.e;
//   Nand1.Mp1.Vsd.B1.BondCon2.f = Nand1.Mp1.Vsd.B1.BondCon1.f;
//   Nand1.Mp1.Vsd.B1.BondCon1.d = -1.0;
//   Nand1.Mp1.Vsd.B1.BondCon2.d = 1.0;
//   Nand1.Mp1.Vsd.B2.BondCon2.e = Nand1.Mp1.Vsd.B2.BondCon1.e;
//   Nand1.Mp1.Vsd.B2.BondCon2.f = Nand1.Mp1.Vsd.B2.BondCon1.f;
//   Nand1.Mp1.Vsd.B2.BondCon1.d = -1.0;
//   Nand1.Mp1.Vsd.B2.BondCon2.d = 1.0;
//   Nand1.Mp1.Vsd.El2BG1.BondCon1.e = Nand1.Mp1.Vsd.El2BG1.p.v;
//   Nand1.Mp1.Vsd.El2BG1.BondCon1.f = Nand1.Mp1.Vsd.El2BG1.p.i;
//   Nand1.Mp1.Vsd.BG2El1.BondCon1.e = Nand1.Mp1.Vsd.BG2El1.n.v;
//   Nand1.Mp1.Vsd.BG2El1.BondCon1.f = -Nand1.Mp1.Vsd.BG2El1.n.i;
//   Nand1.Mp1.Vsd.De1.OutPort1 = Nand1.Mp1.Vsd.De1.e;
//   Nand1.Mp1.Vsd.De1.f = 0.0;
//   Nand1.Mp1.Vsd.De1.e = Nand1.Mp1.Vsd.De1.BondCon1.e;
//   Nand1.Mp1.Vsd.De1.f = Nand1.Mp1.Vsd.De1.BondCon1.d * Nand1.Mp1.Vsd.De1.BondCon1.f;
//   Nand1.Mp1.Vsd.B3.BondCon2.e = Nand1.Mp1.Vsd.B3.BondCon1.e;
//   Nand1.Mp1.Vsd.B3.BondCon2.f = Nand1.Mp1.Vsd.B3.BondCon1.f;
//   Nand1.Mp1.Vsd.B3.BondCon1.d = -1.0;
//   Nand1.Mp1.Vsd.B3.BondCon2.d = 1.0;
//   Nand1.Mp1.Vsd.v = Nand1.Mp1.Vsd.p.v - Nand1.Mp1.Vsd.n.v;
//   Nand1.Mp1.Vsd.i = Nand1.Mp1.Vsd.p.i;
//   Nand1.Mp1.Sw1.control = true;
//   Nand1.Mp2.Csg1.J1p3_1.f[2] = Nand1.Mp2.Csg1.J1p3_1.f[1];
//   Nand1.Mp2.Csg1.J1p3_1.f[3] = Nand1.Mp2.Csg1.J1p3_1.f[2];
//   Nand1.Mp2.Csg1.J1p3_1.e[1] + (Nand1.Mp2.Csg1.J1p3_1.e[2] + Nand1.Mp2.Csg1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Csg1.J1p3_1.e[1] = Nand1.Mp2.Csg1.J1p3_1.BondCon1.d * Nand1.Mp2.Csg1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Csg1.J1p3_1.f[1] = Nand1.Mp2.Csg1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Csg1.J1p3_1.e[2] = Nand1.Mp2.Csg1.J1p3_1.BondCon2.d * Nand1.Mp2.Csg1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Csg1.J1p3_1.f[2] = Nand1.Mp2.Csg1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Csg1.J1p3_1.e[3] = Nand1.Mp2.Csg1.J1p3_1.BondCon3.d * Nand1.Mp2.Csg1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Csg1.J1p3_1.f[3] = Nand1.Mp2.Csg1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Csg1.B1.BondCon2.e = Nand1.Mp2.Csg1.B1.BondCon1.e;
//   Nand1.Mp2.Csg1.B1.BondCon2.f = Nand1.Mp2.Csg1.B1.BondCon1.f;
//   Nand1.Mp2.Csg1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Csg1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Csg1.B2.BondCon2.e = Nand1.Mp2.Csg1.B2.BondCon1.e;
//   Nand1.Mp2.Csg1.B2.BondCon2.f = Nand1.Mp2.Csg1.B2.BondCon1.f;
//   Nand1.Mp2.Csg1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Csg1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Csg1.El2BG1.BondCon1.e = Nand1.Mp2.Csg1.El2BG1.p.v;
//   Nand1.Mp2.Csg1.El2BG1.BondCon1.f = Nand1.Mp2.Csg1.El2BG1.p.i;
//   Nand1.Mp2.Csg1.BG2El1.BondCon1.e = Nand1.Mp2.Csg1.BG2El1.n.v;
//   Nand1.Mp2.Csg1.BG2El1.BondCon1.f = -Nand1.Mp2.Csg1.BG2El1.n.i;
//   Nand1.Mp2.Csg1.Cgs1.RTemp = Nand1.Mp2.Csg1.Cgs1.e2 / Nand1.Mp2.Csg1.Cgs1.Tnom;
//   Nand1.Mp2.Csg1.Cgs1.facTemp = Nand1.Mp2.Csg1.Cgs1.RTemp ^ 1.5;
//   Nand1.Mp2.Csg1.Cgs1.Vt = 8.61727503842867e-05 * Nand1.Mp2.Csg1.Cgs1.e2;
//   Nand1.Mp2.Csg1.Cgs1.EGref = Nand1.Mp2.Csg1.Cgs1.EG + (-0.000702 * Nand1.Mp2.Csg1.Cgs1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Csg1.Cgs1.Tnom);
//   Nand1.Mp2.Csg1.Cgs1.EGval = Nand1.Mp2.Csg1.Cgs1.EG + (-0.000702 * Nand1.Mp2.Csg1.Cgs1.e2 ^ 2.0) / (1108.0 + Nand1.Mp2.Csg1.Cgs1.e2);
//   Nand1.Mp2.Csg1.Cgs1.PHIval = Nand1.Mp2.Csg1.Cgs1.RTemp * Nand1.Mp2.Csg1.Cgs1.PHI + (Nand1.Mp2.Csg1.Cgs1.EGval + (-3.0 * (Nand1.Mp2.Csg1.Cgs1.Vt * log(Nand1.Mp2.Csg1.Cgs1.RTemp)) - Nand1.Mp2.Csg1.Cgs1.RTemp * Nand1.Mp2.Csg1.Cgs1.EGref));
//   Nand1.Mp2.Csg1.Cgs1.Vfb = Nand1.Mp2.Csg1.Cgs1.VFB + Real(Nand1.Mp2.Csg1.Cgs1.Type) * (Nand1.Mp2.Csg1.Cgs1.PHIval / 2.0 + ((-Nand1.Mp2.Csg1.Cgs1.PHI) / 2.0 + (Nand1.Mp2.Csg1.Cgs1.EGref / 2.0 + (-Nand1.Mp2.Csg1.Cgs1.EGval) / 2.0)));
//   Nand1.Mp2.Csg1.Cgs1.KPval = Nand1.Mp2.Csg1.Cgs1.KP / Nand1.Mp2.Csg1.Cgs1.facTemp;
//   Nand1.Mp2.Csg1.Cgs1.BETA = (Nand1.Mp2.Csg1.Cgs1.KPval * Nand1.Mp2.Csg1.Cgs1.W) / Nand1.Mp2.Csg1.Cgs1.L;
//   if noEvent(Nand1.Mp2.Csg1.Cgs1.u1 > 0.0) then
//   Nand1.Mp2.Csg1.Cgs1.sig = 1.0;
//   Nand1.Mp2.Csg1.Cgs1.vds = Nand1.Mp2.Csg1.Cgs1.u1;
//   Nand1.Mp2.Csg1.Cgs1.vgs = Nand1.Mp2.Csg1.Cgs1.e1 + Nand1.Mp2.Csg1.Cgs1.u2;
//   Nand1.Mp2.Csg1.Cgs1.vbs = Nand1.Mp2.Csg1.Cgs1.u2;
//   else
//   Nand1.Mp2.Csg1.Cgs1.sig = -1.0;
//   Nand1.Mp2.Csg1.Cgs1.vds = -Nand1.Mp2.Csg1.Cgs1.u1;
//   Nand1.Mp2.Csg1.Cgs1.vgs = Nand1.Mp2.Csg1.Cgs1.e1 - Nand1.Mp2.Csg1.Cgs1.u1;
//   Nand1.Mp2.Csg1.Cgs1.vbs = Nand1.Mp2.Csg1.Cgs1.u2 - Nand1.Mp2.Csg1.Cgs1.u1;
//   end if;
//   Nand1.Mp2.Csg1.Cgs1.PHIroot = sqrt(Nand1.Mp2.Csg1.Cgs1.PHIval);
//   Nand1.Mp2.Csg1.Cgs1.PHI3 = Nand1.Mp2.Csg1.Cgs1.PHIval * Nand1.Mp2.Csg1.Cgs1.PHIroot;
//   Nand1.Mp2.Csg1.Cgs1.Sarg = if Nand1.Mp2.Csg1.Cgs1.vbs <= 0.0 then sqrt(Nand1.Mp2.Csg1.Cgs1.PHIval - Nand1.Mp2.Csg1.Cgs1.vbs) else Nand1.Mp2.Csg1.Cgs1.PHIroot / (1.0 + Nand1.Mp2.Csg1.Cgs1.vbs / (Nand1.Mp2.Csg1.Cgs1.PHIval * 2.0));
//   Nand1.Mp2.Csg1.Cgs1.DSarg = 0.0;
//   Nand1.Mp2.Csg1.Cgs1.Barg = 0.0;
//   Nand1.Mp2.Csg1.Cgs1.DBarg = 0.0;
//   Nand1.Mp2.Csg1.Cgs1.WS = Nand1.Mp2.Csg1.Cgs1.XD * Nand1.Mp2.Csg1.Cgs1.Sarg;
//   Nand1.Mp2.Csg1.Cgs1.WD = Nand1.Mp2.Csg1.Cgs1.XD * Nand1.Mp2.Csg1.Cgs1.Barg;
//   Nand1.Mp2.Csg1.Cgs1.WSfac = if Nand1.Mp2.Csg1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp2.Csg1.Cgs1.WS) / Nand1.Mp2.Csg1.Cgs1.XJ) else 0.0;
//   Nand1.Mp2.Csg1.Cgs1.WDfac = if Nand1.Mp2.Csg1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp2.Csg1.Cgs1.WD) / Nand1.Mp2.Csg1.Cgs1.XJ) else 0.0;
//   Nand1.Mp2.Csg1.Cgs1.GAMMAval = Nand1.Mp2.Csg1.Cgs1.GAMMA * (if Nand1.Mp2.Csg1.Cgs1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mp2.Csg1.Cgs1.XJ * (-2.0 + (Nand1.Mp2.Csg1.Cgs1.WSfac + Nand1.Mp2.Csg1.Cgs1.WDfac)))) / Nand1.Mp2.Csg1.Cgs1.L else 1.0);
//   Nand1.Mp2.Csg1.Cgs1.DGAMMA = Nand1.Mp2.Csg1.Cgs1.GAMMA * (if Nand1.Mp2.Csg1.Cgs1.XJ > 0.0 then (-0.5 * (Nand1.Mp2.Csg1.Cgs1.XD * (Nand1.Mp2.Csg1.Cgs1.DSarg / Nand1.Mp2.Csg1.Cgs1.WSfac + Nand1.Mp2.Csg1.Cgs1.DBarg / Nand1.Mp2.Csg1.Cgs1.WDfac))) / Nand1.Mp2.Csg1.Cgs1.L else 0.0);
//   Nand1.Mp2.Csg1.Cgs1.Wp = Nand1.Mp2.Csg1.Cgs1.Sarg * Nand1.Mp2.Csg1.Cgs1.XD;
//   Nand1.Mp2.Csg1.Cgs1.WpXJ = if Nand1.Mp2.Csg1.Cgs1.XJ > 0.0 then Nand1.Mp2.Csg1.Cgs1.Wp / Nand1.Mp2.Csg1.Cgs1.XJ else 0.0;
//   Nand1.Mp2.Csg1.Cgs1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mp2.Csg1.Cgs1.WpXJ + -0.01110777 * Nand1.Mp2.Csg1.Cgs1.WpXJ ^ 2.0);
//   Nand1.Mp2.Csg1.Cgs1.Wc = Nand1.Mp2.Csg1.Cgs1.WcXJ * Nand1.Mp2.Csg1.Cgs1.XJ;
//   Nand1.Mp2.Csg1.Cgs1.Fs = if Nand1.Mp2.Csg1.Cgs1.XJ > 0.0 then 1.0 + (Nand1.Mp2.Csg1.Cgs1.LD - (Nand1.Mp2.Csg1.Cgs1.LD + Nand1.Mp2.Csg1.Cgs1.Wc) * sqrt(1.0 - (Nand1.Mp2.Csg1.Cgs1.Wp / (Nand1.Mp2.Csg1.Cgs1.XJ + Nand1.Mp2.Csg1.Cgs1.Wp)) ^ 2.0)) / Nand1.Mp2.Csg1.Cgs1.L else 1.0;
//   Nand1.Mp2.Csg1.Cgs1.Vbody = Nand1.Mp2.Csg1.Cgs1.GAMMA * (Nand1.Mp2.Csg1.Cgs1.Fs * Nand1.Mp2.Csg1.Cgs1.Sarg) + Nand1.Mp2.Csg1.Cgs1.Fn * Nand1.Mp2.Csg1.Cgs1.Sarg ^ 2.0;
//   Nand1.Mp2.Csg1.Cgs1.Vth = Nand1.Mp2.Csg1.Cgs1.Vfb + Real(Nand1.Mp2.Csg1.Cgs1.Type) * (Nand1.Mp2.Csg1.Cgs1.PHIval + (Nand1.Mp2.Csg1.Cgs1.Vbody - Nand1.Mp2.Csg1.Cgs1.SIGMA * Nand1.Mp2.Csg1.Cgs1.vds));
//   Nand1.Mp2.Csg1.Cgs1.CB = if noEvent(Nand1.Mp2.Csg1.Cgs1.Vbody > 0.0) and noEvent(Nand1.Mp2.Csg1.Cgs1.Sarg > 0.0) then (Nand1.Mp2.Csg1.Cgs1.Vbody * Nand1.Mp2.Csg1.Cgs1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mp2.Csg1.Cgs1.N = 1.0 + ((1.6021892e-19 * Nand1.Mp2.Csg1.Cgs1.NFS) / Nand1.Mp2.Csg1.Cgs1.COX + Nand1.Mp2.Csg1.Cgs1.CB);
//   Nand1.Mp2.Csg1.Cgs1.Von = if Nand1.Mp2.Csg1.Cgs1.NFS > 0.0 then Real(Nand1.Mp2.Csg1.Cgs1.Type) * Nand1.Mp2.Csg1.Cgs1.Vth + Nand1.Mp2.Csg1.Cgs1.N * Nand1.Mp2.Csg1.Cgs1.Vt else Real(Nand1.Mp2.Csg1.Cgs1.Type) * Nand1.Mp2.Csg1.Cgs1.Vth;
//   if noEvent(Nand1.Mp2.Csg1.Cgs1.sig > 0.0) then
//   Nand1.Mp2.Csg1.Cgs1.Cval = Nand1.Mp2.Csg1.Cgs1.W * Nand1.Mp2.Csg1.Cgs1.CGS0 + (if noEvent(Nand1.Mp2.Csg1.Cgs1.vgs < Nand1.Mp2.Csg1.Cgs1.Von - Nand1.Mp2.Csg1.Cgs1.PHIval) then 0.0 else if noEvent(Nand1.Mp2.Csg1.Cgs1.vgs >= Nand1.Mp2.Csg1.Cgs1.Von - Nand1.Mp2.Csg1.Cgs1.PHIval) and noEvent(Nand1.Mp2.Csg1.Cgs1.vgs < Nand1.Mp2.Csg1.Cgs1.Von) then 0.666666666666667 * (Nand1.Mp2.Csg1.Cgs1.COXval * (1.0 + (Nand1.Mp2.Csg1.Cgs1.vgs - Nand1.Mp2.Csg1.Cgs1.Von) / Nand1.Mp2.Csg1.Cgs1.PHIval)) else if noEvent(Nand1.Mp2.Csg1.Cgs1.vgs >= Nand1.Mp2.Csg1.Cgs1.Von) and noEvent(Nand1.Mp2.Csg1.Cgs1.vgs < Nand1.Mp2.Csg1.Cgs1.Von + Nand1.Mp2.Csg1.Cgs1.vds) then 0.666666666666667 * Nand1.Mp2.Csg1.Cgs1.COXval else 0.666666666666667 * (Nand1.Mp2.Csg1.Cgs1.COXval * (1.0 - ((Nand1.Mp2.Csg1.Cgs1.vgs + ((-Nand1.Mp2.Csg1.Cgs1.vds) - Nand1.Mp2.Csg1.Cgs1.Von)) / (2.0 * (Nand1.Mp2.Csg1.Cgs1.vgs - Nand1.Mp2.Csg1.Cgs1.Von) - Nand1.Mp2.Csg1.Cgs1.vds)) ^ 2.0)));
//   else
//   Nand1.Mp2.Csg1.Cgs1.Cval = Nand1.Mp2.Csg1.Cgs1.W * Nand1.Mp2.Csg1.Cgs1.CGS0 + (if noEvent(Nand1.Mp2.Csg1.Cgs1.vgs < Nand1.Mp2.Csg1.Cgs1.Von + Nand1.Mp2.Csg1.Cgs1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mp2.Csg1.Cgs1.COXval * (1.0 - ((Nand1.Mp2.Csg1.Cgs1.vgs - Nand1.Mp2.Csg1.Cgs1.Von) / (2.0 * (Nand1.Mp2.Csg1.Cgs1.vgs - Nand1.Mp2.Csg1.Cgs1.Von) - Nand1.Mp2.Csg1.Cgs1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mp2.Csg1.Cgs1.f1 = Nand1.Mp2.Csg1.Cgs1.Cval * der(Nand1.Mp2.Csg1.Cgs1.e1);
//   Nand1.Mp2.Csg1.Cgs1.f2 = 0.0;
//   Nand1.Mp2.Csg1.Cgs1.DTempSq = Nand1.Mp2.Csg1.Cgs1.DTemp ^ 2.0;
//   Nand1.Mp2.Csg1.Cgs1.DTemp = Nand1.Mp2.Csg1.Cgs1.e2 - Nand1.Mp2.Csg1.Cgs1.Tnom;
//   Nand1.Mp2.Csg1.Cgs1.e1 = Nand1.Mp2.Csg1.Cgs1.BondCon1.e;
//   Nand1.Mp2.Csg1.Cgs1.f1 = Nand1.Mp2.Csg1.Cgs1.BondCon1.d * Nand1.Mp2.Csg1.Cgs1.BondCon1.f;
//   Nand1.Mp2.Csg1.Cgs1.e2 = Nand1.Mp2.Csg1.Cgs1.BondCon2.e;
//   Nand1.Mp2.Csg1.Cgs1.f2 = (-Nand1.Mp2.Csg1.Cgs1.BondCon2.d) * Nand1.Mp2.Csg1.Cgs1.BondCon2.f;
//   Nand1.Mp2.Csg1.B3.BondCon2.e = Nand1.Mp2.Csg1.B3.BondCon1.e;
//   Nand1.Mp2.Csg1.B3.BondCon2.f = Nand1.Mp2.Csg1.B3.BondCon1.f;
//   Nand1.Mp2.Csg1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Csg1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Csg1.B4.fBondCon1.e = Nand1.Mp2.Csg1.B4.eBondCon1.e;
//   Nand1.Mp2.Csg1.B4.eBondCon1.f = Nand1.Mp2.Csg1.B4.fBondCon1.f;
//   Nand1.Mp2.Csg1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Csg1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Csg1.BG2Heat1.BondCon1.e = Nand1.Mp2.Csg1.BG2Heat1.port_b.T;
//   Nand1.Mp2.Csg1.BG2Heat1.BondCon1.e * Nand1.Mp2.Csg1.BG2Heat1.BondCon1.f = -Nand1.Mp2.Csg1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Csg1.v = Nand1.Mp2.Csg1.p.v - Nand1.Mp2.Csg1.n.v;
//   Nand1.Mp2.Csg1.i = Nand1.Mp2.Csg1.p.i;
//   Nand1.Mp2.Cdg1.J1p3_1.f[2] = Nand1.Mp2.Cdg1.J1p3_1.f[1];
//   Nand1.Mp2.Cdg1.J1p3_1.f[3] = Nand1.Mp2.Cdg1.J1p3_1.f[2];
//   Nand1.Mp2.Cdg1.J1p3_1.e[1] + (Nand1.Mp2.Cdg1.J1p3_1.e[2] + Nand1.Mp2.Cdg1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Cdg1.J1p3_1.e[1] = Nand1.Mp2.Cdg1.J1p3_1.BondCon1.d * Nand1.Mp2.Cdg1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Cdg1.J1p3_1.f[1] = Nand1.Mp2.Cdg1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Cdg1.J1p3_1.e[2] = Nand1.Mp2.Cdg1.J1p3_1.BondCon2.d * Nand1.Mp2.Cdg1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Cdg1.J1p3_1.f[2] = Nand1.Mp2.Cdg1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Cdg1.J1p3_1.e[3] = Nand1.Mp2.Cdg1.J1p3_1.BondCon3.d * Nand1.Mp2.Cdg1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Cdg1.J1p3_1.f[3] = Nand1.Mp2.Cdg1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Cdg1.B1.BondCon2.e = Nand1.Mp2.Cdg1.B1.BondCon1.e;
//   Nand1.Mp2.Cdg1.B1.BondCon2.f = Nand1.Mp2.Cdg1.B1.BondCon1.f;
//   Nand1.Mp2.Cdg1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Cdg1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Cdg1.B2.BondCon2.e = Nand1.Mp2.Cdg1.B2.BondCon1.e;
//   Nand1.Mp2.Cdg1.B2.BondCon2.f = Nand1.Mp2.Cdg1.B2.BondCon1.f;
//   Nand1.Mp2.Cdg1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Cdg1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Cdg1.El2BG1.BondCon1.e = Nand1.Mp2.Cdg1.El2BG1.p.v;
//   Nand1.Mp2.Cdg1.El2BG1.BondCon1.f = Nand1.Mp2.Cdg1.El2BG1.p.i;
//   Nand1.Mp2.Cdg1.BG2El1.BondCon1.e = Nand1.Mp2.Cdg1.BG2El1.n.v;
//   Nand1.Mp2.Cdg1.BG2El1.BondCon1.f = -Nand1.Mp2.Cdg1.BG2El1.n.i;
//   Nand1.Mp2.Cdg1.Cgd1.RTemp = Nand1.Mp2.Cdg1.Cgd1.e2 / Nand1.Mp2.Cdg1.Cgd1.Tnom;
//   Nand1.Mp2.Cdg1.Cgd1.facTemp = Nand1.Mp2.Cdg1.Cgd1.RTemp ^ 1.5;
//   Nand1.Mp2.Cdg1.Cgd1.Vt = 8.61727503842867e-05 * Nand1.Mp2.Cdg1.Cgd1.e2;
//   Nand1.Mp2.Cdg1.Cgd1.EGref = Nand1.Mp2.Cdg1.Cgd1.EG + (-0.000702 * Nand1.Mp2.Cdg1.Cgd1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Cdg1.Cgd1.Tnom);
//   Nand1.Mp2.Cdg1.Cgd1.EGval = Nand1.Mp2.Cdg1.Cgd1.EG + (-0.000702 * Nand1.Mp2.Cdg1.Cgd1.e2 ^ 2.0) / (1108.0 + Nand1.Mp2.Cdg1.Cgd1.e2);
//   Nand1.Mp2.Cdg1.Cgd1.PHIval = Nand1.Mp2.Cdg1.Cgd1.RTemp * Nand1.Mp2.Cdg1.Cgd1.PHI + (Nand1.Mp2.Cdg1.Cgd1.EGval + (-3.0 * (Nand1.Mp2.Cdg1.Cgd1.Vt * log(Nand1.Mp2.Cdg1.Cgd1.RTemp)) - Nand1.Mp2.Cdg1.Cgd1.RTemp * Nand1.Mp2.Cdg1.Cgd1.EGref));
//   Nand1.Mp2.Cdg1.Cgd1.Vfb = Nand1.Mp2.Cdg1.Cgd1.VFB + Real(Nand1.Mp2.Cdg1.Cgd1.Type) * (Nand1.Mp2.Cdg1.Cgd1.PHIval / 2.0 + ((-Nand1.Mp2.Cdg1.Cgd1.PHI) / 2.0 + (Nand1.Mp2.Cdg1.Cgd1.EGref / 2.0 + (-Nand1.Mp2.Cdg1.Cgd1.EGval) / 2.0)));
//   Nand1.Mp2.Cdg1.Cgd1.KPval = Nand1.Mp2.Cdg1.Cgd1.KP / Nand1.Mp2.Cdg1.Cgd1.facTemp;
//   Nand1.Mp2.Cdg1.Cgd1.BETA = (Nand1.Mp2.Cdg1.Cgd1.KPval * Nand1.Mp2.Cdg1.Cgd1.W) / Nand1.Mp2.Cdg1.Cgd1.L;
//   if noEvent(Nand1.Mp2.Cdg1.Cgd1.u1 > 0.0) then
//   Nand1.Mp2.Cdg1.Cgd1.sig = 1.0;
//   Nand1.Mp2.Cdg1.Cgd1.vds = Nand1.Mp2.Cdg1.Cgd1.u1;
//   Nand1.Mp2.Cdg1.Cgd1.vgs = Nand1.Mp2.Cdg1.Cgd1.e1 + Nand1.Mp2.Cdg1.Cgd1.u1;
//   Nand1.Mp2.Cdg1.Cgd1.vbs = Nand1.Mp2.Cdg1.Cgd1.u2;
//   else
//   Nand1.Mp2.Cdg1.Cgd1.sig = -1.0;
//   Nand1.Mp2.Cdg1.Cgd1.vds = -Nand1.Mp2.Cdg1.Cgd1.u1;
//   Nand1.Mp2.Cdg1.Cgd1.vgs = Nand1.Mp2.Cdg1.Cgd1.e1 + (Nand1.Mp2.Cdg1.Cgd1.u2 - Nand1.Mp2.Cdg1.Cgd1.u1);
//   Nand1.Mp2.Cdg1.Cgd1.vbs = Nand1.Mp2.Cdg1.Cgd1.u2 - Nand1.Mp2.Cdg1.Cgd1.u1;
//   end if;
//   Nand1.Mp2.Cdg1.Cgd1.PHIroot = sqrt(Nand1.Mp2.Cdg1.Cgd1.PHIval);
//   Nand1.Mp2.Cdg1.Cgd1.PHI3 = Nand1.Mp2.Cdg1.Cgd1.PHIval * Nand1.Mp2.Cdg1.Cgd1.PHIroot;
//   Nand1.Mp2.Cdg1.Cgd1.Sarg = if Nand1.Mp2.Cdg1.Cgd1.vbs <= 0.0 then sqrt(Nand1.Mp2.Cdg1.Cgd1.PHIval - Nand1.Mp2.Cdg1.Cgd1.vbs) else Nand1.Mp2.Cdg1.Cgd1.PHIroot / (1.0 + Nand1.Mp2.Cdg1.Cgd1.vbs / (Nand1.Mp2.Cdg1.Cgd1.PHIval * 2.0));
//   Nand1.Mp2.Cdg1.Cgd1.DSarg = 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.Barg = 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.DBarg = 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.WS = Nand1.Mp2.Cdg1.Cgd1.XD * Nand1.Mp2.Cdg1.Cgd1.Sarg;
//   Nand1.Mp2.Cdg1.Cgd1.WD = Nand1.Mp2.Cdg1.Cgd1.XD * Nand1.Mp2.Cdg1.Cgd1.Barg;
//   Nand1.Mp2.Cdg1.Cgd1.WSfac = if Nand1.Mp2.Cdg1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp2.Cdg1.Cgd1.WS) / Nand1.Mp2.Cdg1.Cgd1.XJ) else 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.WDfac = if Nand1.Mp2.Cdg1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp2.Cdg1.Cgd1.WD) / Nand1.Mp2.Cdg1.Cgd1.XJ) else 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.GAMMAval = Nand1.Mp2.Cdg1.Cgd1.GAMMA * (if Nand1.Mp2.Cdg1.Cgd1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mp2.Cdg1.Cgd1.XJ * (-2.0 + (Nand1.Mp2.Cdg1.Cgd1.WSfac + Nand1.Mp2.Cdg1.Cgd1.WDfac)))) / Nand1.Mp2.Cdg1.Cgd1.L else 1.0);
//   Nand1.Mp2.Cdg1.Cgd1.DGAMMA = Nand1.Mp2.Cdg1.Cgd1.GAMMA * (if Nand1.Mp2.Cdg1.Cgd1.XJ > 0.0 then (-0.5 * (Nand1.Mp2.Cdg1.Cgd1.XD * (Nand1.Mp2.Cdg1.Cgd1.DSarg / Nand1.Mp2.Cdg1.Cgd1.WSfac + Nand1.Mp2.Cdg1.Cgd1.DBarg / Nand1.Mp2.Cdg1.Cgd1.WDfac))) / Nand1.Mp2.Cdg1.Cgd1.L else 0.0);
//   Nand1.Mp2.Cdg1.Cgd1.Wp = Nand1.Mp2.Cdg1.Cgd1.Sarg * Nand1.Mp2.Cdg1.Cgd1.XD;
//   Nand1.Mp2.Cdg1.Cgd1.WpXJ = if Nand1.Mp2.Cdg1.Cgd1.XJ > 0.0 then Nand1.Mp2.Cdg1.Cgd1.Wp / Nand1.Mp2.Cdg1.Cgd1.XJ else 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mp2.Cdg1.Cgd1.WpXJ + -0.01110777 * Nand1.Mp2.Cdg1.Cgd1.WpXJ ^ 2.0);
//   Nand1.Mp2.Cdg1.Cgd1.Wc = Nand1.Mp2.Cdg1.Cgd1.WcXJ * Nand1.Mp2.Cdg1.Cgd1.XJ;
//   Nand1.Mp2.Cdg1.Cgd1.Fs = if Nand1.Mp2.Cdg1.Cgd1.XJ > 0.0 then 1.0 + (Nand1.Mp2.Cdg1.Cgd1.LD - (Nand1.Mp2.Cdg1.Cgd1.LD + Nand1.Mp2.Cdg1.Cgd1.Wc) * sqrt(1.0 - (Nand1.Mp2.Cdg1.Cgd1.Wp / (Nand1.Mp2.Cdg1.Cgd1.XJ + Nand1.Mp2.Cdg1.Cgd1.Wp)) ^ 2.0)) / Nand1.Mp2.Cdg1.Cgd1.L else 1.0;
//   Nand1.Mp2.Cdg1.Cgd1.Vbody = Nand1.Mp2.Cdg1.Cgd1.GAMMA * (Nand1.Mp2.Cdg1.Cgd1.Fs * Nand1.Mp2.Cdg1.Cgd1.Sarg) + Nand1.Mp2.Cdg1.Cgd1.Fn * Nand1.Mp2.Cdg1.Cgd1.Sarg ^ 2.0;
//   Nand1.Mp2.Cdg1.Cgd1.Vth = Nand1.Mp2.Cdg1.Cgd1.Vfb + Real(Nand1.Mp2.Cdg1.Cgd1.Type) * (Nand1.Mp2.Cdg1.Cgd1.PHIval + (Nand1.Mp2.Cdg1.Cgd1.Vbody - Nand1.Mp2.Cdg1.Cgd1.SIGMA * Nand1.Mp2.Cdg1.Cgd1.vds));
//   Nand1.Mp2.Cdg1.Cgd1.CB = if noEvent(Nand1.Mp2.Cdg1.Cgd1.Vbody > 0.0) and noEvent(Nand1.Mp2.Cdg1.Cgd1.Sarg > 0.0) then (Nand1.Mp2.Cdg1.Cgd1.Vbody * Nand1.Mp2.Cdg1.Cgd1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.N = 1.0 + ((1.6021892e-19 * Nand1.Mp2.Cdg1.Cgd1.NFS) / Nand1.Mp2.Cdg1.Cgd1.COX + Nand1.Mp2.Cdg1.Cgd1.CB);
//   Nand1.Mp2.Cdg1.Cgd1.Von = if Nand1.Mp2.Cdg1.Cgd1.NFS > 0.0 then Real(Nand1.Mp2.Cdg1.Cgd1.Type) * Nand1.Mp2.Cdg1.Cgd1.Vth + Nand1.Mp2.Cdg1.Cgd1.N * Nand1.Mp2.Cdg1.Cgd1.Vt else Real(Nand1.Mp2.Cdg1.Cgd1.Type) * Nand1.Mp2.Cdg1.Cgd1.Vth;
//   if noEvent(Nand1.Mp2.Cdg1.Cgd1.sig > 0.0) then
//   Nand1.Mp2.Cdg1.Cgd1.Cval = Nand1.Mp2.Cdg1.Cgd1.W * Nand1.Mp2.Cdg1.Cgd1.CGD0 + (if noEvent(Nand1.Mp2.Cdg1.Cgd1.vgs < Nand1.Mp2.Cdg1.Cgd1.Von + Nand1.Mp2.Cdg1.Cgd1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mp2.Cdg1.Cgd1.COXval * (1.0 - ((Nand1.Mp2.Cdg1.Cgd1.vgs - Nand1.Mp2.Cdg1.Cgd1.Von) / (2.0 * (Nand1.Mp2.Cdg1.Cgd1.vgs - Nand1.Mp2.Cdg1.Cgd1.Von) - Nand1.Mp2.Cdg1.Cgd1.vds)) ^ 2.0)));
//   else
//   Nand1.Mp2.Cdg1.Cgd1.Cval = Nand1.Mp2.Cdg1.Cgd1.W * Nand1.Mp2.Cdg1.Cgd1.CGD0 + (if noEvent(Nand1.Mp2.Cdg1.Cgd1.vgs < Nand1.Mp2.Cdg1.Cgd1.Von - Nand1.Mp2.Cdg1.Cgd1.PHIval) then 0.0 else if noEvent(Nand1.Mp2.Cdg1.Cgd1.vgs >= Nand1.Mp2.Cdg1.Cgd1.Von - Nand1.Mp2.Cdg1.Cgd1.PHIval) and noEvent(Nand1.Mp2.Cdg1.Cgd1.vgs < Nand1.Mp2.Cdg1.Cgd1.Von) then 0.666666666666667 * (Nand1.Mp2.Cdg1.Cgd1.COXval * (1.0 + (Nand1.Mp2.Cdg1.Cgd1.vgs - Nand1.Mp2.Cdg1.Cgd1.Von) / Nand1.Mp2.Cdg1.Cgd1.PHIval)) else if noEvent(Nand1.Mp2.Cdg1.Cgd1.vgs >= Nand1.Mp2.Cdg1.Cgd1.Von) and noEvent(Nand1.Mp2.Cdg1.Cgd1.vgs < Nand1.Mp2.Cdg1.Cgd1.Von + Nand1.Mp2.Cdg1.Cgd1.vds) then 0.666666666666667 * Nand1.Mp2.Cdg1.Cgd1.COXval else 0.666666666666667 * (Nand1.Mp2.Cdg1.Cgd1.COXval * (1.0 - ((Nand1.Mp2.Cdg1.Cgd1.vgs + ((-Nand1.Mp2.Cdg1.Cgd1.vds) - Nand1.Mp2.Cdg1.Cgd1.Von)) / (2.0 * (Nand1.Mp2.Cdg1.Cgd1.vgs - Nand1.Mp2.Cdg1.Cgd1.Von) - Nand1.Mp2.Cdg1.Cgd1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mp2.Cdg1.Cgd1.f1 = Nand1.Mp2.Cdg1.Cgd1.Cval * der(Nand1.Mp2.Cdg1.Cgd1.e1);
//   Nand1.Mp2.Cdg1.Cgd1.f2 = 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.DTempSq = Nand1.Mp2.Cdg1.Cgd1.DTemp ^ 2.0;
//   Nand1.Mp2.Cdg1.Cgd1.DTemp = Nand1.Mp2.Cdg1.Cgd1.e2 - Nand1.Mp2.Cdg1.Cgd1.Tnom;
//   Nand1.Mp2.Cdg1.Cgd1.e1 = Nand1.Mp2.Cdg1.Cgd1.BondCon1.e;
//   Nand1.Mp2.Cdg1.Cgd1.f1 = Nand1.Mp2.Cdg1.Cgd1.BondCon1.d * Nand1.Mp2.Cdg1.Cgd1.BondCon1.f;
//   Nand1.Mp2.Cdg1.Cgd1.e2 = Nand1.Mp2.Cdg1.Cgd1.BondCon2.e;
//   Nand1.Mp2.Cdg1.Cgd1.f2 = (-Nand1.Mp2.Cdg1.Cgd1.BondCon2.d) * Nand1.Mp2.Cdg1.Cgd1.BondCon2.f;
//   Nand1.Mp2.Cdg1.B4.fBondCon1.e = Nand1.Mp2.Cdg1.B4.eBondCon1.e;
//   Nand1.Mp2.Cdg1.B4.eBondCon1.f = Nand1.Mp2.Cdg1.B4.fBondCon1.f;
//   Nand1.Mp2.Cdg1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Cdg1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.e = Nand1.Mp2.Cdg1.BG2Heat1.port_b.T;
//   Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.e * Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.f = -Nand1.Mp2.Cdg1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Cdg1.B3.BondCon2.e = Nand1.Mp2.Cdg1.B3.BondCon1.e;
//   Nand1.Mp2.Cdg1.B3.BondCon2.f = Nand1.Mp2.Cdg1.B3.BondCon1.f;
//   Nand1.Mp2.Cdg1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Cdg1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Cdg1.v = Nand1.Mp2.Cdg1.p.v - Nand1.Mp2.Cdg1.n.v;
//   Nand1.Mp2.Cdg1.i = Nand1.Mp2.Cdg1.p.i;
//   Nand1.Mp2.Cbg1.J1p3_1.f[2] = Nand1.Mp2.Cbg1.J1p3_1.f[1];
//   Nand1.Mp2.Cbg1.J1p3_1.f[3] = Nand1.Mp2.Cbg1.J1p3_1.f[2];
//   Nand1.Mp2.Cbg1.J1p3_1.e[1] + (Nand1.Mp2.Cbg1.J1p3_1.e[2] + Nand1.Mp2.Cbg1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Cbg1.J1p3_1.e[1] = Nand1.Mp2.Cbg1.J1p3_1.BondCon1.d * Nand1.Mp2.Cbg1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Cbg1.J1p3_1.f[1] = Nand1.Mp2.Cbg1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Cbg1.J1p3_1.e[2] = Nand1.Mp2.Cbg1.J1p3_1.BondCon2.d * Nand1.Mp2.Cbg1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Cbg1.J1p3_1.f[2] = Nand1.Mp2.Cbg1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Cbg1.J1p3_1.e[3] = Nand1.Mp2.Cbg1.J1p3_1.BondCon3.d * Nand1.Mp2.Cbg1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Cbg1.J1p3_1.f[3] = Nand1.Mp2.Cbg1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Cbg1.B1.BondCon2.e = Nand1.Mp2.Cbg1.B1.BondCon1.e;
//   Nand1.Mp2.Cbg1.B1.BondCon2.f = Nand1.Mp2.Cbg1.B1.BondCon1.f;
//   Nand1.Mp2.Cbg1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Cbg1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Cbg1.B2.BondCon2.e = Nand1.Mp2.Cbg1.B2.BondCon1.e;
//   Nand1.Mp2.Cbg1.B2.BondCon2.f = Nand1.Mp2.Cbg1.B2.BondCon1.f;
//   Nand1.Mp2.Cbg1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Cbg1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Cbg1.El2BG1.BondCon1.e = Nand1.Mp2.Cbg1.El2BG1.p.v;
//   Nand1.Mp2.Cbg1.El2BG1.BondCon1.f = Nand1.Mp2.Cbg1.El2BG1.p.i;
//   Nand1.Mp2.Cbg1.BG2El1.BondCon1.e = Nand1.Mp2.Cbg1.BG2El1.n.v;
//   Nand1.Mp2.Cbg1.BG2El1.BondCon1.f = -Nand1.Mp2.Cbg1.BG2El1.n.i;
//   Nand1.Mp2.Cbg1.Cgb1.RTemp = Nand1.Mp2.Cbg1.Cgb1.e2 / Nand1.Mp2.Cbg1.Cgb1.Tnom;
//   Nand1.Mp2.Cbg1.Cgb1.facTemp = Nand1.Mp2.Cbg1.Cgb1.RTemp ^ 1.5;
//   Nand1.Mp2.Cbg1.Cgb1.Vt = 8.61727503842867e-05 * Nand1.Mp2.Cbg1.Cgb1.e2;
//   Nand1.Mp2.Cbg1.Cgb1.EGref = Nand1.Mp2.Cbg1.Cgb1.EG + (-0.000702 * Nand1.Mp2.Cbg1.Cgb1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Cbg1.Cgb1.Tnom);
//   Nand1.Mp2.Cbg1.Cgb1.EGval = Nand1.Mp2.Cbg1.Cgb1.EG + (-0.000702 * Nand1.Mp2.Cbg1.Cgb1.e2 ^ 2.0) / (1108.0 + Nand1.Mp2.Cbg1.Cgb1.e2);
//   Nand1.Mp2.Cbg1.Cgb1.PHIval = Nand1.Mp2.Cbg1.Cgb1.RTemp * Nand1.Mp2.Cbg1.Cgb1.PHI + (Nand1.Mp2.Cbg1.Cgb1.EGval + (-3.0 * (Nand1.Mp2.Cbg1.Cgb1.Vt * log(Nand1.Mp2.Cbg1.Cgb1.RTemp)) - Nand1.Mp2.Cbg1.Cgb1.RTemp * Nand1.Mp2.Cbg1.Cgb1.EGref));
//   Nand1.Mp2.Cbg1.Cgb1.Vfb = Nand1.Mp2.Cbg1.Cgb1.VFB + Real(Nand1.Mp2.Cbg1.Cgb1.Type) * (Nand1.Mp2.Cbg1.Cgb1.PHIval / 2.0 + ((-Nand1.Mp2.Cbg1.Cgb1.PHI) / 2.0 + (Nand1.Mp2.Cbg1.Cgb1.EGref / 2.0 + (-Nand1.Mp2.Cbg1.Cgb1.EGval) / 2.0)));
//   Nand1.Mp2.Cbg1.Cgb1.KPval = Nand1.Mp2.Cbg1.Cgb1.KP / Nand1.Mp2.Cbg1.Cgb1.facTemp;
//   Nand1.Mp2.Cbg1.Cgb1.BETA = (Nand1.Mp2.Cbg1.Cgb1.KPval * Nand1.Mp2.Cbg1.Cgb1.W) / Nand1.Mp2.Cbg1.Cgb1.L;
//   if noEvent(Nand1.Mp2.Cbg1.Cgb1.u1 > 0.0) then
//   Nand1.Mp2.Cbg1.Cgb1.sig = 1.0;
//   Nand1.Mp2.Cbg1.Cgb1.vds = Nand1.Mp2.Cbg1.Cgb1.u1;
//   Nand1.Mp2.Cbg1.Cgb1.vgs = Nand1.Mp2.Cbg1.Cgb1.e1 + Nand1.Mp2.Cbg1.Cgb1.u2;
//   Nand1.Mp2.Cbg1.Cgb1.vbs = Nand1.Mp2.Cbg1.Cgb1.u2;
//   else
//   Nand1.Mp2.Cbg1.Cgb1.sig = -1.0;
//   Nand1.Mp2.Cbg1.Cgb1.vds = -Nand1.Mp2.Cbg1.Cgb1.u1;
//   Nand1.Mp2.Cbg1.Cgb1.vgs = Nand1.Mp2.Cbg1.Cgb1.e1 + (Nand1.Mp2.Cbg1.Cgb1.u2 - Nand1.Mp2.Cbg1.Cgb1.u1);
//   Nand1.Mp2.Cbg1.Cgb1.vbs = Nand1.Mp2.Cbg1.Cgb1.u2 - Nand1.Mp2.Cbg1.Cgb1.u1;
//   end if;
//   Nand1.Mp2.Cbg1.Cgb1.PHIroot = sqrt(Nand1.Mp2.Cbg1.Cgb1.PHIval);
//   Nand1.Mp2.Cbg1.Cgb1.PHI3 = Nand1.Mp2.Cbg1.Cgb1.PHIval * Nand1.Mp2.Cbg1.Cgb1.PHIroot;
//   Nand1.Mp2.Cbg1.Cgb1.Sarg = if Nand1.Mp2.Cbg1.Cgb1.vbs <= 0.0 then sqrt(Nand1.Mp2.Cbg1.Cgb1.PHIval - Nand1.Mp2.Cbg1.Cgb1.vbs) else Nand1.Mp2.Cbg1.Cgb1.PHIroot / (1.0 + Nand1.Mp2.Cbg1.Cgb1.vbs / (Nand1.Mp2.Cbg1.Cgb1.PHIval * 2.0));
//   Nand1.Mp2.Cbg1.Cgb1.DSarg = 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.Barg = 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.DBarg = 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.WS = Nand1.Mp2.Cbg1.Cgb1.XD * Nand1.Mp2.Cbg1.Cgb1.Sarg;
//   Nand1.Mp2.Cbg1.Cgb1.WD = Nand1.Mp2.Cbg1.Cgb1.XD * Nand1.Mp2.Cbg1.Cgb1.Barg;
//   Nand1.Mp2.Cbg1.Cgb1.WSfac = if Nand1.Mp2.Cbg1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp2.Cbg1.Cgb1.WS) / Nand1.Mp2.Cbg1.Cgb1.XJ) else 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.WDfac = if Nand1.Mp2.Cbg1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mp2.Cbg1.Cgb1.WD) / Nand1.Mp2.Cbg1.Cgb1.XJ) else 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.GAMMAval = Nand1.Mp2.Cbg1.Cgb1.GAMMA * (if Nand1.Mp2.Cbg1.Cgb1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mp2.Cbg1.Cgb1.XJ * (-2.0 + (Nand1.Mp2.Cbg1.Cgb1.WSfac + Nand1.Mp2.Cbg1.Cgb1.WDfac)))) / Nand1.Mp2.Cbg1.Cgb1.L else 1.0);
//   Nand1.Mp2.Cbg1.Cgb1.DGAMMA = Nand1.Mp2.Cbg1.Cgb1.GAMMA * (if Nand1.Mp2.Cbg1.Cgb1.XJ > 0.0 then (-0.5 * (Nand1.Mp2.Cbg1.Cgb1.XD * (Nand1.Mp2.Cbg1.Cgb1.DSarg / Nand1.Mp2.Cbg1.Cgb1.WSfac + Nand1.Mp2.Cbg1.Cgb1.DBarg / Nand1.Mp2.Cbg1.Cgb1.WDfac))) / Nand1.Mp2.Cbg1.Cgb1.L else 0.0);
//   Nand1.Mp2.Cbg1.Cgb1.Wp = Nand1.Mp2.Cbg1.Cgb1.Sarg * Nand1.Mp2.Cbg1.Cgb1.XD;
//   Nand1.Mp2.Cbg1.Cgb1.WpXJ = if Nand1.Mp2.Cbg1.Cgb1.XJ > 0.0 then Nand1.Mp2.Cbg1.Cgb1.Wp / Nand1.Mp2.Cbg1.Cgb1.XJ else 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mp2.Cbg1.Cgb1.WpXJ + -0.01110777 * Nand1.Mp2.Cbg1.Cgb1.WpXJ ^ 2.0);
//   Nand1.Mp2.Cbg1.Cgb1.Wc = Nand1.Mp2.Cbg1.Cgb1.WcXJ * Nand1.Mp2.Cbg1.Cgb1.XJ;
//   Nand1.Mp2.Cbg1.Cgb1.Fs = if Nand1.Mp2.Cbg1.Cgb1.XJ > 0.0 then 1.0 + (Nand1.Mp2.Cbg1.Cgb1.LD - (Nand1.Mp2.Cbg1.Cgb1.LD + Nand1.Mp2.Cbg1.Cgb1.Wc) * sqrt(1.0 - (Nand1.Mp2.Cbg1.Cgb1.Wp / (Nand1.Mp2.Cbg1.Cgb1.XJ + Nand1.Mp2.Cbg1.Cgb1.Wp)) ^ 2.0)) / Nand1.Mp2.Cbg1.Cgb1.L else 1.0;
//   Nand1.Mp2.Cbg1.Cgb1.Vbody = Nand1.Mp2.Cbg1.Cgb1.GAMMA * (Nand1.Mp2.Cbg1.Cgb1.Fs * Nand1.Mp2.Cbg1.Cgb1.Sarg) + Nand1.Mp2.Cbg1.Cgb1.Fn * Nand1.Mp2.Cbg1.Cgb1.Sarg ^ 2.0;
//   Nand1.Mp2.Cbg1.Cgb1.Vth = Nand1.Mp2.Cbg1.Cgb1.Vfb + Real(Nand1.Mp2.Cbg1.Cgb1.Type) * (Nand1.Mp2.Cbg1.Cgb1.PHIval + (Nand1.Mp2.Cbg1.Cgb1.Vbody - Nand1.Mp2.Cbg1.Cgb1.SIGMA * Nand1.Mp2.Cbg1.Cgb1.vds));
//   Nand1.Mp2.Cbg1.Cgb1.CB = if noEvent(Nand1.Mp2.Cbg1.Cgb1.Vbody > 0.0) and noEvent(Nand1.Mp2.Cbg1.Cgb1.Sarg > 0.0) then (Nand1.Mp2.Cbg1.Cgb1.Vbody * Nand1.Mp2.Cbg1.Cgb1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.N = 1.0 + ((1.6021892e-19 * Nand1.Mp2.Cbg1.Cgb1.NFS) / Nand1.Mp2.Cbg1.Cgb1.COX + Nand1.Mp2.Cbg1.Cgb1.CB);
//   Nand1.Mp2.Cbg1.Cgb1.Von = if Nand1.Mp2.Cbg1.Cgb1.NFS > 0.0 then Real(Nand1.Mp2.Cbg1.Cgb1.Type) * Nand1.Mp2.Cbg1.Cgb1.Vth + Nand1.Mp2.Cbg1.Cgb1.N * Nand1.Mp2.Cbg1.Cgb1.Vt else Real(Nand1.Mp2.Cbg1.Cgb1.Type) * Nand1.Mp2.Cbg1.Cgb1.Vth;
//   Nand1.Mp2.Cbg1.Cgb1.Cval = Nand1.Mp2.Cbg1.Cgb1.L * Nand1.Mp2.Cbg1.Cgb1.CGB0 + (if noEvent(Nand1.Mp2.Cbg1.Cgb1.vgs < Nand1.Mp2.Cbg1.Cgb1.Von - Nand1.Mp2.Cbg1.Cgb1.PHIval) then Nand1.Mp2.Cbg1.Cgb1.COXval else if noEvent(Nand1.Mp2.Cbg1.Cgb1.vgs >= Nand1.Mp2.Cbg1.Cgb1.Von - Nand1.Mp2.Cbg1.Cgb1.PHIval) and noEvent(Nand1.Mp2.Cbg1.Cgb1.vgs < Nand1.Mp2.Cbg1.Cgb1.Von) then (Nand1.Mp2.Cbg1.Cgb1.COXval * (Nand1.Mp2.Cbg1.Cgb1.Von - Nand1.Mp2.Cbg1.Cgb1.vgs)) / Nand1.Mp2.Cbg1.Cgb1.PHIval else 0.0);
//   Nand1.Mp2.Cbg1.Cgb1.f1 = Nand1.Mp2.Cbg1.Cgb1.Cval * der(Nand1.Mp2.Cbg1.Cgb1.e1);
//   Nand1.Mp2.Cbg1.Cgb1.f2 = 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.DTempSq = Nand1.Mp2.Cbg1.Cgb1.DTemp ^ 2.0;
//   Nand1.Mp2.Cbg1.Cgb1.DTemp = Nand1.Mp2.Cbg1.Cgb1.e2 - Nand1.Mp2.Cbg1.Cgb1.Tnom;
//   Nand1.Mp2.Cbg1.Cgb1.e1 = Nand1.Mp2.Cbg1.Cgb1.BondCon1.e;
//   Nand1.Mp2.Cbg1.Cgb1.f1 = Nand1.Mp2.Cbg1.Cgb1.BondCon1.d * Nand1.Mp2.Cbg1.Cgb1.BondCon1.f;
//   Nand1.Mp2.Cbg1.Cgb1.e2 = Nand1.Mp2.Cbg1.Cgb1.BondCon2.e;
//   Nand1.Mp2.Cbg1.Cgb1.f2 = (-Nand1.Mp2.Cbg1.Cgb1.BondCon2.d) * Nand1.Mp2.Cbg1.Cgb1.BondCon2.f;
//   Nand1.Mp2.Cbg1.B4.fBondCon1.e = Nand1.Mp2.Cbg1.B4.eBondCon1.e;
//   Nand1.Mp2.Cbg1.B4.eBondCon1.f = Nand1.Mp2.Cbg1.B4.fBondCon1.f;
//   Nand1.Mp2.Cbg1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Cbg1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.e = Nand1.Mp2.Cbg1.BG2Heat1.port_b.T;
//   Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.e * Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.f = -Nand1.Mp2.Cbg1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Cbg1.B3.BondCon2.e = Nand1.Mp2.Cbg1.B3.BondCon1.e;
//   Nand1.Mp2.Cbg1.B3.BondCon2.f = Nand1.Mp2.Cbg1.B3.BondCon1.f;
//   Nand1.Mp2.Cbg1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Cbg1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Cbg1.v = Nand1.Mp2.Cbg1.p.v - Nand1.Mp2.Cbg1.n.v;
//   Nand1.Mp2.Cbg1.i = Nand1.Mp2.Cbg1.p.i;
//   Nand1.Mp2.Vsb.J1p3_1.f[2] = Nand1.Mp2.Vsb.J1p3_1.f[1];
//   Nand1.Mp2.Vsb.J1p3_1.f[3] = Nand1.Mp2.Vsb.J1p3_1.f[2];
//   Nand1.Mp2.Vsb.J1p3_1.e[1] + (Nand1.Mp2.Vsb.J1p3_1.e[2] + Nand1.Mp2.Vsb.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Vsb.J1p3_1.e[1] = Nand1.Mp2.Vsb.J1p3_1.BondCon1.d * Nand1.Mp2.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Vsb.J1p3_1.f[1] = Nand1.Mp2.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Vsb.J1p3_1.e[2] = Nand1.Mp2.Vsb.J1p3_1.BondCon2.d * Nand1.Mp2.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Vsb.J1p3_1.f[2] = Nand1.Mp2.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Vsb.J1p3_1.e[3] = Nand1.Mp2.Vsb.J1p3_1.BondCon3.d * Nand1.Mp2.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Vsb.J1p3_1.f[3] = Nand1.Mp2.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Vsb.B1.BondCon2.e = Nand1.Mp2.Vsb.B1.BondCon1.e;
//   Nand1.Mp2.Vsb.B1.BondCon2.f = Nand1.Mp2.Vsb.B1.BondCon1.f;
//   Nand1.Mp2.Vsb.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Vsb.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Vsb.B2.BondCon2.e = Nand1.Mp2.Vsb.B2.BondCon1.e;
//   Nand1.Mp2.Vsb.B2.BondCon2.f = Nand1.Mp2.Vsb.B2.BondCon1.f;
//   Nand1.Mp2.Vsb.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Vsb.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Vsb.El2BG1.BondCon1.e = Nand1.Mp2.Vsb.El2BG1.p.v;
//   Nand1.Mp2.Vsb.El2BG1.BondCon1.f = Nand1.Mp2.Vsb.El2BG1.p.i;
//   Nand1.Mp2.Vsb.BG2El1.BondCon1.e = Nand1.Mp2.Vsb.BG2El1.n.v;
//   Nand1.Mp2.Vsb.BG2El1.BondCon1.f = -Nand1.Mp2.Vsb.BG2El1.n.i;
//   Nand1.Mp2.Vsb.De1.OutPort1 = Nand1.Mp2.Vsb.De1.e;
//   Nand1.Mp2.Vsb.De1.f = 0.0;
//   Nand1.Mp2.Vsb.De1.e = Nand1.Mp2.Vsb.De1.BondCon1.e;
//   Nand1.Mp2.Vsb.De1.f = Nand1.Mp2.Vsb.De1.BondCon1.d * Nand1.Mp2.Vsb.De1.BondCon1.f;
//   Nand1.Mp2.Vsb.B3.BondCon2.e = Nand1.Mp2.Vsb.B3.BondCon1.e;
//   Nand1.Mp2.Vsb.B3.BondCon2.f = Nand1.Mp2.Vsb.B3.BondCon1.f;
//   Nand1.Mp2.Vsb.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Vsb.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Vsb.v = Nand1.Mp2.Vsb.p.v - Nand1.Mp2.Vsb.n.v;
//   Nand1.Mp2.Vsb.i = Nand1.Mp2.Vsb.p.i;
//   Nand1.Mp2.Rd.J1p3_1.f[2] = Nand1.Mp2.Rd.J1p3_1.f[1];
//   Nand1.Mp2.Rd.J1p3_1.f[3] = Nand1.Mp2.Rd.J1p3_1.f[2];
//   Nand1.Mp2.Rd.J1p3_1.e[1] + (Nand1.Mp2.Rd.J1p3_1.e[2] + Nand1.Mp2.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Rd.J1p3_1.e[1] = Nand1.Mp2.Rd.J1p3_1.BondCon1.d * Nand1.Mp2.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Rd.J1p3_1.f[1] = Nand1.Mp2.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Rd.J1p3_1.e[2] = Nand1.Mp2.Rd.J1p3_1.BondCon2.d * Nand1.Mp2.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Rd.J1p3_1.f[2] = Nand1.Mp2.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Rd.J1p3_1.e[3] = Nand1.Mp2.Rd.J1p3_1.BondCon3.d * Nand1.Mp2.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Rd.J1p3_1.f[3] = Nand1.Mp2.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Rd.B1.BondCon2.e = Nand1.Mp2.Rd.B1.BondCon1.e;
//   Nand1.Mp2.Rd.B1.BondCon2.f = Nand1.Mp2.Rd.B1.BondCon1.f;
//   Nand1.Mp2.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Rd.B2.BondCon2.e = Nand1.Mp2.Rd.B2.BondCon1.e;
//   Nand1.Mp2.Rd.B2.BondCon2.f = Nand1.Mp2.Rd.B2.BondCon1.f;
//   Nand1.Mp2.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Rd.El2BG1.BondCon1.e = Nand1.Mp2.Rd.El2BG1.p.v;
//   Nand1.Mp2.Rd.El2BG1.BondCon1.f = Nand1.Mp2.Rd.El2BG1.p.i;
//   Nand1.Mp2.Rd.BG2El1.BondCon1.e = Nand1.Mp2.Rd.BG2El1.n.v;
//   Nand1.Mp2.Rd.BG2El1.BondCon1.f = -Nand1.Mp2.Rd.BG2El1.n.i;
//   Nand1.Mp2.Rd.B3.BondCon2.e = Nand1.Mp2.Rd.B3.BondCon1.e;
//   Nand1.Mp2.Rd.B3.BondCon2.f = Nand1.Mp2.Rd.B3.BondCon1.f;
//   Nand1.Mp2.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Rd.RM1.Rval = Nand1.Mp2.Rd.RM1.R * (1.0 + (Nand1.Mp2.Rd.RM1.TR1 * Nand1.Mp2.Rd.RM1.DTemp + Nand1.Mp2.Rd.RM1.TR2 * Nand1.Mp2.Rd.RM1.DTempSq));
//   Nand1.Mp2.Rd.RM1.e1 = Nand1.Mp2.Rd.RM1.Rval * Nand1.Mp2.Rd.RM1.f1;
//   Nand1.Mp2.Rd.RM1.e1 * Nand1.Mp2.Rd.RM1.f1 = Nand1.Mp2.Rd.RM1.e2 * Nand1.Mp2.Rd.RM1.f2;
//   Nand1.Mp2.Rd.RM1.DTempSq = Nand1.Mp2.Rd.RM1.DTemp ^ 2.0;
//   Nand1.Mp2.Rd.RM1.DTemp = Nand1.Mp2.Rd.RM1.e2 - Nand1.Mp2.Rd.RM1.Tnom;
//   Nand1.Mp2.Rd.RM1.e1 = Nand1.Mp2.Rd.RM1.BondCon1.e;
//   Nand1.Mp2.Rd.RM1.f1 = Nand1.Mp2.Rd.RM1.BondCon1.d * Nand1.Mp2.Rd.RM1.BondCon1.f;
//   Nand1.Mp2.Rd.RM1.e2 = Nand1.Mp2.Rd.RM1.BondCon2.e;
//   Nand1.Mp2.Rd.RM1.f2 = (-Nand1.Mp2.Rd.RM1.BondCon2.d) * Nand1.Mp2.Rd.RM1.BondCon2.f;
//   Nand1.Mp2.Rd.B4.fBondCon1.e = Nand1.Mp2.Rd.B4.eBondCon1.e;
//   Nand1.Mp2.Rd.B4.eBondCon1.f = Nand1.Mp2.Rd.B4.fBondCon1.f;
//   Nand1.Mp2.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Rd.BG2Heat1.BondCon1.e = Nand1.Mp2.Rd.BG2Heat1.port_b.T;
//   Nand1.Mp2.Rd.BG2Heat1.BondCon1.e * Nand1.Mp2.Rd.BG2Heat1.BondCon1.f = -Nand1.Mp2.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Rd.v = Nand1.Mp2.Rd.p.v - Nand1.Mp2.Rd.n.v;
//   Nand1.Mp2.Rd.i = Nand1.Mp2.Rd.p.i;
//   Nand1.Mp2.Rs.J1p3_1.f[2] = Nand1.Mp2.Rs.J1p3_1.f[1];
//   Nand1.Mp2.Rs.J1p3_1.f[3] = Nand1.Mp2.Rs.J1p3_1.f[2];
//   Nand1.Mp2.Rs.J1p3_1.e[1] + (Nand1.Mp2.Rs.J1p3_1.e[2] + Nand1.Mp2.Rs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Rs.J1p3_1.e[1] = Nand1.Mp2.Rs.J1p3_1.BondCon1.d * Nand1.Mp2.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Rs.J1p3_1.f[1] = Nand1.Mp2.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Rs.J1p3_1.e[2] = Nand1.Mp2.Rs.J1p3_1.BondCon2.d * Nand1.Mp2.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Rs.J1p3_1.f[2] = Nand1.Mp2.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Rs.J1p3_1.e[3] = Nand1.Mp2.Rs.J1p3_1.BondCon3.d * Nand1.Mp2.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Rs.J1p3_1.f[3] = Nand1.Mp2.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Rs.B1.BondCon2.e = Nand1.Mp2.Rs.B1.BondCon1.e;
//   Nand1.Mp2.Rs.B1.BondCon2.f = Nand1.Mp2.Rs.B1.BondCon1.f;
//   Nand1.Mp2.Rs.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Rs.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Rs.B2.BondCon2.e = Nand1.Mp2.Rs.B2.BondCon1.e;
//   Nand1.Mp2.Rs.B2.BondCon2.f = Nand1.Mp2.Rs.B2.BondCon1.f;
//   Nand1.Mp2.Rs.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Rs.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Rs.El2BG1.BondCon1.e = Nand1.Mp2.Rs.El2BG1.p.v;
//   Nand1.Mp2.Rs.El2BG1.BondCon1.f = Nand1.Mp2.Rs.El2BG1.p.i;
//   Nand1.Mp2.Rs.BG2El1.BondCon1.e = Nand1.Mp2.Rs.BG2El1.n.v;
//   Nand1.Mp2.Rs.BG2El1.BondCon1.f = -Nand1.Mp2.Rs.BG2El1.n.i;
//   Nand1.Mp2.Rs.B3.BondCon2.e = Nand1.Mp2.Rs.B3.BondCon1.e;
//   Nand1.Mp2.Rs.B3.BondCon2.f = Nand1.Mp2.Rs.B3.BondCon1.f;
//   Nand1.Mp2.Rs.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Rs.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Rs.RM1.Rval = Nand1.Mp2.Rs.RM1.R * (1.0 + (Nand1.Mp2.Rs.RM1.TR1 * Nand1.Mp2.Rs.RM1.DTemp + Nand1.Mp2.Rs.RM1.TR2 * Nand1.Mp2.Rs.RM1.DTempSq));
//   Nand1.Mp2.Rs.RM1.e1 = Nand1.Mp2.Rs.RM1.Rval * Nand1.Mp2.Rs.RM1.f1;
//   Nand1.Mp2.Rs.RM1.e1 * Nand1.Mp2.Rs.RM1.f1 = Nand1.Mp2.Rs.RM1.e2 * Nand1.Mp2.Rs.RM1.f2;
//   Nand1.Mp2.Rs.RM1.DTempSq = Nand1.Mp2.Rs.RM1.DTemp ^ 2.0;
//   Nand1.Mp2.Rs.RM1.DTemp = Nand1.Mp2.Rs.RM1.e2 - Nand1.Mp2.Rs.RM1.Tnom;
//   Nand1.Mp2.Rs.RM1.e1 = Nand1.Mp2.Rs.RM1.BondCon1.e;
//   Nand1.Mp2.Rs.RM1.f1 = Nand1.Mp2.Rs.RM1.BondCon1.d * Nand1.Mp2.Rs.RM1.BondCon1.f;
//   Nand1.Mp2.Rs.RM1.e2 = Nand1.Mp2.Rs.RM1.BondCon2.e;
//   Nand1.Mp2.Rs.RM1.f2 = (-Nand1.Mp2.Rs.RM1.BondCon2.d) * Nand1.Mp2.Rs.RM1.BondCon2.f;
//   Nand1.Mp2.Rs.B4.fBondCon1.e = Nand1.Mp2.Rs.B4.eBondCon1.e;
//   Nand1.Mp2.Rs.B4.eBondCon1.f = Nand1.Mp2.Rs.B4.fBondCon1.f;
//   Nand1.Mp2.Rs.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Rs.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Rs.BG2Heat1.BondCon1.e = Nand1.Mp2.Rs.BG2Heat1.port_b.T;
//   Nand1.Mp2.Rs.BG2Heat1.BondCon1.e * Nand1.Mp2.Rs.BG2Heat1.BondCon1.f = -Nand1.Mp2.Rs.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Rs.v = Nand1.Mp2.Rs.p.v - Nand1.Mp2.Rs.n.v;
//   Nand1.Mp2.Rs.i = Nand1.Mp2.Rs.p.i;
//   if noEvent(Nand1.Mp2.Mpi.IDS0.u1 > 0.0) then
//   Nand1.Mp2.Mpi.IDS0.sig = 1.0;
//   Nand1.Mp2.Mpi.IDS0.vds = Nand1.Mp2.Mpi.IDS0.u1;
//   Nand1.Mp2.Mpi.IDS0.vgs = Nand1.Mp2.Mpi.IDS0.u2;
//   Nand1.Mp2.Mpi.IDS0.vbs = Nand1.Mp2.Mpi.IDS0.u3;
//   else
//   Nand1.Mp2.Mpi.IDS0.sig = -1.0;
//   Nand1.Mp2.Mpi.IDS0.vds = -Nand1.Mp2.Mpi.IDS0.u1;
//   Nand1.Mp2.Mpi.IDS0.vgs = Nand1.Mp2.Mpi.IDS0.u2 - Nand1.Mp2.Mpi.IDS0.u1;
//   Nand1.Mp2.Mpi.IDS0.vbs = Nand1.Mp2.Mpi.IDS0.u3 - Nand1.Mp2.Mpi.IDS0.u1;
//   end if;
//   (Nand1.Mp2.Mpi.IDS0.ids,Nand1.Mp2.Mpi.IDS0.Vfb,Nand1.Mp2.Mpi.IDS0.Vth,Nand1.Mp2.Mpi.IDS0.vdsat,Nand1.Mp2.Mpi.IDS0.vpof) = BondLib.Spice.Utilities.MOSeq3(Nand1.Mp2.Mpi.IDS0.vds,Nand1.Mp2.Mpi.IDS0.vgs,Nand1.Mp2.Mpi.IDS0.vbs,Nand1.Mp2.Mpi.IDS0.Tdev,Nand1.Mp2.Mpi.IDS0.sig,Nand1.Mp2.Mpi.IDS0.Type,Nand1.Mp2.Mpi.IDS0.Tnom,Nand1.Mp2.Mpi.IDS0.VFB,Nand1.Mp2.Mpi.IDS0.KP,Nand1.Mp2.Mpi.IDS0.GAMMA,Nand1.Mp2.Mpi.IDS0.PHI,Nand1.Mp2.Mpi.IDS0.COX,Nand1.Mp2.Mpi.IDS0.NFS,Nand1.Mp2.Mpi.IDS0.XJ,Nand1.Mp2.Mpi.IDS0.L,Nand1.Mp2.Mpi.IDS0.W,Nand1.Mp2.Mpi.IDS0.LD,Nand1.Mp2.Mpi.IDS0.XD,Nand1.Mp2.Mpi.IDS0.U0,Nand1.Mp2.Mpi.IDS0.VMAX,Nand1.Mp2.Mpi.IDS0.DELTA,Nand1.Mp2.Mpi.IDS0.KAPPA,Nand1.Mp2.Mpi.IDS0.ETA,Nand1.Mp2.Mpi.IDS0.THETA,Nand1.Mp2.Mpi.IDS0.EG,Nand1.Mp2.Mpi.IDS0.EMin,Nand1.Mp2.Mpi.IDS0.EMax);
//   Nand1.Mp2.Mpi.IDS0.vdsat1 = 0.0;
//   Nand1.Mp2.Mpi.IDS0.y = Nand1.Mp2.Mpi.IDS0.ids;
//   Nand1.Mp2.Mpi.IDS0.y1[1] = Nand1.Mp2.Mpi.IDS0.Vfb;
//   Nand1.Mp2.Mpi.IDS0.y1[2] = Nand1.Mp2.Mpi.IDS0.Vth;
//   Nand1.Mp2.Mpi.IDS0.y1[3] = Nand1.Mp2.Mpi.IDS0.vdsat;
//   Nand1.Mp2.Mpi.IDS0.y1[4] = Nand1.Mp2.Mpi.IDS0.vdsat1;
//   Nand1.Mp2.Mpi.IDS0.y1[5] = Nand1.Mp2.Mpi.IDS0.vpof;
//   Nand1.Mp2.Mpi.Tdev1.T = Nand1.Mp2.Mpi.Tdev1.port.T;
//   Nand1.Mp2.Mpi.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Vsg.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Vsg.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Vsg.J1p3_1.e[2] + Nand1.Mp2.Mpi.Vsg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.e[1] = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.f[1] = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.e[2] = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.e[3] = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Vsg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon2.e = Nand1.Mp2.Mpi.Vsg.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon2.f = Nand1.Mp2.Mpi.Vsg.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon2.e = Nand1.Mp2.Mpi.Vsg.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon2.f = Nand1.Mp2.Mpi.Vsg.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Vsg.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Vsg.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Vsg.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Vsg.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Vsg.De1.OutPort1 = Nand1.Mp2.Mpi.Vsg.De1.e;
//   Nand1.Mp2.Mpi.Vsg.De1.f = 0.0;
//   Nand1.Mp2.Mpi.Vsg.De1.e = Nand1.Mp2.Mpi.Vsg.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.De1.f = Nand1.Mp2.Mpi.Vsg.De1.BondCon1.d * Nand1.Mp2.Mpi.Vsg.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon2.e = Nand1.Mp2.Mpi.Vsg.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon2.f = Nand1.Mp2.Mpi.Vsg.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsg.v = Nand1.Mp2.Mpi.Vsg.p.v - Nand1.Mp2.Mpi.Vsg.n.v;
//   Nand1.Mp2.Mpi.Vsg.i = Nand1.Mp2.Mpi.Vsg.p.i;
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.f[2] = Nand1.Mp2.Mpi.Vsb.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.f[3] = Nand1.Mp2.Mpi.Vsb.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Vsb.J1p3_1.e[2] + Nand1.Mp2.Mpi.Vsb.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.e[1] = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.f[1] = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.e[2] = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.f[2] = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.e[3] = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Vsb.J1p3_1.f[3] = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon2.e = Nand1.Mp2.Mpi.Vsb.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon2.f = Nand1.Mp2.Mpi.Vsb.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon2.e = Nand1.Mp2.Mpi.Vsb.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon2.f = Nand1.Mp2.Mpi.Vsb.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Vsb.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Vsb.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Vsb.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Vsb.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Vsb.De1.OutPort1 = Nand1.Mp2.Mpi.Vsb.De1.e;
//   Nand1.Mp2.Mpi.Vsb.De1.f = 0.0;
//   Nand1.Mp2.Mpi.Vsb.De1.e = Nand1.Mp2.Mpi.Vsb.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.De1.f = Nand1.Mp2.Mpi.Vsb.De1.BondCon1.d * Nand1.Mp2.Mpi.Vsb.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon2.e = Nand1.Mp2.Mpi.Vsb.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon2.f = Nand1.Mp2.Mpi.Vsb.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsb.v = Nand1.Mp2.Mpi.Vsb.p.v - Nand1.Mp2.Mpi.Vsb.n.v;
//   Nand1.Mp2.Mpi.Vsb.i = Nand1.Mp2.Mpi.Vsb.p.i;
//   Nand1.Mp2.Mpi.Dsb.nlCM1.v = Nand1.Mp2.Mpi.Dsb.nlCM1.u;
//   Nand1.Mp2.Mpi.Dsb.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mp2.Mpi.Dsb.nlCM1.Tdev;
//   Nand1.Mp2.Mpi.Dsb.nlCM1.DTemp = Nand1.Mp2.Mpi.Dsb.nlCM1.Tdev - Nand1.Mp2.Mpi.Dsb.nlCM1.Tnom;
//   Nand1.Mp2.Mpi.Dsb.nlCM1.RTemp = Nand1.Mp2.Mpi.Dsb.nlCM1.Tdev / Nand1.Mp2.Mpi.Dsb.nlCM1.Tnom;
//   Nand1.Mp2.Mpi.Dsb.nlCM1.EGval = Nand1.Mp2.Mpi.Dsb.nlCM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Dsb.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Dsb.nlCM1.Tdev);
//   Nand1.Mp2.Mpi.Dsb.nlCM1.EGnom = Nand1.Mp2.Mpi.Dsb.nlCM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Dsb.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Dsb.nlCM1.Tnom);
//   Nand1.Mp2.Mpi.Dsb.nlCM1.PBval = Nand1.Mp2.Mpi.Dsb.nlCM1.PB * Nand1.Mp2.Mpi.Dsb.nlCM1.RTemp + (Nand1.Mp2.Mpi.Dsb.nlCM1.EGval + (-3.0 * (Nand1.Mp2.Mpi.Dsb.nlCM1.Vt * log(Nand1.Mp2.Mpi.Dsb.nlCM1.RTemp)) - Nand1.Mp2.Mpi.Dsb.nlCM1.EGnom * Nand1.Mp2.Mpi.Dsb.nlCM1.RTemp));
//   Nand1.Mp2.Mpi.Dsb.nlCM1.CJval = Nand1.Mp2.Mpi.Dsb.nlCM1.CJ * (1.0 + Nand1.Mp2.Mpi.Dsb.nlCM1.MJ * (1.0 + ((-Nand1.Mp2.Mpi.Dsb.nlCM1.PBval) / Nand1.Mp2.Mpi.Dsb.nlCM1.PB + 0.0004 * Nand1.Mp2.Mpi.Dsb.nlCM1.DTemp)));
//   Nand1.Mp2.Mpi.Dsb.nlCM1.CJSWval = Nand1.Mp2.Mpi.Dsb.nlCM1.CJSW * (1.0 + Nand1.Mp2.Mpi.Dsb.nlCM1.MJSW * (1.0 + ((-Nand1.Mp2.Mpi.Dsb.nlCM1.PBval) / Nand1.Mp2.Mpi.Dsb.nlCM1.PB + 0.0004 * Nand1.Mp2.Mpi.Dsb.nlCM1.DTemp)));
//   Nand1.Mp2.Mpi.Dsb.nlCM1.Cbulk = Nand1.Mp2.Mpi.Dsb.nlCM1.CJval * (if Nand1.Mp2.Mpi.Dsb.nlCM1.v > Nand1.Mp2.Mpi.Dsb.nlCM1.FC * Nand1.Mp2.Mpi.Dsb.nlCM1.PBval then (1.0 + ((Nand1.Mp2.Mpi.Dsb.nlCM1.MJ * Nand1.Mp2.Mpi.Dsb.nlCM1.v) / Nand1.Mp2.Mpi.Dsb.nlCM1.PBval - Nand1.Mp2.Mpi.Dsb.nlCM1.FC * (1.0 + Nand1.Mp2.Mpi.Dsb.nlCM1.MJ))) * (1.0 - Nand1.Mp2.Mpi.Dsb.nlCM1.FC) ^ (-1.0 - Nand1.Mp2.Mpi.Dsb.nlCM1.MJ) else abs(1.0 + (-Nand1.Mp2.Mpi.Dsb.nlCM1.v) / Nand1.Mp2.Mpi.Dsb.nlCM1.PBval) ^ (-Nand1.Mp2.Mpi.Dsb.nlCM1.MJ));
//   Nand1.Mp2.Mpi.Dsb.nlCM1.Cperi = Nand1.Mp2.Mpi.Dsb.nlCM1.CJSWval * (if Nand1.Mp2.Mpi.Dsb.nlCM1.v > Nand1.Mp2.Mpi.Dsb.nlCM1.FC * Nand1.Mp2.Mpi.Dsb.nlCM1.PBval then (1.0 + ((Nand1.Mp2.Mpi.Dsb.nlCM1.MJSW * Nand1.Mp2.Mpi.Dsb.nlCM1.v) / Nand1.Mp2.Mpi.Dsb.nlCM1.PBval - Nand1.Mp2.Mpi.Dsb.nlCM1.FC * (1.0 + Nand1.Mp2.Mpi.Dsb.nlCM1.MJSW))) * (1.0 - Nand1.Mp2.Mpi.Dsb.nlCM1.FC) ^ (-1.0 - Nand1.Mp2.Mpi.Dsb.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mp2.Mpi.Dsb.nlCM1.v) / Nand1.Mp2.Mpi.Dsb.nlCM1.PBval) ^ (-Nand1.Mp2.Mpi.Dsb.nlCM1.MJSW));
//   Nand1.Mp2.Mpi.Dsb.nlCM1.Cval = if Nand1.Mp2.Mpi.Dsb.nlCM1.A * Nand1.Mp2.Mpi.Dsb.nlCM1.Cbulk + Nand1.Mp2.Mpi.Dsb.nlCM1.P * Nand1.Mp2.Mpi.Dsb.nlCM1.Cperi > 0.0 then Nand1.Mp2.Mpi.Dsb.nlCM1.A * Nand1.Mp2.Mpi.Dsb.nlCM1.Cbulk + Nand1.Mp2.Mpi.Dsb.nlCM1.P * Nand1.Mp2.Mpi.Dsb.nlCM1.Cperi else 1e-16;
//   Nand1.Mp2.Mpi.Dsb.nlCM1.y = Nand1.Mp2.Mpi.Dsb.nlCM1.Cval;
//   Nand1.Mp2.Mpi.Dsb.Tdev1.T = Nand1.Mp2.Mpi.Dsb.Tdev1.port.T;
//   Nand1.Mp2.Mpi.Dsb.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[2] + Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[1] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[1] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[2] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.e[3] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.T_nom.e = Nand1.Mp2.Mpi.Dsb.Rd.T_nom.e0;
//   Nand1.Mp2.Mpi.Dsb.Rd.T_nom.e = Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.T_nom.f = (-Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.d) * Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.Rval = (Nand1.Mp2.Mpi.Dsb.Rd.R1.R * (1.0 + (Nand1.Mp2.Mpi.Dsb.Rd.R1.TR1 * Nand1.Mp2.Mpi.Dsb.Rd.R1.DTemp + Nand1.Mp2.Mpi.Dsb.Rd.R1.TR2 * Nand1.Mp2.Mpi.Dsb.Rd.R1.DTempSq))) / Nand1.Mp2.Mpi.Dsb.Rd.R1.Area;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.e1 = Nand1.Mp2.Mpi.Dsb.Rd.R1.Rval * Nand1.Mp2.Mpi.Dsb.Rd.R1.f1;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.e1 * Nand1.Mp2.Mpi.Dsb.Rd.R1.f1 = Nand1.Mp2.Mpi.Dsb.Rd.R1.e2 * Nand1.Mp2.Mpi.Dsb.Rd.R1.f2;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.DTempSq = Nand1.Mp2.Mpi.Dsb.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.DTemp = Nand1.Mp2.Mpi.Dsb.Rd.R1.e2 - Nand1.Mp2.Mpi.Dsb.Rd.R1.Tnom;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.e1 = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.f1 = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.e2 = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.R1.f2 = (-Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.d) * Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[2] + Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[1] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[1] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.f1 + Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.e1 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.f1 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.f2 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.f1 + Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.e1 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.f1 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.f2 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.open = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.open then Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.f else Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.control = true;
//   Nand1.Mp2.Mpi.Dsb.Rd.v = Nand1.Mp2.Mpi.Dsb.Rd.p.v - Nand1.Mp2.Mpi.Dsb.Rd.n.v;
//   Nand1.Mp2.Mpi.Dsb.Rd.i = Nand1.Mp2.Mpi.Dsb.Rd.p.i;
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.RTemp = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2 / Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Tnom;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EGval = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2);
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EGnom = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Tnom);
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.ISval = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.IS * exp((Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EGval - Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EGnom * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.RTemp) / Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Vt);
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.et = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e1 / Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Vt;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.f1 = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.ISval * (if noEvent(Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.et < Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMin) then Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.et - Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.et > Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMax) then Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.et - Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.et) + -1.0);
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2 * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.f2 = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e1 * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.f1;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.DTempSq = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.DTemp = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2 - Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.Tnom;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e1 = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.f1 = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.e2 = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.f2 = (-Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.d) * Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Dsb.DjM1.v = Nand1.Mp2.Mpi.Dsb.DjM1.p.v - Nand1.Mp2.Mpi.Dsb.DjM1.n.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.i = Nand1.Mp2.Mpi.Dsb.DjM1.p.i;
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[2] + Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[1] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[1] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[2] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.e[3] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Dsb.Vd.De1.OutPort1 = Nand1.Mp2.Mpi.Dsb.Vd.De1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.De1.f = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.De1.e = Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.De1.f = Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.v = Nand1.Mp2.Mpi.Dsb.Vd.p.v - Nand1.Mp2.Mpi.Dsb.Vd.n.v;
//   Nand1.Mp2.Mpi.Dsb.Vd.i = Nand1.Mp2.Mpi.Dsb.Vd.p.i;
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.mC1.C = Nand1.Mp2.Mpi.Dsb.VarC1.mC1.s;
//   Nand1.Mp2.Mpi.Dsb.VarC1.mC1.f = Nand1.Mp2.Mpi.Dsb.VarC1.mC1.C * der(Nand1.Mp2.Mpi.Dsb.VarC1.mC1.e);
//   Nand1.Mp2.Mpi.Dsb.VarC1.mC1.e = Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.mC1.f = Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.d * Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.v = Nand1.Mp2.Mpi.Dsb.VarC1.p.v - Nand1.Mp2.Mpi.Dsb.VarC1.n.v;
//   Nand1.Mp2.Mpi.Dsb.VarC1.i = Nand1.Mp2.Mpi.Dsb.VarC1.p.i;
//   Nand1.Mp2.Mpi.Dsb.v = Nand1.Mp2.Mpi.Dsb.p.v - Nand1.Mp2.Mpi.Dsb.n.v;
//   Nand1.Mp2.Mpi.Dsb.i = Nand1.Mp2.Mpi.Dsb.p.i;
//   Nand1.Mp2.Mpi.Ddb.nlCM1.v = Nand1.Mp2.Mpi.Ddb.nlCM1.u;
//   Nand1.Mp2.Mpi.Ddb.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mp2.Mpi.Ddb.nlCM1.Tdev;
//   Nand1.Mp2.Mpi.Ddb.nlCM1.DTemp = Nand1.Mp2.Mpi.Ddb.nlCM1.Tdev - Nand1.Mp2.Mpi.Ddb.nlCM1.Tnom;
//   Nand1.Mp2.Mpi.Ddb.nlCM1.RTemp = Nand1.Mp2.Mpi.Ddb.nlCM1.Tdev / Nand1.Mp2.Mpi.Ddb.nlCM1.Tnom;
//   Nand1.Mp2.Mpi.Ddb.nlCM1.EGval = Nand1.Mp2.Mpi.Ddb.nlCM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Ddb.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Ddb.nlCM1.Tdev);
//   Nand1.Mp2.Mpi.Ddb.nlCM1.EGnom = Nand1.Mp2.Mpi.Ddb.nlCM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Ddb.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Ddb.nlCM1.Tnom);
//   Nand1.Mp2.Mpi.Ddb.nlCM1.PBval = Nand1.Mp2.Mpi.Ddb.nlCM1.PB * Nand1.Mp2.Mpi.Ddb.nlCM1.RTemp + (Nand1.Mp2.Mpi.Ddb.nlCM1.EGval + (-3.0 * (Nand1.Mp2.Mpi.Ddb.nlCM1.Vt * log(Nand1.Mp2.Mpi.Ddb.nlCM1.RTemp)) - Nand1.Mp2.Mpi.Ddb.nlCM1.EGnom * Nand1.Mp2.Mpi.Ddb.nlCM1.RTemp));
//   Nand1.Mp2.Mpi.Ddb.nlCM1.CJval = Nand1.Mp2.Mpi.Ddb.nlCM1.CJ * (1.0 + Nand1.Mp2.Mpi.Ddb.nlCM1.MJ * (1.0 + ((-Nand1.Mp2.Mpi.Ddb.nlCM1.PBval) / Nand1.Mp2.Mpi.Ddb.nlCM1.PB + 0.0004 * Nand1.Mp2.Mpi.Ddb.nlCM1.DTemp)));
//   Nand1.Mp2.Mpi.Ddb.nlCM1.CJSWval = Nand1.Mp2.Mpi.Ddb.nlCM1.CJSW * (1.0 + Nand1.Mp2.Mpi.Ddb.nlCM1.MJSW * (1.0 + ((-Nand1.Mp2.Mpi.Ddb.nlCM1.PBval) / Nand1.Mp2.Mpi.Ddb.nlCM1.PB + 0.0004 * Nand1.Mp2.Mpi.Ddb.nlCM1.DTemp)));
//   Nand1.Mp2.Mpi.Ddb.nlCM1.Cbulk = Nand1.Mp2.Mpi.Ddb.nlCM1.CJval * (if Nand1.Mp2.Mpi.Ddb.nlCM1.v > Nand1.Mp2.Mpi.Ddb.nlCM1.FC * Nand1.Mp2.Mpi.Ddb.nlCM1.PBval then (1.0 + ((Nand1.Mp2.Mpi.Ddb.nlCM1.MJ * Nand1.Mp2.Mpi.Ddb.nlCM1.v) / Nand1.Mp2.Mpi.Ddb.nlCM1.PBval - Nand1.Mp2.Mpi.Ddb.nlCM1.FC * (1.0 + Nand1.Mp2.Mpi.Ddb.nlCM1.MJ))) * (1.0 - Nand1.Mp2.Mpi.Ddb.nlCM1.FC) ^ (-1.0 - Nand1.Mp2.Mpi.Ddb.nlCM1.MJ) else abs(1.0 + (-Nand1.Mp2.Mpi.Ddb.nlCM1.v) / Nand1.Mp2.Mpi.Ddb.nlCM1.PBval) ^ (-Nand1.Mp2.Mpi.Ddb.nlCM1.MJ));
//   Nand1.Mp2.Mpi.Ddb.nlCM1.Cperi = Nand1.Mp2.Mpi.Ddb.nlCM1.CJSWval * (if Nand1.Mp2.Mpi.Ddb.nlCM1.v > Nand1.Mp2.Mpi.Ddb.nlCM1.FC * Nand1.Mp2.Mpi.Ddb.nlCM1.PBval then (1.0 + ((Nand1.Mp2.Mpi.Ddb.nlCM1.MJSW * Nand1.Mp2.Mpi.Ddb.nlCM1.v) / Nand1.Mp2.Mpi.Ddb.nlCM1.PBval - Nand1.Mp2.Mpi.Ddb.nlCM1.FC * (1.0 + Nand1.Mp2.Mpi.Ddb.nlCM1.MJSW))) * (1.0 - Nand1.Mp2.Mpi.Ddb.nlCM1.FC) ^ (-1.0 - Nand1.Mp2.Mpi.Ddb.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mp2.Mpi.Ddb.nlCM1.v) / Nand1.Mp2.Mpi.Ddb.nlCM1.PBval) ^ (-Nand1.Mp2.Mpi.Ddb.nlCM1.MJSW));
//   Nand1.Mp2.Mpi.Ddb.nlCM1.Cval = if Nand1.Mp2.Mpi.Ddb.nlCM1.A * Nand1.Mp2.Mpi.Ddb.nlCM1.Cbulk + Nand1.Mp2.Mpi.Ddb.nlCM1.P * Nand1.Mp2.Mpi.Ddb.nlCM1.Cperi > 0.0 then Nand1.Mp2.Mpi.Ddb.nlCM1.A * Nand1.Mp2.Mpi.Ddb.nlCM1.Cbulk + Nand1.Mp2.Mpi.Ddb.nlCM1.P * Nand1.Mp2.Mpi.Ddb.nlCM1.Cperi else 1e-16;
//   Nand1.Mp2.Mpi.Ddb.nlCM1.y = Nand1.Mp2.Mpi.Ddb.nlCM1.Cval;
//   Nand1.Mp2.Mpi.Ddb.Tdev1.T = Nand1.Mp2.Mpi.Ddb.Tdev1.port.T;
//   Nand1.Mp2.Mpi.Ddb.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[2] + Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[1] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[1] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[2] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.e[3] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.T_nom.e = Nand1.Mp2.Mpi.Ddb.Rd.T_nom.e0;
//   Nand1.Mp2.Mpi.Ddb.Rd.T_nom.e = Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.T_nom.f = (-Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.d) * Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.Rval = (Nand1.Mp2.Mpi.Ddb.Rd.R1.R * (1.0 + (Nand1.Mp2.Mpi.Ddb.Rd.R1.TR1 * Nand1.Mp2.Mpi.Ddb.Rd.R1.DTemp + Nand1.Mp2.Mpi.Ddb.Rd.R1.TR2 * Nand1.Mp2.Mpi.Ddb.Rd.R1.DTempSq))) / Nand1.Mp2.Mpi.Ddb.Rd.R1.Area;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.e1 = Nand1.Mp2.Mpi.Ddb.Rd.R1.Rval * Nand1.Mp2.Mpi.Ddb.Rd.R1.f1;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.e1 * Nand1.Mp2.Mpi.Ddb.Rd.R1.f1 = Nand1.Mp2.Mpi.Ddb.Rd.R1.e2 * Nand1.Mp2.Mpi.Ddb.Rd.R1.f2;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.DTempSq = Nand1.Mp2.Mpi.Ddb.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.DTemp = Nand1.Mp2.Mpi.Ddb.Rd.R1.e2 - Nand1.Mp2.Mpi.Ddb.Rd.R1.Tnom;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.e1 = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.f1 = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.e2 = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.R1.f2 = (-Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.d) * Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[2] + Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[1] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[1] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.f1 + Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.e1 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.f1 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.f2 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.f1 + Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.e1 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.f1 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.f2 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.open = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.open then Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.f else Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.control = true;
//   Nand1.Mp2.Mpi.Ddb.Rd.v = Nand1.Mp2.Mpi.Ddb.Rd.p.v - Nand1.Mp2.Mpi.Ddb.Rd.n.v;
//   Nand1.Mp2.Mpi.Ddb.Rd.i = Nand1.Mp2.Mpi.Ddb.Rd.p.i;
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.RTemp = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2 / Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Tnom;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EGval = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2);
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EGnom = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EG + (-0.000702 * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Tnom);
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.ISval = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.IS * exp((Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EGval - Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EGnom * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.RTemp) / Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Vt);
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.et = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e1 / Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Vt;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.f1 = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.ISval * (if noEvent(Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.et < Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMin) then Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.et - Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.et > Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMax) then Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.et - Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.et) + -1.0);
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2 * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.f2 = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e1 * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.f1;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.DTempSq = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.DTemp = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2 - Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.Tnom;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e1 = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.f1 = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.e2 = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.f2 = (-Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.d) * Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Ddb.DjM1.v = Nand1.Mp2.Mpi.Ddb.DjM1.p.v - Nand1.Mp2.Mpi.Ddb.DjM1.n.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.i = Nand1.Mp2.Mpi.Ddb.DjM1.p.i;
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[2] + Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[1] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[1] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[2] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.e[3] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Ddb.Vd.De1.OutPort1 = Nand1.Mp2.Mpi.Ddb.Vd.De1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.De1.f = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.De1.e = Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.De1.f = Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.v = Nand1.Mp2.Mpi.Ddb.Vd.p.v - Nand1.Mp2.Mpi.Ddb.Vd.n.v;
//   Nand1.Mp2.Mpi.Ddb.Vd.i = Nand1.Mp2.Mpi.Ddb.Vd.p.i;
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.mC1.C = Nand1.Mp2.Mpi.Ddb.VarC1.mC1.s;
//   Nand1.Mp2.Mpi.Ddb.VarC1.mC1.f = Nand1.Mp2.Mpi.Ddb.VarC1.mC1.C * der(Nand1.Mp2.Mpi.Ddb.VarC1.mC1.e);
//   Nand1.Mp2.Mpi.Ddb.VarC1.mC1.e = Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.mC1.f = Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.d * Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.v = Nand1.Mp2.Mpi.Ddb.VarC1.p.v - Nand1.Mp2.Mpi.Ddb.VarC1.n.v;
//   Nand1.Mp2.Mpi.Ddb.VarC1.i = Nand1.Mp2.Mpi.Ddb.VarC1.p.i;
//   Nand1.Mp2.Mpi.Ddb.v = Nand1.Mp2.Mpi.Ddb.p.v - Nand1.Mp2.Mpi.Ddb.n.v;
//   Nand1.Mp2.Mpi.Ddb.i = Nand1.Mp2.Mpi.Ddb.p.i;
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Vsd.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Vsd.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Vsd.J1p3_1.e[2] + Nand1.Mp2.Mpi.Vsd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.e[1] = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.f[1] = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.e[2] = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.e[3] = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Vsd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon2.e = Nand1.Mp2.Mpi.Vsd.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon2.f = Nand1.Mp2.Mpi.Vsd.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon2.e = Nand1.Mp2.Mpi.Vsd.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon2.f = Nand1.Mp2.Mpi.Vsd.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Vsd.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Vsd.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Vsd.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Vsd.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Vsd.De1.OutPort1 = Nand1.Mp2.Mpi.Vsd.De1.e;
//   Nand1.Mp2.Mpi.Vsd.De1.f = 0.0;
//   Nand1.Mp2.Mpi.Vsd.De1.e = Nand1.Mp2.Mpi.Vsd.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.De1.f = Nand1.Mp2.Mpi.Vsd.De1.BondCon1.d * Nand1.Mp2.Mpi.Vsd.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon2.e = Nand1.Mp2.Mpi.Vsd.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon2.f = Nand1.Mp2.Mpi.Vsd.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Vsd.v = Nand1.Mp2.Mpi.Vsd.p.v - Nand1.Mp2.Mpi.Vsd.n.v;
//   Nand1.Mp2.Mpi.Vsd.i = Nand1.Mp2.Mpi.Vsd.p.i;
//   Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Isd.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Isd.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Isd.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Isd.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Isd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Isd.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Isd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Isd.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Isd.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Isd.J1p3_1.e[2] + Nand1.Mp2.Mpi.Isd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Isd.J1p3_1.e[1] = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.J1p3_1.f[1] = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.J1p3_1.e[2] = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Isd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Isd.J1p3_1.e[3] = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Isd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon2.e = Nand1.Mp2.Mpi.Isd.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon2.f = Nand1.Mp2.Mpi.Isd.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon2.e = Nand1.Mp2.Mpi.Isd.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon2.f = Nand1.Mp2.Mpi.Isd.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Isd.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Isd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Isd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Isd.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Isd.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B4.eBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Isd.B4.fBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Isd.B3.fBondCon1.e = Nand1.Mp2.Mpi.Isd.B3.eBondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B3.eBondCon1.f = Nand1.Mp2.Mpi.Isd.B3.fBondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B3.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Isd.B3.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Isd.I1.f0 = Nand1.Mp2.Mpi.Isd.I1.s;
//   Nand1.Mp2.Mpi.Isd.I1.f2 = Nand1.Mp2.Mpi.Isd.I1.f0;
//   Nand1.Mp2.Mpi.Isd.I1.e1 * Nand1.Mp2.Mpi.Isd.I1.f1 = Nand1.Mp2.Mpi.Isd.I1.e2 * Nand1.Mp2.Mpi.Isd.I1.f2;
//   Nand1.Mp2.Mpi.Isd.I1.e1 = Nand1.Mp2.Mpi.Isd.I1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.I1.f1 = Nand1.Mp2.Mpi.Isd.I1.BondCon1.d * Nand1.Mp2.Mpi.Isd.I1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.I1.e2 = Nand1.Mp2.Mpi.Isd.I1.BondCon2.e;
//   Nand1.Mp2.Mpi.Isd.I1.f2 = (-Nand1.Mp2.Mpi.Isd.I1.BondCon2.d) * Nand1.Mp2.Mpi.Isd.I1.BondCon2.f;
//   Nand1.Mp2.Mpi.Isd.v = Nand1.Mp2.Mpi.Isd.p.v - Nand1.Mp2.Mpi.Isd.n.v;
//   Nand1.Mp2.Mpi.Isd.i = Nand1.Mp2.Mpi.Isd.p.i;
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsg.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsg.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rsg.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rsg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsg.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsg.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsg.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsg.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsg.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsg.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Rsg.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Rsg.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Rsg.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Rsg.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.T_nom.e = Nand1.Mp2.Mpi.Rsg.T_nom.e0;
//   Nand1.Mp2.Mpi.Rsg.T_nom.e = Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.T_nom.f = (-Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.d) * Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.R1.Rval = (Nand1.Mp2.Mpi.Rsg.R1.R * (1.0 + (Nand1.Mp2.Mpi.Rsg.R1.TR1 * Nand1.Mp2.Mpi.Rsg.R1.DTemp + Nand1.Mp2.Mpi.Rsg.R1.TR2 * Nand1.Mp2.Mpi.Rsg.R1.DTempSq))) / Nand1.Mp2.Mpi.Rsg.R1.Area;
//   Nand1.Mp2.Mpi.Rsg.R1.e1 = Nand1.Mp2.Mpi.Rsg.R1.Rval * Nand1.Mp2.Mpi.Rsg.R1.f1;
//   Nand1.Mp2.Mpi.Rsg.R1.e1 * Nand1.Mp2.Mpi.Rsg.R1.f1 = Nand1.Mp2.Mpi.Rsg.R1.e2 * Nand1.Mp2.Mpi.Rsg.R1.f2;
//   Nand1.Mp2.Mpi.Rsg.R1.DTempSq = Nand1.Mp2.Mpi.Rsg.R1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Rsg.R1.DTemp = Nand1.Mp2.Mpi.Rsg.R1.e2 - Nand1.Mp2.Mpi.Rsg.R1.Tnom;
//   Nand1.Mp2.Mpi.Rsg.R1.e1 = Nand1.Mp2.Mpi.Rsg.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.R1.f1 = Nand1.Mp2.Mpi.Rsg.R1.BondCon1.d * Nand1.Mp2.Mpi.Rsg.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.R1.e2 = Nand1.Mp2.Mpi.Rsg.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.R1.f2 = (-Nand1.Mp2.Mpi.Rsg.R1.BondCon2.d) * Nand1.Mp2.Mpi.Rsg.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[1];
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[2];
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[1] + (Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[2] + Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[1] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[1] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[2] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.f[3] = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.e1;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.f1 + Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.e1 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.f1 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.d * Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.f2 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.d * Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.e1;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.f1 + Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.e1 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.f1 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.d * Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.f2 = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.d * Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.open = Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.open then Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.f else Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.e = Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.f = Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.d * Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Rsg.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Rsg.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Rsg.Sw1.control = true;
//   Nand1.Mp2.Mpi.Rsg.v = Nand1.Mp2.Mpi.Rsg.p.v - Nand1.Mp2.Mpi.Rsg.n.v;
//   Nand1.Mp2.Mpi.Rsg.i = Nand1.Mp2.Mpi.Rsg.p.i;
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rdg.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rdg.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rdg.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rdg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rdg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon2.e = Nand1.Mp2.Mpi.Rdg.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon2.f = Nand1.Mp2.Mpi.Rdg.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon2.e = Nand1.Mp2.Mpi.Rdg.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon2.f = Nand1.Mp2.Mpi.Rdg.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon2.e = Nand1.Mp2.Mpi.Rdg.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon2.f = Nand1.Mp2.Mpi.Rdg.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Rdg.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Rdg.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Rdg.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Rdg.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.T_nom.e = Nand1.Mp2.Mpi.Rdg.T_nom.e0;
//   Nand1.Mp2.Mpi.Rdg.T_nom.e = Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.T_nom.f = (-Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.d) * Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.R1.Rval = (Nand1.Mp2.Mpi.Rdg.R1.R * (1.0 + (Nand1.Mp2.Mpi.Rdg.R1.TR1 * Nand1.Mp2.Mpi.Rdg.R1.DTemp + Nand1.Mp2.Mpi.Rdg.R1.TR2 * Nand1.Mp2.Mpi.Rdg.R1.DTempSq))) / Nand1.Mp2.Mpi.Rdg.R1.Area;
//   Nand1.Mp2.Mpi.Rdg.R1.e1 = Nand1.Mp2.Mpi.Rdg.R1.Rval * Nand1.Mp2.Mpi.Rdg.R1.f1;
//   Nand1.Mp2.Mpi.Rdg.R1.e1 * Nand1.Mp2.Mpi.Rdg.R1.f1 = Nand1.Mp2.Mpi.Rdg.R1.e2 * Nand1.Mp2.Mpi.Rdg.R1.f2;
//   Nand1.Mp2.Mpi.Rdg.R1.DTempSq = Nand1.Mp2.Mpi.Rdg.R1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Rdg.R1.DTemp = Nand1.Mp2.Mpi.Rdg.R1.e2 - Nand1.Mp2.Mpi.Rdg.R1.Tnom;
//   Nand1.Mp2.Mpi.Rdg.R1.e1 = Nand1.Mp2.Mpi.Rdg.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.R1.f1 = Nand1.Mp2.Mpi.Rdg.R1.BondCon1.d * Nand1.Mp2.Mpi.Rdg.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.R1.e2 = Nand1.Mp2.Mpi.Rdg.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.R1.f2 = (-Nand1.Mp2.Mpi.Rdg.R1.BondCon2.d) * Nand1.Mp2.Mpi.Rdg.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[1];
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[2];
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[1] + (Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[2] + Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[1] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[1] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[2] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.f[3] = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.e1;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.f1 + Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.e1 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.f1 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.d * Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.f2 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.d * Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.e1;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.f1 + Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.e1 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.f1 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.d * Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.f2 = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.d * Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.open = Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.open then Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.f else Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.e = Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.f = Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.d * Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Rdg.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Rdg.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Rdg.Sw1.control = true;
//   Nand1.Mp2.Mpi.Rdg.v = Nand1.Mp2.Mpi.Rdg.p.v - Nand1.Mp2.Mpi.Rdg.n.v;
//   Nand1.Mp2.Mpi.Rdg.i = Nand1.Mp2.Mpi.Rdg.p.i;
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rbg.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rbg.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rbg.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rbg.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rbg.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon2.e = Nand1.Mp2.Mpi.Rbg.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon2.f = Nand1.Mp2.Mpi.Rbg.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon2.e = Nand1.Mp2.Mpi.Rbg.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon2.f = Nand1.Mp2.Mpi.Rbg.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon2.e = Nand1.Mp2.Mpi.Rbg.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon2.f = Nand1.Mp2.Mpi.Rbg.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Rbg.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Rbg.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Rbg.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Rbg.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.T_nom.e = Nand1.Mp2.Mpi.Rbg.T_nom.e0;
//   Nand1.Mp2.Mpi.Rbg.T_nom.e = Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.T_nom.f = (-Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.d) * Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.R1.Rval = (Nand1.Mp2.Mpi.Rbg.R1.R * (1.0 + (Nand1.Mp2.Mpi.Rbg.R1.TR1 * Nand1.Mp2.Mpi.Rbg.R1.DTemp + Nand1.Mp2.Mpi.Rbg.R1.TR2 * Nand1.Mp2.Mpi.Rbg.R1.DTempSq))) / Nand1.Mp2.Mpi.Rbg.R1.Area;
//   Nand1.Mp2.Mpi.Rbg.R1.e1 = Nand1.Mp2.Mpi.Rbg.R1.Rval * Nand1.Mp2.Mpi.Rbg.R1.f1;
//   Nand1.Mp2.Mpi.Rbg.R1.e1 * Nand1.Mp2.Mpi.Rbg.R1.f1 = Nand1.Mp2.Mpi.Rbg.R1.e2 * Nand1.Mp2.Mpi.Rbg.R1.f2;
//   Nand1.Mp2.Mpi.Rbg.R1.DTempSq = Nand1.Mp2.Mpi.Rbg.R1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Rbg.R1.DTemp = Nand1.Mp2.Mpi.Rbg.R1.e2 - Nand1.Mp2.Mpi.Rbg.R1.Tnom;
//   Nand1.Mp2.Mpi.Rbg.R1.e1 = Nand1.Mp2.Mpi.Rbg.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.R1.f1 = Nand1.Mp2.Mpi.Rbg.R1.BondCon1.d * Nand1.Mp2.Mpi.Rbg.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.R1.e2 = Nand1.Mp2.Mpi.Rbg.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.R1.f2 = (-Nand1.Mp2.Mpi.Rbg.R1.BondCon2.d) * Nand1.Mp2.Mpi.Rbg.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[1];
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[2];
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[1] + (Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[2] + Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[1] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[1] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[2] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.f[3] = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.e1;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.f1 + Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.e1 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.f1 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.d * Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.f2 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.d * Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.e1;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.f1 + Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.e1 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.f1 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.d * Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.f2 = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.d * Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.open = Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.open then Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.f else Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.e = Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.f = Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.d * Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Rbg.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Rbg.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Rbg.Sw1.control = true;
//   Nand1.Mp2.Mpi.Rbg.v = Nand1.Mp2.Mpi.Rbg.p.v - Nand1.Mp2.Mpi.Rbg.n.v;
//   Nand1.Mp2.Mpi.Rbg.i = Nand1.Mp2.Mpi.Rbg.p.i;
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsd.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsd.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rsd.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rsd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsd.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsd.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsd.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsd.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsd.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsd.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsd.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.e = Nand1.Mp2.Mpi.Rsd.El2BG1.p.v;
//   Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.f = Nand1.Mp2.Mpi.Rsd.El2BG1.p.i;
//   Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.e = Nand1.Mp2.Mpi.Rsd.BG2El1.n.v;
//   Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.f = -Nand1.Mp2.Mpi.Rsd.BG2El1.n.i;
//   Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.T_nom.e = Nand1.Mp2.Mpi.Rsd.T_nom.e0;
//   Nand1.Mp2.Mpi.Rsd.T_nom.e = Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.T_nom.f = (-Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.d) * Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.R1.Rval = (Nand1.Mp2.Mpi.Rsd.R1.R * (1.0 + (Nand1.Mp2.Mpi.Rsd.R1.TR1 * Nand1.Mp2.Mpi.Rsd.R1.DTemp + Nand1.Mp2.Mpi.Rsd.R1.TR2 * Nand1.Mp2.Mpi.Rsd.R1.DTempSq))) / Nand1.Mp2.Mpi.Rsd.R1.Area;
//   Nand1.Mp2.Mpi.Rsd.R1.e1 = Nand1.Mp2.Mpi.Rsd.R1.Rval * Nand1.Mp2.Mpi.Rsd.R1.f1;
//   Nand1.Mp2.Mpi.Rsd.R1.e1 * Nand1.Mp2.Mpi.Rsd.R1.f1 = Nand1.Mp2.Mpi.Rsd.R1.e2 * Nand1.Mp2.Mpi.Rsd.R1.f2;
//   Nand1.Mp2.Mpi.Rsd.R1.DTempSq = Nand1.Mp2.Mpi.Rsd.R1.DTemp ^ 2.0;
//   Nand1.Mp2.Mpi.Rsd.R1.DTemp = Nand1.Mp2.Mpi.Rsd.R1.e2 - Nand1.Mp2.Mpi.Rsd.R1.Tnom;
//   Nand1.Mp2.Mpi.Rsd.R1.e1 = Nand1.Mp2.Mpi.Rsd.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.R1.f1 = Nand1.Mp2.Mpi.Rsd.R1.BondCon1.d * Nand1.Mp2.Mpi.Rsd.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.R1.e2 = Nand1.Mp2.Mpi.Rsd.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.R1.f2 = (-Nand1.Mp2.Mpi.Rsd.R1.BondCon2.d) * Nand1.Mp2.Mpi.Rsd.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[1];
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[2];
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[1] + (Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[2] + Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[1] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[1] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[2] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[2] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.e[3] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.f[3] = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[1];
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[2];
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[1] + (Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[2] + Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[1] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[1] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.d * Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[2] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[2] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.d * Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.e[3] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.f[3] = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.d * Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.e1;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.f1 + Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.e1 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.f1 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.d * Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.e2 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.f2 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.d * Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.e1;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.f1 + Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.e1 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.f1 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.d * Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.e2 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.f2 = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.d * Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.open = Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.open then Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.f else Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.e = Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.f = Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.d * Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.d = -1.0;
//   Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.d = 1.0;
//   Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.e = Nand1.Mp2.Mpi.Rsd.BG2Heat1.port_b.T;
//   Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.e * Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.f = -Nand1.Mp2.Mpi.Rsd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Mpi.Rsd.Sw1.control = true;
//   Nand1.Mp2.Mpi.Rsd.v = Nand1.Mp2.Mpi.Rsd.p.v - Nand1.Mp2.Mpi.Rsd.n.v;
//   Nand1.Mp2.Mpi.Rsd.i = Nand1.Mp2.Mpi.Rsd.p.i;
//   Nand1.Mp2.T_nom.BG2Heat1.BondCon1.e = Nand1.Mp2.T_nom.BG2Heat1.port_b.T;
//   Nand1.Mp2.T_nom.BG2Heat1.BondCon1.e * Nand1.Mp2.T_nom.BG2Heat1.BondCon1.f = -Nand1.Mp2.T_nom.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.T_nom.Tabs.e0 = Nand1.Mp2.T_nom.Tabs.s;
//   Nand1.Mp2.T_nom.Tabs.e = Nand1.Mp2.T_nom.Tabs.e0;
//   Nand1.Mp2.T_nom.Tabs.e = Nand1.Mp2.T_nom.Tabs.BondCon1.e;
//   Nand1.Mp2.T_nom.Tabs.f = (-Nand1.Mp2.T_nom.Tabs.BondCon1.d) * Nand1.Mp2.T_nom.Tabs.BondCon1.f;
//   Nand1.Mp2.T_nom.B1.fBondCon1.e = Nand1.Mp2.T_nom.B1.eBondCon1.e;
//   Nand1.Mp2.T_nom.B1.eBondCon1.f = Nand1.Mp2.T_nom.B1.fBondCon1.f;
//   Nand1.Mp2.T_nom.B1.eBondCon1.d = -1.0;
//   Nand1.Mp2.T_nom.B1.fBondCon1.d = 1.0;
//   Nand1.Mp2.T_nom.Tabs.s = Nand1.Mp2.T_nom.T;
//   Nand1.Mp2.Sw1.B1.BondCon2.e = Nand1.Mp2.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Sw1.B1.BondCon2.f = Nand1.Mp2.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Sw1.B2.BondCon2.e = Nand1.Mp2.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Sw1.B2.BondCon2.f = Nand1.Mp2.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Sw1.B3.BondCon2.e = Nand1.Mp2.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Sw1.B3.BondCon2.f = Nand1.Mp2.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Sw1.Heat2BG1.BondCon1.e = Nand1.Mp2.Sw1.Heat2BG1.port_a.T;
//   Nand1.Mp2.Sw1.Heat2BG1.BondCon1.e * Nand1.Mp2.Sw1.Heat2BG1.BondCon1.f = Nand1.Mp2.Sw1.Heat2BG1.port_a.Q_flow;
//   Nand1.Mp2.Sw1.BG2Heat1.BondCon1.e = Nand1.Mp2.Sw1.BG2Heat1.port_b.T;
//   Nand1.Mp2.Sw1.BG2Heat1.BondCon1.e * Nand1.Mp2.Sw1.BG2Heat1.BondCon1.f = -Nand1.Mp2.Sw1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mp2.Sw1.BG2Heat2.BondCon1.e = Nand1.Mp2.Sw1.BG2Heat2.port_b.T;
//   Nand1.Mp2.Sw1.BG2Heat2.BondCon1.e * Nand1.Mp2.Sw1.BG2Heat2.BondCon1.f = -Nand1.Mp2.Sw1.BG2Heat2.port_b.Q_flow;
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mp2.Sw1.Sw1.J1p3_1.f[1];
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mp2.Sw1.Sw1.J1p3_1.f[2];
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.e[1] + (Nand1.Mp2.Sw1.Sw1.J1p3_1.e[2] + Nand1.Mp2.Sw1.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.e[1] = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.d * Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.f[1] = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.e[2] = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.d * Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.e[3] = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.d * Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon2.e = Nand1.Mp2.Sw1.Sw1.B1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon2.f = Nand1.Mp2.Sw1.Sw1.B1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon2.e = Nand1.Mp2.Sw1.Sw1.B2.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon2.f = Nand1.Mp2.Sw1.Sw1.B2.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mp2.Sw1.Sw1.J0p3_1.e[1];
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mp2.Sw1.Sw1.J0p3_1.e[2];
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.f[1] + (Nand1.Mp2.Sw1.Sw1.J0p3_1.f[2] + Nand1.Mp2.Sw1.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.e[1] = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.f[1] = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.d * Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.f[2] = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.d * Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.f[3] = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.d * Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon2.e = Nand1.Mp2.Sw1.Sw1.B4.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon2.f = Nand1.Mp2.Sw1.Sw1.B4.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.e2 = Nand1.Mp2.Sw1.Sw1.j0p2_1.e1;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.f1 + Nand1.Mp2.Sw1.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.e1 = Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.f1 = Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.d * Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.e2 = Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.f2 = Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.d * Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.e2 = Nand1.Mp2.Sw1.Sw1.j0p2_2.e1;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.f1 + Nand1.Mp2.Sw1.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.e1 = Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.f1 = Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.d * Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.e2 = Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.f2 = Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.d * Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mp2.Sw1.Sw1.Sw1.open = Nand1.Mp2.Sw1.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mp2.Sw1.Sw1.Sw1.open then Nand1.Mp2.Sw1.Sw1.Sw1.f else Nand1.Mp2.Sw1.Sw1.Sw1.e;
//   Nand1.Mp2.Sw1.Sw1.Sw1.e = Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.Sw1.f = Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.d * Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon2.e = Nand1.Mp2.Sw1.Sw1.B3.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon2.f = Nand1.Mp2.Sw1.Sw1.B3.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Vsd.J1p3_1.f[2] = Nand1.Mp2.Vsd.J1p3_1.f[1];
//   Nand1.Mp2.Vsd.J1p3_1.f[3] = Nand1.Mp2.Vsd.J1p3_1.f[2];
//   Nand1.Mp2.Vsd.J1p3_1.e[1] + (Nand1.Mp2.Vsd.J1p3_1.e[2] + Nand1.Mp2.Vsd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mp2.Vsd.J1p3_1.e[1] = Nand1.Mp2.Vsd.J1p3_1.BondCon1.d * Nand1.Mp2.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Vsd.J1p3_1.f[1] = Nand1.Mp2.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Vsd.J1p3_1.e[2] = Nand1.Mp2.Vsd.J1p3_1.BondCon2.d * Nand1.Mp2.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Vsd.J1p3_1.f[2] = Nand1.Mp2.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Vsd.J1p3_1.e[3] = Nand1.Mp2.Vsd.J1p3_1.BondCon3.d * Nand1.Mp2.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Vsd.J1p3_1.f[3] = Nand1.Mp2.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Vsd.B1.BondCon2.e = Nand1.Mp2.Vsd.B1.BondCon1.e;
//   Nand1.Mp2.Vsd.B1.BondCon2.f = Nand1.Mp2.Vsd.B1.BondCon1.f;
//   Nand1.Mp2.Vsd.B1.BondCon1.d = -1.0;
//   Nand1.Mp2.Vsd.B1.BondCon2.d = 1.0;
//   Nand1.Mp2.Vsd.B2.BondCon2.e = Nand1.Mp2.Vsd.B2.BondCon1.e;
//   Nand1.Mp2.Vsd.B2.BondCon2.f = Nand1.Mp2.Vsd.B2.BondCon1.f;
//   Nand1.Mp2.Vsd.B2.BondCon1.d = -1.0;
//   Nand1.Mp2.Vsd.B2.BondCon2.d = 1.0;
//   Nand1.Mp2.Vsd.El2BG1.BondCon1.e = Nand1.Mp2.Vsd.El2BG1.p.v;
//   Nand1.Mp2.Vsd.El2BG1.BondCon1.f = Nand1.Mp2.Vsd.El2BG1.p.i;
//   Nand1.Mp2.Vsd.BG2El1.BondCon1.e = Nand1.Mp2.Vsd.BG2El1.n.v;
//   Nand1.Mp2.Vsd.BG2El1.BondCon1.f = -Nand1.Mp2.Vsd.BG2El1.n.i;
//   Nand1.Mp2.Vsd.De1.OutPort1 = Nand1.Mp2.Vsd.De1.e;
//   Nand1.Mp2.Vsd.De1.f = 0.0;
//   Nand1.Mp2.Vsd.De1.e = Nand1.Mp2.Vsd.De1.BondCon1.e;
//   Nand1.Mp2.Vsd.De1.f = Nand1.Mp2.Vsd.De1.BondCon1.d * Nand1.Mp2.Vsd.De1.BondCon1.f;
//   Nand1.Mp2.Vsd.B3.BondCon2.e = Nand1.Mp2.Vsd.B3.BondCon1.e;
//   Nand1.Mp2.Vsd.B3.BondCon2.f = Nand1.Mp2.Vsd.B3.BondCon1.f;
//   Nand1.Mp2.Vsd.B3.BondCon1.d = -1.0;
//   Nand1.Mp2.Vsd.B3.BondCon2.d = 1.0;
//   Nand1.Mp2.Vsd.v = Nand1.Mp2.Vsd.p.v - Nand1.Mp2.Vsd.n.v;
//   Nand1.Mp2.Vsd.i = Nand1.Mp2.Vsd.p.i;
//   Nand1.Mp2.Sw1.control = true;
//   Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Ids.El2BG1.p.v;
//   Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Ids.El2BG1.p.i;
//   Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Ids.BG2El1.n.v;
//   Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Ids.BG2El1.n.i;
//   Nand1.Mn1.Mni.Ids.J1p3_1.f[2] = Nand1.Mn1.Mni.Ids.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Ids.J1p3_1.f[3] = Nand1.Mn1.Mni.Ids.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Ids.J1p3_1.e[1] + (Nand1.Mn1.Mni.Ids.J1p3_1.e[2] + Nand1.Mn1.Mni.Ids.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Ids.J1p3_1.e[1] = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.J1p3_1.f[1] = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.J1p3_1.e[2] = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Ids.J1p3_1.f[2] = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Ids.J1p3_1.e[3] = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Ids.J1p3_1.f[3] = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Ids.B1.BondCon2.e = Nand1.Mn1.Mni.Ids.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.B1.BondCon2.f = Nand1.Mn1.Mni.Ids.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Ids.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Ids.B2.BondCon2.e = Nand1.Mn1.Mni.Ids.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.B2.BondCon2.f = Nand1.Mn1.Mni.Ids.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Ids.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Ids.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Ids.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Ids.B4.fBondCon1.e = Nand1.Mn1.Mni.Ids.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Ids.B4.eBondCon1.f = Nand1.Mn1.Mni.Ids.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Ids.B4.eBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Ids.B4.fBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Ids.B3.fBondCon1.e = Nand1.Mn1.Mni.Ids.B3.eBondCon1.e;
//   Nand1.Mn1.Mni.Ids.B3.eBondCon1.f = Nand1.Mn1.Mni.Ids.B3.fBondCon1.f;
//   Nand1.Mn1.Mni.Ids.B3.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Ids.B3.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Ids.I1.f0 = Nand1.Mn1.Mni.Ids.I1.s;
//   Nand1.Mn1.Mni.Ids.I1.f2 = Nand1.Mn1.Mni.Ids.I1.f0;
//   Nand1.Mn1.Mni.Ids.I1.e1 * Nand1.Mn1.Mni.Ids.I1.f1 = Nand1.Mn1.Mni.Ids.I1.e2 * Nand1.Mn1.Mni.Ids.I1.f2;
//   Nand1.Mn1.Mni.Ids.I1.e1 = Nand1.Mn1.Mni.Ids.I1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.I1.f1 = Nand1.Mn1.Mni.Ids.I1.BondCon1.d * Nand1.Mn1.Mni.Ids.I1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.I1.e2 = Nand1.Mn1.Mni.Ids.I1.BondCon2.e;
//   Nand1.Mn1.Mni.Ids.I1.f2 = (-Nand1.Mn1.Mni.Ids.I1.BondCon2.d) * Nand1.Mn1.Mni.Ids.I1.BondCon2.f;
//   Nand1.Mn1.Mni.Ids.v = Nand1.Mn1.Mni.Ids.p.v - Nand1.Mn1.Mni.Ids.n.v;
//   Nand1.Mn1.Mni.Ids.i = Nand1.Mn1.Mni.Ids.p.i;
//   if noEvent(Nand1.Mn1.Mni.IDS0.u1 > 0.0) then
//   Nand1.Mn1.Mni.IDS0.sig = 1.0;
//   Nand1.Mn1.Mni.IDS0.vds = Nand1.Mn1.Mni.IDS0.u1;
//   Nand1.Mn1.Mni.IDS0.vgs = Nand1.Mn1.Mni.IDS0.u2;
//   Nand1.Mn1.Mni.IDS0.vbs = Nand1.Mn1.Mni.IDS0.u3;
//   else
//   Nand1.Mn1.Mni.IDS0.sig = -1.0;
//   Nand1.Mn1.Mni.IDS0.vds = -Nand1.Mn1.Mni.IDS0.u1;
//   Nand1.Mn1.Mni.IDS0.vgs = Nand1.Mn1.Mni.IDS0.u2 - Nand1.Mn1.Mni.IDS0.u1;
//   Nand1.Mn1.Mni.IDS0.vbs = Nand1.Mn1.Mni.IDS0.u3 - Nand1.Mn1.Mni.IDS0.u1;
//   end if;
//   (Nand1.Mn1.Mni.IDS0.ids,Nand1.Mn1.Mni.IDS0.Vfb,Nand1.Mn1.Mni.IDS0.Vth,Nand1.Mn1.Mni.IDS0.vdsat,Nand1.Mn1.Mni.IDS0.vpof) = BondLib.Spice.Utilities.MOSeq3(Nand1.Mn1.Mni.IDS0.vds,Nand1.Mn1.Mni.IDS0.vgs,Nand1.Mn1.Mni.IDS0.vbs,Nand1.Mn1.Mni.IDS0.Tdev,Nand1.Mn1.Mni.IDS0.sig,Nand1.Mn1.Mni.IDS0.Type,Nand1.Mn1.Mni.IDS0.Tnom,Nand1.Mn1.Mni.IDS0.VFB,Nand1.Mn1.Mni.IDS0.KP,Nand1.Mn1.Mni.IDS0.GAMMA,Nand1.Mn1.Mni.IDS0.PHI,Nand1.Mn1.Mni.IDS0.COX,Nand1.Mn1.Mni.IDS0.NFS,Nand1.Mn1.Mni.IDS0.XJ,Nand1.Mn1.Mni.IDS0.L,Nand1.Mn1.Mni.IDS0.W,Nand1.Mn1.Mni.IDS0.LD,Nand1.Mn1.Mni.IDS0.XD,Nand1.Mn1.Mni.IDS0.U0,Nand1.Mn1.Mni.IDS0.VMAX,Nand1.Mn1.Mni.IDS0.DELTA,Nand1.Mn1.Mni.IDS0.KAPPA,Nand1.Mn1.Mni.IDS0.ETA,Nand1.Mn1.Mni.IDS0.THETA,Nand1.Mn1.Mni.IDS0.EG,Nand1.Mn1.Mni.IDS0.EMin,Nand1.Mn1.Mni.IDS0.EMax);
//   Nand1.Mn1.Mni.IDS0.vdsat1 = 0.0;
//   Nand1.Mn1.Mni.IDS0.y = Nand1.Mn1.Mni.IDS0.ids;
//   Nand1.Mn1.Mni.IDS0.y1[1] = Nand1.Mn1.Mni.IDS0.Vfb;
//   Nand1.Mn1.Mni.IDS0.y1[2] = Nand1.Mn1.Mni.IDS0.Vth;
//   Nand1.Mn1.Mni.IDS0.y1[3] = Nand1.Mn1.Mni.IDS0.vdsat;
//   Nand1.Mn1.Mni.IDS0.y1[4] = Nand1.Mn1.Mni.IDS0.vdsat1;
//   Nand1.Mn1.Mni.IDS0.y1[5] = Nand1.Mn1.Mni.IDS0.vpof;
//   Nand1.Mn1.Mni.Tdev1.T = Nand1.Mn1.Mni.Tdev1.port.T;
//   Nand1.Mn1.Mni.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Vds.J1p3_1.f[2] = Nand1.Mn1.Mni.Vds.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Vds.J1p3_1.f[3] = Nand1.Mn1.Mni.Vds.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Vds.J1p3_1.e[1] + (Nand1.Mn1.Mni.Vds.J1p3_1.e[2] + Nand1.Mn1.Mni.Vds.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Vds.J1p3_1.e[1] = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.J1p3_1.f[1] = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.J1p3_1.e[2] = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Vds.J1p3_1.f[2] = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Vds.J1p3_1.e[3] = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Vds.J1p3_1.f[3] = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Vds.B1.BondCon2.e = Nand1.Mn1.Mni.Vds.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.B1.BondCon2.f = Nand1.Mn1.Mni.Vds.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vds.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vds.B2.BondCon2.e = Nand1.Mn1.Mni.Vds.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.B2.BondCon2.f = Nand1.Mn1.Mni.Vds.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vds.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Vds.El2BG1.p.v;
//   Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Vds.El2BG1.p.i;
//   Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Vds.BG2El1.n.v;
//   Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Vds.BG2El1.n.i;
//   Nand1.Mn1.Mni.Vds.De1.OutPort1 = Nand1.Mn1.Mni.Vds.De1.e;
//   Nand1.Mn1.Mni.Vds.De1.f = 0.0;
//   Nand1.Mn1.Mni.Vds.De1.e = Nand1.Mn1.Mni.Vds.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.De1.f = Nand1.Mn1.Mni.Vds.De1.BondCon1.d * Nand1.Mn1.Mni.Vds.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B3.BondCon2.e = Nand1.Mn1.Mni.Vds.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.B3.BondCon2.f = Nand1.Mn1.Mni.Vds.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vds.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vds.v = Nand1.Mn1.Mni.Vds.p.v - Nand1.Mn1.Mni.Vds.n.v;
//   Nand1.Mn1.Mni.Vds.i = Nand1.Mn1.Mni.Vds.p.i;
//   Nand1.Mn1.Mni.Vgs.J1p3_1.f[2] = Nand1.Mn1.Mni.Vgs.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Vgs.J1p3_1.f[3] = Nand1.Mn1.Mni.Vgs.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Vgs.J1p3_1.e[1] + (Nand1.Mn1.Mni.Vgs.J1p3_1.e[2] + Nand1.Mn1.Mni.Vgs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Vgs.J1p3_1.e[1] = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.J1p3_1.f[1] = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.J1p3_1.e[2] = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Vgs.J1p3_1.f[2] = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Vgs.J1p3_1.e[3] = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Vgs.J1p3_1.f[3] = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon2.e = Nand1.Mn1.Mni.Vgs.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon2.f = Nand1.Mn1.Mni.Vgs.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon2.e = Nand1.Mn1.Mni.Vgs.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon2.f = Nand1.Mn1.Mni.Vgs.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Vgs.El2BG1.p.v;
//   Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Vgs.El2BG1.p.i;
//   Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Vgs.BG2El1.n.v;
//   Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Vgs.BG2El1.n.i;
//   Nand1.Mn1.Mni.Vgs.De1.OutPort1 = Nand1.Mn1.Mni.Vgs.De1.e;
//   Nand1.Mn1.Mni.Vgs.De1.f = 0.0;
//   Nand1.Mn1.Mni.Vgs.De1.e = Nand1.Mn1.Mni.Vgs.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.De1.f = Nand1.Mn1.Mni.Vgs.De1.BondCon1.d * Nand1.Mn1.Mni.Vgs.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon2.e = Nand1.Mn1.Mni.Vgs.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon2.f = Nand1.Mn1.Mni.Vgs.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vgs.v = Nand1.Mn1.Mni.Vgs.p.v - Nand1.Mn1.Mni.Vgs.n.v;
//   Nand1.Mn1.Mni.Vgs.i = Nand1.Mn1.Mni.Vgs.p.i;
//   Nand1.Mn1.Mni.Rgs.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgs.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rgs.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgs.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rgs.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rgs.J1p3_1.e[2] + Nand1.Mn1.Mni.Rgs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgs.J1p3_1.e[1] = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.J1p3_1.f[1] = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.J1p3_1.e[2] = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.J1p3_1.e[3] = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgs.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon2.e = Nand1.Mn1.Mni.Rgs.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon2.f = Nand1.Mn1.Mni.Rgs.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon2.e = Nand1.Mn1.Mni.Rgs.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon2.f = Nand1.Mn1.Mni.Rgs.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon2.e = Nand1.Mn1.Mni.Rgs.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon2.f = Nand1.Mn1.Mni.Rgs.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Rgs.El2BG1.p.v;
//   Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Rgs.El2BG1.p.i;
//   Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Rgs.BG2El1.n.v;
//   Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Rgs.BG2El1.n.i;
//   Nand1.Mn1.Mni.Rgs.B6.fBondCon1.e = Nand1.Mn1.Mni.Rgs.B6.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B6.eBondCon1.f = Nand1.Mn1.Mni.Rgs.B6.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B6.eBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.B6.fBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.T_nom.e = Nand1.Mn1.Mni.Rgs.T_nom.e0;
//   Nand1.Mn1.Mni.Rgs.T_nom.e = Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.T_nom.f = (-Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.d) * Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.R1.Rval = (Nand1.Mn1.Mni.Rgs.R1.R * (1.0 + (Nand1.Mn1.Mni.Rgs.R1.TR1 * Nand1.Mn1.Mni.Rgs.R1.DTemp + Nand1.Mn1.Mni.Rgs.R1.TR2 * Nand1.Mn1.Mni.Rgs.R1.DTempSq))) / Nand1.Mn1.Mni.Rgs.R1.Area;
//   Nand1.Mn1.Mni.Rgs.R1.e1 = Nand1.Mn1.Mni.Rgs.R1.Rval * Nand1.Mn1.Mni.Rgs.R1.f1;
//   Nand1.Mn1.Mni.Rgs.R1.e1 * Nand1.Mn1.Mni.Rgs.R1.f1 = Nand1.Mn1.Mni.Rgs.R1.e2 * Nand1.Mn1.Mni.Rgs.R1.f2;
//   Nand1.Mn1.Mni.Rgs.R1.DTempSq = Nand1.Mn1.Mni.Rgs.R1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Rgs.R1.DTemp = Nand1.Mn1.Mni.Rgs.R1.e2 - Nand1.Mn1.Mni.Rgs.R1.Tnom;
//   Nand1.Mn1.Mni.Rgs.R1.e1 = Nand1.Mn1.Mni.Rgs.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.R1.f1 = Nand1.Mn1.Mni.Rgs.R1.BondCon1.d * Nand1.Mn1.Mni.Rgs.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.R1.e2 = Nand1.Mn1.Mni.Rgs.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.R1.f2 = (-Nand1.Mn1.Mni.Rgs.R1.BondCon2.d) * Nand1.Mn1.Mni.Rgs.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.B4.fBondCon1.e = Nand1.Mn1.Mni.Rgs.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B4.eBondCon1.f = Nand1.Mn1.Mni.Rgs.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[2] + Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[1] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[1] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[2] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.e[3] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[1];
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[2];
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[1] + (Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[2] + Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[1] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[1] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[2] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.f[3] = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.e1;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.f1 + Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.e1 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.f1 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.d * Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.f2 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.d * Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.e1;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.f1 + Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.e1 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.f1 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.d * Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.f2 = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.d * Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.Sw1.open = Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn1.Mni.Rgs.Sw1.Sw1.open then Nand1.Mn1.Mni.Rgs.Sw1.Sw1.f else Nand1.Mn1.Mni.Rgs.Sw1.Sw1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.Sw1.e = Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.Sw1.f = Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.d * Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.B5.fBondCon1.e = Nand1.Mn1.Mni.Rgs.B5.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B5.eBondCon1.f = Nand1.Mn1.Mni.Rgs.B5.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B5.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgs.B5.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Rgs.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Rgs.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Rgs.Sw1.control = true;
//   Nand1.Mn1.Mni.Rgs.v = Nand1.Mn1.Mni.Rgs.p.v - Nand1.Mn1.Mni.Rgs.n.v;
//   Nand1.Mn1.Mni.Rgs.i = Nand1.Mn1.Mni.Rgs.p.i;
//   Nand1.Mn1.Mni.Vbs.J1p3_1.f[2] = Nand1.Mn1.Mni.Vbs.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Vbs.J1p3_1.f[3] = Nand1.Mn1.Mni.Vbs.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Vbs.J1p3_1.e[1] + (Nand1.Mn1.Mni.Vbs.J1p3_1.e[2] + Nand1.Mn1.Mni.Vbs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Vbs.J1p3_1.e[1] = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.J1p3_1.f[1] = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.J1p3_1.e[2] = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Vbs.J1p3_1.f[2] = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Vbs.J1p3_1.e[3] = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Vbs.J1p3_1.f[3] = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon2.e = Nand1.Mn1.Mni.Vbs.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon2.f = Nand1.Mn1.Mni.Vbs.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon2.e = Nand1.Mn1.Mni.Vbs.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon2.f = Nand1.Mn1.Mni.Vbs.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Vbs.El2BG1.p.v;
//   Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Vbs.El2BG1.p.i;
//   Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Vbs.BG2El1.n.v;
//   Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Vbs.BG2El1.n.i;
//   Nand1.Mn1.Mni.Vbs.De1.OutPort1 = Nand1.Mn1.Mni.Vbs.De1.e;
//   Nand1.Mn1.Mni.Vbs.De1.f = 0.0;
//   Nand1.Mn1.Mni.Vbs.De1.e = Nand1.Mn1.Mni.Vbs.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.De1.f = Nand1.Mn1.Mni.Vbs.De1.BondCon1.d * Nand1.Mn1.Mni.Vbs.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon2.e = Nand1.Mn1.Mni.Vbs.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon2.f = Nand1.Mn1.Mni.Vbs.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Vbs.v = Nand1.Mn1.Mni.Vbs.p.v - Nand1.Mn1.Mni.Vbs.n.v;
//   Nand1.Mn1.Mni.Vbs.i = Nand1.Mn1.Mni.Vbs.p.i;
//   Nand1.Mn1.Mni.Dbs.nlCM1.v = Nand1.Mn1.Mni.Dbs.nlCM1.u;
//   Nand1.Mn1.Mni.Dbs.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mn1.Mni.Dbs.nlCM1.Tdev;
//   Nand1.Mn1.Mni.Dbs.nlCM1.DTemp = Nand1.Mn1.Mni.Dbs.nlCM1.Tdev - Nand1.Mn1.Mni.Dbs.nlCM1.Tnom;
//   Nand1.Mn1.Mni.Dbs.nlCM1.RTemp = Nand1.Mn1.Mni.Dbs.nlCM1.Tdev / Nand1.Mn1.Mni.Dbs.nlCM1.Tnom;
//   Nand1.Mn1.Mni.Dbs.nlCM1.EGval = Nand1.Mn1.Mni.Dbs.nlCM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbs.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbs.nlCM1.Tdev);
//   Nand1.Mn1.Mni.Dbs.nlCM1.EGnom = Nand1.Mn1.Mni.Dbs.nlCM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbs.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbs.nlCM1.Tnom);
//   Nand1.Mn1.Mni.Dbs.nlCM1.PBval = Nand1.Mn1.Mni.Dbs.nlCM1.PB * Nand1.Mn1.Mni.Dbs.nlCM1.RTemp + (Nand1.Mn1.Mni.Dbs.nlCM1.EGval + (-3.0 * (Nand1.Mn1.Mni.Dbs.nlCM1.Vt * log(Nand1.Mn1.Mni.Dbs.nlCM1.RTemp)) - Nand1.Mn1.Mni.Dbs.nlCM1.EGnom * Nand1.Mn1.Mni.Dbs.nlCM1.RTemp));
//   Nand1.Mn1.Mni.Dbs.nlCM1.CJval = Nand1.Mn1.Mni.Dbs.nlCM1.CJ * (1.0 + Nand1.Mn1.Mni.Dbs.nlCM1.MJ * (1.0 + ((-Nand1.Mn1.Mni.Dbs.nlCM1.PBval) / Nand1.Mn1.Mni.Dbs.nlCM1.PB + 0.0004 * Nand1.Mn1.Mni.Dbs.nlCM1.DTemp)));
//   Nand1.Mn1.Mni.Dbs.nlCM1.CJSWval = Nand1.Mn1.Mni.Dbs.nlCM1.CJSW * (1.0 + Nand1.Mn1.Mni.Dbs.nlCM1.MJSW * (1.0 + ((-Nand1.Mn1.Mni.Dbs.nlCM1.PBval) / Nand1.Mn1.Mni.Dbs.nlCM1.PB + 0.0004 * Nand1.Mn1.Mni.Dbs.nlCM1.DTemp)));
//   Nand1.Mn1.Mni.Dbs.nlCM1.Cbulk = Nand1.Mn1.Mni.Dbs.nlCM1.CJval * (if Nand1.Mn1.Mni.Dbs.nlCM1.v > Nand1.Mn1.Mni.Dbs.nlCM1.FC * Nand1.Mn1.Mni.Dbs.nlCM1.PBval then (1.0 + ((Nand1.Mn1.Mni.Dbs.nlCM1.MJ * Nand1.Mn1.Mni.Dbs.nlCM1.v) / Nand1.Mn1.Mni.Dbs.nlCM1.PBval - Nand1.Mn1.Mni.Dbs.nlCM1.FC * (1.0 + Nand1.Mn1.Mni.Dbs.nlCM1.MJ))) * (1.0 - Nand1.Mn1.Mni.Dbs.nlCM1.FC) ^ (-1.0 - Nand1.Mn1.Mni.Dbs.nlCM1.MJ) else abs(1.0 + (-Nand1.Mn1.Mni.Dbs.nlCM1.v) / Nand1.Mn1.Mni.Dbs.nlCM1.PBval) ^ (-Nand1.Mn1.Mni.Dbs.nlCM1.MJ));
//   Nand1.Mn1.Mni.Dbs.nlCM1.Cperi = Nand1.Mn1.Mni.Dbs.nlCM1.CJSWval * (if Nand1.Mn1.Mni.Dbs.nlCM1.v > Nand1.Mn1.Mni.Dbs.nlCM1.FC * Nand1.Mn1.Mni.Dbs.nlCM1.PBval then (1.0 + ((Nand1.Mn1.Mni.Dbs.nlCM1.MJSW * Nand1.Mn1.Mni.Dbs.nlCM1.v) / Nand1.Mn1.Mni.Dbs.nlCM1.PBval - Nand1.Mn1.Mni.Dbs.nlCM1.FC * (1.0 + Nand1.Mn1.Mni.Dbs.nlCM1.MJSW))) * (1.0 - Nand1.Mn1.Mni.Dbs.nlCM1.FC) ^ (-1.0 - Nand1.Mn1.Mni.Dbs.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mn1.Mni.Dbs.nlCM1.v) / Nand1.Mn1.Mni.Dbs.nlCM1.PBval) ^ (-Nand1.Mn1.Mni.Dbs.nlCM1.MJSW));
//   Nand1.Mn1.Mni.Dbs.nlCM1.Cval = if Nand1.Mn1.Mni.Dbs.nlCM1.A * Nand1.Mn1.Mni.Dbs.nlCM1.Cbulk + Nand1.Mn1.Mni.Dbs.nlCM1.P * Nand1.Mn1.Mni.Dbs.nlCM1.Cperi > 0.0 then Nand1.Mn1.Mni.Dbs.nlCM1.A * Nand1.Mn1.Mni.Dbs.nlCM1.Cbulk + Nand1.Mn1.Mni.Dbs.nlCM1.P * Nand1.Mn1.Mni.Dbs.nlCM1.Cperi else 1e-16;
//   Nand1.Mn1.Mni.Dbs.nlCM1.y = Nand1.Mn1.Mni.Dbs.nlCM1.Cval;
//   Nand1.Mn1.Mni.Dbs.Tdev1.T = Nand1.Mn1.Mni.Dbs.Tdev1.port.T;
//   Nand1.Mn1.Mni.Dbs.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbs.Rd.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.T_nom.e = Nand1.Mn1.Mni.Dbs.Rd.T_nom.e0;
//   Nand1.Mn1.Mni.Dbs.Rd.T_nom.e = Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.T_nom.f = (-Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.d) * Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.Rval = (Nand1.Mn1.Mni.Dbs.Rd.R1.R * (1.0 + (Nand1.Mn1.Mni.Dbs.Rd.R1.TR1 * Nand1.Mn1.Mni.Dbs.Rd.R1.DTemp + Nand1.Mn1.Mni.Dbs.Rd.R1.TR2 * Nand1.Mn1.Mni.Dbs.Rd.R1.DTempSq))) / Nand1.Mn1.Mni.Dbs.Rd.R1.Area;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.e1 = Nand1.Mn1.Mni.Dbs.Rd.R1.Rval * Nand1.Mn1.Mni.Dbs.Rd.R1.f1;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.e1 * Nand1.Mn1.Mni.Dbs.Rd.R1.f1 = Nand1.Mn1.Mni.Dbs.Rd.R1.e2 * Nand1.Mn1.Mni.Dbs.Rd.R1.f2;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.DTempSq = Nand1.Mn1.Mni.Dbs.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.DTemp = Nand1.Mn1.Mni.Dbs.Rd.R1.e2 - Nand1.Mn1.Mni.Dbs.Rd.R1.Tnom;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.e1 = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.f1 = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.e2 = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.R1.f2 = (-Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.d) * Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[2] + Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[1] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[1] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[2] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.f[3] = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.f1 + Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.e1 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.f1 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.f2 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.f1 + Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.e1 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.f1 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.f2 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.open = Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.open then Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.f else Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.control = true;
//   Nand1.Mn1.Mni.Dbs.Rd.v = Nand1.Mn1.Mni.Dbs.Rd.p.v - Nand1.Mn1.Mni.Dbs.Rd.n.v;
//   Nand1.Mn1.Mni.Dbs.Rd.i = Nand1.Mn1.Mni.Dbs.Rd.p.i;
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.RTemp = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2 / Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Tnom;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EGval = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2);
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EGnom = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Tnom);
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.ISval = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.IS * exp((Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EGval - Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EGnom * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.RTemp) / Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Vt);
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.et = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e1 / Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Vt;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.f1 = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.ISval * (if noEvent(Nand1.Mn1.Mni.Dbs.DjM1.DjM1.et < Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMin) then Nand1.Mn1.Mni.Dbs.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mn1.Mni.Dbs.DjM1.DjM1.et - Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mn1.Mni.Dbs.DjM1.DjM1.et > Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMax) then Nand1.Mn1.Mni.Dbs.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mn1.Mni.Dbs.DjM1.DjM1.et - Nand1.Mn1.Mni.Dbs.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mn1.Mni.Dbs.DjM1.DjM1.et) + -1.0);
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2 * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.f2 = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e1 * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.f1;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.DTempSq = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.DTemp = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2 - Nand1.Mn1.Mni.Dbs.DjM1.DjM1.Tnom;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e1 = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.f1 = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.d * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.e2 = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.DjM1.f2 = (-Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.d) * Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Dbs.DjM1.v = Nand1.Mn1.Mni.Dbs.DjM1.p.v - Nand1.Mn1.Mni.Dbs.DjM1.n.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.i = Nand1.Mn1.Mni.Dbs.DjM1.p.i;
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Vd.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbs.Vd.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Vd.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbs.Vd.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbs.Vd.De1.OutPort1 = Nand1.Mn1.Mni.Dbs.Vd.De1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.De1.f = 0.0;
//   Nand1.Mn1.Mni.Dbs.Vd.De1.e = Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.De1.f = Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.d * Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.Vd.v = Nand1.Mn1.Mni.Dbs.Vd.p.v - Nand1.Mn1.Mni.Dbs.Vd.n.v;
//   Nand1.Mn1.Mni.Dbs.Vd.i = Nand1.Mn1.Mni.Dbs.Vd.p.i;
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.mC1.C = Nand1.Mn1.Mni.Dbs.VarC1.mC1.s;
//   Nand1.Mn1.Mni.Dbs.VarC1.mC1.f = Nand1.Mn1.Mni.Dbs.VarC1.mC1.C * der(Nand1.Mn1.Mni.Dbs.VarC1.mC1.e);
//   Nand1.Mn1.Mni.Dbs.VarC1.mC1.e = Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.mC1.f = Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.d * Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.v = Nand1.Mn1.Mni.Dbs.VarC1.p.v - Nand1.Mn1.Mni.Dbs.VarC1.n.v;
//   Nand1.Mn1.Mni.Dbs.VarC1.i = Nand1.Mn1.Mni.Dbs.VarC1.p.i;
//   Nand1.Mn1.Mni.Dbs.v = Nand1.Mn1.Mni.Dbs.p.v - Nand1.Mn1.Mni.Dbs.n.v;
//   Nand1.Mn1.Mni.Dbs.i = Nand1.Mn1.Mni.Dbs.p.i;
//   Nand1.Mn1.Mni.Rgd.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgd.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rgd.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgd.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rgd.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rgd.J1p3_1.e[2] + Nand1.Mn1.Mni.Rgd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgd.J1p3_1.e[1] = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.J1p3_1.f[1] = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.J1p3_1.e[2] = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.J1p3_1.e[3] = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgd.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon2.e = Nand1.Mn1.Mni.Rgd.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon2.f = Nand1.Mn1.Mni.Rgd.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon2.e = Nand1.Mn1.Mni.Rgd.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon2.f = Nand1.Mn1.Mni.Rgd.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon2.e = Nand1.Mn1.Mni.Rgd.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon2.f = Nand1.Mn1.Mni.Rgd.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Rgd.El2BG1.p.v;
//   Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Rgd.El2BG1.p.i;
//   Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Rgd.BG2El1.n.v;
//   Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Rgd.BG2El1.n.i;
//   Nand1.Mn1.Mni.Rgd.B6.fBondCon1.e = Nand1.Mn1.Mni.Rgd.B6.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B6.eBondCon1.f = Nand1.Mn1.Mni.Rgd.B6.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B6.eBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.B6.fBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.T_nom.e = Nand1.Mn1.Mni.Rgd.T_nom.e0;
//   Nand1.Mn1.Mni.Rgd.T_nom.e = Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.T_nom.f = (-Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.d) * Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.R1.Rval = (Nand1.Mn1.Mni.Rgd.R1.R * (1.0 + (Nand1.Mn1.Mni.Rgd.R1.TR1 * Nand1.Mn1.Mni.Rgd.R1.DTemp + Nand1.Mn1.Mni.Rgd.R1.TR2 * Nand1.Mn1.Mni.Rgd.R1.DTempSq))) / Nand1.Mn1.Mni.Rgd.R1.Area;
//   Nand1.Mn1.Mni.Rgd.R1.e1 = Nand1.Mn1.Mni.Rgd.R1.Rval * Nand1.Mn1.Mni.Rgd.R1.f1;
//   Nand1.Mn1.Mni.Rgd.R1.e1 * Nand1.Mn1.Mni.Rgd.R1.f1 = Nand1.Mn1.Mni.Rgd.R1.e2 * Nand1.Mn1.Mni.Rgd.R1.f2;
//   Nand1.Mn1.Mni.Rgd.R1.DTempSq = Nand1.Mn1.Mni.Rgd.R1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Rgd.R1.DTemp = Nand1.Mn1.Mni.Rgd.R1.e2 - Nand1.Mn1.Mni.Rgd.R1.Tnom;
//   Nand1.Mn1.Mni.Rgd.R1.e1 = Nand1.Mn1.Mni.Rgd.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.R1.f1 = Nand1.Mn1.Mni.Rgd.R1.BondCon1.d * Nand1.Mn1.Mni.Rgd.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.R1.e2 = Nand1.Mn1.Mni.Rgd.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.R1.f2 = (-Nand1.Mn1.Mni.Rgd.R1.BondCon2.d) * Nand1.Mn1.Mni.Rgd.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.B4.fBondCon1.e = Nand1.Mn1.Mni.Rgd.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B4.eBondCon1.f = Nand1.Mn1.Mni.Rgd.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[2] + Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[1] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[1] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[2] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.e[3] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[1];
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[2];
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[1] + (Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[2] + Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[1] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[1] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[2] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.f[3] = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.e1;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.f1 + Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.e1 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.f1 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.d * Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.f2 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.d * Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.e1;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.f1 + Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.e1 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.f1 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.d * Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.f2 = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.d * Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.Sw1.open = Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn1.Mni.Rgd.Sw1.Sw1.open then Nand1.Mn1.Mni.Rgd.Sw1.Sw1.f else Nand1.Mn1.Mni.Rgd.Sw1.Sw1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.Sw1.e = Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.Sw1.f = Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.d * Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.B5.fBondCon1.e = Nand1.Mn1.Mni.Rgd.B5.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B5.eBondCon1.f = Nand1.Mn1.Mni.Rgd.B5.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B5.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgd.B5.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Rgd.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Rgd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Rgd.Sw1.control = true;
//   Nand1.Mn1.Mni.Rgd.v = Nand1.Mn1.Mni.Rgd.p.v - Nand1.Mn1.Mni.Rgd.n.v;
//   Nand1.Mn1.Mni.Rgd.i = Nand1.Mn1.Mni.Rgd.p.i;
//   Nand1.Mn1.Mni.Rgb.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgb.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rgb.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgb.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rgb.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rgb.J1p3_1.e[2] + Nand1.Mn1.Mni.Rgb.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgb.J1p3_1.e[1] = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.J1p3_1.f[1] = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.J1p3_1.e[2] = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.J1p3_1.e[3] = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgb.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon2.e = Nand1.Mn1.Mni.Rgb.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon2.f = Nand1.Mn1.Mni.Rgb.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon2.e = Nand1.Mn1.Mni.Rgb.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon2.f = Nand1.Mn1.Mni.Rgb.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon2.e = Nand1.Mn1.Mni.Rgb.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon2.f = Nand1.Mn1.Mni.Rgb.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Rgb.El2BG1.p.v;
//   Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Rgb.El2BG1.p.i;
//   Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Rgb.BG2El1.n.v;
//   Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Rgb.BG2El1.n.i;
//   Nand1.Mn1.Mni.Rgb.B6.fBondCon1.e = Nand1.Mn1.Mni.Rgb.B6.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B6.eBondCon1.f = Nand1.Mn1.Mni.Rgb.B6.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B6.eBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.B6.fBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.T_nom.e = Nand1.Mn1.Mni.Rgb.T_nom.e0;
//   Nand1.Mn1.Mni.Rgb.T_nom.e = Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.T_nom.f = (-Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.d) * Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.R1.Rval = (Nand1.Mn1.Mni.Rgb.R1.R * (1.0 + (Nand1.Mn1.Mni.Rgb.R1.TR1 * Nand1.Mn1.Mni.Rgb.R1.DTemp + Nand1.Mn1.Mni.Rgb.R1.TR2 * Nand1.Mn1.Mni.Rgb.R1.DTempSq))) / Nand1.Mn1.Mni.Rgb.R1.Area;
//   Nand1.Mn1.Mni.Rgb.R1.e1 = Nand1.Mn1.Mni.Rgb.R1.Rval * Nand1.Mn1.Mni.Rgb.R1.f1;
//   Nand1.Mn1.Mni.Rgb.R1.e1 * Nand1.Mn1.Mni.Rgb.R1.f1 = Nand1.Mn1.Mni.Rgb.R1.e2 * Nand1.Mn1.Mni.Rgb.R1.f2;
//   Nand1.Mn1.Mni.Rgb.R1.DTempSq = Nand1.Mn1.Mni.Rgb.R1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Rgb.R1.DTemp = Nand1.Mn1.Mni.Rgb.R1.e2 - Nand1.Mn1.Mni.Rgb.R1.Tnom;
//   Nand1.Mn1.Mni.Rgb.R1.e1 = Nand1.Mn1.Mni.Rgb.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.R1.f1 = Nand1.Mn1.Mni.Rgb.R1.BondCon1.d * Nand1.Mn1.Mni.Rgb.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.R1.e2 = Nand1.Mn1.Mni.Rgb.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.R1.f2 = (-Nand1.Mn1.Mni.Rgb.R1.BondCon2.d) * Nand1.Mn1.Mni.Rgb.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.B4.fBondCon1.e = Nand1.Mn1.Mni.Rgb.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B4.eBondCon1.f = Nand1.Mn1.Mni.Rgb.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[2] + Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[1] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[1] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[2] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.e[3] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[1];
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[2];
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[1] + (Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[2] + Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[1] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[1] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.d * Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[2] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.d * Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.f[3] = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.d * Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.e1;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.f1 + Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.e1 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.f1 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.d * Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.f2 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.d * Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.e1;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.f1 + Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.e1 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.f1 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.d * Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.f2 = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.d * Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.Sw1.open = Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn1.Mni.Rgb.Sw1.Sw1.open then Nand1.Mn1.Mni.Rgb.Sw1.Sw1.f else Nand1.Mn1.Mni.Rgb.Sw1.Sw1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.Sw1.e = Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.Sw1.f = Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.d * Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.B5.fBondCon1.e = Nand1.Mn1.Mni.Rgb.B5.eBondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B5.eBondCon1.f = Nand1.Mn1.Mni.Rgb.B5.fBondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B5.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rgb.B5.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Rgb.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Rgb.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Rgb.Sw1.control = true;
//   Nand1.Mn1.Mni.Rgb.v = Nand1.Mn1.Mni.Rgb.p.v - Nand1.Mn1.Mni.Rgb.n.v;
//   Nand1.Mn1.Mni.Rgb.i = Nand1.Mn1.Mni.Rgb.p.i;
//   Nand1.Mn1.Mni.Dbd.nlCM1.v = Nand1.Mn1.Mni.Dbd.nlCM1.u;
//   Nand1.Mn1.Mni.Dbd.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mn1.Mni.Dbd.nlCM1.Tdev;
//   Nand1.Mn1.Mni.Dbd.nlCM1.DTemp = Nand1.Mn1.Mni.Dbd.nlCM1.Tdev - Nand1.Mn1.Mni.Dbd.nlCM1.Tnom;
//   Nand1.Mn1.Mni.Dbd.nlCM1.RTemp = Nand1.Mn1.Mni.Dbd.nlCM1.Tdev / Nand1.Mn1.Mni.Dbd.nlCM1.Tnom;
//   Nand1.Mn1.Mni.Dbd.nlCM1.EGval = Nand1.Mn1.Mni.Dbd.nlCM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbd.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbd.nlCM1.Tdev);
//   Nand1.Mn1.Mni.Dbd.nlCM1.EGnom = Nand1.Mn1.Mni.Dbd.nlCM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbd.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbd.nlCM1.Tnom);
//   Nand1.Mn1.Mni.Dbd.nlCM1.PBval = Nand1.Mn1.Mni.Dbd.nlCM1.PB * Nand1.Mn1.Mni.Dbd.nlCM1.RTemp + (Nand1.Mn1.Mni.Dbd.nlCM1.EGval + (-3.0 * (Nand1.Mn1.Mni.Dbd.nlCM1.Vt * log(Nand1.Mn1.Mni.Dbd.nlCM1.RTemp)) - Nand1.Mn1.Mni.Dbd.nlCM1.EGnom * Nand1.Mn1.Mni.Dbd.nlCM1.RTemp));
//   Nand1.Mn1.Mni.Dbd.nlCM1.CJval = Nand1.Mn1.Mni.Dbd.nlCM1.CJ * (1.0 + Nand1.Mn1.Mni.Dbd.nlCM1.MJ * (1.0 + ((-Nand1.Mn1.Mni.Dbd.nlCM1.PBval) / Nand1.Mn1.Mni.Dbd.nlCM1.PB + 0.0004 * Nand1.Mn1.Mni.Dbd.nlCM1.DTemp)));
//   Nand1.Mn1.Mni.Dbd.nlCM1.CJSWval = Nand1.Mn1.Mni.Dbd.nlCM1.CJSW * (1.0 + Nand1.Mn1.Mni.Dbd.nlCM1.MJSW * (1.0 + ((-Nand1.Mn1.Mni.Dbd.nlCM1.PBval) / Nand1.Mn1.Mni.Dbd.nlCM1.PB + 0.0004 * Nand1.Mn1.Mni.Dbd.nlCM1.DTemp)));
//   Nand1.Mn1.Mni.Dbd.nlCM1.Cbulk = Nand1.Mn1.Mni.Dbd.nlCM1.CJval * (if Nand1.Mn1.Mni.Dbd.nlCM1.v > Nand1.Mn1.Mni.Dbd.nlCM1.FC * Nand1.Mn1.Mni.Dbd.nlCM1.PBval then (1.0 + ((Nand1.Mn1.Mni.Dbd.nlCM1.MJ * Nand1.Mn1.Mni.Dbd.nlCM1.v) / Nand1.Mn1.Mni.Dbd.nlCM1.PBval - Nand1.Mn1.Mni.Dbd.nlCM1.FC * (1.0 + Nand1.Mn1.Mni.Dbd.nlCM1.MJ))) * (1.0 - Nand1.Mn1.Mni.Dbd.nlCM1.FC) ^ (-1.0 - Nand1.Mn1.Mni.Dbd.nlCM1.MJ) else abs(1.0 + (-Nand1.Mn1.Mni.Dbd.nlCM1.v) / Nand1.Mn1.Mni.Dbd.nlCM1.PBval) ^ (-Nand1.Mn1.Mni.Dbd.nlCM1.MJ));
//   Nand1.Mn1.Mni.Dbd.nlCM1.Cperi = Nand1.Mn1.Mni.Dbd.nlCM1.CJSWval * (if Nand1.Mn1.Mni.Dbd.nlCM1.v > Nand1.Mn1.Mni.Dbd.nlCM1.FC * Nand1.Mn1.Mni.Dbd.nlCM1.PBval then (1.0 + ((Nand1.Mn1.Mni.Dbd.nlCM1.MJSW * Nand1.Mn1.Mni.Dbd.nlCM1.v) / Nand1.Mn1.Mni.Dbd.nlCM1.PBval - Nand1.Mn1.Mni.Dbd.nlCM1.FC * (1.0 + Nand1.Mn1.Mni.Dbd.nlCM1.MJSW))) * (1.0 - Nand1.Mn1.Mni.Dbd.nlCM1.FC) ^ (-1.0 - Nand1.Mn1.Mni.Dbd.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mn1.Mni.Dbd.nlCM1.v) / Nand1.Mn1.Mni.Dbd.nlCM1.PBval) ^ (-Nand1.Mn1.Mni.Dbd.nlCM1.MJSW));
//   Nand1.Mn1.Mni.Dbd.nlCM1.Cval = if Nand1.Mn1.Mni.Dbd.nlCM1.A * Nand1.Mn1.Mni.Dbd.nlCM1.Cbulk + Nand1.Mn1.Mni.Dbd.nlCM1.P * Nand1.Mn1.Mni.Dbd.nlCM1.Cperi > 0.0 then Nand1.Mn1.Mni.Dbd.nlCM1.A * Nand1.Mn1.Mni.Dbd.nlCM1.Cbulk + Nand1.Mn1.Mni.Dbd.nlCM1.P * Nand1.Mn1.Mni.Dbd.nlCM1.Cperi else 1e-16;
//   Nand1.Mn1.Mni.Dbd.nlCM1.y = Nand1.Mn1.Mni.Dbd.nlCM1.Cval;
//   Nand1.Mn1.Mni.Dbd.Tdev1.T = Nand1.Mn1.Mni.Dbd.Tdev1.port.T;
//   Nand1.Mn1.Mni.Dbd.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbd.Rd.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.T_nom.e = Nand1.Mn1.Mni.Dbd.Rd.T_nom.e0;
//   Nand1.Mn1.Mni.Dbd.Rd.T_nom.e = Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.T_nom.f = (-Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.d) * Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.Rval = (Nand1.Mn1.Mni.Dbd.Rd.R1.R * (1.0 + (Nand1.Mn1.Mni.Dbd.Rd.R1.TR1 * Nand1.Mn1.Mni.Dbd.Rd.R1.DTemp + Nand1.Mn1.Mni.Dbd.Rd.R1.TR2 * Nand1.Mn1.Mni.Dbd.Rd.R1.DTempSq))) / Nand1.Mn1.Mni.Dbd.Rd.R1.Area;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.e1 = Nand1.Mn1.Mni.Dbd.Rd.R1.Rval * Nand1.Mn1.Mni.Dbd.Rd.R1.f1;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.e1 * Nand1.Mn1.Mni.Dbd.Rd.R1.f1 = Nand1.Mn1.Mni.Dbd.Rd.R1.e2 * Nand1.Mn1.Mni.Dbd.Rd.R1.f2;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.DTempSq = Nand1.Mn1.Mni.Dbd.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.DTemp = Nand1.Mn1.Mni.Dbd.Rd.R1.e2 - Nand1.Mn1.Mni.Dbd.Rd.R1.Tnom;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.e1 = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.f1 = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.e2 = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.R1.f2 = (-Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.d) * Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[2] + Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[1] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[1] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[2] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.f[3] = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.f1 + Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.e1 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.f1 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.f2 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.f1 + Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.e1 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.f1 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.f2 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.open = Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.open then Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.f else Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.control = true;
//   Nand1.Mn1.Mni.Dbd.Rd.v = Nand1.Mn1.Mni.Dbd.Rd.p.v - Nand1.Mn1.Mni.Dbd.Rd.n.v;
//   Nand1.Mn1.Mni.Dbd.Rd.i = Nand1.Mn1.Mni.Dbd.Rd.p.i;
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.RTemp = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2 / Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Tnom;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EGval = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2);
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EGnom = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Tnom);
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.ISval = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.IS * exp((Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EGval - Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EGnom * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.RTemp) / Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Vt);
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.et = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e1 / Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Vt;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.f1 = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.ISval * (if noEvent(Nand1.Mn1.Mni.Dbd.DjM1.DjM1.et < Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMin) then Nand1.Mn1.Mni.Dbd.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mn1.Mni.Dbd.DjM1.DjM1.et - Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mn1.Mni.Dbd.DjM1.DjM1.et > Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMax) then Nand1.Mn1.Mni.Dbd.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mn1.Mni.Dbd.DjM1.DjM1.et - Nand1.Mn1.Mni.Dbd.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mn1.Mni.Dbd.DjM1.DjM1.et) + -1.0);
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2 * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.f2 = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e1 * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.f1;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.DTempSq = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.DTemp = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2 - Nand1.Mn1.Mni.Dbd.DjM1.DjM1.Tnom;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e1 = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.f1 = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.d * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.e2 = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.DjM1.f2 = (-Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.d) * Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Dbd.DjM1.v = Nand1.Mn1.Mni.Dbd.DjM1.p.v - Nand1.Mn1.Mni.Dbd.DjM1.n.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.i = Nand1.Mn1.Mni.Dbd.DjM1.p.i;
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Vd.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbd.Vd.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Vd.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbd.Vd.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbd.Vd.De1.OutPort1 = Nand1.Mn1.Mni.Dbd.Vd.De1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.De1.f = 0.0;
//   Nand1.Mn1.Mni.Dbd.Vd.De1.e = Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.De1.f = Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.d * Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.Vd.v = Nand1.Mn1.Mni.Dbd.Vd.p.v - Nand1.Mn1.Mni.Dbd.Vd.n.v;
//   Nand1.Mn1.Mni.Dbd.Vd.i = Nand1.Mn1.Mni.Dbd.Vd.p.i;
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[2] + Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[1] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[1] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[2] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[2] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.e[3] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.f[3] = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.p.v;
//   Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.p.i;
//   Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.n.v;
//   Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.n.i;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.mC1.C = Nand1.Mn1.Mni.Dbd.VarC1.mC1.s;
//   Nand1.Mn1.Mni.Dbd.VarC1.mC1.f = Nand1.Mn1.Mni.Dbd.VarC1.mC1.C * der(Nand1.Mn1.Mni.Dbd.VarC1.mC1.e);
//   Nand1.Mn1.Mni.Dbd.VarC1.mC1.e = Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.mC1.f = Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.d * Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.v = Nand1.Mn1.Mni.Dbd.VarC1.p.v - Nand1.Mn1.Mni.Dbd.VarC1.n.v;
//   Nand1.Mn1.Mni.Dbd.VarC1.i = Nand1.Mn1.Mni.Dbd.VarC1.p.i;
//   Nand1.Mn1.Mni.Dbd.v = Nand1.Mn1.Mni.Dbd.p.v - Nand1.Mn1.Mni.Dbd.n.v;
//   Nand1.Mn1.Mni.Dbd.i = Nand1.Mn1.Mni.Dbd.p.i;
//   Nand1.Mn1.Mni.Rds.J1p3_1.f[2] = Nand1.Mn1.Mni.Rds.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rds.J1p3_1.f[3] = Nand1.Mn1.Mni.Rds.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rds.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rds.J1p3_1.e[2] + Nand1.Mn1.Mni.Rds.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rds.J1p3_1.e[1] = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.J1p3_1.f[1] = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.J1p3_1.e[2] = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.J1p3_1.f[2] = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.J1p3_1.e[3] = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rds.J1p3_1.f[3] = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rds.B1.BondCon2.e = Nand1.Mn1.Mni.Rds.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B1.BondCon2.f = Nand1.Mn1.Mni.Rds.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rds.B2.BondCon2.e = Nand1.Mn1.Mni.Rds.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B2.BondCon2.f = Nand1.Mn1.Mni.Rds.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rds.B3.BondCon2.e = Nand1.Mn1.Mni.Rds.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B3.BondCon2.f = Nand1.Mn1.Mni.Rds.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.e = Nand1.Mn1.Mni.Rds.El2BG1.p.v;
//   Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.f = Nand1.Mn1.Mni.Rds.El2BG1.p.i;
//   Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.e = Nand1.Mn1.Mni.Rds.BG2El1.n.v;
//   Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.f = -Nand1.Mn1.Mni.Rds.BG2El1.n.i;
//   Nand1.Mn1.Mni.Rds.B6.fBondCon1.e = Nand1.Mn1.Mni.Rds.B6.eBondCon1.e;
//   Nand1.Mn1.Mni.Rds.B6.eBondCon1.f = Nand1.Mn1.Mni.Rds.B6.fBondCon1.f;
//   Nand1.Mn1.Mni.Rds.B6.eBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.B6.fBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rds.T_nom.e = Nand1.Mn1.Mni.Rds.T_nom.e0;
//   Nand1.Mn1.Mni.Rds.T_nom.e = Nand1.Mn1.Mni.Rds.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.T_nom.f = (-Nand1.Mn1.Mni.Rds.T_nom.BondCon1.d) * Nand1.Mn1.Mni.Rds.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.R1.Rval = (Nand1.Mn1.Mni.Rds.R1.R * (1.0 + (Nand1.Mn1.Mni.Rds.R1.TR1 * Nand1.Mn1.Mni.Rds.R1.DTemp + Nand1.Mn1.Mni.Rds.R1.TR2 * Nand1.Mn1.Mni.Rds.R1.DTempSq))) / Nand1.Mn1.Mni.Rds.R1.Area;
//   Nand1.Mn1.Mni.Rds.R1.e1 = Nand1.Mn1.Mni.Rds.R1.Rval * Nand1.Mn1.Mni.Rds.R1.f1;
//   Nand1.Mn1.Mni.Rds.R1.e1 * Nand1.Mn1.Mni.Rds.R1.f1 = Nand1.Mn1.Mni.Rds.R1.e2 * Nand1.Mn1.Mni.Rds.R1.f2;
//   Nand1.Mn1.Mni.Rds.R1.DTempSq = Nand1.Mn1.Mni.Rds.R1.DTemp ^ 2.0;
//   Nand1.Mn1.Mni.Rds.R1.DTemp = Nand1.Mn1.Mni.Rds.R1.e2 - Nand1.Mn1.Mni.Rds.R1.Tnom;
//   Nand1.Mn1.Mni.Rds.R1.e1 = Nand1.Mn1.Mni.Rds.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.R1.f1 = Nand1.Mn1.Mni.Rds.R1.BondCon1.d * Nand1.Mn1.Mni.Rds.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.R1.e2 = Nand1.Mn1.Mni.Rds.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.R1.f2 = (-Nand1.Mn1.Mni.Rds.R1.BondCon2.d) * Nand1.Mn1.Mni.Rds.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.B4.fBondCon1.e = Nand1.Mn1.Mni.Rds.B4.eBondCon1.e;
//   Nand1.Mn1.Mni.Rds.B4.eBondCon1.f = Nand1.Mn1.Mni.Rds.B4.fBondCon1.f;
//   Nand1.Mn1.Mni.Rds.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[1];
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[2];
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[1] + (Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[2] + Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[1] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.d * Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[1] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[2] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.d * Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[2] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.e[3] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.d * Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.f[3] = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[1];
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[2];
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[1] + (Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[2] + Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[1] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[1] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.d * Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[2] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[2] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.d * Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.e[3] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.f[3] = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.d * Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.e1;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.f1 + Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.e1 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.f1 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.d * Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.e2 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.f2 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.d * Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.e1;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.f1 + Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.e1 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.f1 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.d * Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.e2 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.f2 = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.d * Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.Sw1.Sw1.open = Nand1.Mn1.Mni.Rds.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn1.Mni.Rds.Sw1.Sw1.open then Nand1.Mn1.Mni.Rds.Sw1.Sw1.f else Nand1.Mn1.Mni.Rds.Sw1.Sw1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.Sw1.e = Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.Sw1.f = Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.d * Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Mni.Rds.B5.fBondCon1.e = Nand1.Mn1.Mni.Rds.B5.eBondCon1.e;
//   Nand1.Mn1.Mni.Rds.B5.eBondCon1.f = Nand1.Mn1.Mni.Rds.B5.fBondCon1.f;
//   Nand1.Mn1.Mni.Rds.B5.fBondCon1.d = -1.0;
//   Nand1.Mn1.Mni.Rds.B5.eBondCon1.d = 1.0;
//   Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.e = Nand1.Mn1.Mni.Rds.BG2Heat1.port_b.T;
//   Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.e * Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.f = -Nand1.Mn1.Mni.Rds.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Mni.Rds.Sw1.control = true;
//   Nand1.Mn1.Mni.Rds.v = Nand1.Mn1.Mni.Rds.p.v - Nand1.Mn1.Mni.Rds.n.v;
//   Nand1.Mn1.Mni.Rds.i = Nand1.Mn1.Mni.Rds.p.i;
//   Nand1.Mn1.Cgs1.J1p3_1.f[2] = Nand1.Mn1.Cgs1.J1p3_1.f[1];
//   Nand1.Mn1.Cgs1.J1p3_1.f[3] = Nand1.Mn1.Cgs1.J1p3_1.f[2];
//   Nand1.Mn1.Cgs1.J1p3_1.e[1] + (Nand1.Mn1.Cgs1.J1p3_1.e[2] + Nand1.Mn1.Cgs1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Cgs1.J1p3_1.e[1] = Nand1.Mn1.Cgs1.J1p3_1.BondCon1.d * Nand1.Mn1.Cgs1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Cgs1.J1p3_1.f[1] = Nand1.Mn1.Cgs1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Cgs1.J1p3_1.e[2] = Nand1.Mn1.Cgs1.J1p3_1.BondCon2.d * Nand1.Mn1.Cgs1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Cgs1.J1p3_1.f[2] = Nand1.Mn1.Cgs1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Cgs1.J1p3_1.e[3] = Nand1.Mn1.Cgs1.J1p3_1.BondCon3.d * Nand1.Mn1.Cgs1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Cgs1.J1p3_1.f[3] = Nand1.Mn1.Cgs1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Cgs1.B1.BondCon2.e = Nand1.Mn1.Cgs1.B1.BondCon1.e;
//   Nand1.Mn1.Cgs1.B1.BondCon2.f = Nand1.Mn1.Cgs1.B1.BondCon1.f;
//   Nand1.Mn1.Cgs1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgs1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgs1.B2.BondCon2.e = Nand1.Mn1.Cgs1.B2.BondCon1.e;
//   Nand1.Mn1.Cgs1.B2.BondCon2.f = Nand1.Mn1.Cgs1.B2.BondCon1.f;
//   Nand1.Mn1.Cgs1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgs1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgs1.El2BG1.BondCon1.e = Nand1.Mn1.Cgs1.El2BG1.p.v;
//   Nand1.Mn1.Cgs1.El2BG1.BondCon1.f = Nand1.Mn1.Cgs1.El2BG1.p.i;
//   Nand1.Mn1.Cgs1.BG2El1.BondCon1.e = Nand1.Mn1.Cgs1.BG2El1.n.v;
//   Nand1.Mn1.Cgs1.BG2El1.BondCon1.f = -Nand1.Mn1.Cgs1.BG2El1.n.i;
//   Nand1.Mn1.Cgs1.Cgs1.RTemp = Nand1.Mn1.Cgs1.Cgs1.e2 / Nand1.Mn1.Cgs1.Cgs1.Tnom;
//   Nand1.Mn1.Cgs1.Cgs1.facTemp = Nand1.Mn1.Cgs1.Cgs1.RTemp ^ 1.5;
//   Nand1.Mn1.Cgs1.Cgs1.Vt = 8.61727503842867e-05 * Nand1.Mn1.Cgs1.Cgs1.e2;
//   Nand1.Mn1.Cgs1.Cgs1.EGref = Nand1.Mn1.Cgs1.Cgs1.EG + (-0.000702 * Nand1.Mn1.Cgs1.Cgs1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Cgs1.Cgs1.Tnom);
//   Nand1.Mn1.Cgs1.Cgs1.EGval = Nand1.Mn1.Cgs1.Cgs1.EG + (-0.000702 * Nand1.Mn1.Cgs1.Cgs1.e2 ^ 2.0) / (1108.0 + Nand1.Mn1.Cgs1.Cgs1.e2);
//   Nand1.Mn1.Cgs1.Cgs1.PHIval = Nand1.Mn1.Cgs1.Cgs1.RTemp * Nand1.Mn1.Cgs1.Cgs1.PHI + (Nand1.Mn1.Cgs1.Cgs1.EGval + (-3.0 * (Nand1.Mn1.Cgs1.Cgs1.Vt * log(Nand1.Mn1.Cgs1.Cgs1.RTemp)) - Nand1.Mn1.Cgs1.Cgs1.RTemp * Nand1.Mn1.Cgs1.Cgs1.EGref));
//   Nand1.Mn1.Cgs1.Cgs1.Vfb = Nand1.Mn1.Cgs1.Cgs1.VFB + Real(Nand1.Mn1.Cgs1.Cgs1.Type) * (Nand1.Mn1.Cgs1.Cgs1.PHIval / 2.0 + ((-Nand1.Mn1.Cgs1.Cgs1.PHI) / 2.0 + (Nand1.Mn1.Cgs1.Cgs1.EGref / 2.0 + (-Nand1.Mn1.Cgs1.Cgs1.EGval) / 2.0)));
//   Nand1.Mn1.Cgs1.Cgs1.KPval = Nand1.Mn1.Cgs1.Cgs1.KP / Nand1.Mn1.Cgs1.Cgs1.facTemp;
//   Nand1.Mn1.Cgs1.Cgs1.BETA = (Nand1.Mn1.Cgs1.Cgs1.KPval * Nand1.Mn1.Cgs1.Cgs1.W) / Nand1.Mn1.Cgs1.Cgs1.L;
//   if noEvent(Nand1.Mn1.Cgs1.Cgs1.u1 > 0.0) then
//   Nand1.Mn1.Cgs1.Cgs1.sig = 1.0;
//   Nand1.Mn1.Cgs1.Cgs1.vds = Nand1.Mn1.Cgs1.Cgs1.u1;
//   Nand1.Mn1.Cgs1.Cgs1.vgs = Nand1.Mn1.Cgs1.Cgs1.e1 + Nand1.Mn1.Cgs1.Cgs1.u2;
//   Nand1.Mn1.Cgs1.Cgs1.vbs = Nand1.Mn1.Cgs1.Cgs1.u2;
//   else
//   Nand1.Mn1.Cgs1.Cgs1.sig = -1.0;
//   Nand1.Mn1.Cgs1.Cgs1.vds = -Nand1.Mn1.Cgs1.Cgs1.u1;
//   Nand1.Mn1.Cgs1.Cgs1.vgs = Nand1.Mn1.Cgs1.Cgs1.e1 - Nand1.Mn1.Cgs1.Cgs1.u1;
//   Nand1.Mn1.Cgs1.Cgs1.vbs = Nand1.Mn1.Cgs1.Cgs1.u2 - Nand1.Mn1.Cgs1.Cgs1.u1;
//   end if;
//   Nand1.Mn1.Cgs1.Cgs1.PHIroot = sqrt(Nand1.Mn1.Cgs1.Cgs1.PHIval);
//   Nand1.Mn1.Cgs1.Cgs1.PHI3 = Nand1.Mn1.Cgs1.Cgs1.PHIval * Nand1.Mn1.Cgs1.Cgs1.PHIroot;
//   Nand1.Mn1.Cgs1.Cgs1.Sarg = if Nand1.Mn1.Cgs1.Cgs1.vbs <= 0.0 then sqrt(Nand1.Mn1.Cgs1.Cgs1.PHIval - Nand1.Mn1.Cgs1.Cgs1.vbs) else Nand1.Mn1.Cgs1.Cgs1.PHIroot / (1.0 + Nand1.Mn1.Cgs1.Cgs1.vbs / (Nand1.Mn1.Cgs1.Cgs1.PHIval * 2.0));
//   Nand1.Mn1.Cgs1.Cgs1.DSarg = 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.Barg = 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.DBarg = 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.WS = Nand1.Mn1.Cgs1.Cgs1.XD * Nand1.Mn1.Cgs1.Cgs1.Sarg;
//   Nand1.Mn1.Cgs1.Cgs1.WD = Nand1.Mn1.Cgs1.Cgs1.XD * Nand1.Mn1.Cgs1.Cgs1.Barg;
//   Nand1.Mn1.Cgs1.Cgs1.WSfac = if Nand1.Mn1.Cgs1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn1.Cgs1.Cgs1.WS) / Nand1.Mn1.Cgs1.Cgs1.XJ) else 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.WDfac = if Nand1.Mn1.Cgs1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn1.Cgs1.Cgs1.WD) / Nand1.Mn1.Cgs1.Cgs1.XJ) else 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.GAMMAval = Nand1.Mn1.Cgs1.Cgs1.GAMMA * (if Nand1.Mn1.Cgs1.Cgs1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mn1.Cgs1.Cgs1.XJ * (-2.0 + (Nand1.Mn1.Cgs1.Cgs1.WSfac + Nand1.Mn1.Cgs1.Cgs1.WDfac)))) / Nand1.Mn1.Cgs1.Cgs1.L else 1.0);
//   Nand1.Mn1.Cgs1.Cgs1.DGAMMA = Nand1.Mn1.Cgs1.Cgs1.GAMMA * (if Nand1.Mn1.Cgs1.Cgs1.XJ > 0.0 then (-0.5 * (Nand1.Mn1.Cgs1.Cgs1.XD * (Nand1.Mn1.Cgs1.Cgs1.DSarg / Nand1.Mn1.Cgs1.Cgs1.WSfac + Nand1.Mn1.Cgs1.Cgs1.DBarg / Nand1.Mn1.Cgs1.Cgs1.WDfac))) / Nand1.Mn1.Cgs1.Cgs1.L else 0.0);
//   Nand1.Mn1.Cgs1.Cgs1.Wp = Nand1.Mn1.Cgs1.Cgs1.Sarg * Nand1.Mn1.Cgs1.Cgs1.XD;
//   Nand1.Mn1.Cgs1.Cgs1.WpXJ = if Nand1.Mn1.Cgs1.Cgs1.XJ > 0.0 then Nand1.Mn1.Cgs1.Cgs1.Wp / Nand1.Mn1.Cgs1.Cgs1.XJ else 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mn1.Cgs1.Cgs1.WpXJ + -0.01110777 * Nand1.Mn1.Cgs1.Cgs1.WpXJ ^ 2.0);
//   Nand1.Mn1.Cgs1.Cgs1.Wc = Nand1.Mn1.Cgs1.Cgs1.WcXJ * Nand1.Mn1.Cgs1.Cgs1.XJ;
//   Nand1.Mn1.Cgs1.Cgs1.Fs = if Nand1.Mn1.Cgs1.Cgs1.XJ > 0.0 then 1.0 + (Nand1.Mn1.Cgs1.Cgs1.LD - (Nand1.Mn1.Cgs1.Cgs1.LD + Nand1.Mn1.Cgs1.Cgs1.Wc) * sqrt(1.0 - (Nand1.Mn1.Cgs1.Cgs1.Wp / (Nand1.Mn1.Cgs1.Cgs1.XJ + Nand1.Mn1.Cgs1.Cgs1.Wp)) ^ 2.0)) / Nand1.Mn1.Cgs1.Cgs1.L else 1.0;
//   Nand1.Mn1.Cgs1.Cgs1.Vbody = Nand1.Mn1.Cgs1.Cgs1.GAMMA * (Nand1.Mn1.Cgs1.Cgs1.Fs * Nand1.Mn1.Cgs1.Cgs1.Sarg) + Nand1.Mn1.Cgs1.Cgs1.Fn * Nand1.Mn1.Cgs1.Cgs1.Sarg ^ 2.0;
//   Nand1.Mn1.Cgs1.Cgs1.Vth = Nand1.Mn1.Cgs1.Cgs1.Vfb + Real(Nand1.Mn1.Cgs1.Cgs1.Type) * (Nand1.Mn1.Cgs1.Cgs1.PHIval + (Nand1.Mn1.Cgs1.Cgs1.Vbody - Nand1.Mn1.Cgs1.Cgs1.SIGMA * Nand1.Mn1.Cgs1.Cgs1.vds));
//   Nand1.Mn1.Cgs1.Cgs1.CB = if noEvent(Nand1.Mn1.Cgs1.Cgs1.Vbody > 0.0) and noEvent(Nand1.Mn1.Cgs1.Cgs1.Sarg > 0.0) then (Nand1.Mn1.Cgs1.Cgs1.Vbody * Nand1.Mn1.Cgs1.Cgs1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.N = 1.0 + ((1.6021892e-19 * Nand1.Mn1.Cgs1.Cgs1.NFS) / Nand1.Mn1.Cgs1.Cgs1.COX + Nand1.Mn1.Cgs1.Cgs1.CB);
//   Nand1.Mn1.Cgs1.Cgs1.Von = if Nand1.Mn1.Cgs1.Cgs1.NFS > 0.0 then Real(Nand1.Mn1.Cgs1.Cgs1.Type) * Nand1.Mn1.Cgs1.Cgs1.Vth + Nand1.Mn1.Cgs1.Cgs1.N * Nand1.Mn1.Cgs1.Cgs1.Vt else Real(Nand1.Mn1.Cgs1.Cgs1.Type) * Nand1.Mn1.Cgs1.Cgs1.Vth;
//   if noEvent(Nand1.Mn1.Cgs1.Cgs1.sig > 0.0) then
//   Nand1.Mn1.Cgs1.Cgs1.Cval = Nand1.Mn1.Cgs1.Cgs1.W * Nand1.Mn1.Cgs1.Cgs1.CGS0 + (if noEvent(Nand1.Mn1.Cgs1.Cgs1.vgs < Nand1.Mn1.Cgs1.Cgs1.Von - Nand1.Mn1.Cgs1.Cgs1.PHIval) then 0.0 else if noEvent(Nand1.Mn1.Cgs1.Cgs1.vgs >= Nand1.Mn1.Cgs1.Cgs1.Von - Nand1.Mn1.Cgs1.Cgs1.PHIval) and noEvent(Nand1.Mn1.Cgs1.Cgs1.vgs < Nand1.Mn1.Cgs1.Cgs1.Von) then 0.666666666666667 * (Nand1.Mn1.Cgs1.Cgs1.COXval * (1.0 + (Nand1.Mn1.Cgs1.Cgs1.vgs - Nand1.Mn1.Cgs1.Cgs1.Von) / Nand1.Mn1.Cgs1.Cgs1.PHIval)) else if noEvent(Nand1.Mn1.Cgs1.Cgs1.vgs >= Nand1.Mn1.Cgs1.Cgs1.Von) and noEvent(Nand1.Mn1.Cgs1.Cgs1.vgs < Nand1.Mn1.Cgs1.Cgs1.Von + Nand1.Mn1.Cgs1.Cgs1.vds) then 0.666666666666667 * Nand1.Mn1.Cgs1.Cgs1.COXval else 0.666666666666667 * (Nand1.Mn1.Cgs1.Cgs1.COXval * (1.0 - ((Nand1.Mn1.Cgs1.Cgs1.vgs + ((-Nand1.Mn1.Cgs1.Cgs1.vds) - Nand1.Mn1.Cgs1.Cgs1.Von)) / (2.0 * (Nand1.Mn1.Cgs1.Cgs1.vgs - Nand1.Mn1.Cgs1.Cgs1.Von) - Nand1.Mn1.Cgs1.Cgs1.vds)) ^ 2.0)));
//   else
//   Nand1.Mn1.Cgs1.Cgs1.Cval = Nand1.Mn1.Cgs1.Cgs1.W * Nand1.Mn1.Cgs1.Cgs1.CGS0 + (if noEvent(Nand1.Mn1.Cgs1.Cgs1.vgs < Nand1.Mn1.Cgs1.Cgs1.Von + Nand1.Mn1.Cgs1.Cgs1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mn1.Cgs1.Cgs1.COXval * (1.0 - ((Nand1.Mn1.Cgs1.Cgs1.vgs - Nand1.Mn1.Cgs1.Cgs1.Von) / (2.0 * (Nand1.Mn1.Cgs1.Cgs1.vgs - Nand1.Mn1.Cgs1.Cgs1.Von) - Nand1.Mn1.Cgs1.Cgs1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mn1.Cgs1.Cgs1.f1 = Nand1.Mn1.Cgs1.Cgs1.Cval * der(Nand1.Mn1.Cgs1.Cgs1.e1);
//   Nand1.Mn1.Cgs1.Cgs1.f2 = 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.DTempSq = Nand1.Mn1.Cgs1.Cgs1.DTemp ^ 2.0;
//   Nand1.Mn1.Cgs1.Cgs1.DTemp = Nand1.Mn1.Cgs1.Cgs1.e2 - Nand1.Mn1.Cgs1.Cgs1.Tnom;
//   Nand1.Mn1.Cgs1.Cgs1.e1 = Nand1.Mn1.Cgs1.Cgs1.BondCon1.e;
//   Nand1.Mn1.Cgs1.Cgs1.f1 = Nand1.Mn1.Cgs1.Cgs1.BondCon1.d * Nand1.Mn1.Cgs1.Cgs1.BondCon1.f;
//   Nand1.Mn1.Cgs1.Cgs1.e2 = Nand1.Mn1.Cgs1.Cgs1.BondCon2.e;
//   Nand1.Mn1.Cgs1.Cgs1.f2 = (-Nand1.Mn1.Cgs1.Cgs1.BondCon2.d) * Nand1.Mn1.Cgs1.Cgs1.BondCon2.f;
//   Nand1.Mn1.Cgs1.B3.BondCon2.e = Nand1.Mn1.Cgs1.B3.BondCon1.e;
//   Nand1.Mn1.Cgs1.B3.BondCon2.f = Nand1.Mn1.Cgs1.B3.BondCon1.f;
//   Nand1.Mn1.Cgs1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgs1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgs1.B4.fBondCon1.e = Nand1.Mn1.Cgs1.B4.eBondCon1.e;
//   Nand1.Mn1.Cgs1.B4.eBondCon1.f = Nand1.Mn1.Cgs1.B4.fBondCon1.f;
//   Nand1.Mn1.Cgs1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Cgs1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.e = Nand1.Mn1.Cgs1.BG2Heat1.port_b.T;
//   Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.e * Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.f = -Nand1.Mn1.Cgs1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Cgs1.v = Nand1.Mn1.Cgs1.p.v - Nand1.Mn1.Cgs1.n.v;
//   Nand1.Mn1.Cgs1.i = Nand1.Mn1.Cgs1.p.i;
//   Nand1.Mn1.Cgd1.J1p3_1.f[2] = Nand1.Mn1.Cgd1.J1p3_1.f[1];
//   Nand1.Mn1.Cgd1.J1p3_1.f[3] = Nand1.Mn1.Cgd1.J1p3_1.f[2];
//   Nand1.Mn1.Cgd1.J1p3_1.e[1] + (Nand1.Mn1.Cgd1.J1p3_1.e[2] + Nand1.Mn1.Cgd1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Cgd1.J1p3_1.e[1] = Nand1.Mn1.Cgd1.J1p3_1.BondCon1.d * Nand1.Mn1.Cgd1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Cgd1.J1p3_1.f[1] = Nand1.Mn1.Cgd1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Cgd1.J1p3_1.e[2] = Nand1.Mn1.Cgd1.J1p3_1.BondCon2.d * Nand1.Mn1.Cgd1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Cgd1.J1p3_1.f[2] = Nand1.Mn1.Cgd1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Cgd1.J1p3_1.e[3] = Nand1.Mn1.Cgd1.J1p3_1.BondCon3.d * Nand1.Mn1.Cgd1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Cgd1.J1p3_1.f[3] = Nand1.Mn1.Cgd1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Cgd1.B1.BondCon2.e = Nand1.Mn1.Cgd1.B1.BondCon1.e;
//   Nand1.Mn1.Cgd1.B1.BondCon2.f = Nand1.Mn1.Cgd1.B1.BondCon1.f;
//   Nand1.Mn1.Cgd1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgd1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgd1.B2.BondCon2.e = Nand1.Mn1.Cgd1.B2.BondCon1.e;
//   Nand1.Mn1.Cgd1.B2.BondCon2.f = Nand1.Mn1.Cgd1.B2.BondCon1.f;
//   Nand1.Mn1.Cgd1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgd1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgd1.El2BG1.BondCon1.e = Nand1.Mn1.Cgd1.El2BG1.p.v;
//   Nand1.Mn1.Cgd1.El2BG1.BondCon1.f = Nand1.Mn1.Cgd1.El2BG1.p.i;
//   Nand1.Mn1.Cgd1.BG2El1.BondCon1.e = Nand1.Mn1.Cgd1.BG2El1.n.v;
//   Nand1.Mn1.Cgd1.BG2El1.BondCon1.f = -Nand1.Mn1.Cgd1.BG2El1.n.i;
//   Nand1.Mn1.Cgd1.Cgd1.RTemp = Nand1.Mn1.Cgd1.Cgd1.e2 / Nand1.Mn1.Cgd1.Cgd1.Tnom;
//   Nand1.Mn1.Cgd1.Cgd1.facTemp = Nand1.Mn1.Cgd1.Cgd1.RTemp ^ 1.5;
//   Nand1.Mn1.Cgd1.Cgd1.Vt = 8.61727503842867e-05 * Nand1.Mn1.Cgd1.Cgd1.e2;
//   Nand1.Mn1.Cgd1.Cgd1.EGref = Nand1.Mn1.Cgd1.Cgd1.EG + (-0.000702 * Nand1.Mn1.Cgd1.Cgd1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Cgd1.Cgd1.Tnom);
//   Nand1.Mn1.Cgd1.Cgd1.EGval = Nand1.Mn1.Cgd1.Cgd1.EG + (-0.000702 * Nand1.Mn1.Cgd1.Cgd1.e2 ^ 2.0) / (1108.0 + Nand1.Mn1.Cgd1.Cgd1.e2);
//   Nand1.Mn1.Cgd1.Cgd1.PHIval = Nand1.Mn1.Cgd1.Cgd1.RTemp * Nand1.Mn1.Cgd1.Cgd1.PHI + (Nand1.Mn1.Cgd1.Cgd1.EGval + (-3.0 * (Nand1.Mn1.Cgd1.Cgd1.Vt * log(Nand1.Mn1.Cgd1.Cgd1.RTemp)) - Nand1.Mn1.Cgd1.Cgd1.RTemp * Nand1.Mn1.Cgd1.Cgd1.EGref));
//   Nand1.Mn1.Cgd1.Cgd1.Vfb = Nand1.Mn1.Cgd1.Cgd1.VFB + Real(Nand1.Mn1.Cgd1.Cgd1.Type) * (Nand1.Mn1.Cgd1.Cgd1.PHIval / 2.0 + ((-Nand1.Mn1.Cgd1.Cgd1.PHI) / 2.0 + (Nand1.Mn1.Cgd1.Cgd1.EGref / 2.0 + (-Nand1.Mn1.Cgd1.Cgd1.EGval) / 2.0)));
//   Nand1.Mn1.Cgd1.Cgd1.KPval = Nand1.Mn1.Cgd1.Cgd1.KP / Nand1.Mn1.Cgd1.Cgd1.facTemp;
//   Nand1.Mn1.Cgd1.Cgd1.BETA = (Nand1.Mn1.Cgd1.Cgd1.KPval * Nand1.Mn1.Cgd1.Cgd1.W) / Nand1.Mn1.Cgd1.Cgd1.L;
//   if noEvent(Nand1.Mn1.Cgd1.Cgd1.u1 > 0.0) then
//   Nand1.Mn1.Cgd1.Cgd1.sig = 1.0;
//   Nand1.Mn1.Cgd1.Cgd1.vds = Nand1.Mn1.Cgd1.Cgd1.u1;
//   Nand1.Mn1.Cgd1.Cgd1.vgs = Nand1.Mn1.Cgd1.Cgd1.e1 + Nand1.Mn1.Cgd1.Cgd1.u1;
//   Nand1.Mn1.Cgd1.Cgd1.vbs = Nand1.Mn1.Cgd1.Cgd1.u2;
//   else
//   Nand1.Mn1.Cgd1.Cgd1.sig = -1.0;
//   Nand1.Mn1.Cgd1.Cgd1.vds = -Nand1.Mn1.Cgd1.Cgd1.u1;
//   Nand1.Mn1.Cgd1.Cgd1.vgs = Nand1.Mn1.Cgd1.Cgd1.e1 + (Nand1.Mn1.Cgd1.Cgd1.u2 - Nand1.Mn1.Cgd1.Cgd1.u1);
//   Nand1.Mn1.Cgd1.Cgd1.vbs = Nand1.Mn1.Cgd1.Cgd1.u2 - Nand1.Mn1.Cgd1.Cgd1.u1;
//   end if;
//   Nand1.Mn1.Cgd1.Cgd1.PHIroot = sqrt(Nand1.Mn1.Cgd1.Cgd1.PHIval);
//   Nand1.Mn1.Cgd1.Cgd1.PHI3 = Nand1.Mn1.Cgd1.Cgd1.PHIval * Nand1.Mn1.Cgd1.Cgd1.PHIroot;
//   Nand1.Mn1.Cgd1.Cgd1.Sarg = if Nand1.Mn1.Cgd1.Cgd1.vbs <= 0.0 then sqrt(Nand1.Mn1.Cgd1.Cgd1.PHIval - Nand1.Mn1.Cgd1.Cgd1.vbs) else Nand1.Mn1.Cgd1.Cgd1.PHIroot / (1.0 + Nand1.Mn1.Cgd1.Cgd1.vbs / (Nand1.Mn1.Cgd1.Cgd1.PHIval * 2.0));
//   Nand1.Mn1.Cgd1.Cgd1.DSarg = 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.Barg = 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.DBarg = 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.WS = Nand1.Mn1.Cgd1.Cgd1.XD * Nand1.Mn1.Cgd1.Cgd1.Sarg;
//   Nand1.Mn1.Cgd1.Cgd1.WD = Nand1.Mn1.Cgd1.Cgd1.XD * Nand1.Mn1.Cgd1.Cgd1.Barg;
//   Nand1.Mn1.Cgd1.Cgd1.WSfac = if Nand1.Mn1.Cgd1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn1.Cgd1.Cgd1.WS) / Nand1.Mn1.Cgd1.Cgd1.XJ) else 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.WDfac = if Nand1.Mn1.Cgd1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn1.Cgd1.Cgd1.WD) / Nand1.Mn1.Cgd1.Cgd1.XJ) else 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.GAMMAval = Nand1.Mn1.Cgd1.Cgd1.GAMMA * (if Nand1.Mn1.Cgd1.Cgd1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mn1.Cgd1.Cgd1.XJ * (-2.0 + (Nand1.Mn1.Cgd1.Cgd1.WSfac + Nand1.Mn1.Cgd1.Cgd1.WDfac)))) / Nand1.Mn1.Cgd1.Cgd1.L else 1.0);
//   Nand1.Mn1.Cgd1.Cgd1.DGAMMA = Nand1.Mn1.Cgd1.Cgd1.GAMMA * (if Nand1.Mn1.Cgd1.Cgd1.XJ > 0.0 then (-0.5 * (Nand1.Mn1.Cgd1.Cgd1.XD * (Nand1.Mn1.Cgd1.Cgd1.DSarg / Nand1.Mn1.Cgd1.Cgd1.WSfac + Nand1.Mn1.Cgd1.Cgd1.DBarg / Nand1.Mn1.Cgd1.Cgd1.WDfac))) / Nand1.Mn1.Cgd1.Cgd1.L else 0.0);
//   Nand1.Mn1.Cgd1.Cgd1.Wp = Nand1.Mn1.Cgd1.Cgd1.Sarg * Nand1.Mn1.Cgd1.Cgd1.XD;
//   Nand1.Mn1.Cgd1.Cgd1.WpXJ = if Nand1.Mn1.Cgd1.Cgd1.XJ > 0.0 then Nand1.Mn1.Cgd1.Cgd1.Wp / Nand1.Mn1.Cgd1.Cgd1.XJ else 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mn1.Cgd1.Cgd1.WpXJ + -0.01110777 * Nand1.Mn1.Cgd1.Cgd1.WpXJ ^ 2.0);
//   Nand1.Mn1.Cgd1.Cgd1.Wc = Nand1.Mn1.Cgd1.Cgd1.WcXJ * Nand1.Mn1.Cgd1.Cgd1.XJ;
//   Nand1.Mn1.Cgd1.Cgd1.Fs = if Nand1.Mn1.Cgd1.Cgd1.XJ > 0.0 then 1.0 + (Nand1.Mn1.Cgd1.Cgd1.LD - (Nand1.Mn1.Cgd1.Cgd1.LD + Nand1.Mn1.Cgd1.Cgd1.Wc) * sqrt(1.0 - (Nand1.Mn1.Cgd1.Cgd1.Wp / (Nand1.Mn1.Cgd1.Cgd1.XJ + Nand1.Mn1.Cgd1.Cgd1.Wp)) ^ 2.0)) / Nand1.Mn1.Cgd1.Cgd1.L else 1.0;
//   Nand1.Mn1.Cgd1.Cgd1.Vbody = Nand1.Mn1.Cgd1.Cgd1.GAMMA * (Nand1.Mn1.Cgd1.Cgd1.Fs * Nand1.Mn1.Cgd1.Cgd1.Sarg) + Nand1.Mn1.Cgd1.Cgd1.Fn * Nand1.Mn1.Cgd1.Cgd1.Sarg ^ 2.0;
//   Nand1.Mn1.Cgd1.Cgd1.Vth = Nand1.Mn1.Cgd1.Cgd1.Vfb + Real(Nand1.Mn1.Cgd1.Cgd1.Type) * (Nand1.Mn1.Cgd1.Cgd1.PHIval + (Nand1.Mn1.Cgd1.Cgd1.Vbody - Nand1.Mn1.Cgd1.Cgd1.SIGMA * Nand1.Mn1.Cgd1.Cgd1.vds));
//   Nand1.Mn1.Cgd1.Cgd1.CB = if noEvent(Nand1.Mn1.Cgd1.Cgd1.Vbody > 0.0) and noEvent(Nand1.Mn1.Cgd1.Cgd1.Sarg > 0.0) then (Nand1.Mn1.Cgd1.Cgd1.Vbody * Nand1.Mn1.Cgd1.Cgd1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.N = 1.0 + ((1.6021892e-19 * Nand1.Mn1.Cgd1.Cgd1.NFS) / Nand1.Mn1.Cgd1.Cgd1.COX + Nand1.Mn1.Cgd1.Cgd1.CB);
//   Nand1.Mn1.Cgd1.Cgd1.Von = if Nand1.Mn1.Cgd1.Cgd1.NFS > 0.0 then Real(Nand1.Mn1.Cgd1.Cgd1.Type) * Nand1.Mn1.Cgd1.Cgd1.Vth + Nand1.Mn1.Cgd1.Cgd1.N * Nand1.Mn1.Cgd1.Cgd1.Vt else Real(Nand1.Mn1.Cgd1.Cgd1.Type) * Nand1.Mn1.Cgd1.Cgd1.Vth;
//   if noEvent(Nand1.Mn1.Cgd1.Cgd1.sig > 0.0) then
//   Nand1.Mn1.Cgd1.Cgd1.Cval = Nand1.Mn1.Cgd1.Cgd1.W * Nand1.Mn1.Cgd1.Cgd1.CGD0 + (if noEvent(Nand1.Mn1.Cgd1.Cgd1.vgs < Nand1.Mn1.Cgd1.Cgd1.Von + Nand1.Mn1.Cgd1.Cgd1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mn1.Cgd1.Cgd1.COXval * (1.0 - ((Nand1.Mn1.Cgd1.Cgd1.vgs - Nand1.Mn1.Cgd1.Cgd1.Von) / (2.0 * (Nand1.Mn1.Cgd1.Cgd1.vgs - Nand1.Mn1.Cgd1.Cgd1.Von) - Nand1.Mn1.Cgd1.Cgd1.vds)) ^ 2.0)));
//   else
//   Nand1.Mn1.Cgd1.Cgd1.Cval = Nand1.Mn1.Cgd1.Cgd1.W * Nand1.Mn1.Cgd1.Cgd1.CGD0 + (if noEvent(Nand1.Mn1.Cgd1.Cgd1.vgs < Nand1.Mn1.Cgd1.Cgd1.Von - Nand1.Mn1.Cgd1.Cgd1.PHIval) then 0.0 else if noEvent(Nand1.Mn1.Cgd1.Cgd1.vgs >= Nand1.Mn1.Cgd1.Cgd1.Von - Nand1.Mn1.Cgd1.Cgd1.PHIval) and noEvent(Nand1.Mn1.Cgd1.Cgd1.vgs < Nand1.Mn1.Cgd1.Cgd1.Von) then 0.666666666666667 * (Nand1.Mn1.Cgd1.Cgd1.COXval * (1.0 + (Nand1.Mn1.Cgd1.Cgd1.vgs - Nand1.Mn1.Cgd1.Cgd1.Von) / Nand1.Mn1.Cgd1.Cgd1.PHIval)) else if noEvent(Nand1.Mn1.Cgd1.Cgd1.vgs >= Nand1.Mn1.Cgd1.Cgd1.Von) and noEvent(Nand1.Mn1.Cgd1.Cgd1.vgs < Nand1.Mn1.Cgd1.Cgd1.Von + Nand1.Mn1.Cgd1.Cgd1.vds) then 0.666666666666667 * Nand1.Mn1.Cgd1.Cgd1.COXval else 0.666666666666667 * (Nand1.Mn1.Cgd1.Cgd1.COXval * (1.0 - ((Nand1.Mn1.Cgd1.Cgd1.vgs + ((-Nand1.Mn1.Cgd1.Cgd1.vds) - Nand1.Mn1.Cgd1.Cgd1.Von)) / (2.0 * (Nand1.Mn1.Cgd1.Cgd1.vgs - Nand1.Mn1.Cgd1.Cgd1.Von) - Nand1.Mn1.Cgd1.Cgd1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mn1.Cgd1.Cgd1.f1 = Nand1.Mn1.Cgd1.Cgd1.Cval * der(Nand1.Mn1.Cgd1.Cgd1.e1);
//   Nand1.Mn1.Cgd1.Cgd1.f2 = 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.DTempSq = Nand1.Mn1.Cgd1.Cgd1.DTemp ^ 2.0;
//   Nand1.Mn1.Cgd1.Cgd1.DTemp = Nand1.Mn1.Cgd1.Cgd1.e2 - Nand1.Mn1.Cgd1.Cgd1.Tnom;
//   Nand1.Mn1.Cgd1.Cgd1.e1 = Nand1.Mn1.Cgd1.Cgd1.BondCon1.e;
//   Nand1.Mn1.Cgd1.Cgd1.f1 = Nand1.Mn1.Cgd1.Cgd1.BondCon1.d * Nand1.Mn1.Cgd1.Cgd1.BondCon1.f;
//   Nand1.Mn1.Cgd1.Cgd1.e2 = Nand1.Mn1.Cgd1.Cgd1.BondCon2.e;
//   Nand1.Mn1.Cgd1.Cgd1.f2 = (-Nand1.Mn1.Cgd1.Cgd1.BondCon2.d) * Nand1.Mn1.Cgd1.Cgd1.BondCon2.f;
//   Nand1.Mn1.Cgd1.B4.fBondCon1.e = Nand1.Mn1.Cgd1.B4.eBondCon1.e;
//   Nand1.Mn1.Cgd1.B4.eBondCon1.f = Nand1.Mn1.Cgd1.B4.fBondCon1.f;
//   Nand1.Mn1.Cgd1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Cgd1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.e = Nand1.Mn1.Cgd1.BG2Heat1.port_b.T;
//   Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.e * Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.f = -Nand1.Mn1.Cgd1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Cgd1.B3.BondCon2.e = Nand1.Mn1.Cgd1.B3.BondCon1.e;
//   Nand1.Mn1.Cgd1.B3.BondCon2.f = Nand1.Mn1.Cgd1.B3.BondCon1.f;
//   Nand1.Mn1.Cgd1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgd1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgd1.v = Nand1.Mn1.Cgd1.p.v - Nand1.Mn1.Cgd1.n.v;
//   Nand1.Mn1.Cgd1.i = Nand1.Mn1.Cgd1.p.i;
//   Nand1.Mn1.Cgb1.J1p3_1.f[2] = Nand1.Mn1.Cgb1.J1p3_1.f[1];
//   Nand1.Mn1.Cgb1.J1p3_1.f[3] = Nand1.Mn1.Cgb1.J1p3_1.f[2];
//   Nand1.Mn1.Cgb1.J1p3_1.e[1] + (Nand1.Mn1.Cgb1.J1p3_1.e[2] + Nand1.Mn1.Cgb1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Cgb1.J1p3_1.e[1] = Nand1.Mn1.Cgb1.J1p3_1.BondCon1.d * Nand1.Mn1.Cgb1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Cgb1.J1p3_1.f[1] = Nand1.Mn1.Cgb1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Cgb1.J1p3_1.e[2] = Nand1.Mn1.Cgb1.J1p3_1.BondCon2.d * Nand1.Mn1.Cgb1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Cgb1.J1p3_1.f[2] = Nand1.Mn1.Cgb1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Cgb1.J1p3_1.e[3] = Nand1.Mn1.Cgb1.J1p3_1.BondCon3.d * Nand1.Mn1.Cgb1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Cgb1.J1p3_1.f[3] = Nand1.Mn1.Cgb1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Cgb1.B1.BondCon2.e = Nand1.Mn1.Cgb1.B1.BondCon1.e;
//   Nand1.Mn1.Cgb1.B1.BondCon2.f = Nand1.Mn1.Cgb1.B1.BondCon1.f;
//   Nand1.Mn1.Cgb1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgb1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgb1.B2.BondCon2.e = Nand1.Mn1.Cgb1.B2.BondCon1.e;
//   Nand1.Mn1.Cgb1.B2.BondCon2.f = Nand1.Mn1.Cgb1.B2.BondCon1.f;
//   Nand1.Mn1.Cgb1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgb1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgb1.El2BG1.BondCon1.e = Nand1.Mn1.Cgb1.El2BG1.p.v;
//   Nand1.Mn1.Cgb1.El2BG1.BondCon1.f = Nand1.Mn1.Cgb1.El2BG1.p.i;
//   Nand1.Mn1.Cgb1.BG2El1.BondCon1.e = Nand1.Mn1.Cgb1.BG2El1.n.v;
//   Nand1.Mn1.Cgb1.BG2El1.BondCon1.f = -Nand1.Mn1.Cgb1.BG2El1.n.i;
//   Nand1.Mn1.Cgb1.Cgb1.RTemp = Nand1.Mn1.Cgb1.Cgb1.e2 / Nand1.Mn1.Cgb1.Cgb1.Tnom;
//   Nand1.Mn1.Cgb1.Cgb1.facTemp = Nand1.Mn1.Cgb1.Cgb1.RTemp ^ 1.5;
//   Nand1.Mn1.Cgb1.Cgb1.Vt = 8.61727503842867e-05 * Nand1.Mn1.Cgb1.Cgb1.e2;
//   Nand1.Mn1.Cgb1.Cgb1.EGref = Nand1.Mn1.Cgb1.Cgb1.EG + (-0.000702 * Nand1.Mn1.Cgb1.Cgb1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn1.Cgb1.Cgb1.Tnom);
//   Nand1.Mn1.Cgb1.Cgb1.EGval = Nand1.Mn1.Cgb1.Cgb1.EG + (-0.000702 * Nand1.Mn1.Cgb1.Cgb1.e2 ^ 2.0) / (1108.0 + Nand1.Mn1.Cgb1.Cgb1.e2);
//   Nand1.Mn1.Cgb1.Cgb1.PHIval = Nand1.Mn1.Cgb1.Cgb1.RTemp * Nand1.Mn1.Cgb1.Cgb1.PHI + (Nand1.Mn1.Cgb1.Cgb1.EGval + (-3.0 * (Nand1.Mn1.Cgb1.Cgb1.Vt * log(Nand1.Mn1.Cgb1.Cgb1.RTemp)) - Nand1.Mn1.Cgb1.Cgb1.RTemp * Nand1.Mn1.Cgb1.Cgb1.EGref));
//   Nand1.Mn1.Cgb1.Cgb1.Vfb = Nand1.Mn1.Cgb1.Cgb1.VFB + Real(Nand1.Mn1.Cgb1.Cgb1.Type) * (Nand1.Mn1.Cgb1.Cgb1.PHIval / 2.0 + ((-Nand1.Mn1.Cgb1.Cgb1.PHI) / 2.0 + (Nand1.Mn1.Cgb1.Cgb1.EGref / 2.0 + (-Nand1.Mn1.Cgb1.Cgb1.EGval) / 2.0)));
//   Nand1.Mn1.Cgb1.Cgb1.KPval = Nand1.Mn1.Cgb1.Cgb1.KP / Nand1.Mn1.Cgb1.Cgb1.facTemp;
//   Nand1.Mn1.Cgb1.Cgb1.BETA = (Nand1.Mn1.Cgb1.Cgb1.KPval * Nand1.Mn1.Cgb1.Cgb1.W) / Nand1.Mn1.Cgb1.Cgb1.L;
//   if noEvent(Nand1.Mn1.Cgb1.Cgb1.u1 > 0.0) then
//   Nand1.Mn1.Cgb1.Cgb1.sig = 1.0;
//   Nand1.Mn1.Cgb1.Cgb1.vds = Nand1.Mn1.Cgb1.Cgb1.u1;
//   Nand1.Mn1.Cgb1.Cgb1.vgs = Nand1.Mn1.Cgb1.Cgb1.e1 + Nand1.Mn1.Cgb1.Cgb1.u2;
//   Nand1.Mn1.Cgb1.Cgb1.vbs = Nand1.Mn1.Cgb1.Cgb1.u2;
//   else
//   Nand1.Mn1.Cgb1.Cgb1.sig = -1.0;
//   Nand1.Mn1.Cgb1.Cgb1.vds = -Nand1.Mn1.Cgb1.Cgb1.u1;
//   Nand1.Mn1.Cgb1.Cgb1.vgs = Nand1.Mn1.Cgb1.Cgb1.e1 + (Nand1.Mn1.Cgb1.Cgb1.u2 - Nand1.Mn1.Cgb1.Cgb1.u1);
//   Nand1.Mn1.Cgb1.Cgb1.vbs = Nand1.Mn1.Cgb1.Cgb1.u2 - Nand1.Mn1.Cgb1.Cgb1.u1;
//   end if;
//   Nand1.Mn1.Cgb1.Cgb1.PHIroot = sqrt(Nand1.Mn1.Cgb1.Cgb1.PHIval);
//   Nand1.Mn1.Cgb1.Cgb1.PHI3 = Nand1.Mn1.Cgb1.Cgb1.PHIval * Nand1.Mn1.Cgb1.Cgb1.PHIroot;
//   Nand1.Mn1.Cgb1.Cgb1.Sarg = if Nand1.Mn1.Cgb1.Cgb1.vbs <= 0.0 then sqrt(Nand1.Mn1.Cgb1.Cgb1.PHIval - Nand1.Mn1.Cgb1.Cgb1.vbs) else Nand1.Mn1.Cgb1.Cgb1.PHIroot / (1.0 + Nand1.Mn1.Cgb1.Cgb1.vbs / (Nand1.Mn1.Cgb1.Cgb1.PHIval * 2.0));
//   Nand1.Mn1.Cgb1.Cgb1.DSarg = 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.Barg = 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.DBarg = 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.WS = Nand1.Mn1.Cgb1.Cgb1.XD * Nand1.Mn1.Cgb1.Cgb1.Sarg;
//   Nand1.Mn1.Cgb1.Cgb1.WD = Nand1.Mn1.Cgb1.Cgb1.XD * Nand1.Mn1.Cgb1.Cgb1.Barg;
//   Nand1.Mn1.Cgb1.Cgb1.WSfac = if Nand1.Mn1.Cgb1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn1.Cgb1.Cgb1.WS) / Nand1.Mn1.Cgb1.Cgb1.XJ) else 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.WDfac = if Nand1.Mn1.Cgb1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn1.Cgb1.Cgb1.WD) / Nand1.Mn1.Cgb1.Cgb1.XJ) else 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.GAMMAval = Nand1.Mn1.Cgb1.Cgb1.GAMMA * (if Nand1.Mn1.Cgb1.Cgb1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mn1.Cgb1.Cgb1.XJ * (-2.0 + (Nand1.Mn1.Cgb1.Cgb1.WSfac + Nand1.Mn1.Cgb1.Cgb1.WDfac)))) / Nand1.Mn1.Cgb1.Cgb1.L else 1.0);
//   Nand1.Mn1.Cgb1.Cgb1.DGAMMA = Nand1.Mn1.Cgb1.Cgb1.GAMMA * (if Nand1.Mn1.Cgb1.Cgb1.XJ > 0.0 then (-0.5 * (Nand1.Mn1.Cgb1.Cgb1.XD * (Nand1.Mn1.Cgb1.Cgb1.DSarg / Nand1.Mn1.Cgb1.Cgb1.WSfac + Nand1.Mn1.Cgb1.Cgb1.DBarg / Nand1.Mn1.Cgb1.Cgb1.WDfac))) / Nand1.Mn1.Cgb1.Cgb1.L else 0.0);
//   Nand1.Mn1.Cgb1.Cgb1.Wp = Nand1.Mn1.Cgb1.Cgb1.Sarg * Nand1.Mn1.Cgb1.Cgb1.XD;
//   Nand1.Mn1.Cgb1.Cgb1.WpXJ = if Nand1.Mn1.Cgb1.Cgb1.XJ > 0.0 then Nand1.Mn1.Cgb1.Cgb1.Wp / Nand1.Mn1.Cgb1.Cgb1.XJ else 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mn1.Cgb1.Cgb1.WpXJ + -0.01110777 * Nand1.Mn1.Cgb1.Cgb1.WpXJ ^ 2.0);
//   Nand1.Mn1.Cgb1.Cgb1.Wc = Nand1.Mn1.Cgb1.Cgb1.WcXJ * Nand1.Mn1.Cgb1.Cgb1.XJ;
//   Nand1.Mn1.Cgb1.Cgb1.Fs = if Nand1.Mn1.Cgb1.Cgb1.XJ > 0.0 then 1.0 + (Nand1.Mn1.Cgb1.Cgb1.LD - (Nand1.Mn1.Cgb1.Cgb1.LD + Nand1.Mn1.Cgb1.Cgb1.Wc) * sqrt(1.0 - (Nand1.Mn1.Cgb1.Cgb1.Wp / (Nand1.Mn1.Cgb1.Cgb1.XJ + Nand1.Mn1.Cgb1.Cgb1.Wp)) ^ 2.0)) / Nand1.Mn1.Cgb1.Cgb1.L else 1.0;
//   Nand1.Mn1.Cgb1.Cgb1.Vbody = Nand1.Mn1.Cgb1.Cgb1.GAMMA * (Nand1.Mn1.Cgb1.Cgb1.Fs * Nand1.Mn1.Cgb1.Cgb1.Sarg) + Nand1.Mn1.Cgb1.Cgb1.Fn * Nand1.Mn1.Cgb1.Cgb1.Sarg ^ 2.0;
//   Nand1.Mn1.Cgb1.Cgb1.Vth = Nand1.Mn1.Cgb1.Cgb1.Vfb + Real(Nand1.Mn1.Cgb1.Cgb1.Type) * (Nand1.Mn1.Cgb1.Cgb1.PHIval + (Nand1.Mn1.Cgb1.Cgb1.Vbody - Nand1.Mn1.Cgb1.Cgb1.SIGMA * Nand1.Mn1.Cgb1.Cgb1.vds));
//   Nand1.Mn1.Cgb1.Cgb1.CB = if noEvent(Nand1.Mn1.Cgb1.Cgb1.Vbody > 0.0) and noEvent(Nand1.Mn1.Cgb1.Cgb1.Sarg > 0.0) then (Nand1.Mn1.Cgb1.Cgb1.Vbody * Nand1.Mn1.Cgb1.Cgb1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.N = 1.0 + ((1.6021892e-19 * Nand1.Mn1.Cgb1.Cgb1.NFS) / Nand1.Mn1.Cgb1.Cgb1.COX + Nand1.Mn1.Cgb1.Cgb1.CB);
//   Nand1.Mn1.Cgb1.Cgb1.Von = if Nand1.Mn1.Cgb1.Cgb1.NFS > 0.0 then Real(Nand1.Mn1.Cgb1.Cgb1.Type) * Nand1.Mn1.Cgb1.Cgb1.Vth + Nand1.Mn1.Cgb1.Cgb1.N * Nand1.Mn1.Cgb1.Cgb1.Vt else Real(Nand1.Mn1.Cgb1.Cgb1.Type) * Nand1.Mn1.Cgb1.Cgb1.Vth;
//   Nand1.Mn1.Cgb1.Cgb1.Cval = Nand1.Mn1.Cgb1.Cgb1.L * Nand1.Mn1.Cgb1.Cgb1.CGB0 + (if noEvent(Nand1.Mn1.Cgb1.Cgb1.vgs < Nand1.Mn1.Cgb1.Cgb1.Von - Nand1.Mn1.Cgb1.Cgb1.PHIval) then Nand1.Mn1.Cgb1.Cgb1.COXval else if noEvent(Nand1.Mn1.Cgb1.Cgb1.vgs >= Nand1.Mn1.Cgb1.Cgb1.Von - Nand1.Mn1.Cgb1.Cgb1.PHIval) and noEvent(Nand1.Mn1.Cgb1.Cgb1.vgs < Nand1.Mn1.Cgb1.Cgb1.Von) then (Nand1.Mn1.Cgb1.Cgb1.COXval * (Nand1.Mn1.Cgb1.Cgb1.Von - Nand1.Mn1.Cgb1.Cgb1.vgs)) / Nand1.Mn1.Cgb1.Cgb1.PHIval else 0.0);
//   Nand1.Mn1.Cgb1.Cgb1.f1 = Nand1.Mn1.Cgb1.Cgb1.Cval * der(Nand1.Mn1.Cgb1.Cgb1.e1);
//   Nand1.Mn1.Cgb1.Cgb1.f2 = 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.DTempSq = Nand1.Mn1.Cgb1.Cgb1.DTemp ^ 2.0;
//   Nand1.Mn1.Cgb1.Cgb1.DTemp = Nand1.Mn1.Cgb1.Cgb1.e2 - Nand1.Mn1.Cgb1.Cgb1.Tnom;
//   Nand1.Mn1.Cgb1.Cgb1.e1 = Nand1.Mn1.Cgb1.Cgb1.BondCon1.e;
//   Nand1.Mn1.Cgb1.Cgb1.f1 = Nand1.Mn1.Cgb1.Cgb1.BondCon1.d * Nand1.Mn1.Cgb1.Cgb1.BondCon1.f;
//   Nand1.Mn1.Cgb1.Cgb1.e2 = Nand1.Mn1.Cgb1.Cgb1.BondCon2.e;
//   Nand1.Mn1.Cgb1.Cgb1.f2 = (-Nand1.Mn1.Cgb1.Cgb1.BondCon2.d) * Nand1.Mn1.Cgb1.Cgb1.BondCon2.f;
//   Nand1.Mn1.Cgb1.B4.fBondCon1.e = Nand1.Mn1.Cgb1.B4.eBondCon1.e;
//   Nand1.Mn1.Cgb1.B4.eBondCon1.f = Nand1.Mn1.Cgb1.B4.fBondCon1.f;
//   Nand1.Mn1.Cgb1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Cgb1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.e = Nand1.Mn1.Cgb1.BG2Heat1.port_b.T;
//   Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.e * Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.f = -Nand1.Mn1.Cgb1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Cgb1.B3.BondCon2.e = Nand1.Mn1.Cgb1.B3.BondCon1.e;
//   Nand1.Mn1.Cgb1.B3.BondCon2.f = Nand1.Mn1.Cgb1.B3.BondCon1.f;
//   Nand1.Mn1.Cgb1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Cgb1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Cgb1.v = Nand1.Mn1.Cgb1.p.v - Nand1.Mn1.Cgb1.n.v;
//   Nand1.Mn1.Cgb1.i = Nand1.Mn1.Cgb1.p.i;
//   Nand1.Mn1.Vds.J1p3_1.f[2] = Nand1.Mn1.Vds.J1p3_1.f[1];
//   Nand1.Mn1.Vds.J1p3_1.f[3] = Nand1.Mn1.Vds.J1p3_1.f[2];
//   Nand1.Mn1.Vds.J1p3_1.e[1] + (Nand1.Mn1.Vds.J1p3_1.e[2] + Nand1.Mn1.Vds.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Vds.J1p3_1.e[1] = Nand1.Mn1.Vds.J1p3_1.BondCon1.d * Nand1.Mn1.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Vds.J1p3_1.f[1] = Nand1.Mn1.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Vds.J1p3_1.e[2] = Nand1.Mn1.Vds.J1p3_1.BondCon2.d * Nand1.Mn1.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Vds.J1p3_1.f[2] = Nand1.Mn1.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Vds.J1p3_1.e[3] = Nand1.Mn1.Vds.J1p3_1.BondCon3.d * Nand1.Mn1.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Vds.J1p3_1.f[3] = Nand1.Mn1.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Vds.B1.BondCon2.e = Nand1.Mn1.Vds.B1.BondCon1.e;
//   Nand1.Mn1.Vds.B1.BondCon2.f = Nand1.Mn1.Vds.B1.BondCon1.f;
//   Nand1.Mn1.Vds.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Vds.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Vds.B2.BondCon2.e = Nand1.Mn1.Vds.B2.BondCon1.e;
//   Nand1.Mn1.Vds.B2.BondCon2.f = Nand1.Mn1.Vds.B2.BondCon1.f;
//   Nand1.Mn1.Vds.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Vds.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Vds.El2BG1.BondCon1.e = Nand1.Mn1.Vds.El2BG1.p.v;
//   Nand1.Mn1.Vds.El2BG1.BondCon1.f = Nand1.Mn1.Vds.El2BG1.p.i;
//   Nand1.Mn1.Vds.BG2El1.BondCon1.e = Nand1.Mn1.Vds.BG2El1.n.v;
//   Nand1.Mn1.Vds.BG2El1.BondCon1.f = -Nand1.Mn1.Vds.BG2El1.n.i;
//   Nand1.Mn1.Vds.De1.OutPort1 = Nand1.Mn1.Vds.De1.e;
//   Nand1.Mn1.Vds.De1.f = 0.0;
//   Nand1.Mn1.Vds.De1.e = Nand1.Mn1.Vds.De1.BondCon1.e;
//   Nand1.Mn1.Vds.De1.f = Nand1.Mn1.Vds.De1.BondCon1.d * Nand1.Mn1.Vds.De1.BondCon1.f;
//   Nand1.Mn1.Vds.B3.BondCon2.e = Nand1.Mn1.Vds.B3.BondCon1.e;
//   Nand1.Mn1.Vds.B3.BondCon2.f = Nand1.Mn1.Vds.B3.BondCon1.f;
//   Nand1.Mn1.Vds.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Vds.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Vds.v = Nand1.Mn1.Vds.p.v - Nand1.Mn1.Vds.n.v;
//   Nand1.Mn1.Vds.i = Nand1.Mn1.Vds.p.i;
//   Nand1.Mn1.Vbs.J1p3_1.f[2] = Nand1.Mn1.Vbs.J1p3_1.f[1];
//   Nand1.Mn1.Vbs.J1p3_1.f[3] = Nand1.Mn1.Vbs.J1p3_1.f[2];
//   Nand1.Mn1.Vbs.J1p3_1.e[1] + (Nand1.Mn1.Vbs.J1p3_1.e[2] + Nand1.Mn1.Vbs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Vbs.J1p3_1.e[1] = Nand1.Mn1.Vbs.J1p3_1.BondCon1.d * Nand1.Mn1.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Vbs.J1p3_1.f[1] = Nand1.Mn1.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Vbs.J1p3_1.e[2] = Nand1.Mn1.Vbs.J1p3_1.BondCon2.d * Nand1.Mn1.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Vbs.J1p3_1.f[2] = Nand1.Mn1.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Vbs.J1p3_1.e[3] = Nand1.Mn1.Vbs.J1p3_1.BondCon3.d * Nand1.Mn1.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Vbs.J1p3_1.f[3] = Nand1.Mn1.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Vbs.B1.BondCon2.e = Nand1.Mn1.Vbs.B1.BondCon1.e;
//   Nand1.Mn1.Vbs.B1.BondCon2.f = Nand1.Mn1.Vbs.B1.BondCon1.f;
//   Nand1.Mn1.Vbs.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Vbs.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Vbs.B2.BondCon2.e = Nand1.Mn1.Vbs.B2.BondCon1.e;
//   Nand1.Mn1.Vbs.B2.BondCon2.f = Nand1.Mn1.Vbs.B2.BondCon1.f;
//   Nand1.Mn1.Vbs.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Vbs.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Vbs.El2BG1.BondCon1.e = Nand1.Mn1.Vbs.El2BG1.p.v;
//   Nand1.Mn1.Vbs.El2BG1.BondCon1.f = Nand1.Mn1.Vbs.El2BG1.p.i;
//   Nand1.Mn1.Vbs.BG2El1.BondCon1.e = Nand1.Mn1.Vbs.BG2El1.n.v;
//   Nand1.Mn1.Vbs.BG2El1.BondCon1.f = -Nand1.Mn1.Vbs.BG2El1.n.i;
//   Nand1.Mn1.Vbs.De1.OutPort1 = Nand1.Mn1.Vbs.De1.e;
//   Nand1.Mn1.Vbs.De1.f = 0.0;
//   Nand1.Mn1.Vbs.De1.e = Nand1.Mn1.Vbs.De1.BondCon1.e;
//   Nand1.Mn1.Vbs.De1.f = Nand1.Mn1.Vbs.De1.BondCon1.d * Nand1.Mn1.Vbs.De1.BondCon1.f;
//   Nand1.Mn1.Vbs.B3.BondCon2.e = Nand1.Mn1.Vbs.B3.BondCon1.e;
//   Nand1.Mn1.Vbs.B3.BondCon2.f = Nand1.Mn1.Vbs.B3.BondCon1.f;
//   Nand1.Mn1.Vbs.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Vbs.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Vbs.v = Nand1.Mn1.Vbs.p.v - Nand1.Mn1.Vbs.n.v;
//   Nand1.Mn1.Vbs.i = Nand1.Mn1.Vbs.p.i;
//   Nand1.Mn1.Rd.J1p3_1.f[2] = Nand1.Mn1.Rd.J1p3_1.f[1];
//   Nand1.Mn1.Rd.J1p3_1.f[3] = Nand1.Mn1.Rd.J1p3_1.f[2];
//   Nand1.Mn1.Rd.J1p3_1.e[1] + (Nand1.Mn1.Rd.J1p3_1.e[2] + Nand1.Mn1.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Rd.J1p3_1.e[1] = Nand1.Mn1.Rd.J1p3_1.BondCon1.d * Nand1.Mn1.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Rd.J1p3_1.f[1] = Nand1.Mn1.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Rd.J1p3_1.e[2] = Nand1.Mn1.Rd.J1p3_1.BondCon2.d * Nand1.Mn1.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Rd.J1p3_1.f[2] = Nand1.Mn1.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Rd.J1p3_1.e[3] = Nand1.Mn1.Rd.J1p3_1.BondCon3.d * Nand1.Mn1.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Rd.J1p3_1.f[3] = Nand1.Mn1.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Rd.B1.BondCon2.e = Nand1.Mn1.Rd.B1.BondCon1.e;
//   Nand1.Mn1.Rd.B1.BondCon2.f = Nand1.Mn1.Rd.B1.BondCon1.f;
//   Nand1.Mn1.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Rd.B2.BondCon2.e = Nand1.Mn1.Rd.B2.BondCon1.e;
//   Nand1.Mn1.Rd.B2.BondCon2.f = Nand1.Mn1.Rd.B2.BondCon1.f;
//   Nand1.Mn1.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Rd.El2BG1.BondCon1.e = Nand1.Mn1.Rd.El2BG1.p.v;
//   Nand1.Mn1.Rd.El2BG1.BondCon1.f = Nand1.Mn1.Rd.El2BG1.p.i;
//   Nand1.Mn1.Rd.BG2El1.BondCon1.e = Nand1.Mn1.Rd.BG2El1.n.v;
//   Nand1.Mn1.Rd.BG2El1.BondCon1.f = -Nand1.Mn1.Rd.BG2El1.n.i;
//   Nand1.Mn1.Rd.B3.BondCon2.e = Nand1.Mn1.Rd.B3.BondCon1.e;
//   Nand1.Mn1.Rd.B3.BondCon2.f = Nand1.Mn1.Rd.B3.BondCon1.f;
//   Nand1.Mn1.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Rd.RM1.Rval = Nand1.Mn1.Rd.RM1.R * (1.0 + (Nand1.Mn1.Rd.RM1.TR1 * Nand1.Mn1.Rd.RM1.DTemp + Nand1.Mn1.Rd.RM1.TR2 * Nand1.Mn1.Rd.RM1.DTempSq));
//   Nand1.Mn1.Rd.RM1.e1 = Nand1.Mn1.Rd.RM1.Rval * Nand1.Mn1.Rd.RM1.f1;
//   Nand1.Mn1.Rd.RM1.e1 * Nand1.Mn1.Rd.RM1.f1 = Nand1.Mn1.Rd.RM1.e2 * Nand1.Mn1.Rd.RM1.f2;
//   Nand1.Mn1.Rd.RM1.DTempSq = Nand1.Mn1.Rd.RM1.DTemp ^ 2.0;
//   Nand1.Mn1.Rd.RM1.DTemp = Nand1.Mn1.Rd.RM1.e2 - Nand1.Mn1.Rd.RM1.Tnom;
//   Nand1.Mn1.Rd.RM1.e1 = Nand1.Mn1.Rd.RM1.BondCon1.e;
//   Nand1.Mn1.Rd.RM1.f1 = Nand1.Mn1.Rd.RM1.BondCon1.d * Nand1.Mn1.Rd.RM1.BondCon1.f;
//   Nand1.Mn1.Rd.RM1.e2 = Nand1.Mn1.Rd.RM1.BondCon2.e;
//   Nand1.Mn1.Rd.RM1.f2 = (-Nand1.Mn1.Rd.RM1.BondCon2.d) * Nand1.Mn1.Rd.RM1.BondCon2.f;
//   Nand1.Mn1.Rd.B4.fBondCon1.e = Nand1.Mn1.Rd.B4.eBondCon1.e;
//   Nand1.Mn1.Rd.B4.eBondCon1.f = Nand1.Mn1.Rd.B4.fBondCon1.f;
//   Nand1.Mn1.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Rd.BG2Heat1.BondCon1.e = Nand1.Mn1.Rd.BG2Heat1.port_b.T;
//   Nand1.Mn1.Rd.BG2Heat1.BondCon1.e * Nand1.Mn1.Rd.BG2Heat1.BondCon1.f = -Nand1.Mn1.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Rd.v = Nand1.Mn1.Rd.p.v - Nand1.Mn1.Rd.n.v;
//   Nand1.Mn1.Rd.i = Nand1.Mn1.Rd.p.i;
//   Nand1.Mn1.Rs.J1p3_1.f[2] = Nand1.Mn1.Rs.J1p3_1.f[1];
//   Nand1.Mn1.Rs.J1p3_1.f[3] = Nand1.Mn1.Rs.J1p3_1.f[2];
//   Nand1.Mn1.Rs.J1p3_1.e[1] + (Nand1.Mn1.Rs.J1p3_1.e[2] + Nand1.Mn1.Rs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Rs.J1p3_1.e[1] = Nand1.Mn1.Rs.J1p3_1.BondCon1.d * Nand1.Mn1.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Rs.J1p3_1.f[1] = Nand1.Mn1.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Rs.J1p3_1.e[2] = Nand1.Mn1.Rs.J1p3_1.BondCon2.d * Nand1.Mn1.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Rs.J1p3_1.f[2] = Nand1.Mn1.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Rs.J1p3_1.e[3] = Nand1.Mn1.Rs.J1p3_1.BondCon3.d * Nand1.Mn1.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Rs.J1p3_1.f[3] = Nand1.Mn1.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Rs.B1.BondCon2.e = Nand1.Mn1.Rs.B1.BondCon1.e;
//   Nand1.Mn1.Rs.B1.BondCon2.f = Nand1.Mn1.Rs.B1.BondCon1.f;
//   Nand1.Mn1.Rs.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Rs.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Rs.B2.BondCon2.e = Nand1.Mn1.Rs.B2.BondCon1.e;
//   Nand1.Mn1.Rs.B2.BondCon2.f = Nand1.Mn1.Rs.B2.BondCon1.f;
//   Nand1.Mn1.Rs.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Rs.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Rs.El2BG1.BondCon1.e = Nand1.Mn1.Rs.El2BG1.p.v;
//   Nand1.Mn1.Rs.El2BG1.BondCon1.f = Nand1.Mn1.Rs.El2BG1.p.i;
//   Nand1.Mn1.Rs.BG2El1.BondCon1.e = Nand1.Mn1.Rs.BG2El1.n.v;
//   Nand1.Mn1.Rs.BG2El1.BondCon1.f = -Nand1.Mn1.Rs.BG2El1.n.i;
//   Nand1.Mn1.Rs.B3.BondCon2.e = Nand1.Mn1.Rs.B3.BondCon1.e;
//   Nand1.Mn1.Rs.B3.BondCon2.f = Nand1.Mn1.Rs.B3.BondCon1.f;
//   Nand1.Mn1.Rs.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Rs.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Rs.RM1.Rval = Nand1.Mn1.Rs.RM1.R * (1.0 + (Nand1.Mn1.Rs.RM1.TR1 * Nand1.Mn1.Rs.RM1.DTemp + Nand1.Mn1.Rs.RM1.TR2 * Nand1.Mn1.Rs.RM1.DTempSq));
//   Nand1.Mn1.Rs.RM1.e1 = Nand1.Mn1.Rs.RM1.Rval * Nand1.Mn1.Rs.RM1.f1;
//   Nand1.Mn1.Rs.RM1.e1 * Nand1.Mn1.Rs.RM1.f1 = Nand1.Mn1.Rs.RM1.e2 * Nand1.Mn1.Rs.RM1.f2;
//   Nand1.Mn1.Rs.RM1.DTempSq = Nand1.Mn1.Rs.RM1.DTemp ^ 2.0;
//   Nand1.Mn1.Rs.RM1.DTemp = Nand1.Mn1.Rs.RM1.e2 - Nand1.Mn1.Rs.RM1.Tnom;
//   Nand1.Mn1.Rs.RM1.e1 = Nand1.Mn1.Rs.RM1.BondCon1.e;
//   Nand1.Mn1.Rs.RM1.f1 = Nand1.Mn1.Rs.RM1.BondCon1.d * Nand1.Mn1.Rs.RM1.BondCon1.f;
//   Nand1.Mn1.Rs.RM1.e2 = Nand1.Mn1.Rs.RM1.BondCon2.e;
//   Nand1.Mn1.Rs.RM1.f2 = (-Nand1.Mn1.Rs.RM1.BondCon2.d) * Nand1.Mn1.Rs.RM1.BondCon2.f;
//   Nand1.Mn1.Rs.B4.fBondCon1.e = Nand1.Mn1.Rs.B4.eBondCon1.e;
//   Nand1.Mn1.Rs.B4.eBondCon1.f = Nand1.Mn1.Rs.B4.fBondCon1.f;
//   Nand1.Mn1.Rs.B4.fBondCon1.d = -1.0;
//   Nand1.Mn1.Rs.B4.eBondCon1.d = 1.0;
//   Nand1.Mn1.Rs.BG2Heat1.BondCon1.e = Nand1.Mn1.Rs.BG2Heat1.port_b.T;
//   Nand1.Mn1.Rs.BG2Heat1.BondCon1.e * Nand1.Mn1.Rs.BG2Heat1.BondCon1.f = -Nand1.Mn1.Rs.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Rs.v = Nand1.Mn1.Rs.p.v - Nand1.Mn1.Rs.n.v;
//   Nand1.Mn1.Rs.i = Nand1.Mn1.Rs.p.i;
//   Nand1.Mn1.T_nom.BG2Heat1.BondCon1.e = Nand1.Mn1.T_nom.BG2Heat1.port_b.T;
//   Nand1.Mn1.T_nom.BG2Heat1.BondCon1.e * Nand1.Mn1.T_nom.BG2Heat1.BondCon1.f = -Nand1.Mn1.T_nom.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.T_nom.Tabs.e0 = Nand1.Mn1.T_nom.Tabs.s;
//   Nand1.Mn1.T_nom.Tabs.e = Nand1.Mn1.T_nom.Tabs.e0;
//   Nand1.Mn1.T_nom.Tabs.e = Nand1.Mn1.T_nom.Tabs.BondCon1.e;
//   Nand1.Mn1.T_nom.Tabs.f = (-Nand1.Mn1.T_nom.Tabs.BondCon1.d) * Nand1.Mn1.T_nom.Tabs.BondCon1.f;
//   Nand1.Mn1.T_nom.B1.fBondCon1.e = Nand1.Mn1.T_nom.B1.eBondCon1.e;
//   Nand1.Mn1.T_nom.B1.eBondCon1.f = Nand1.Mn1.T_nom.B1.fBondCon1.f;
//   Nand1.Mn1.T_nom.B1.eBondCon1.d = -1.0;
//   Nand1.Mn1.T_nom.B1.fBondCon1.d = 1.0;
//   Nand1.Mn1.T_nom.Tabs.s = Nand1.Mn1.T_nom.T;
//   Nand1.Mn1.Sw1.B1.BondCon2.e = Nand1.Mn1.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Sw1.B1.BondCon2.f = Nand1.Mn1.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Sw1.B2.BondCon2.e = Nand1.Mn1.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Sw1.B2.BondCon2.f = Nand1.Mn1.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Sw1.B3.BondCon2.e = Nand1.Mn1.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Sw1.B3.BondCon2.f = Nand1.Mn1.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Sw1.Heat2BG1.BondCon1.e = Nand1.Mn1.Sw1.Heat2BG1.port_a.T;
//   Nand1.Mn1.Sw1.Heat2BG1.BondCon1.e * Nand1.Mn1.Sw1.Heat2BG1.BondCon1.f = Nand1.Mn1.Sw1.Heat2BG1.port_a.Q_flow;
//   Nand1.Mn1.Sw1.BG2Heat1.BondCon1.e = Nand1.Mn1.Sw1.BG2Heat1.port_b.T;
//   Nand1.Mn1.Sw1.BG2Heat1.BondCon1.e * Nand1.Mn1.Sw1.BG2Heat1.BondCon1.f = -Nand1.Mn1.Sw1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn1.Sw1.BG2Heat2.BondCon1.e = Nand1.Mn1.Sw1.BG2Heat2.port_b.T;
//   Nand1.Mn1.Sw1.BG2Heat2.BondCon1.e * Nand1.Mn1.Sw1.BG2Heat2.BondCon1.f = -Nand1.Mn1.Sw1.BG2Heat2.port_b.Q_flow;
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mn1.Sw1.Sw1.J1p3_1.f[1];
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mn1.Sw1.Sw1.J1p3_1.f[2];
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.e[1] + (Nand1.Mn1.Sw1.Sw1.J1p3_1.e[2] + Nand1.Mn1.Sw1.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.e[1] = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.d * Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.f[1] = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.e[2] = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.d * Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.e[3] = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.d * Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon2.e = Nand1.Mn1.Sw1.Sw1.B1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon2.f = Nand1.Mn1.Sw1.Sw1.B1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon2.e = Nand1.Mn1.Sw1.Sw1.B2.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon2.f = Nand1.Mn1.Sw1.Sw1.B2.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mn1.Sw1.Sw1.J0p3_1.e[1];
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mn1.Sw1.Sw1.J0p3_1.e[2];
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.f[1] + (Nand1.Mn1.Sw1.Sw1.J0p3_1.f[2] + Nand1.Mn1.Sw1.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.e[1] = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.f[1] = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.d * Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.f[2] = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.d * Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.f[3] = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.d * Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon2.e = Nand1.Mn1.Sw1.Sw1.B4.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon2.f = Nand1.Mn1.Sw1.Sw1.B4.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.e2 = Nand1.Mn1.Sw1.Sw1.j0p2_1.e1;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.f1 + Nand1.Mn1.Sw1.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.e1 = Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.f1 = Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.d * Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.e2 = Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.f2 = Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.d * Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.e2 = Nand1.Mn1.Sw1.Sw1.j0p2_2.e1;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.f1 + Nand1.Mn1.Sw1.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.e1 = Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.f1 = Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.d * Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.e2 = Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.f2 = Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.d * Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn1.Sw1.Sw1.Sw1.open = Nand1.Mn1.Sw1.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn1.Sw1.Sw1.Sw1.open then Nand1.Mn1.Sw1.Sw1.Sw1.f else Nand1.Mn1.Sw1.Sw1.Sw1.e;
//   Nand1.Mn1.Sw1.Sw1.Sw1.e = Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.Sw1.f = Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.d * Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon2.e = Nand1.Mn1.Sw1.Sw1.B3.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon2.f = Nand1.Mn1.Sw1.Sw1.B3.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn1.Sw1.control = true;
//   Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Ids.El2BG1.p.v;
//   Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Ids.El2BG1.p.i;
//   Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Ids.BG2El1.n.v;
//   Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Ids.BG2El1.n.i;
//   Nand1.Mn2.Mni.Ids.J1p3_1.f[2] = Nand1.Mn2.Mni.Ids.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Ids.J1p3_1.f[3] = Nand1.Mn2.Mni.Ids.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Ids.J1p3_1.e[1] + (Nand1.Mn2.Mni.Ids.J1p3_1.e[2] + Nand1.Mn2.Mni.Ids.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Ids.J1p3_1.e[1] = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.J1p3_1.f[1] = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.J1p3_1.e[2] = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Ids.J1p3_1.f[2] = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Ids.J1p3_1.e[3] = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Ids.J1p3_1.f[3] = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Ids.B1.BondCon2.e = Nand1.Mn2.Mni.Ids.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.B1.BondCon2.f = Nand1.Mn2.Mni.Ids.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Ids.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Ids.B2.BondCon2.e = Nand1.Mn2.Mni.Ids.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.B2.BondCon2.f = Nand1.Mn2.Mni.Ids.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Ids.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Ids.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Ids.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Ids.B4.fBondCon1.e = Nand1.Mn2.Mni.Ids.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Ids.B4.eBondCon1.f = Nand1.Mn2.Mni.Ids.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Ids.B4.eBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Ids.B4.fBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Ids.B3.fBondCon1.e = Nand1.Mn2.Mni.Ids.B3.eBondCon1.e;
//   Nand1.Mn2.Mni.Ids.B3.eBondCon1.f = Nand1.Mn2.Mni.Ids.B3.fBondCon1.f;
//   Nand1.Mn2.Mni.Ids.B3.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Ids.B3.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Ids.I1.f0 = Nand1.Mn2.Mni.Ids.I1.s;
//   Nand1.Mn2.Mni.Ids.I1.f2 = Nand1.Mn2.Mni.Ids.I1.f0;
//   Nand1.Mn2.Mni.Ids.I1.e1 * Nand1.Mn2.Mni.Ids.I1.f1 = Nand1.Mn2.Mni.Ids.I1.e2 * Nand1.Mn2.Mni.Ids.I1.f2;
//   Nand1.Mn2.Mni.Ids.I1.e1 = Nand1.Mn2.Mni.Ids.I1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.I1.f1 = Nand1.Mn2.Mni.Ids.I1.BondCon1.d * Nand1.Mn2.Mni.Ids.I1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.I1.e2 = Nand1.Mn2.Mni.Ids.I1.BondCon2.e;
//   Nand1.Mn2.Mni.Ids.I1.f2 = (-Nand1.Mn2.Mni.Ids.I1.BondCon2.d) * Nand1.Mn2.Mni.Ids.I1.BondCon2.f;
//   Nand1.Mn2.Mni.Ids.v = Nand1.Mn2.Mni.Ids.p.v - Nand1.Mn2.Mni.Ids.n.v;
//   Nand1.Mn2.Mni.Ids.i = Nand1.Mn2.Mni.Ids.p.i;
//   if noEvent(Nand1.Mn2.Mni.IDS0.u1 > 0.0) then
//   Nand1.Mn2.Mni.IDS0.sig = 1.0;
//   Nand1.Mn2.Mni.IDS0.vds = Nand1.Mn2.Mni.IDS0.u1;
//   Nand1.Mn2.Mni.IDS0.vgs = Nand1.Mn2.Mni.IDS0.u2;
//   Nand1.Mn2.Mni.IDS0.vbs = Nand1.Mn2.Mni.IDS0.u3;
//   else
//   Nand1.Mn2.Mni.IDS0.sig = -1.0;
//   Nand1.Mn2.Mni.IDS0.vds = -Nand1.Mn2.Mni.IDS0.u1;
//   Nand1.Mn2.Mni.IDS0.vgs = Nand1.Mn2.Mni.IDS0.u2 - Nand1.Mn2.Mni.IDS0.u1;
//   Nand1.Mn2.Mni.IDS0.vbs = Nand1.Mn2.Mni.IDS0.u3 - Nand1.Mn2.Mni.IDS0.u1;
//   end if;
//   (Nand1.Mn2.Mni.IDS0.ids,Nand1.Mn2.Mni.IDS0.Vfb,Nand1.Mn2.Mni.IDS0.Vth,Nand1.Mn2.Mni.IDS0.vdsat,Nand1.Mn2.Mni.IDS0.vpof) = BondLib.Spice.Utilities.MOSeq3(Nand1.Mn2.Mni.IDS0.vds,Nand1.Mn2.Mni.IDS0.vgs,Nand1.Mn2.Mni.IDS0.vbs,Nand1.Mn2.Mni.IDS0.Tdev,Nand1.Mn2.Mni.IDS0.sig,Nand1.Mn2.Mni.IDS0.Type,Nand1.Mn2.Mni.IDS0.Tnom,Nand1.Mn2.Mni.IDS0.VFB,Nand1.Mn2.Mni.IDS0.KP,Nand1.Mn2.Mni.IDS0.GAMMA,Nand1.Mn2.Mni.IDS0.PHI,Nand1.Mn2.Mni.IDS0.COX,Nand1.Mn2.Mni.IDS0.NFS,Nand1.Mn2.Mni.IDS0.XJ,Nand1.Mn2.Mni.IDS0.L,Nand1.Mn2.Mni.IDS0.W,Nand1.Mn2.Mni.IDS0.LD,Nand1.Mn2.Mni.IDS0.XD,Nand1.Mn2.Mni.IDS0.U0,Nand1.Mn2.Mni.IDS0.VMAX,Nand1.Mn2.Mni.IDS0.DELTA,Nand1.Mn2.Mni.IDS0.KAPPA,Nand1.Mn2.Mni.IDS0.ETA,Nand1.Mn2.Mni.IDS0.THETA,Nand1.Mn2.Mni.IDS0.EG,Nand1.Mn2.Mni.IDS0.EMin,Nand1.Mn2.Mni.IDS0.EMax);
//   Nand1.Mn2.Mni.IDS0.vdsat1 = 0.0;
//   Nand1.Mn2.Mni.IDS0.y = Nand1.Mn2.Mni.IDS0.ids;
//   Nand1.Mn2.Mni.IDS0.y1[1] = Nand1.Mn2.Mni.IDS0.Vfb;
//   Nand1.Mn2.Mni.IDS0.y1[2] = Nand1.Mn2.Mni.IDS0.Vth;
//   Nand1.Mn2.Mni.IDS0.y1[3] = Nand1.Mn2.Mni.IDS0.vdsat;
//   Nand1.Mn2.Mni.IDS0.y1[4] = Nand1.Mn2.Mni.IDS0.vdsat1;
//   Nand1.Mn2.Mni.IDS0.y1[5] = Nand1.Mn2.Mni.IDS0.vpof;
//   Nand1.Mn2.Mni.Tdev1.T = Nand1.Mn2.Mni.Tdev1.port.T;
//   Nand1.Mn2.Mni.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Vds.J1p3_1.f[2] = Nand1.Mn2.Mni.Vds.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Vds.J1p3_1.f[3] = Nand1.Mn2.Mni.Vds.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Vds.J1p3_1.e[1] + (Nand1.Mn2.Mni.Vds.J1p3_1.e[2] + Nand1.Mn2.Mni.Vds.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Vds.J1p3_1.e[1] = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.J1p3_1.f[1] = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.J1p3_1.e[2] = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Vds.J1p3_1.f[2] = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Vds.J1p3_1.e[3] = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Vds.J1p3_1.f[3] = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Vds.B1.BondCon2.e = Nand1.Mn2.Mni.Vds.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.B1.BondCon2.f = Nand1.Mn2.Mni.Vds.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vds.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vds.B2.BondCon2.e = Nand1.Mn2.Mni.Vds.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.B2.BondCon2.f = Nand1.Mn2.Mni.Vds.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vds.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Vds.El2BG1.p.v;
//   Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Vds.El2BG1.p.i;
//   Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Vds.BG2El1.n.v;
//   Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Vds.BG2El1.n.i;
//   Nand1.Mn2.Mni.Vds.De1.OutPort1 = Nand1.Mn2.Mni.Vds.De1.e;
//   Nand1.Mn2.Mni.Vds.De1.f = 0.0;
//   Nand1.Mn2.Mni.Vds.De1.e = Nand1.Mn2.Mni.Vds.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.De1.f = Nand1.Mn2.Mni.Vds.De1.BondCon1.d * Nand1.Mn2.Mni.Vds.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B3.BondCon2.e = Nand1.Mn2.Mni.Vds.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.B3.BondCon2.f = Nand1.Mn2.Mni.Vds.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vds.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vds.v = Nand1.Mn2.Mni.Vds.p.v - Nand1.Mn2.Mni.Vds.n.v;
//   Nand1.Mn2.Mni.Vds.i = Nand1.Mn2.Mni.Vds.p.i;
//   Nand1.Mn2.Mni.Vgs.J1p3_1.f[2] = Nand1.Mn2.Mni.Vgs.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Vgs.J1p3_1.f[3] = Nand1.Mn2.Mni.Vgs.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Vgs.J1p3_1.e[1] + (Nand1.Mn2.Mni.Vgs.J1p3_1.e[2] + Nand1.Mn2.Mni.Vgs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Vgs.J1p3_1.e[1] = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.J1p3_1.f[1] = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.J1p3_1.e[2] = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Vgs.J1p3_1.f[2] = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Vgs.J1p3_1.e[3] = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Vgs.J1p3_1.f[3] = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon2.e = Nand1.Mn2.Mni.Vgs.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon2.f = Nand1.Mn2.Mni.Vgs.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon2.e = Nand1.Mn2.Mni.Vgs.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon2.f = Nand1.Mn2.Mni.Vgs.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Vgs.El2BG1.p.v;
//   Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Vgs.El2BG1.p.i;
//   Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Vgs.BG2El1.n.v;
//   Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Vgs.BG2El1.n.i;
//   Nand1.Mn2.Mni.Vgs.De1.OutPort1 = Nand1.Mn2.Mni.Vgs.De1.e;
//   Nand1.Mn2.Mni.Vgs.De1.f = 0.0;
//   Nand1.Mn2.Mni.Vgs.De1.e = Nand1.Mn2.Mni.Vgs.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.De1.f = Nand1.Mn2.Mni.Vgs.De1.BondCon1.d * Nand1.Mn2.Mni.Vgs.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon2.e = Nand1.Mn2.Mni.Vgs.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon2.f = Nand1.Mn2.Mni.Vgs.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vgs.v = Nand1.Mn2.Mni.Vgs.p.v - Nand1.Mn2.Mni.Vgs.n.v;
//   Nand1.Mn2.Mni.Vgs.i = Nand1.Mn2.Mni.Vgs.p.i;
//   Nand1.Mn2.Mni.Rgs.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgs.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rgs.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgs.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rgs.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rgs.J1p3_1.e[2] + Nand1.Mn2.Mni.Rgs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgs.J1p3_1.e[1] = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.J1p3_1.f[1] = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.J1p3_1.e[2] = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.J1p3_1.e[3] = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgs.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon2.e = Nand1.Mn2.Mni.Rgs.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon2.f = Nand1.Mn2.Mni.Rgs.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon2.e = Nand1.Mn2.Mni.Rgs.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon2.f = Nand1.Mn2.Mni.Rgs.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon2.e = Nand1.Mn2.Mni.Rgs.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon2.f = Nand1.Mn2.Mni.Rgs.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Rgs.El2BG1.p.v;
//   Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Rgs.El2BG1.p.i;
//   Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Rgs.BG2El1.n.v;
//   Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Rgs.BG2El1.n.i;
//   Nand1.Mn2.Mni.Rgs.B6.fBondCon1.e = Nand1.Mn2.Mni.Rgs.B6.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B6.eBondCon1.f = Nand1.Mn2.Mni.Rgs.B6.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B6.eBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.B6.fBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.T_nom.e = Nand1.Mn2.Mni.Rgs.T_nom.e0;
//   Nand1.Mn2.Mni.Rgs.T_nom.e = Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.T_nom.f = (-Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.d) * Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.R1.Rval = (Nand1.Mn2.Mni.Rgs.R1.R * (1.0 + (Nand1.Mn2.Mni.Rgs.R1.TR1 * Nand1.Mn2.Mni.Rgs.R1.DTemp + Nand1.Mn2.Mni.Rgs.R1.TR2 * Nand1.Mn2.Mni.Rgs.R1.DTempSq))) / Nand1.Mn2.Mni.Rgs.R1.Area;
//   Nand1.Mn2.Mni.Rgs.R1.e1 = Nand1.Mn2.Mni.Rgs.R1.Rval * Nand1.Mn2.Mni.Rgs.R1.f1;
//   Nand1.Mn2.Mni.Rgs.R1.e1 * Nand1.Mn2.Mni.Rgs.R1.f1 = Nand1.Mn2.Mni.Rgs.R1.e2 * Nand1.Mn2.Mni.Rgs.R1.f2;
//   Nand1.Mn2.Mni.Rgs.R1.DTempSq = Nand1.Mn2.Mni.Rgs.R1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Rgs.R1.DTemp = Nand1.Mn2.Mni.Rgs.R1.e2 - Nand1.Mn2.Mni.Rgs.R1.Tnom;
//   Nand1.Mn2.Mni.Rgs.R1.e1 = Nand1.Mn2.Mni.Rgs.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.R1.f1 = Nand1.Mn2.Mni.Rgs.R1.BondCon1.d * Nand1.Mn2.Mni.Rgs.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.R1.e2 = Nand1.Mn2.Mni.Rgs.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.R1.f2 = (-Nand1.Mn2.Mni.Rgs.R1.BondCon2.d) * Nand1.Mn2.Mni.Rgs.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.B4.fBondCon1.e = Nand1.Mn2.Mni.Rgs.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B4.eBondCon1.f = Nand1.Mn2.Mni.Rgs.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[2] + Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[1] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[1] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[2] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.e[3] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[1];
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[2];
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[1] + (Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[2] + Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[1] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[1] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[2] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.f[3] = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.e1;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.f1 + Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.e1 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.f1 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.d * Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.f2 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.d * Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.e1;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.f1 + Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.e1 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.f1 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.d * Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.f2 = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.d * Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.Sw1.open = Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn2.Mni.Rgs.Sw1.Sw1.open then Nand1.Mn2.Mni.Rgs.Sw1.Sw1.f else Nand1.Mn2.Mni.Rgs.Sw1.Sw1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.Sw1.e = Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.Sw1.f = Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.d * Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.B5.fBondCon1.e = Nand1.Mn2.Mni.Rgs.B5.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B5.eBondCon1.f = Nand1.Mn2.Mni.Rgs.B5.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B5.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgs.B5.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Rgs.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Rgs.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Rgs.Sw1.control = true;
//   Nand1.Mn2.Mni.Rgs.v = Nand1.Mn2.Mni.Rgs.p.v - Nand1.Mn2.Mni.Rgs.n.v;
//   Nand1.Mn2.Mni.Rgs.i = Nand1.Mn2.Mni.Rgs.p.i;
//   Nand1.Mn2.Mni.Vbs.J1p3_1.f[2] = Nand1.Mn2.Mni.Vbs.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Vbs.J1p3_1.f[3] = Nand1.Mn2.Mni.Vbs.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Vbs.J1p3_1.e[1] + (Nand1.Mn2.Mni.Vbs.J1p3_1.e[2] + Nand1.Mn2.Mni.Vbs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Vbs.J1p3_1.e[1] = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.J1p3_1.f[1] = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.J1p3_1.e[2] = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Vbs.J1p3_1.f[2] = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Vbs.J1p3_1.e[3] = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Vbs.J1p3_1.f[3] = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon2.e = Nand1.Mn2.Mni.Vbs.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon2.f = Nand1.Mn2.Mni.Vbs.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon2.e = Nand1.Mn2.Mni.Vbs.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon2.f = Nand1.Mn2.Mni.Vbs.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Vbs.El2BG1.p.v;
//   Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Vbs.El2BG1.p.i;
//   Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Vbs.BG2El1.n.v;
//   Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Vbs.BG2El1.n.i;
//   Nand1.Mn2.Mni.Vbs.De1.OutPort1 = Nand1.Mn2.Mni.Vbs.De1.e;
//   Nand1.Mn2.Mni.Vbs.De1.f = 0.0;
//   Nand1.Mn2.Mni.Vbs.De1.e = Nand1.Mn2.Mni.Vbs.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.De1.f = Nand1.Mn2.Mni.Vbs.De1.BondCon1.d * Nand1.Mn2.Mni.Vbs.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon2.e = Nand1.Mn2.Mni.Vbs.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon2.f = Nand1.Mn2.Mni.Vbs.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Vbs.v = Nand1.Mn2.Mni.Vbs.p.v - Nand1.Mn2.Mni.Vbs.n.v;
//   Nand1.Mn2.Mni.Vbs.i = Nand1.Mn2.Mni.Vbs.p.i;
//   Nand1.Mn2.Mni.Dbs.nlCM1.v = Nand1.Mn2.Mni.Dbs.nlCM1.u;
//   Nand1.Mn2.Mni.Dbs.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mn2.Mni.Dbs.nlCM1.Tdev;
//   Nand1.Mn2.Mni.Dbs.nlCM1.DTemp = Nand1.Mn2.Mni.Dbs.nlCM1.Tdev - Nand1.Mn2.Mni.Dbs.nlCM1.Tnom;
//   Nand1.Mn2.Mni.Dbs.nlCM1.RTemp = Nand1.Mn2.Mni.Dbs.nlCM1.Tdev / Nand1.Mn2.Mni.Dbs.nlCM1.Tnom;
//   Nand1.Mn2.Mni.Dbs.nlCM1.EGval = Nand1.Mn2.Mni.Dbs.nlCM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbs.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbs.nlCM1.Tdev);
//   Nand1.Mn2.Mni.Dbs.nlCM1.EGnom = Nand1.Mn2.Mni.Dbs.nlCM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbs.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbs.nlCM1.Tnom);
//   Nand1.Mn2.Mni.Dbs.nlCM1.PBval = Nand1.Mn2.Mni.Dbs.nlCM1.PB * Nand1.Mn2.Mni.Dbs.nlCM1.RTemp + (Nand1.Mn2.Mni.Dbs.nlCM1.EGval + (-3.0 * (Nand1.Mn2.Mni.Dbs.nlCM1.Vt * log(Nand1.Mn2.Mni.Dbs.nlCM1.RTemp)) - Nand1.Mn2.Mni.Dbs.nlCM1.EGnom * Nand1.Mn2.Mni.Dbs.nlCM1.RTemp));
//   Nand1.Mn2.Mni.Dbs.nlCM1.CJval = Nand1.Mn2.Mni.Dbs.nlCM1.CJ * (1.0 + Nand1.Mn2.Mni.Dbs.nlCM1.MJ * (1.0 + ((-Nand1.Mn2.Mni.Dbs.nlCM1.PBval) / Nand1.Mn2.Mni.Dbs.nlCM1.PB + 0.0004 * Nand1.Mn2.Mni.Dbs.nlCM1.DTemp)));
//   Nand1.Mn2.Mni.Dbs.nlCM1.CJSWval = Nand1.Mn2.Mni.Dbs.nlCM1.CJSW * (1.0 + Nand1.Mn2.Mni.Dbs.nlCM1.MJSW * (1.0 + ((-Nand1.Mn2.Mni.Dbs.nlCM1.PBval) / Nand1.Mn2.Mni.Dbs.nlCM1.PB + 0.0004 * Nand1.Mn2.Mni.Dbs.nlCM1.DTemp)));
//   Nand1.Mn2.Mni.Dbs.nlCM1.Cbulk = Nand1.Mn2.Mni.Dbs.nlCM1.CJval * (if Nand1.Mn2.Mni.Dbs.nlCM1.v > Nand1.Mn2.Mni.Dbs.nlCM1.FC * Nand1.Mn2.Mni.Dbs.nlCM1.PBval then (1.0 + ((Nand1.Mn2.Mni.Dbs.nlCM1.MJ * Nand1.Mn2.Mni.Dbs.nlCM1.v) / Nand1.Mn2.Mni.Dbs.nlCM1.PBval - Nand1.Mn2.Mni.Dbs.nlCM1.FC * (1.0 + Nand1.Mn2.Mni.Dbs.nlCM1.MJ))) * (1.0 - Nand1.Mn2.Mni.Dbs.nlCM1.FC) ^ (-1.0 - Nand1.Mn2.Mni.Dbs.nlCM1.MJ) else abs(1.0 + (-Nand1.Mn2.Mni.Dbs.nlCM1.v) / Nand1.Mn2.Mni.Dbs.nlCM1.PBval) ^ (-Nand1.Mn2.Mni.Dbs.nlCM1.MJ));
//   Nand1.Mn2.Mni.Dbs.nlCM1.Cperi = Nand1.Mn2.Mni.Dbs.nlCM1.CJSWval * (if Nand1.Mn2.Mni.Dbs.nlCM1.v > Nand1.Mn2.Mni.Dbs.nlCM1.FC * Nand1.Mn2.Mni.Dbs.nlCM1.PBval then (1.0 + ((Nand1.Mn2.Mni.Dbs.nlCM1.MJSW * Nand1.Mn2.Mni.Dbs.nlCM1.v) / Nand1.Mn2.Mni.Dbs.nlCM1.PBval - Nand1.Mn2.Mni.Dbs.nlCM1.FC * (1.0 + Nand1.Mn2.Mni.Dbs.nlCM1.MJSW))) * (1.0 - Nand1.Mn2.Mni.Dbs.nlCM1.FC) ^ (-1.0 - Nand1.Mn2.Mni.Dbs.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mn2.Mni.Dbs.nlCM1.v) / Nand1.Mn2.Mni.Dbs.nlCM1.PBval) ^ (-Nand1.Mn2.Mni.Dbs.nlCM1.MJSW));
//   Nand1.Mn2.Mni.Dbs.nlCM1.Cval = if Nand1.Mn2.Mni.Dbs.nlCM1.A * Nand1.Mn2.Mni.Dbs.nlCM1.Cbulk + Nand1.Mn2.Mni.Dbs.nlCM1.P * Nand1.Mn2.Mni.Dbs.nlCM1.Cperi > 0.0 then Nand1.Mn2.Mni.Dbs.nlCM1.A * Nand1.Mn2.Mni.Dbs.nlCM1.Cbulk + Nand1.Mn2.Mni.Dbs.nlCM1.P * Nand1.Mn2.Mni.Dbs.nlCM1.Cperi else 1e-16;
//   Nand1.Mn2.Mni.Dbs.nlCM1.y = Nand1.Mn2.Mni.Dbs.nlCM1.Cval;
//   Nand1.Mn2.Mni.Dbs.Tdev1.T = Nand1.Mn2.Mni.Dbs.Tdev1.port.T;
//   Nand1.Mn2.Mni.Dbs.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbs.Rd.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.T_nom.e = Nand1.Mn2.Mni.Dbs.Rd.T_nom.e0;
//   Nand1.Mn2.Mni.Dbs.Rd.T_nom.e = Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.T_nom.f = (-Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.d) * Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.Rval = (Nand1.Mn2.Mni.Dbs.Rd.R1.R * (1.0 + (Nand1.Mn2.Mni.Dbs.Rd.R1.TR1 * Nand1.Mn2.Mni.Dbs.Rd.R1.DTemp + Nand1.Mn2.Mni.Dbs.Rd.R1.TR2 * Nand1.Mn2.Mni.Dbs.Rd.R1.DTempSq))) / Nand1.Mn2.Mni.Dbs.Rd.R1.Area;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.e1 = Nand1.Mn2.Mni.Dbs.Rd.R1.Rval * Nand1.Mn2.Mni.Dbs.Rd.R1.f1;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.e1 * Nand1.Mn2.Mni.Dbs.Rd.R1.f1 = Nand1.Mn2.Mni.Dbs.Rd.R1.e2 * Nand1.Mn2.Mni.Dbs.Rd.R1.f2;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.DTempSq = Nand1.Mn2.Mni.Dbs.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.DTemp = Nand1.Mn2.Mni.Dbs.Rd.R1.e2 - Nand1.Mn2.Mni.Dbs.Rd.R1.Tnom;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.e1 = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.f1 = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.e2 = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.R1.f2 = (-Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.d) * Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[2] + Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[1] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[1] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[2] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.f[3] = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.f1 + Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.e1 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.f1 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.f2 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.f1 + Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.e1 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.f1 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.f2 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.open = Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.open then Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.f else Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.control = true;
//   Nand1.Mn2.Mni.Dbs.Rd.v = Nand1.Mn2.Mni.Dbs.Rd.p.v - Nand1.Mn2.Mni.Dbs.Rd.n.v;
//   Nand1.Mn2.Mni.Dbs.Rd.i = Nand1.Mn2.Mni.Dbs.Rd.p.i;
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.RTemp = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2 / Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Tnom;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EGval = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2);
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EGnom = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Tnom);
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.ISval = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.IS * exp((Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EGval - Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EGnom * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.RTemp) / Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Vt);
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.et = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e1 / Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Vt;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.f1 = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.ISval * (if noEvent(Nand1.Mn2.Mni.Dbs.DjM1.DjM1.et < Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMin) then Nand1.Mn2.Mni.Dbs.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mn2.Mni.Dbs.DjM1.DjM1.et - Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mn2.Mni.Dbs.DjM1.DjM1.et > Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMax) then Nand1.Mn2.Mni.Dbs.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mn2.Mni.Dbs.DjM1.DjM1.et - Nand1.Mn2.Mni.Dbs.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mn2.Mni.Dbs.DjM1.DjM1.et) + -1.0);
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2 * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.f2 = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e1 * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.f1;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.DTempSq = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.DTemp = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2 - Nand1.Mn2.Mni.Dbs.DjM1.DjM1.Tnom;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e1 = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.f1 = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.d * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.e2 = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.DjM1.f2 = (-Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.d) * Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Dbs.DjM1.v = Nand1.Mn2.Mni.Dbs.DjM1.p.v - Nand1.Mn2.Mni.Dbs.DjM1.n.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.i = Nand1.Mn2.Mni.Dbs.DjM1.p.i;
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Vd.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbs.Vd.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Vd.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbs.Vd.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbs.Vd.De1.OutPort1 = Nand1.Mn2.Mni.Dbs.Vd.De1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.De1.f = 0.0;
//   Nand1.Mn2.Mni.Dbs.Vd.De1.e = Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.De1.f = Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.d * Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.Vd.v = Nand1.Mn2.Mni.Dbs.Vd.p.v - Nand1.Mn2.Mni.Dbs.Vd.n.v;
//   Nand1.Mn2.Mni.Dbs.Vd.i = Nand1.Mn2.Mni.Dbs.Vd.p.i;
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.mC1.C = Nand1.Mn2.Mni.Dbs.VarC1.mC1.s;
//   Nand1.Mn2.Mni.Dbs.VarC1.mC1.f = Nand1.Mn2.Mni.Dbs.VarC1.mC1.C * der(Nand1.Mn2.Mni.Dbs.VarC1.mC1.e);
//   Nand1.Mn2.Mni.Dbs.VarC1.mC1.e = Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.mC1.f = Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.d * Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.v = Nand1.Mn2.Mni.Dbs.VarC1.p.v - Nand1.Mn2.Mni.Dbs.VarC1.n.v;
//   Nand1.Mn2.Mni.Dbs.VarC1.i = Nand1.Mn2.Mni.Dbs.VarC1.p.i;
//   Nand1.Mn2.Mni.Dbs.v = Nand1.Mn2.Mni.Dbs.p.v - Nand1.Mn2.Mni.Dbs.n.v;
//   Nand1.Mn2.Mni.Dbs.i = Nand1.Mn2.Mni.Dbs.p.i;
//   Nand1.Mn2.Mni.Rgd.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgd.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rgd.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgd.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rgd.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rgd.J1p3_1.e[2] + Nand1.Mn2.Mni.Rgd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgd.J1p3_1.e[1] = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.J1p3_1.f[1] = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.J1p3_1.e[2] = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.J1p3_1.e[3] = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgd.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon2.e = Nand1.Mn2.Mni.Rgd.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon2.f = Nand1.Mn2.Mni.Rgd.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon2.e = Nand1.Mn2.Mni.Rgd.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon2.f = Nand1.Mn2.Mni.Rgd.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon2.e = Nand1.Mn2.Mni.Rgd.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon2.f = Nand1.Mn2.Mni.Rgd.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Rgd.El2BG1.p.v;
//   Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Rgd.El2BG1.p.i;
//   Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Rgd.BG2El1.n.v;
//   Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Rgd.BG2El1.n.i;
//   Nand1.Mn2.Mni.Rgd.B6.fBondCon1.e = Nand1.Mn2.Mni.Rgd.B6.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B6.eBondCon1.f = Nand1.Mn2.Mni.Rgd.B6.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B6.eBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.B6.fBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.T_nom.e = Nand1.Mn2.Mni.Rgd.T_nom.e0;
//   Nand1.Mn2.Mni.Rgd.T_nom.e = Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.T_nom.f = (-Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.d) * Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.R1.Rval = (Nand1.Mn2.Mni.Rgd.R1.R * (1.0 + (Nand1.Mn2.Mni.Rgd.R1.TR1 * Nand1.Mn2.Mni.Rgd.R1.DTemp + Nand1.Mn2.Mni.Rgd.R1.TR2 * Nand1.Mn2.Mni.Rgd.R1.DTempSq))) / Nand1.Mn2.Mni.Rgd.R1.Area;
//   Nand1.Mn2.Mni.Rgd.R1.e1 = Nand1.Mn2.Mni.Rgd.R1.Rval * Nand1.Mn2.Mni.Rgd.R1.f1;
//   Nand1.Mn2.Mni.Rgd.R1.e1 * Nand1.Mn2.Mni.Rgd.R1.f1 = Nand1.Mn2.Mni.Rgd.R1.e2 * Nand1.Mn2.Mni.Rgd.R1.f2;
//   Nand1.Mn2.Mni.Rgd.R1.DTempSq = Nand1.Mn2.Mni.Rgd.R1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Rgd.R1.DTemp = Nand1.Mn2.Mni.Rgd.R1.e2 - Nand1.Mn2.Mni.Rgd.R1.Tnom;
//   Nand1.Mn2.Mni.Rgd.R1.e1 = Nand1.Mn2.Mni.Rgd.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.R1.f1 = Nand1.Mn2.Mni.Rgd.R1.BondCon1.d * Nand1.Mn2.Mni.Rgd.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.R1.e2 = Nand1.Mn2.Mni.Rgd.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.R1.f2 = (-Nand1.Mn2.Mni.Rgd.R1.BondCon2.d) * Nand1.Mn2.Mni.Rgd.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.B4.fBondCon1.e = Nand1.Mn2.Mni.Rgd.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B4.eBondCon1.f = Nand1.Mn2.Mni.Rgd.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[2] + Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[1] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[1] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[2] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.e[3] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[1];
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[2];
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[1] + (Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[2] + Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[1] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[1] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[2] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.f[3] = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.e1;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.f1 + Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.e1 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.f1 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.d * Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.f2 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.d * Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.e1;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.f1 + Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.e1 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.f1 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.d * Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.f2 = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.d * Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.Sw1.open = Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn2.Mni.Rgd.Sw1.Sw1.open then Nand1.Mn2.Mni.Rgd.Sw1.Sw1.f else Nand1.Mn2.Mni.Rgd.Sw1.Sw1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.Sw1.e = Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.Sw1.f = Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.d * Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.B5.fBondCon1.e = Nand1.Mn2.Mni.Rgd.B5.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B5.eBondCon1.f = Nand1.Mn2.Mni.Rgd.B5.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B5.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgd.B5.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Rgd.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Rgd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Rgd.Sw1.control = true;
//   Nand1.Mn2.Mni.Rgd.v = Nand1.Mn2.Mni.Rgd.p.v - Nand1.Mn2.Mni.Rgd.n.v;
//   Nand1.Mn2.Mni.Rgd.i = Nand1.Mn2.Mni.Rgd.p.i;
//   Nand1.Mn2.Mni.Rgb.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgb.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rgb.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgb.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rgb.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rgb.J1p3_1.e[2] + Nand1.Mn2.Mni.Rgb.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgb.J1p3_1.e[1] = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.J1p3_1.f[1] = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.J1p3_1.e[2] = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.J1p3_1.e[3] = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgb.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon2.e = Nand1.Mn2.Mni.Rgb.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon2.f = Nand1.Mn2.Mni.Rgb.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon2.e = Nand1.Mn2.Mni.Rgb.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon2.f = Nand1.Mn2.Mni.Rgb.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon2.e = Nand1.Mn2.Mni.Rgb.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon2.f = Nand1.Mn2.Mni.Rgb.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Rgb.El2BG1.p.v;
//   Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Rgb.El2BG1.p.i;
//   Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Rgb.BG2El1.n.v;
//   Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Rgb.BG2El1.n.i;
//   Nand1.Mn2.Mni.Rgb.B6.fBondCon1.e = Nand1.Mn2.Mni.Rgb.B6.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B6.eBondCon1.f = Nand1.Mn2.Mni.Rgb.B6.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B6.eBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.B6.fBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.T_nom.e = Nand1.Mn2.Mni.Rgb.T_nom.e0;
//   Nand1.Mn2.Mni.Rgb.T_nom.e = Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.T_nom.f = (-Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.d) * Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.R1.Rval = (Nand1.Mn2.Mni.Rgb.R1.R * (1.0 + (Nand1.Mn2.Mni.Rgb.R1.TR1 * Nand1.Mn2.Mni.Rgb.R1.DTemp + Nand1.Mn2.Mni.Rgb.R1.TR2 * Nand1.Mn2.Mni.Rgb.R1.DTempSq))) / Nand1.Mn2.Mni.Rgb.R1.Area;
//   Nand1.Mn2.Mni.Rgb.R1.e1 = Nand1.Mn2.Mni.Rgb.R1.Rval * Nand1.Mn2.Mni.Rgb.R1.f1;
//   Nand1.Mn2.Mni.Rgb.R1.e1 * Nand1.Mn2.Mni.Rgb.R1.f1 = Nand1.Mn2.Mni.Rgb.R1.e2 * Nand1.Mn2.Mni.Rgb.R1.f2;
//   Nand1.Mn2.Mni.Rgb.R1.DTempSq = Nand1.Mn2.Mni.Rgb.R1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Rgb.R1.DTemp = Nand1.Mn2.Mni.Rgb.R1.e2 - Nand1.Mn2.Mni.Rgb.R1.Tnom;
//   Nand1.Mn2.Mni.Rgb.R1.e1 = Nand1.Mn2.Mni.Rgb.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.R1.f1 = Nand1.Mn2.Mni.Rgb.R1.BondCon1.d * Nand1.Mn2.Mni.Rgb.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.R1.e2 = Nand1.Mn2.Mni.Rgb.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.R1.f2 = (-Nand1.Mn2.Mni.Rgb.R1.BondCon2.d) * Nand1.Mn2.Mni.Rgb.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.B4.fBondCon1.e = Nand1.Mn2.Mni.Rgb.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B4.eBondCon1.f = Nand1.Mn2.Mni.Rgb.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[2] + Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[1] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[1] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[2] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.e[3] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[1];
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[2];
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[1] + (Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[2] + Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[1] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[1] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.d * Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[2] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.d * Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.f[3] = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.d * Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.e1;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.f1 + Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.e1 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.f1 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.d * Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.f2 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.d * Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.e1;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.f1 + Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.e1 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.f1 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.d * Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.f2 = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.d * Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.Sw1.open = Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn2.Mni.Rgb.Sw1.Sw1.open then Nand1.Mn2.Mni.Rgb.Sw1.Sw1.f else Nand1.Mn2.Mni.Rgb.Sw1.Sw1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.Sw1.e = Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.Sw1.f = Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.d * Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.B5.fBondCon1.e = Nand1.Mn2.Mni.Rgb.B5.eBondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B5.eBondCon1.f = Nand1.Mn2.Mni.Rgb.B5.fBondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B5.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rgb.B5.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Rgb.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Rgb.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Rgb.Sw1.control = true;
//   Nand1.Mn2.Mni.Rgb.v = Nand1.Mn2.Mni.Rgb.p.v - Nand1.Mn2.Mni.Rgb.n.v;
//   Nand1.Mn2.Mni.Rgb.i = Nand1.Mn2.Mni.Rgb.p.i;
//   Nand1.Mn2.Mni.Dbd.nlCM1.v = Nand1.Mn2.Mni.Dbd.nlCM1.u;
//   Nand1.Mn2.Mni.Dbd.nlCM1.Vt = 8.61727503842867e-05 * Nand1.Mn2.Mni.Dbd.nlCM1.Tdev;
//   Nand1.Mn2.Mni.Dbd.nlCM1.DTemp = Nand1.Mn2.Mni.Dbd.nlCM1.Tdev - Nand1.Mn2.Mni.Dbd.nlCM1.Tnom;
//   Nand1.Mn2.Mni.Dbd.nlCM1.RTemp = Nand1.Mn2.Mni.Dbd.nlCM1.Tdev / Nand1.Mn2.Mni.Dbd.nlCM1.Tnom;
//   Nand1.Mn2.Mni.Dbd.nlCM1.EGval = Nand1.Mn2.Mni.Dbd.nlCM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbd.nlCM1.Tdev ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbd.nlCM1.Tdev);
//   Nand1.Mn2.Mni.Dbd.nlCM1.EGnom = Nand1.Mn2.Mni.Dbd.nlCM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbd.nlCM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbd.nlCM1.Tnom);
//   Nand1.Mn2.Mni.Dbd.nlCM1.PBval = Nand1.Mn2.Mni.Dbd.nlCM1.PB * Nand1.Mn2.Mni.Dbd.nlCM1.RTemp + (Nand1.Mn2.Mni.Dbd.nlCM1.EGval + (-3.0 * (Nand1.Mn2.Mni.Dbd.nlCM1.Vt * log(Nand1.Mn2.Mni.Dbd.nlCM1.RTemp)) - Nand1.Mn2.Mni.Dbd.nlCM1.EGnom * Nand1.Mn2.Mni.Dbd.nlCM1.RTemp));
//   Nand1.Mn2.Mni.Dbd.nlCM1.CJval = Nand1.Mn2.Mni.Dbd.nlCM1.CJ * (1.0 + Nand1.Mn2.Mni.Dbd.nlCM1.MJ * (1.0 + ((-Nand1.Mn2.Mni.Dbd.nlCM1.PBval) / Nand1.Mn2.Mni.Dbd.nlCM1.PB + 0.0004 * Nand1.Mn2.Mni.Dbd.nlCM1.DTemp)));
//   Nand1.Mn2.Mni.Dbd.nlCM1.CJSWval = Nand1.Mn2.Mni.Dbd.nlCM1.CJSW * (1.0 + Nand1.Mn2.Mni.Dbd.nlCM1.MJSW * (1.0 + ((-Nand1.Mn2.Mni.Dbd.nlCM1.PBval) / Nand1.Mn2.Mni.Dbd.nlCM1.PB + 0.0004 * Nand1.Mn2.Mni.Dbd.nlCM1.DTemp)));
//   Nand1.Mn2.Mni.Dbd.nlCM1.Cbulk = Nand1.Mn2.Mni.Dbd.nlCM1.CJval * (if Nand1.Mn2.Mni.Dbd.nlCM1.v > Nand1.Mn2.Mni.Dbd.nlCM1.FC * Nand1.Mn2.Mni.Dbd.nlCM1.PBval then (1.0 + ((Nand1.Mn2.Mni.Dbd.nlCM1.MJ * Nand1.Mn2.Mni.Dbd.nlCM1.v) / Nand1.Mn2.Mni.Dbd.nlCM1.PBval - Nand1.Mn2.Mni.Dbd.nlCM1.FC * (1.0 + Nand1.Mn2.Mni.Dbd.nlCM1.MJ))) * (1.0 - Nand1.Mn2.Mni.Dbd.nlCM1.FC) ^ (-1.0 - Nand1.Mn2.Mni.Dbd.nlCM1.MJ) else abs(1.0 + (-Nand1.Mn2.Mni.Dbd.nlCM1.v) / Nand1.Mn2.Mni.Dbd.nlCM1.PBval) ^ (-Nand1.Mn2.Mni.Dbd.nlCM1.MJ));
//   Nand1.Mn2.Mni.Dbd.nlCM1.Cperi = Nand1.Mn2.Mni.Dbd.nlCM1.CJSWval * (if Nand1.Mn2.Mni.Dbd.nlCM1.v > Nand1.Mn2.Mni.Dbd.nlCM1.FC * Nand1.Mn2.Mni.Dbd.nlCM1.PBval then (1.0 + ((Nand1.Mn2.Mni.Dbd.nlCM1.MJSW * Nand1.Mn2.Mni.Dbd.nlCM1.v) / Nand1.Mn2.Mni.Dbd.nlCM1.PBval - Nand1.Mn2.Mni.Dbd.nlCM1.FC * (1.0 + Nand1.Mn2.Mni.Dbd.nlCM1.MJSW))) * (1.0 - Nand1.Mn2.Mni.Dbd.nlCM1.FC) ^ (-1.0 - Nand1.Mn2.Mni.Dbd.nlCM1.MJSW) else abs(1.0 + (-Nand1.Mn2.Mni.Dbd.nlCM1.v) / Nand1.Mn2.Mni.Dbd.nlCM1.PBval) ^ (-Nand1.Mn2.Mni.Dbd.nlCM1.MJSW));
//   Nand1.Mn2.Mni.Dbd.nlCM1.Cval = if Nand1.Mn2.Mni.Dbd.nlCM1.A * Nand1.Mn2.Mni.Dbd.nlCM1.Cbulk + Nand1.Mn2.Mni.Dbd.nlCM1.P * Nand1.Mn2.Mni.Dbd.nlCM1.Cperi > 0.0 then Nand1.Mn2.Mni.Dbd.nlCM1.A * Nand1.Mn2.Mni.Dbd.nlCM1.Cbulk + Nand1.Mn2.Mni.Dbd.nlCM1.P * Nand1.Mn2.Mni.Dbd.nlCM1.Cperi else 1e-16;
//   Nand1.Mn2.Mni.Dbd.nlCM1.y = Nand1.Mn2.Mni.Dbd.nlCM1.Cval;
//   Nand1.Mn2.Mni.Dbd.Tdev1.T = Nand1.Mn2.Mni.Dbd.Tdev1.port.T;
//   Nand1.Mn2.Mni.Dbd.Tdev1.port.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbd.Rd.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.T_nom.e = Nand1.Mn2.Mni.Dbd.Rd.T_nom.e0;
//   Nand1.Mn2.Mni.Dbd.Rd.T_nom.e = Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.T_nom.f = (-Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.d) * Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.Rval = (Nand1.Mn2.Mni.Dbd.Rd.R1.R * (1.0 + (Nand1.Mn2.Mni.Dbd.Rd.R1.TR1 * Nand1.Mn2.Mni.Dbd.Rd.R1.DTemp + Nand1.Mn2.Mni.Dbd.Rd.R1.TR2 * Nand1.Mn2.Mni.Dbd.Rd.R1.DTempSq))) / Nand1.Mn2.Mni.Dbd.Rd.R1.Area;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.e1 = Nand1.Mn2.Mni.Dbd.Rd.R1.Rval * Nand1.Mn2.Mni.Dbd.Rd.R1.f1;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.e1 * Nand1.Mn2.Mni.Dbd.Rd.R1.f1 = Nand1.Mn2.Mni.Dbd.Rd.R1.e2 * Nand1.Mn2.Mni.Dbd.Rd.R1.f2;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.DTempSq = Nand1.Mn2.Mni.Dbd.Rd.R1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.DTemp = Nand1.Mn2.Mni.Dbd.Rd.R1.e2 - Nand1.Mn2.Mni.Dbd.Rd.R1.Tnom;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.e1 = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.f1 = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.e2 = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.R1.f2 = (-Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.d) * Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[1];
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[2];
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[1] + (Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[2] + Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[1] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[1] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[2] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.f[3] = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.e1;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.f1 + Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.e1 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.f1 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.f2 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.e1;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.f1 + Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.e1 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.f1 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.f2 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.open = Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.open then Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.f else Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.control = true;
//   Nand1.Mn2.Mni.Dbd.Rd.v = Nand1.Mn2.Mni.Dbd.Rd.p.v - Nand1.Mn2.Mni.Dbd.Rd.n.v;
//   Nand1.Mn2.Mni.Dbd.Rd.i = Nand1.Mn2.Mni.Dbd.Rd.p.i;
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Vt = 8.61727503842867e-05 * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.RTemp = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2 / Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Tnom;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EGval = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2 ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2);
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EGnom = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EG + (-0.000702 * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Tnom);
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.ISval = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.IS * exp((Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EGval - Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EGnom * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.RTemp) / Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Vt);
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.et = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e1 / Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Vt;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.f1 = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.ISval * (if noEvent(Nand1.Mn2.Mni.Dbd.DjM1.DjM1.et < Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMin) then Nand1.Mn2.Mni.Dbd.DjM1.DjM1.ExMin * (1.0 + (Nand1.Mn2.Mni.Dbd.DjM1.DjM1.et - Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMin)) + -1.0 else if noEvent(Nand1.Mn2.Mni.Dbd.DjM1.DjM1.et > Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMax) then Nand1.Mn2.Mni.Dbd.DjM1.DjM1.ExMax * (1.0 + (Nand1.Mn2.Mni.Dbd.DjM1.DjM1.et - Nand1.Mn2.Mni.Dbd.DjM1.DjM1.EMax)) + -1.0 else exp(Nand1.Mn2.Mni.Dbd.DjM1.DjM1.et) + -1.0);
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2 * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.f2 = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e1 * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.f1;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.DTempSq = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.DTemp = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2 - Nand1.Mn2.Mni.Dbd.DjM1.DjM1.Tnom;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e1 = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.f1 = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.d * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.e2 = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.DjM1.f2 = (-Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.d) * Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Dbd.DjM1.v = Nand1.Mn2.Mni.Dbd.DjM1.p.v - Nand1.Mn2.Mni.Dbd.DjM1.n.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.i = Nand1.Mn2.Mni.Dbd.DjM1.p.i;
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Vd.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbd.Vd.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Vd.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbd.Vd.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbd.Vd.De1.OutPort1 = Nand1.Mn2.Mni.Dbd.Vd.De1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.De1.f = 0.0;
//   Nand1.Mn2.Mni.Dbd.Vd.De1.e = Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.De1.f = Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.d * Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.Vd.v = Nand1.Mn2.Mni.Dbd.Vd.p.v - Nand1.Mn2.Mni.Dbd.Vd.n.v;
//   Nand1.Mn2.Mni.Dbd.Vd.i = Nand1.Mn2.Mni.Dbd.Vd.p.i;
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[2] + Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[1] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[1] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[2] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[2] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.e[3] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.f[3] = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.p.v;
//   Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.p.i;
//   Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.n.v;
//   Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.n.i;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.mC1.C = Nand1.Mn2.Mni.Dbd.VarC1.mC1.s;
//   Nand1.Mn2.Mni.Dbd.VarC1.mC1.f = Nand1.Mn2.Mni.Dbd.VarC1.mC1.C * der(Nand1.Mn2.Mni.Dbd.VarC1.mC1.e);
//   Nand1.Mn2.Mni.Dbd.VarC1.mC1.e = Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.mC1.f = Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.d * Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.v = Nand1.Mn2.Mni.Dbd.VarC1.p.v - Nand1.Mn2.Mni.Dbd.VarC1.n.v;
//   Nand1.Mn2.Mni.Dbd.VarC1.i = Nand1.Mn2.Mni.Dbd.VarC1.p.i;
//   Nand1.Mn2.Mni.Dbd.v = Nand1.Mn2.Mni.Dbd.p.v - Nand1.Mn2.Mni.Dbd.n.v;
//   Nand1.Mn2.Mni.Dbd.i = Nand1.Mn2.Mni.Dbd.p.i;
//   Nand1.Mn2.Mni.Rds.J1p3_1.f[2] = Nand1.Mn2.Mni.Rds.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rds.J1p3_1.f[3] = Nand1.Mn2.Mni.Rds.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rds.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rds.J1p3_1.e[2] + Nand1.Mn2.Mni.Rds.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rds.J1p3_1.e[1] = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.J1p3_1.f[1] = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.J1p3_1.e[2] = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.J1p3_1.f[2] = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.J1p3_1.e[3] = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rds.J1p3_1.f[3] = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rds.B1.BondCon2.e = Nand1.Mn2.Mni.Rds.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B1.BondCon2.f = Nand1.Mn2.Mni.Rds.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rds.B2.BondCon2.e = Nand1.Mn2.Mni.Rds.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B2.BondCon2.f = Nand1.Mn2.Mni.Rds.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rds.B3.BondCon2.e = Nand1.Mn2.Mni.Rds.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B3.BondCon2.f = Nand1.Mn2.Mni.Rds.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.e = Nand1.Mn2.Mni.Rds.El2BG1.p.v;
//   Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.f = Nand1.Mn2.Mni.Rds.El2BG1.p.i;
//   Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.e = Nand1.Mn2.Mni.Rds.BG2El1.n.v;
//   Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.f = -Nand1.Mn2.Mni.Rds.BG2El1.n.i;
//   Nand1.Mn2.Mni.Rds.B6.fBondCon1.e = Nand1.Mn2.Mni.Rds.B6.eBondCon1.e;
//   Nand1.Mn2.Mni.Rds.B6.eBondCon1.f = Nand1.Mn2.Mni.Rds.B6.fBondCon1.f;
//   Nand1.Mn2.Mni.Rds.B6.eBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.B6.fBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rds.T_nom.e = Nand1.Mn2.Mni.Rds.T_nom.e0;
//   Nand1.Mn2.Mni.Rds.T_nom.e = Nand1.Mn2.Mni.Rds.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.T_nom.f = (-Nand1.Mn2.Mni.Rds.T_nom.BondCon1.d) * Nand1.Mn2.Mni.Rds.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.R1.Rval = (Nand1.Mn2.Mni.Rds.R1.R * (1.0 + (Nand1.Mn2.Mni.Rds.R1.TR1 * Nand1.Mn2.Mni.Rds.R1.DTemp + Nand1.Mn2.Mni.Rds.R1.TR2 * Nand1.Mn2.Mni.Rds.R1.DTempSq))) / Nand1.Mn2.Mni.Rds.R1.Area;
//   Nand1.Mn2.Mni.Rds.R1.e1 = Nand1.Mn2.Mni.Rds.R1.Rval * Nand1.Mn2.Mni.Rds.R1.f1;
//   Nand1.Mn2.Mni.Rds.R1.e1 * Nand1.Mn2.Mni.Rds.R1.f1 = Nand1.Mn2.Mni.Rds.R1.e2 * Nand1.Mn2.Mni.Rds.R1.f2;
//   Nand1.Mn2.Mni.Rds.R1.DTempSq = Nand1.Mn2.Mni.Rds.R1.DTemp ^ 2.0;
//   Nand1.Mn2.Mni.Rds.R1.DTemp = Nand1.Mn2.Mni.Rds.R1.e2 - Nand1.Mn2.Mni.Rds.R1.Tnom;
//   Nand1.Mn2.Mni.Rds.R1.e1 = Nand1.Mn2.Mni.Rds.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.R1.f1 = Nand1.Mn2.Mni.Rds.R1.BondCon1.d * Nand1.Mn2.Mni.Rds.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.R1.e2 = Nand1.Mn2.Mni.Rds.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.R1.f2 = (-Nand1.Mn2.Mni.Rds.R1.BondCon2.d) * Nand1.Mn2.Mni.Rds.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.B4.fBondCon1.e = Nand1.Mn2.Mni.Rds.B4.eBondCon1.e;
//   Nand1.Mn2.Mni.Rds.B4.eBondCon1.f = Nand1.Mn2.Mni.Rds.B4.fBondCon1.f;
//   Nand1.Mn2.Mni.Rds.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[1];
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[2];
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[1] + (Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[2] + Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[1] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.d * Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[1] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[2] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.d * Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[2] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.e[3] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.d * Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.f[3] = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[1];
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[2];
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[1] + (Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[2] + Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[1] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[1] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.d * Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[2] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[2] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.d * Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.e[3] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.f[3] = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.d * Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.e1;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.f1 + Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.e1 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.f1 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.d * Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.e2 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.f2 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.d * Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.e1;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.f1 + Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.e1 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.f1 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.d * Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.e2 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.f2 = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.d * Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.Sw1.Sw1.open = Nand1.Mn2.Mni.Rds.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn2.Mni.Rds.Sw1.Sw1.open then Nand1.Mn2.Mni.Rds.Sw1.Sw1.f else Nand1.Mn2.Mni.Rds.Sw1.Sw1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.Sw1.e = Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.Sw1.f = Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.d * Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Mni.Rds.B5.fBondCon1.e = Nand1.Mn2.Mni.Rds.B5.eBondCon1.e;
//   Nand1.Mn2.Mni.Rds.B5.eBondCon1.f = Nand1.Mn2.Mni.Rds.B5.fBondCon1.f;
//   Nand1.Mn2.Mni.Rds.B5.fBondCon1.d = -1.0;
//   Nand1.Mn2.Mni.Rds.B5.eBondCon1.d = 1.0;
//   Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.e = Nand1.Mn2.Mni.Rds.BG2Heat1.port_b.T;
//   Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.e * Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.f = -Nand1.Mn2.Mni.Rds.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Mni.Rds.Sw1.control = true;
//   Nand1.Mn2.Mni.Rds.v = Nand1.Mn2.Mni.Rds.p.v - Nand1.Mn2.Mni.Rds.n.v;
//   Nand1.Mn2.Mni.Rds.i = Nand1.Mn2.Mni.Rds.p.i;
//   Nand1.Mn2.Cgs1.J1p3_1.f[2] = Nand1.Mn2.Cgs1.J1p3_1.f[1];
//   Nand1.Mn2.Cgs1.J1p3_1.f[3] = Nand1.Mn2.Cgs1.J1p3_1.f[2];
//   Nand1.Mn2.Cgs1.J1p3_1.e[1] + (Nand1.Mn2.Cgs1.J1p3_1.e[2] + Nand1.Mn2.Cgs1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Cgs1.J1p3_1.e[1] = Nand1.Mn2.Cgs1.J1p3_1.BondCon1.d * Nand1.Mn2.Cgs1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Cgs1.J1p3_1.f[1] = Nand1.Mn2.Cgs1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Cgs1.J1p3_1.e[2] = Nand1.Mn2.Cgs1.J1p3_1.BondCon2.d * Nand1.Mn2.Cgs1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Cgs1.J1p3_1.f[2] = Nand1.Mn2.Cgs1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Cgs1.J1p3_1.e[3] = Nand1.Mn2.Cgs1.J1p3_1.BondCon3.d * Nand1.Mn2.Cgs1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Cgs1.J1p3_1.f[3] = Nand1.Mn2.Cgs1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Cgs1.B1.BondCon2.e = Nand1.Mn2.Cgs1.B1.BondCon1.e;
//   Nand1.Mn2.Cgs1.B1.BondCon2.f = Nand1.Mn2.Cgs1.B1.BondCon1.f;
//   Nand1.Mn2.Cgs1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgs1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgs1.B2.BondCon2.e = Nand1.Mn2.Cgs1.B2.BondCon1.e;
//   Nand1.Mn2.Cgs1.B2.BondCon2.f = Nand1.Mn2.Cgs1.B2.BondCon1.f;
//   Nand1.Mn2.Cgs1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgs1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgs1.El2BG1.BondCon1.e = Nand1.Mn2.Cgs1.El2BG1.p.v;
//   Nand1.Mn2.Cgs1.El2BG1.BondCon1.f = Nand1.Mn2.Cgs1.El2BG1.p.i;
//   Nand1.Mn2.Cgs1.BG2El1.BondCon1.e = Nand1.Mn2.Cgs1.BG2El1.n.v;
//   Nand1.Mn2.Cgs1.BG2El1.BondCon1.f = -Nand1.Mn2.Cgs1.BG2El1.n.i;
//   Nand1.Mn2.Cgs1.Cgs1.RTemp = Nand1.Mn2.Cgs1.Cgs1.e2 / Nand1.Mn2.Cgs1.Cgs1.Tnom;
//   Nand1.Mn2.Cgs1.Cgs1.facTemp = Nand1.Mn2.Cgs1.Cgs1.RTemp ^ 1.5;
//   Nand1.Mn2.Cgs1.Cgs1.Vt = 8.61727503842867e-05 * Nand1.Mn2.Cgs1.Cgs1.e2;
//   Nand1.Mn2.Cgs1.Cgs1.EGref = Nand1.Mn2.Cgs1.Cgs1.EG + (-0.000702 * Nand1.Mn2.Cgs1.Cgs1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Cgs1.Cgs1.Tnom);
//   Nand1.Mn2.Cgs1.Cgs1.EGval = Nand1.Mn2.Cgs1.Cgs1.EG + (-0.000702 * Nand1.Mn2.Cgs1.Cgs1.e2 ^ 2.0) / (1108.0 + Nand1.Mn2.Cgs1.Cgs1.e2);
//   Nand1.Mn2.Cgs1.Cgs1.PHIval = Nand1.Mn2.Cgs1.Cgs1.RTemp * Nand1.Mn2.Cgs1.Cgs1.PHI + (Nand1.Mn2.Cgs1.Cgs1.EGval + (-3.0 * (Nand1.Mn2.Cgs1.Cgs1.Vt * log(Nand1.Mn2.Cgs1.Cgs1.RTemp)) - Nand1.Mn2.Cgs1.Cgs1.RTemp * Nand1.Mn2.Cgs1.Cgs1.EGref));
//   Nand1.Mn2.Cgs1.Cgs1.Vfb = Nand1.Mn2.Cgs1.Cgs1.VFB + Real(Nand1.Mn2.Cgs1.Cgs1.Type) * (Nand1.Mn2.Cgs1.Cgs1.PHIval / 2.0 + ((-Nand1.Mn2.Cgs1.Cgs1.PHI) / 2.0 + (Nand1.Mn2.Cgs1.Cgs1.EGref / 2.0 + (-Nand1.Mn2.Cgs1.Cgs1.EGval) / 2.0)));
//   Nand1.Mn2.Cgs1.Cgs1.KPval = Nand1.Mn2.Cgs1.Cgs1.KP / Nand1.Mn2.Cgs1.Cgs1.facTemp;
//   Nand1.Mn2.Cgs1.Cgs1.BETA = (Nand1.Mn2.Cgs1.Cgs1.KPval * Nand1.Mn2.Cgs1.Cgs1.W) / Nand1.Mn2.Cgs1.Cgs1.L;
//   if noEvent(Nand1.Mn2.Cgs1.Cgs1.u1 > 0.0) then
//   Nand1.Mn2.Cgs1.Cgs1.sig = 1.0;
//   Nand1.Mn2.Cgs1.Cgs1.vds = Nand1.Mn2.Cgs1.Cgs1.u1;
//   Nand1.Mn2.Cgs1.Cgs1.vgs = Nand1.Mn2.Cgs1.Cgs1.e1 + Nand1.Mn2.Cgs1.Cgs1.u2;
//   Nand1.Mn2.Cgs1.Cgs1.vbs = Nand1.Mn2.Cgs1.Cgs1.u2;
//   else
//   Nand1.Mn2.Cgs1.Cgs1.sig = -1.0;
//   Nand1.Mn2.Cgs1.Cgs1.vds = -Nand1.Mn2.Cgs1.Cgs1.u1;
//   Nand1.Mn2.Cgs1.Cgs1.vgs = Nand1.Mn2.Cgs1.Cgs1.e1 - Nand1.Mn2.Cgs1.Cgs1.u1;
//   Nand1.Mn2.Cgs1.Cgs1.vbs = Nand1.Mn2.Cgs1.Cgs1.u2 - Nand1.Mn2.Cgs1.Cgs1.u1;
//   end if;
//   Nand1.Mn2.Cgs1.Cgs1.PHIroot = sqrt(Nand1.Mn2.Cgs1.Cgs1.PHIval);
//   Nand1.Mn2.Cgs1.Cgs1.PHI3 = Nand1.Mn2.Cgs1.Cgs1.PHIval * Nand1.Mn2.Cgs1.Cgs1.PHIroot;
//   Nand1.Mn2.Cgs1.Cgs1.Sarg = if Nand1.Mn2.Cgs1.Cgs1.vbs <= 0.0 then sqrt(Nand1.Mn2.Cgs1.Cgs1.PHIval - Nand1.Mn2.Cgs1.Cgs1.vbs) else Nand1.Mn2.Cgs1.Cgs1.PHIroot / (1.0 + Nand1.Mn2.Cgs1.Cgs1.vbs / (Nand1.Mn2.Cgs1.Cgs1.PHIval * 2.0));
//   Nand1.Mn2.Cgs1.Cgs1.DSarg = 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.Barg = 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.DBarg = 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.WS = Nand1.Mn2.Cgs1.Cgs1.XD * Nand1.Mn2.Cgs1.Cgs1.Sarg;
//   Nand1.Mn2.Cgs1.Cgs1.WD = Nand1.Mn2.Cgs1.Cgs1.XD * Nand1.Mn2.Cgs1.Cgs1.Barg;
//   Nand1.Mn2.Cgs1.Cgs1.WSfac = if Nand1.Mn2.Cgs1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn2.Cgs1.Cgs1.WS) / Nand1.Mn2.Cgs1.Cgs1.XJ) else 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.WDfac = if Nand1.Mn2.Cgs1.Cgs1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn2.Cgs1.Cgs1.WD) / Nand1.Mn2.Cgs1.Cgs1.XJ) else 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.GAMMAval = Nand1.Mn2.Cgs1.Cgs1.GAMMA * (if Nand1.Mn2.Cgs1.Cgs1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mn2.Cgs1.Cgs1.XJ * (-2.0 + (Nand1.Mn2.Cgs1.Cgs1.WSfac + Nand1.Mn2.Cgs1.Cgs1.WDfac)))) / Nand1.Mn2.Cgs1.Cgs1.L else 1.0);
//   Nand1.Mn2.Cgs1.Cgs1.DGAMMA = Nand1.Mn2.Cgs1.Cgs1.GAMMA * (if Nand1.Mn2.Cgs1.Cgs1.XJ > 0.0 then (-0.5 * (Nand1.Mn2.Cgs1.Cgs1.XD * (Nand1.Mn2.Cgs1.Cgs1.DSarg / Nand1.Mn2.Cgs1.Cgs1.WSfac + Nand1.Mn2.Cgs1.Cgs1.DBarg / Nand1.Mn2.Cgs1.Cgs1.WDfac))) / Nand1.Mn2.Cgs1.Cgs1.L else 0.0);
//   Nand1.Mn2.Cgs1.Cgs1.Wp = Nand1.Mn2.Cgs1.Cgs1.Sarg * Nand1.Mn2.Cgs1.Cgs1.XD;
//   Nand1.Mn2.Cgs1.Cgs1.WpXJ = if Nand1.Mn2.Cgs1.Cgs1.XJ > 0.0 then Nand1.Mn2.Cgs1.Cgs1.Wp / Nand1.Mn2.Cgs1.Cgs1.XJ else 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mn2.Cgs1.Cgs1.WpXJ + -0.01110777 * Nand1.Mn2.Cgs1.Cgs1.WpXJ ^ 2.0);
//   Nand1.Mn2.Cgs1.Cgs1.Wc = Nand1.Mn2.Cgs1.Cgs1.WcXJ * Nand1.Mn2.Cgs1.Cgs1.XJ;
//   Nand1.Mn2.Cgs1.Cgs1.Fs = if Nand1.Mn2.Cgs1.Cgs1.XJ > 0.0 then 1.0 + (Nand1.Mn2.Cgs1.Cgs1.LD - (Nand1.Mn2.Cgs1.Cgs1.LD + Nand1.Mn2.Cgs1.Cgs1.Wc) * sqrt(1.0 - (Nand1.Mn2.Cgs1.Cgs1.Wp / (Nand1.Mn2.Cgs1.Cgs1.XJ + Nand1.Mn2.Cgs1.Cgs1.Wp)) ^ 2.0)) / Nand1.Mn2.Cgs1.Cgs1.L else 1.0;
//   Nand1.Mn2.Cgs1.Cgs1.Vbody = Nand1.Mn2.Cgs1.Cgs1.GAMMA * (Nand1.Mn2.Cgs1.Cgs1.Fs * Nand1.Mn2.Cgs1.Cgs1.Sarg) + Nand1.Mn2.Cgs1.Cgs1.Fn * Nand1.Mn2.Cgs1.Cgs1.Sarg ^ 2.0;
//   Nand1.Mn2.Cgs1.Cgs1.Vth = Nand1.Mn2.Cgs1.Cgs1.Vfb + Real(Nand1.Mn2.Cgs1.Cgs1.Type) * (Nand1.Mn2.Cgs1.Cgs1.PHIval + (Nand1.Mn2.Cgs1.Cgs1.Vbody - Nand1.Mn2.Cgs1.Cgs1.SIGMA * Nand1.Mn2.Cgs1.Cgs1.vds));
//   Nand1.Mn2.Cgs1.Cgs1.CB = if noEvent(Nand1.Mn2.Cgs1.Cgs1.Vbody > 0.0) and noEvent(Nand1.Mn2.Cgs1.Cgs1.Sarg > 0.0) then (Nand1.Mn2.Cgs1.Cgs1.Vbody * Nand1.Mn2.Cgs1.Cgs1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.N = 1.0 + ((1.6021892e-19 * Nand1.Mn2.Cgs1.Cgs1.NFS) / Nand1.Mn2.Cgs1.Cgs1.COX + Nand1.Mn2.Cgs1.Cgs1.CB);
//   Nand1.Mn2.Cgs1.Cgs1.Von = if Nand1.Mn2.Cgs1.Cgs1.NFS > 0.0 then Real(Nand1.Mn2.Cgs1.Cgs1.Type) * Nand1.Mn2.Cgs1.Cgs1.Vth + Nand1.Mn2.Cgs1.Cgs1.N * Nand1.Mn2.Cgs1.Cgs1.Vt else Real(Nand1.Mn2.Cgs1.Cgs1.Type) * Nand1.Mn2.Cgs1.Cgs1.Vth;
//   if noEvent(Nand1.Mn2.Cgs1.Cgs1.sig > 0.0) then
//   Nand1.Mn2.Cgs1.Cgs1.Cval = Nand1.Mn2.Cgs1.Cgs1.W * Nand1.Mn2.Cgs1.Cgs1.CGS0 + (if noEvent(Nand1.Mn2.Cgs1.Cgs1.vgs < Nand1.Mn2.Cgs1.Cgs1.Von - Nand1.Mn2.Cgs1.Cgs1.PHIval) then 0.0 else if noEvent(Nand1.Mn2.Cgs1.Cgs1.vgs >= Nand1.Mn2.Cgs1.Cgs1.Von - Nand1.Mn2.Cgs1.Cgs1.PHIval) and noEvent(Nand1.Mn2.Cgs1.Cgs1.vgs < Nand1.Mn2.Cgs1.Cgs1.Von) then 0.666666666666667 * (Nand1.Mn2.Cgs1.Cgs1.COXval * (1.0 + (Nand1.Mn2.Cgs1.Cgs1.vgs - Nand1.Mn2.Cgs1.Cgs1.Von) / Nand1.Mn2.Cgs1.Cgs1.PHIval)) else if noEvent(Nand1.Mn2.Cgs1.Cgs1.vgs >= Nand1.Mn2.Cgs1.Cgs1.Von) and noEvent(Nand1.Mn2.Cgs1.Cgs1.vgs < Nand1.Mn2.Cgs1.Cgs1.Von + Nand1.Mn2.Cgs1.Cgs1.vds) then 0.666666666666667 * Nand1.Mn2.Cgs1.Cgs1.COXval else 0.666666666666667 * (Nand1.Mn2.Cgs1.Cgs1.COXval * (1.0 - ((Nand1.Mn2.Cgs1.Cgs1.vgs + ((-Nand1.Mn2.Cgs1.Cgs1.vds) - Nand1.Mn2.Cgs1.Cgs1.Von)) / (2.0 * (Nand1.Mn2.Cgs1.Cgs1.vgs - Nand1.Mn2.Cgs1.Cgs1.Von) - Nand1.Mn2.Cgs1.Cgs1.vds)) ^ 2.0)));
//   else
//   Nand1.Mn2.Cgs1.Cgs1.Cval = Nand1.Mn2.Cgs1.Cgs1.W * Nand1.Mn2.Cgs1.Cgs1.CGS0 + (if noEvent(Nand1.Mn2.Cgs1.Cgs1.vgs < Nand1.Mn2.Cgs1.Cgs1.Von + Nand1.Mn2.Cgs1.Cgs1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mn2.Cgs1.Cgs1.COXval * (1.0 - ((Nand1.Mn2.Cgs1.Cgs1.vgs - Nand1.Mn2.Cgs1.Cgs1.Von) / (2.0 * (Nand1.Mn2.Cgs1.Cgs1.vgs - Nand1.Mn2.Cgs1.Cgs1.Von) - Nand1.Mn2.Cgs1.Cgs1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mn2.Cgs1.Cgs1.f1 = Nand1.Mn2.Cgs1.Cgs1.Cval * der(Nand1.Mn2.Cgs1.Cgs1.e1);
//   Nand1.Mn2.Cgs1.Cgs1.f2 = 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.DTempSq = Nand1.Mn2.Cgs1.Cgs1.DTemp ^ 2.0;
//   Nand1.Mn2.Cgs1.Cgs1.DTemp = Nand1.Mn2.Cgs1.Cgs1.e2 - Nand1.Mn2.Cgs1.Cgs1.Tnom;
//   Nand1.Mn2.Cgs1.Cgs1.e1 = Nand1.Mn2.Cgs1.Cgs1.BondCon1.e;
//   Nand1.Mn2.Cgs1.Cgs1.f1 = Nand1.Mn2.Cgs1.Cgs1.BondCon1.d * Nand1.Mn2.Cgs1.Cgs1.BondCon1.f;
//   Nand1.Mn2.Cgs1.Cgs1.e2 = Nand1.Mn2.Cgs1.Cgs1.BondCon2.e;
//   Nand1.Mn2.Cgs1.Cgs1.f2 = (-Nand1.Mn2.Cgs1.Cgs1.BondCon2.d) * Nand1.Mn2.Cgs1.Cgs1.BondCon2.f;
//   Nand1.Mn2.Cgs1.B3.BondCon2.e = Nand1.Mn2.Cgs1.B3.BondCon1.e;
//   Nand1.Mn2.Cgs1.B3.BondCon2.f = Nand1.Mn2.Cgs1.B3.BondCon1.f;
//   Nand1.Mn2.Cgs1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgs1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgs1.B4.fBondCon1.e = Nand1.Mn2.Cgs1.B4.eBondCon1.e;
//   Nand1.Mn2.Cgs1.B4.eBondCon1.f = Nand1.Mn2.Cgs1.B4.fBondCon1.f;
//   Nand1.Mn2.Cgs1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Cgs1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.e = Nand1.Mn2.Cgs1.BG2Heat1.port_b.T;
//   Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.e * Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.f = -Nand1.Mn2.Cgs1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Cgs1.v = Nand1.Mn2.Cgs1.p.v - Nand1.Mn2.Cgs1.n.v;
//   Nand1.Mn2.Cgs1.i = Nand1.Mn2.Cgs1.p.i;
//   Nand1.Mn2.Cgd1.J1p3_1.f[2] = Nand1.Mn2.Cgd1.J1p3_1.f[1];
//   Nand1.Mn2.Cgd1.J1p3_1.f[3] = Nand1.Mn2.Cgd1.J1p3_1.f[2];
//   Nand1.Mn2.Cgd1.J1p3_1.e[1] + (Nand1.Mn2.Cgd1.J1p3_1.e[2] + Nand1.Mn2.Cgd1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Cgd1.J1p3_1.e[1] = Nand1.Mn2.Cgd1.J1p3_1.BondCon1.d * Nand1.Mn2.Cgd1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Cgd1.J1p3_1.f[1] = Nand1.Mn2.Cgd1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Cgd1.J1p3_1.e[2] = Nand1.Mn2.Cgd1.J1p3_1.BondCon2.d * Nand1.Mn2.Cgd1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Cgd1.J1p3_1.f[2] = Nand1.Mn2.Cgd1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Cgd1.J1p3_1.e[3] = Nand1.Mn2.Cgd1.J1p3_1.BondCon3.d * Nand1.Mn2.Cgd1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Cgd1.J1p3_1.f[3] = Nand1.Mn2.Cgd1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Cgd1.B1.BondCon2.e = Nand1.Mn2.Cgd1.B1.BondCon1.e;
//   Nand1.Mn2.Cgd1.B1.BondCon2.f = Nand1.Mn2.Cgd1.B1.BondCon1.f;
//   Nand1.Mn2.Cgd1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgd1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgd1.B2.BondCon2.e = Nand1.Mn2.Cgd1.B2.BondCon1.e;
//   Nand1.Mn2.Cgd1.B2.BondCon2.f = Nand1.Mn2.Cgd1.B2.BondCon1.f;
//   Nand1.Mn2.Cgd1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgd1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgd1.El2BG1.BondCon1.e = Nand1.Mn2.Cgd1.El2BG1.p.v;
//   Nand1.Mn2.Cgd1.El2BG1.BondCon1.f = Nand1.Mn2.Cgd1.El2BG1.p.i;
//   Nand1.Mn2.Cgd1.BG2El1.BondCon1.e = Nand1.Mn2.Cgd1.BG2El1.n.v;
//   Nand1.Mn2.Cgd1.BG2El1.BondCon1.f = -Nand1.Mn2.Cgd1.BG2El1.n.i;
//   Nand1.Mn2.Cgd1.Cgd1.RTemp = Nand1.Mn2.Cgd1.Cgd1.e2 / Nand1.Mn2.Cgd1.Cgd1.Tnom;
//   Nand1.Mn2.Cgd1.Cgd1.facTemp = Nand1.Mn2.Cgd1.Cgd1.RTemp ^ 1.5;
//   Nand1.Mn2.Cgd1.Cgd1.Vt = 8.61727503842867e-05 * Nand1.Mn2.Cgd1.Cgd1.e2;
//   Nand1.Mn2.Cgd1.Cgd1.EGref = Nand1.Mn2.Cgd1.Cgd1.EG + (-0.000702 * Nand1.Mn2.Cgd1.Cgd1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Cgd1.Cgd1.Tnom);
//   Nand1.Mn2.Cgd1.Cgd1.EGval = Nand1.Mn2.Cgd1.Cgd1.EG + (-0.000702 * Nand1.Mn2.Cgd1.Cgd1.e2 ^ 2.0) / (1108.0 + Nand1.Mn2.Cgd1.Cgd1.e2);
//   Nand1.Mn2.Cgd1.Cgd1.PHIval = Nand1.Mn2.Cgd1.Cgd1.RTemp * Nand1.Mn2.Cgd1.Cgd1.PHI + (Nand1.Mn2.Cgd1.Cgd1.EGval + (-3.0 * (Nand1.Mn2.Cgd1.Cgd1.Vt * log(Nand1.Mn2.Cgd1.Cgd1.RTemp)) - Nand1.Mn2.Cgd1.Cgd1.RTemp * Nand1.Mn2.Cgd1.Cgd1.EGref));
//   Nand1.Mn2.Cgd1.Cgd1.Vfb = Nand1.Mn2.Cgd1.Cgd1.VFB + Real(Nand1.Mn2.Cgd1.Cgd1.Type) * (Nand1.Mn2.Cgd1.Cgd1.PHIval / 2.0 + ((-Nand1.Mn2.Cgd1.Cgd1.PHI) / 2.0 + (Nand1.Mn2.Cgd1.Cgd1.EGref / 2.0 + (-Nand1.Mn2.Cgd1.Cgd1.EGval) / 2.0)));
//   Nand1.Mn2.Cgd1.Cgd1.KPval = Nand1.Mn2.Cgd1.Cgd1.KP / Nand1.Mn2.Cgd1.Cgd1.facTemp;
//   Nand1.Mn2.Cgd1.Cgd1.BETA = (Nand1.Mn2.Cgd1.Cgd1.KPval * Nand1.Mn2.Cgd1.Cgd1.W) / Nand1.Mn2.Cgd1.Cgd1.L;
//   if noEvent(Nand1.Mn2.Cgd1.Cgd1.u1 > 0.0) then
//   Nand1.Mn2.Cgd1.Cgd1.sig = 1.0;
//   Nand1.Mn2.Cgd1.Cgd1.vds = Nand1.Mn2.Cgd1.Cgd1.u1;
//   Nand1.Mn2.Cgd1.Cgd1.vgs = Nand1.Mn2.Cgd1.Cgd1.e1 + Nand1.Mn2.Cgd1.Cgd1.u1;
//   Nand1.Mn2.Cgd1.Cgd1.vbs = Nand1.Mn2.Cgd1.Cgd1.u2;
//   else
//   Nand1.Mn2.Cgd1.Cgd1.sig = -1.0;
//   Nand1.Mn2.Cgd1.Cgd1.vds = -Nand1.Mn2.Cgd1.Cgd1.u1;
//   Nand1.Mn2.Cgd1.Cgd1.vgs = Nand1.Mn2.Cgd1.Cgd1.e1 + (Nand1.Mn2.Cgd1.Cgd1.u2 - Nand1.Mn2.Cgd1.Cgd1.u1);
//   Nand1.Mn2.Cgd1.Cgd1.vbs = Nand1.Mn2.Cgd1.Cgd1.u2 - Nand1.Mn2.Cgd1.Cgd1.u1;
//   end if;
//   Nand1.Mn2.Cgd1.Cgd1.PHIroot = sqrt(Nand1.Mn2.Cgd1.Cgd1.PHIval);
//   Nand1.Mn2.Cgd1.Cgd1.PHI3 = Nand1.Mn2.Cgd1.Cgd1.PHIval * Nand1.Mn2.Cgd1.Cgd1.PHIroot;
//   Nand1.Mn2.Cgd1.Cgd1.Sarg = if Nand1.Mn2.Cgd1.Cgd1.vbs <= 0.0 then sqrt(Nand1.Mn2.Cgd1.Cgd1.PHIval - Nand1.Mn2.Cgd1.Cgd1.vbs) else Nand1.Mn2.Cgd1.Cgd1.PHIroot / (1.0 + Nand1.Mn2.Cgd1.Cgd1.vbs / (Nand1.Mn2.Cgd1.Cgd1.PHIval * 2.0));
//   Nand1.Mn2.Cgd1.Cgd1.DSarg = 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.Barg = 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.DBarg = 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.WS = Nand1.Mn2.Cgd1.Cgd1.XD * Nand1.Mn2.Cgd1.Cgd1.Sarg;
//   Nand1.Mn2.Cgd1.Cgd1.WD = Nand1.Mn2.Cgd1.Cgd1.XD * Nand1.Mn2.Cgd1.Cgd1.Barg;
//   Nand1.Mn2.Cgd1.Cgd1.WSfac = if Nand1.Mn2.Cgd1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn2.Cgd1.Cgd1.WS) / Nand1.Mn2.Cgd1.Cgd1.XJ) else 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.WDfac = if Nand1.Mn2.Cgd1.Cgd1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn2.Cgd1.Cgd1.WD) / Nand1.Mn2.Cgd1.Cgd1.XJ) else 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.GAMMAval = Nand1.Mn2.Cgd1.Cgd1.GAMMA * (if Nand1.Mn2.Cgd1.Cgd1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mn2.Cgd1.Cgd1.XJ * (-2.0 + (Nand1.Mn2.Cgd1.Cgd1.WSfac + Nand1.Mn2.Cgd1.Cgd1.WDfac)))) / Nand1.Mn2.Cgd1.Cgd1.L else 1.0);
//   Nand1.Mn2.Cgd1.Cgd1.DGAMMA = Nand1.Mn2.Cgd1.Cgd1.GAMMA * (if Nand1.Mn2.Cgd1.Cgd1.XJ > 0.0 then (-0.5 * (Nand1.Mn2.Cgd1.Cgd1.XD * (Nand1.Mn2.Cgd1.Cgd1.DSarg / Nand1.Mn2.Cgd1.Cgd1.WSfac + Nand1.Mn2.Cgd1.Cgd1.DBarg / Nand1.Mn2.Cgd1.Cgd1.WDfac))) / Nand1.Mn2.Cgd1.Cgd1.L else 0.0);
//   Nand1.Mn2.Cgd1.Cgd1.Wp = Nand1.Mn2.Cgd1.Cgd1.Sarg * Nand1.Mn2.Cgd1.Cgd1.XD;
//   Nand1.Mn2.Cgd1.Cgd1.WpXJ = if Nand1.Mn2.Cgd1.Cgd1.XJ > 0.0 then Nand1.Mn2.Cgd1.Cgd1.Wp / Nand1.Mn2.Cgd1.Cgd1.XJ else 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mn2.Cgd1.Cgd1.WpXJ + -0.01110777 * Nand1.Mn2.Cgd1.Cgd1.WpXJ ^ 2.0);
//   Nand1.Mn2.Cgd1.Cgd1.Wc = Nand1.Mn2.Cgd1.Cgd1.WcXJ * Nand1.Mn2.Cgd1.Cgd1.XJ;
//   Nand1.Mn2.Cgd1.Cgd1.Fs = if Nand1.Mn2.Cgd1.Cgd1.XJ > 0.0 then 1.0 + (Nand1.Mn2.Cgd1.Cgd1.LD - (Nand1.Mn2.Cgd1.Cgd1.LD + Nand1.Mn2.Cgd1.Cgd1.Wc) * sqrt(1.0 - (Nand1.Mn2.Cgd1.Cgd1.Wp / (Nand1.Mn2.Cgd1.Cgd1.XJ + Nand1.Mn2.Cgd1.Cgd1.Wp)) ^ 2.0)) / Nand1.Mn2.Cgd1.Cgd1.L else 1.0;
//   Nand1.Mn2.Cgd1.Cgd1.Vbody = Nand1.Mn2.Cgd1.Cgd1.GAMMA * (Nand1.Mn2.Cgd1.Cgd1.Fs * Nand1.Mn2.Cgd1.Cgd1.Sarg) + Nand1.Mn2.Cgd1.Cgd1.Fn * Nand1.Mn2.Cgd1.Cgd1.Sarg ^ 2.0;
//   Nand1.Mn2.Cgd1.Cgd1.Vth = Nand1.Mn2.Cgd1.Cgd1.Vfb + Real(Nand1.Mn2.Cgd1.Cgd1.Type) * (Nand1.Mn2.Cgd1.Cgd1.PHIval + (Nand1.Mn2.Cgd1.Cgd1.Vbody - Nand1.Mn2.Cgd1.Cgd1.SIGMA * Nand1.Mn2.Cgd1.Cgd1.vds));
//   Nand1.Mn2.Cgd1.Cgd1.CB = if noEvent(Nand1.Mn2.Cgd1.Cgd1.Vbody > 0.0) and noEvent(Nand1.Mn2.Cgd1.Cgd1.Sarg > 0.0) then (Nand1.Mn2.Cgd1.Cgd1.Vbody * Nand1.Mn2.Cgd1.Cgd1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.N = 1.0 + ((1.6021892e-19 * Nand1.Mn2.Cgd1.Cgd1.NFS) / Nand1.Mn2.Cgd1.Cgd1.COX + Nand1.Mn2.Cgd1.Cgd1.CB);
//   Nand1.Mn2.Cgd1.Cgd1.Von = if Nand1.Mn2.Cgd1.Cgd1.NFS > 0.0 then Real(Nand1.Mn2.Cgd1.Cgd1.Type) * Nand1.Mn2.Cgd1.Cgd1.Vth + Nand1.Mn2.Cgd1.Cgd1.N * Nand1.Mn2.Cgd1.Cgd1.Vt else Real(Nand1.Mn2.Cgd1.Cgd1.Type) * Nand1.Mn2.Cgd1.Cgd1.Vth;
//   if noEvent(Nand1.Mn2.Cgd1.Cgd1.sig > 0.0) then
//   Nand1.Mn2.Cgd1.Cgd1.Cval = Nand1.Mn2.Cgd1.Cgd1.W * Nand1.Mn2.Cgd1.Cgd1.CGD0 + (if noEvent(Nand1.Mn2.Cgd1.Cgd1.vgs < Nand1.Mn2.Cgd1.Cgd1.Von + Nand1.Mn2.Cgd1.Cgd1.vds) then 0.0 else 0.666666666666667 * (Nand1.Mn2.Cgd1.Cgd1.COXval * (1.0 - ((Nand1.Mn2.Cgd1.Cgd1.vgs - Nand1.Mn2.Cgd1.Cgd1.Von) / (2.0 * (Nand1.Mn2.Cgd1.Cgd1.vgs - Nand1.Mn2.Cgd1.Cgd1.Von) - Nand1.Mn2.Cgd1.Cgd1.vds)) ^ 2.0)));
//   else
//   Nand1.Mn2.Cgd1.Cgd1.Cval = Nand1.Mn2.Cgd1.Cgd1.W * Nand1.Mn2.Cgd1.Cgd1.CGD0 + (if noEvent(Nand1.Mn2.Cgd1.Cgd1.vgs < Nand1.Mn2.Cgd1.Cgd1.Von - Nand1.Mn2.Cgd1.Cgd1.PHIval) then 0.0 else if noEvent(Nand1.Mn2.Cgd1.Cgd1.vgs >= Nand1.Mn2.Cgd1.Cgd1.Von - Nand1.Mn2.Cgd1.Cgd1.PHIval) and noEvent(Nand1.Mn2.Cgd1.Cgd1.vgs < Nand1.Mn2.Cgd1.Cgd1.Von) then 0.666666666666667 * (Nand1.Mn2.Cgd1.Cgd1.COXval * (1.0 + (Nand1.Mn2.Cgd1.Cgd1.vgs - Nand1.Mn2.Cgd1.Cgd1.Von) / Nand1.Mn2.Cgd1.Cgd1.PHIval)) else if noEvent(Nand1.Mn2.Cgd1.Cgd1.vgs >= Nand1.Mn2.Cgd1.Cgd1.Von) and noEvent(Nand1.Mn2.Cgd1.Cgd1.vgs < Nand1.Mn2.Cgd1.Cgd1.Von + Nand1.Mn2.Cgd1.Cgd1.vds) then 0.666666666666667 * Nand1.Mn2.Cgd1.Cgd1.COXval else 0.666666666666667 * (Nand1.Mn2.Cgd1.Cgd1.COXval * (1.0 - ((Nand1.Mn2.Cgd1.Cgd1.vgs + ((-Nand1.Mn2.Cgd1.Cgd1.vds) - Nand1.Mn2.Cgd1.Cgd1.Von)) / (2.0 * (Nand1.Mn2.Cgd1.Cgd1.vgs - Nand1.Mn2.Cgd1.Cgd1.Von) - Nand1.Mn2.Cgd1.Cgd1.vds)) ^ 2.0)));
//   end if;
//   Nand1.Mn2.Cgd1.Cgd1.f1 = Nand1.Mn2.Cgd1.Cgd1.Cval * der(Nand1.Mn2.Cgd1.Cgd1.e1);
//   Nand1.Mn2.Cgd1.Cgd1.f2 = 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.DTempSq = Nand1.Mn2.Cgd1.Cgd1.DTemp ^ 2.0;
//   Nand1.Mn2.Cgd1.Cgd1.DTemp = Nand1.Mn2.Cgd1.Cgd1.e2 - Nand1.Mn2.Cgd1.Cgd1.Tnom;
//   Nand1.Mn2.Cgd1.Cgd1.e1 = Nand1.Mn2.Cgd1.Cgd1.BondCon1.e;
//   Nand1.Mn2.Cgd1.Cgd1.f1 = Nand1.Mn2.Cgd1.Cgd1.BondCon1.d * Nand1.Mn2.Cgd1.Cgd1.BondCon1.f;
//   Nand1.Mn2.Cgd1.Cgd1.e2 = Nand1.Mn2.Cgd1.Cgd1.BondCon2.e;
//   Nand1.Mn2.Cgd1.Cgd1.f2 = (-Nand1.Mn2.Cgd1.Cgd1.BondCon2.d) * Nand1.Mn2.Cgd1.Cgd1.BondCon2.f;
//   Nand1.Mn2.Cgd1.B4.fBondCon1.e = Nand1.Mn2.Cgd1.B4.eBondCon1.e;
//   Nand1.Mn2.Cgd1.B4.eBondCon1.f = Nand1.Mn2.Cgd1.B4.fBondCon1.f;
//   Nand1.Mn2.Cgd1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Cgd1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.e = Nand1.Mn2.Cgd1.BG2Heat1.port_b.T;
//   Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.e * Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.f = -Nand1.Mn2.Cgd1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Cgd1.B3.BondCon2.e = Nand1.Mn2.Cgd1.B3.BondCon1.e;
//   Nand1.Mn2.Cgd1.B3.BondCon2.f = Nand1.Mn2.Cgd1.B3.BondCon1.f;
//   Nand1.Mn2.Cgd1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgd1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgd1.v = Nand1.Mn2.Cgd1.p.v - Nand1.Mn2.Cgd1.n.v;
//   Nand1.Mn2.Cgd1.i = Nand1.Mn2.Cgd1.p.i;
//   Nand1.Mn2.Cgb1.J1p3_1.f[2] = Nand1.Mn2.Cgb1.J1p3_1.f[1];
//   Nand1.Mn2.Cgb1.J1p3_1.f[3] = Nand1.Mn2.Cgb1.J1p3_1.f[2];
//   Nand1.Mn2.Cgb1.J1p3_1.e[1] + (Nand1.Mn2.Cgb1.J1p3_1.e[2] + Nand1.Mn2.Cgb1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Cgb1.J1p3_1.e[1] = Nand1.Mn2.Cgb1.J1p3_1.BondCon1.d * Nand1.Mn2.Cgb1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Cgb1.J1p3_1.f[1] = Nand1.Mn2.Cgb1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Cgb1.J1p3_1.e[2] = Nand1.Mn2.Cgb1.J1p3_1.BondCon2.d * Nand1.Mn2.Cgb1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Cgb1.J1p3_1.f[2] = Nand1.Mn2.Cgb1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Cgb1.J1p3_1.e[3] = Nand1.Mn2.Cgb1.J1p3_1.BondCon3.d * Nand1.Mn2.Cgb1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Cgb1.J1p3_1.f[3] = Nand1.Mn2.Cgb1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Cgb1.B1.BondCon2.e = Nand1.Mn2.Cgb1.B1.BondCon1.e;
//   Nand1.Mn2.Cgb1.B1.BondCon2.f = Nand1.Mn2.Cgb1.B1.BondCon1.f;
//   Nand1.Mn2.Cgb1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgb1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgb1.B2.BondCon2.e = Nand1.Mn2.Cgb1.B2.BondCon1.e;
//   Nand1.Mn2.Cgb1.B2.BondCon2.f = Nand1.Mn2.Cgb1.B2.BondCon1.f;
//   Nand1.Mn2.Cgb1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgb1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgb1.El2BG1.BondCon1.e = Nand1.Mn2.Cgb1.El2BG1.p.v;
//   Nand1.Mn2.Cgb1.El2BG1.BondCon1.f = Nand1.Mn2.Cgb1.El2BG1.p.i;
//   Nand1.Mn2.Cgb1.BG2El1.BondCon1.e = Nand1.Mn2.Cgb1.BG2El1.n.v;
//   Nand1.Mn2.Cgb1.BG2El1.BondCon1.f = -Nand1.Mn2.Cgb1.BG2El1.n.i;
//   Nand1.Mn2.Cgb1.Cgb1.RTemp = Nand1.Mn2.Cgb1.Cgb1.e2 / Nand1.Mn2.Cgb1.Cgb1.Tnom;
//   Nand1.Mn2.Cgb1.Cgb1.facTemp = Nand1.Mn2.Cgb1.Cgb1.RTemp ^ 1.5;
//   Nand1.Mn2.Cgb1.Cgb1.Vt = 8.61727503842867e-05 * Nand1.Mn2.Cgb1.Cgb1.e2;
//   Nand1.Mn2.Cgb1.Cgb1.EGref = Nand1.Mn2.Cgb1.Cgb1.EG + (-0.000702 * Nand1.Mn2.Cgb1.Cgb1.Tnom ^ 2.0) / (1108.0 + Nand1.Mn2.Cgb1.Cgb1.Tnom);
//   Nand1.Mn2.Cgb1.Cgb1.EGval = Nand1.Mn2.Cgb1.Cgb1.EG + (-0.000702 * Nand1.Mn2.Cgb1.Cgb1.e2 ^ 2.0) / (1108.0 + Nand1.Mn2.Cgb1.Cgb1.e2);
//   Nand1.Mn2.Cgb1.Cgb1.PHIval = Nand1.Mn2.Cgb1.Cgb1.RTemp * Nand1.Mn2.Cgb1.Cgb1.PHI + (Nand1.Mn2.Cgb1.Cgb1.EGval + (-3.0 * (Nand1.Mn2.Cgb1.Cgb1.Vt * log(Nand1.Mn2.Cgb1.Cgb1.RTemp)) - Nand1.Mn2.Cgb1.Cgb1.RTemp * Nand1.Mn2.Cgb1.Cgb1.EGref));
//   Nand1.Mn2.Cgb1.Cgb1.Vfb = Nand1.Mn2.Cgb1.Cgb1.VFB + Real(Nand1.Mn2.Cgb1.Cgb1.Type) * (Nand1.Mn2.Cgb1.Cgb1.PHIval / 2.0 + ((-Nand1.Mn2.Cgb1.Cgb1.PHI) / 2.0 + (Nand1.Mn2.Cgb1.Cgb1.EGref / 2.0 + (-Nand1.Mn2.Cgb1.Cgb1.EGval) / 2.0)));
//   Nand1.Mn2.Cgb1.Cgb1.KPval = Nand1.Mn2.Cgb1.Cgb1.KP / Nand1.Mn2.Cgb1.Cgb1.facTemp;
//   Nand1.Mn2.Cgb1.Cgb1.BETA = (Nand1.Mn2.Cgb1.Cgb1.KPval * Nand1.Mn2.Cgb1.Cgb1.W) / Nand1.Mn2.Cgb1.Cgb1.L;
//   if noEvent(Nand1.Mn2.Cgb1.Cgb1.u1 > 0.0) then
//   Nand1.Mn2.Cgb1.Cgb1.sig = 1.0;
//   Nand1.Mn2.Cgb1.Cgb1.vds = Nand1.Mn2.Cgb1.Cgb1.u1;
//   Nand1.Mn2.Cgb1.Cgb1.vgs = Nand1.Mn2.Cgb1.Cgb1.e1 + Nand1.Mn2.Cgb1.Cgb1.u2;
//   Nand1.Mn2.Cgb1.Cgb1.vbs = Nand1.Mn2.Cgb1.Cgb1.u2;
//   else
//   Nand1.Mn2.Cgb1.Cgb1.sig = -1.0;
//   Nand1.Mn2.Cgb1.Cgb1.vds = -Nand1.Mn2.Cgb1.Cgb1.u1;
//   Nand1.Mn2.Cgb1.Cgb1.vgs = Nand1.Mn2.Cgb1.Cgb1.e1 + (Nand1.Mn2.Cgb1.Cgb1.u2 - Nand1.Mn2.Cgb1.Cgb1.u1);
//   Nand1.Mn2.Cgb1.Cgb1.vbs = Nand1.Mn2.Cgb1.Cgb1.u2 - Nand1.Mn2.Cgb1.Cgb1.u1;
//   end if;
//   Nand1.Mn2.Cgb1.Cgb1.PHIroot = sqrt(Nand1.Mn2.Cgb1.Cgb1.PHIval);
//   Nand1.Mn2.Cgb1.Cgb1.PHI3 = Nand1.Mn2.Cgb1.Cgb1.PHIval * Nand1.Mn2.Cgb1.Cgb1.PHIroot;
//   Nand1.Mn2.Cgb1.Cgb1.Sarg = if Nand1.Mn2.Cgb1.Cgb1.vbs <= 0.0 then sqrt(Nand1.Mn2.Cgb1.Cgb1.PHIval - Nand1.Mn2.Cgb1.Cgb1.vbs) else Nand1.Mn2.Cgb1.Cgb1.PHIroot / (1.0 + Nand1.Mn2.Cgb1.Cgb1.vbs / (Nand1.Mn2.Cgb1.Cgb1.PHIval * 2.0));
//   Nand1.Mn2.Cgb1.Cgb1.DSarg = 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.Barg = 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.DBarg = 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.WS = Nand1.Mn2.Cgb1.Cgb1.XD * Nand1.Mn2.Cgb1.Cgb1.Sarg;
//   Nand1.Mn2.Cgb1.Cgb1.WD = Nand1.Mn2.Cgb1.Cgb1.XD * Nand1.Mn2.Cgb1.Cgb1.Barg;
//   Nand1.Mn2.Cgb1.Cgb1.WSfac = if Nand1.Mn2.Cgb1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn2.Cgb1.Cgb1.WS) / Nand1.Mn2.Cgb1.Cgb1.XJ) else 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.WDfac = if Nand1.Mn2.Cgb1.Cgb1.XJ > 0.0 then sqrt(1.0 + (2.0 * Nand1.Mn2.Cgb1.Cgb1.WD) / Nand1.Mn2.Cgb1.Cgb1.XJ) else 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.GAMMAval = Nand1.Mn2.Cgb1.Cgb1.GAMMA * (if Nand1.Mn2.Cgb1.Cgb1.XJ > 0.0 then 1.0 + (-0.5 * (Nand1.Mn2.Cgb1.Cgb1.XJ * (-2.0 + (Nand1.Mn2.Cgb1.Cgb1.WSfac + Nand1.Mn2.Cgb1.Cgb1.WDfac)))) / Nand1.Mn2.Cgb1.Cgb1.L else 1.0);
//   Nand1.Mn2.Cgb1.Cgb1.DGAMMA = Nand1.Mn2.Cgb1.Cgb1.GAMMA * (if Nand1.Mn2.Cgb1.Cgb1.XJ > 0.0 then (-0.5 * (Nand1.Mn2.Cgb1.Cgb1.XD * (Nand1.Mn2.Cgb1.Cgb1.DSarg / Nand1.Mn2.Cgb1.Cgb1.WSfac + Nand1.Mn2.Cgb1.Cgb1.DBarg / Nand1.Mn2.Cgb1.Cgb1.WDfac))) / Nand1.Mn2.Cgb1.Cgb1.L else 0.0);
//   Nand1.Mn2.Cgb1.Cgb1.Wp = Nand1.Mn2.Cgb1.Cgb1.Sarg * Nand1.Mn2.Cgb1.Cgb1.XD;
//   Nand1.Mn2.Cgb1.Cgb1.WpXJ = if Nand1.Mn2.Cgb1.Cgb1.XJ > 0.0 then Nand1.Mn2.Cgb1.Cgb1.Wp / Nand1.Mn2.Cgb1.Cgb1.XJ else 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.WcXJ = 0.0631353 + (0.8013292 * Nand1.Mn2.Cgb1.Cgb1.WpXJ + -0.01110777 * Nand1.Mn2.Cgb1.Cgb1.WpXJ ^ 2.0);
//   Nand1.Mn2.Cgb1.Cgb1.Wc = Nand1.Mn2.Cgb1.Cgb1.WcXJ * Nand1.Mn2.Cgb1.Cgb1.XJ;
//   Nand1.Mn2.Cgb1.Cgb1.Fs = if Nand1.Mn2.Cgb1.Cgb1.XJ > 0.0 then 1.0 + (Nand1.Mn2.Cgb1.Cgb1.LD - (Nand1.Mn2.Cgb1.Cgb1.LD + Nand1.Mn2.Cgb1.Cgb1.Wc) * sqrt(1.0 - (Nand1.Mn2.Cgb1.Cgb1.Wp / (Nand1.Mn2.Cgb1.Cgb1.XJ + Nand1.Mn2.Cgb1.Cgb1.Wp)) ^ 2.0)) / Nand1.Mn2.Cgb1.Cgb1.L else 1.0;
//   Nand1.Mn2.Cgb1.Cgb1.Vbody = Nand1.Mn2.Cgb1.Cgb1.GAMMA * (Nand1.Mn2.Cgb1.Cgb1.Fs * Nand1.Mn2.Cgb1.Cgb1.Sarg) + Nand1.Mn2.Cgb1.Cgb1.Fn * Nand1.Mn2.Cgb1.Cgb1.Sarg ^ 2.0;
//   Nand1.Mn2.Cgb1.Cgb1.Vth = Nand1.Mn2.Cgb1.Cgb1.Vfb + Real(Nand1.Mn2.Cgb1.Cgb1.Type) * (Nand1.Mn2.Cgb1.Cgb1.PHIval + (Nand1.Mn2.Cgb1.Cgb1.Vbody - Nand1.Mn2.Cgb1.Cgb1.SIGMA * Nand1.Mn2.Cgb1.Cgb1.vds));
//   Nand1.Mn2.Cgb1.Cgb1.CB = if noEvent(Nand1.Mn2.Cgb1.Cgb1.Vbody > 0.0) and noEvent(Nand1.Mn2.Cgb1.Cgb1.Sarg > 0.0) then (Nand1.Mn2.Cgb1.Cgb1.Vbody * Nand1.Mn2.Cgb1.Cgb1.Sarg ^ -2.0) / 2.0 else 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.N = 1.0 + ((1.6021892e-19 * Nand1.Mn2.Cgb1.Cgb1.NFS) / Nand1.Mn2.Cgb1.Cgb1.COX + Nand1.Mn2.Cgb1.Cgb1.CB);
//   Nand1.Mn2.Cgb1.Cgb1.Von = if Nand1.Mn2.Cgb1.Cgb1.NFS > 0.0 then Real(Nand1.Mn2.Cgb1.Cgb1.Type) * Nand1.Mn2.Cgb1.Cgb1.Vth + Nand1.Mn2.Cgb1.Cgb1.N * Nand1.Mn2.Cgb1.Cgb1.Vt else Real(Nand1.Mn2.Cgb1.Cgb1.Type) * Nand1.Mn2.Cgb1.Cgb1.Vth;
//   Nand1.Mn2.Cgb1.Cgb1.Cval = Nand1.Mn2.Cgb1.Cgb1.L * Nand1.Mn2.Cgb1.Cgb1.CGB0 + (if noEvent(Nand1.Mn2.Cgb1.Cgb1.vgs < Nand1.Mn2.Cgb1.Cgb1.Von - Nand1.Mn2.Cgb1.Cgb1.PHIval) then Nand1.Mn2.Cgb1.Cgb1.COXval else if noEvent(Nand1.Mn2.Cgb1.Cgb1.vgs >= Nand1.Mn2.Cgb1.Cgb1.Von - Nand1.Mn2.Cgb1.Cgb1.PHIval) and noEvent(Nand1.Mn2.Cgb1.Cgb1.vgs < Nand1.Mn2.Cgb1.Cgb1.Von) then (Nand1.Mn2.Cgb1.Cgb1.COXval * (Nand1.Mn2.Cgb1.Cgb1.Von - Nand1.Mn2.Cgb1.Cgb1.vgs)) / Nand1.Mn2.Cgb1.Cgb1.PHIval else 0.0);
//   Nand1.Mn2.Cgb1.Cgb1.f1 = Nand1.Mn2.Cgb1.Cgb1.Cval * der(Nand1.Mn2.Cgb1.Cgb1.e1);
//   Nand1.Mn2.Cgb1.Cgb1.f2 = 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.DTempSq = Nand1.Mn2.Cgb1.Cgb1.DTemp ^ 2.0;
//   Nand1.Mn2.Cgb1.Cgb1.DTemp = Nand1.Mn2.Cgb1.Cgb1.e2 - Nand1.Mn2.Cgb1.Cgb1.Tnom;
//   Nand1.Mn2.Cgb1.Cgb1.e1 = Nand1.Mn2.Cgb1.Cgb1.BondCon1.e;
//   Nand1.Mn2.Cgb1.Cgb1.f1 = Nand1.Mn2.Cgb1.Cgb1.BondCon1.d * Nand1.Mn2.Cgb1.Cgb1.BondCon1.f;
//   Nand1.Mn2.Cgb1.Cgb1.e2 = Nand1.Mn2.Cgb1.Cgb1.BondCon2.e;
//   Nand1.Mn2.Cgb1.Cgb1.f2 = (-Nand1.Mn2.Cgb1.Cgb1.BondCon2.d) * Nand1.Mn2.Cgb1.Cgb1.BondCon2.f;
//   Nand1.Mn2.Cgb1.B4.fBondCon1.e = Nand1.Mn2.Cgb1.B4.eBondCon1.e;
//   Nand1.Mn2.Cgb1.B4.eBondCon1.f = Nand1.Mn2.Cgb1.B4.fBondCon1.f;
//   Nand1.Mn2.Cgb1.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Cgb1.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.e = Nand1.Mn2.Cgb1.BG2Heat1.port_b.T;
//   Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.e * Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.f = -Nand1.Mn2.Cgb1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Cgb1.B3.BondCon2.e = Nand1.Mn2.Cgb1.B3.BondCon1.e;
//   Nand1.Mn2.Cgb1.B3.BondCon2.f = Nand1.Mn2.Cgb1.B3.BondCon1.f;
//   Nand1.Mn2.Cgb1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Cgb1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Cgb1.v = Nand1.Mn2.Cgb1.p.v - Nand1.Mn2.Cgb1.n.v;
//   Nand1.Mn2.Cgb1.i = Nand1.Mn2.Cgb1.p.i;
//   Nand1.Mn2.Vds.J1p3_1.f[2] = Nand1.Mn2.Vds.J1p3_1.f[1];
//   Nand1.Mn2.Vds.J1p3_1.f[3] = Nand1.Mn2.Vds.J1p3_1.f[2];
//   Nand1.Mn2.Vds.J1p3_1.e[1] + (Nand1.Mn2.Vds.J1p3_1.e[2] + Nand1.Mn2.Vds.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Vds.J1p3_1.e[1] = Nand1.Mn2.Vds.J1p3_1.BondCon1.d * Nand1.Mn2.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Vds.J1p3_1.f[1] = Nand1.Mn2.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Vds.J1p3_1.e[2] = Nand1.Mn2.Vds.J1p3_1.BondCon2.d * Nand1.Mn2.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Vds.J1p3_1.f[2] = Nand1.Mn2.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Vds.J1p3_1.e[3] = Nand1.Mn2.Vds.J1p3_1.BondCon3.d * Nand1.Mn2.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Vds.J1p3_1.f[3] = Nand1.Mn2.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Vds.B1.BondCon2.e = Nand1.Mn2.Vds.B1.BondCon1.e;
//   Nand1.Mn2.Vds.B1.BondCon2.f = Nand1.Mn2.Vds.B1.BondCon1.f;
//   Nand1.Mn2.Vds.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Vds.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Vds.B2.BondCon2.e = Nand1.Mn2.Vds.B2.BondCon1.e;
//   Nand1.Mn2.Vds.B2.BondCon2.f = Nand1.Mn2.Vds.B2.BondCon1.f;
//   Nand1.Mn2.Vds.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Vds.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Vds.El2BG1.BondCon1.e = Nand1.Mn2.Vds.El2BG1.p.v;
//   Nand1.Mn2.Vds.El2BG1.BondCon1.f = Nand1.Mn2.Vds.El2BG1.p.i;
//   Nand1.Mn2.Vds.BG2El1.BondCon1.e = Nand1.Mn2.Vds.BG2El1.n.v;
//   Nand1.Mn2.Vds.BG2El1.BondCon1.f = -Nand1.Mn2.Vds.BG2El1.n.i;
//   Nand1.Mn2.Vds.De1.OutPort1 = Nand1.Mn2.Vds.De1.e;
//   Nand1.Mn2.Vds.De1.f = 0.0;
//   Nand1.Mn2.Vds.De1.e = Nand1.Mn2.Vds.De1.BondCon1.e;
//   Nand1.Mn2.Vds.De1.f = Nand1.Mn2.Vds.De1.BondCon1.d * Nand1.Mn2.Vds.De1.BondCon1.f;
//   Nand1.Mn2.Vds.B3.BondCon2.e = Nand1.Mn2.Vds.B3.BondCon1.e;
//   Nand1.Mn2.Vds.B3.BondCon2.f = Nand1.Mn2.Vds.B3.BondCon1.f;
//   Nand1.Mn2.Vds.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Vds.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Vds.v = Nand1.Mn2.Vds.p.v - Nand1.Mn2.Vds.n.v;
//   Nand1.Mn2.Vds.i = Nand1.Mn2.Vds.p.i;
//   Nand1.Mn2.Vbs.J1p3_1.f[2] = Nand1.Mn2.Vbs.J1p3_1.f[1];
//   Nand1.Mn2.Vbs.J1p3_1.f[3] = Nand1.Mn2.Vbs.J1p3_1.f[2];
//   Nand1.Mn2.Vbs.J1p3_1.e[1] + (Nand1.Mn2.Vbs.J1p3_1.e[2] + Nand1.Mn2.Vbs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Vbs.J1p3_1.e[1] = Nand1.Mn2.Vbs.J1p3_1.BondCon1.d * Nand1.Mn2.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Vbs.J1p3_1.f[1] = Nand1.Mn2.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Vbs.J1p3_1.e[2] = Nand1.Mn2.Vbs.J1p3_1.BondCon2.d * Nand1.Mn2.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Vbs.J1p3_1.f[2] = Nand1.Mn2.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Vbs.J1p3_1.e[3] = Nand1.Mn2.Vbs.J1p3_1.BondCon3.d * Nand1.Mn2.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Vbs.J1p3_1.f[3] = Nand1.Mn2.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Vbs.B1.BondCon2.e = Nand1.Mn2.Vbs.B1.BondCon1.e;
//   Nand1.Mn2.Vbs.B1.BondCon2.f = Nand1.Mn2.Vbs.B1.BondCon1.f;
//   Nand1.Mn2.Vbs.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Vbs.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Vbs.B2.BondCon2.e = Nand1.Mn2.Vbs.B2.BondCon1.e;
//   Nand1.Mn2.Vbs.B2.BondCon2.f = Nand1.Mn2.Vbs.B2.BondCon1.f;
//   Nand1.Mn2.Vbs.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Vbs.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Vbs.El2BG1.BondCon1.e = Nand1.Mn2.Vbs.El2BG1.p.v;
//   Nand1.Mn2.Vbs.El2BG1.BondCon1.f = Nand1.Mn2.Vbs.El2BG1.p.i;
//   Nand1.Mn2.Vbs.BG2El1.BondCon1.e = Nand1.Mn2.Vbs.BG2El1.n.v;
//   Nand1.Mn2.Vbs.BG2El1.BondCon1.f = -Nand1.Mn2.Vbs.BG2El1.n.i;
//   Nand1.Mn2.Vbs.De1.OutPort1 = Nand1.Mn2.Vbs.De1.e;
//   Nand1.Mn2.Vbs.De1.f = 0.0;
//   Nand1.Mn2.Vbs.De1.e = Nand1.Mn2.Vbs.De1.BondCon1.e;
//   Nand1.Mn2.Vbs.De1.f = Nand1.Mn2.Vbs.De1.BondCon1.d * Nand1.Mn2.Vbs.De1.BondCon1.f;
//   Nand1.Mn2.Vbs.B3.BondCon2.e = Nand1.Mn2.Vbs.B3.BondCon1.e;
//   Nand1.Mn2.Vbs.B3.BondCon2.f = Nand1.Mn2.Vbs.B3.BondCon1.f;
//   Nand1.Mn2.Vbs.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Vbs.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Vbs.v = Nand1.Mn2.Vbs.p.v - Nand1.Mn2.Vbs.n.v;
//   Nand1.Mn2.Vbs.i = Nand1.Mn2.Vbs.p.i;
//   Nand1.Mn2.Rd.J1p3_1.f[2] = Nand1.Mn2.Rd.J1p3_1.f[1];
//   Nand1.Mn2.Rd.J1p3_1.f[3] = Nand1.Mn2.Rd.J1p3_1.f[2];
//   Nand1.Mn2.Rd.J1p3_1.e[1] + (Nand1.Mn2.Rd.J1p3_1.e[2] + Nand1.Mn2.Rd.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Rd.J1p3_1.e[1] = Nand1.Mn2.Rd.J1p3_1.BondCon1.d * Nand1.Mn2.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Rd.J1p3_1.f[1] = Nand1.Mn2.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Rd.J1p3_1.e[2] = Nand1.Mn2.Rd.J1p3_1.BondCon2.d * Nand1.Mn2.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Rd.J1p3_1.f[2] = Nand1.Mn2.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Rd.J1p3_1.e[3] = Nand1.Mn2.Rd.J1p3_1.BondCon3.d * Nand1.Mn2.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Rd.J1p3_1.f[3] = Nand1.Mn2.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Rd.B1.BondCon2.e = Nand1.Mn2.Rd.B1.BondCon1.e;
//   Nand1.Mn2.Rd.B1.BondCon2.f = Nand1.Mn2.Rd.B1.BondCon1.f;
//   Nand1.Mn2.Rd.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Rd.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Rd.B2.BondCon2.e = Nand1.Mn2.Rd.B2.BondCon1.e;
//   Nand1.Mn2.Rd.B2.BondCon2.f = Nand1.Mn2.Rd.B2.BondCon1.f;
//   Nand1.Mn2.Rd.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Rd.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Rd.El2BG1.BondCon1.e = Nand1.Mn2.Rd.El2BG1.p.v;
//   Nand1.Mn2.Rd.El2BG1.BondCon1.f = Nand1.Mn2.Rd.El2BG1.p.i;
//   Nand1.Mn2.Rd.BG2El1.BondCon1.e = Nand1.Mn2.Rd.BG2El1.n.v;
//   Nand1.Mn2.Rd.BG2El1.BondCon1.f = -Nand1.Mn2.Rd.BG2El1.n.i;
//   Nand1.Mn2.Rd.B3.BondCon2.e = Nand1.Mn2.Rd.B3.BondCon1.e;
//   Nand1.Mn2.Rd.B3.BondCon2.f = Nand1.Mn2.Rd.B3.BondCon1.f;
//   Nand1.Mn2.Rd.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Rd.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Rd.RM1.Rval = Nand1.Mn2.Rd.RM1.R * (1.0 + (Nand1.Mn2.Rd.RM1.TR1 * Nand1.Mn2.Rd.RM1.DTemp + Nand1.Mn2.Rd.RM1.TR2 * Nand1.Mn2.Rd.RM1.DTempSq));
//   Nand1.Mn2.Rd.RM1.e1 = Nand1.Mn2.Rd.RM1.Rval * Nand1.Mn2.Rd.RM1.f1;
//   Nand1.Mn2.Rd.RM1.e1 * Nand1.Mn2.Rd.RM1.f1 = Nand1.Mn2.Rd.RM1.e2 * Nand1.Mn2.Rd.RM1.f2;
//   Nand1.Mn2.Rd.RM1.DTempSq = Nand1.Mn2.Rd.RM1.DTemp ^ 2.0;
//   Nand1.Mn2.Rd.RM1.DTemp = Nand1.Mn2.Rd.RM1.e2 - Nand1.Mn2.Rd.RM1.Tnom;
//   Nand1.Mn2.Rd.RM1.e1 = Nand1.Mn2.Rd.RM1.BondCon1.e;
//   Nand1.Mn2.Rd.RM1.f1 = Nand1.Mn2.Rd.RM1.BondCon1.d * Nand1.Mn2.Rd.RM1.BondCon1.f;
//   Nand1.Mn2.Rd.RM1.e2 = Nand1.Mn2.Rd.RM1.BondCon2.e;
//   Nand1.Mn2.Rd.RM1.f2 = (-Nand1.Mn2.Rd.RM1.BondCon2.d) * Nand1.Mn2.Rd.RM1.BondCon2.f;
//   Nand1.Mn2.Rd.B4.fBondCon1.e = Nand1.Mn2.Rd.B4.eBondCon1.e;
//   Nand1.Mn2.Rd.B4.eBondCon1.f = Nand1.Mn2.Rd.B4.fBondCon1.f;
//   Nand1.Mn2.Rd.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Rd.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Rd.BG2Heat1.BondCon1.e = Nand1.Mn2.Rd.BG2Heat1.port_b.T;
//   Nand1.Mn2.Rd.BG2Heat1.BondCon1.e * Nand1.Mn2.Rd.BG2Heat1.BondCon1.f = -Nand1.Mn2.Rd.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Rd.v = Nand1.Mn2.Rd.p.v - Nand1.Mn2.Rd.n.v;
//   Nand1.Mn2.Rd.i = Nand1.Mn2.Rd.p.i;
//   Nand1.Mn2.Rs.J1p3_1.f[2] = Nand1.Mn2.Rs.J1p3_1.f[1];
//   Nand1.Mn2.Rs.J1p3_1.f[3] = Nand1.Mn2.Rs.J1p3_1.f[2];
//   Nand1.Mn2.Rs.J1p3_1.e[1] + (Nand1.Mn2.Rs.J1p3_1.e[2] + Nand1.Mn2.Rs.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Rs.J1p3_1.e[1] = Nand1.Mn2.Rs.J1p3_1.BondCon1.d * Nand1.Mn2.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Rs.J1p3_1.f[1] = Nand1.Mn2.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Rs.J1p3_1.e[2] = Nand1.Mn2.Rs.J1p3_1.BondCon2.d * Nand1.Mn2.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Rs.J1p3_1.f[2] = Nand1.Mn2.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Rs.J1p3_1.e[3] = Nand1.Mn2.Rs.J1p3_1.BondCon3.d * Nand1.Mn2.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Rs.J1p3_1.f[3] = Nand1.Mn2.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Rs.B1.BondCon2.e = Nand1.Mn2.Rs.B1.BondCon1.e;
//   Nand1.Mn2.Rs.B1.BondCon2.f = Nand1.Mn2.Rs.B1.BondCon1.f;
//   Nand1.Mn2.Rs.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Rs.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Rs.B2.BondCon2.e = Nand1.Mn2.Rs.B2.BondCon1.e;
//   Nand1.Mn2.Rs.B2.BondCon2.f = Nand1.Mn2.Rs.B2.BondCon1.f;
//   Nand1.Mn2.Rs.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Rs.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Rs.El2BG1.BondCon1.e = Nand1.Mn2.Rs.El2BG1.p.v;
//   Nand1.Mn2.Rs.El2BG1.BondCon1.f = Nand1.Mn2.Rs.El2BG1.p.i;
//   Nand1.Mn2.Rs.BG2El1.BondCon1.e = Nand1.Mn2.Rs.BG2El1.n.v;
//   Nand1.Mn2.Rs.BG2El1.BondCon1.f = -Nand1.Mn2.Rs.BG2El1.n.i;
//   Nand1.Mn2.Rs.B3.BondCon2.e = Nand1.Mn2.Rs.B3.BondCon1.e;
//   Nand1.Mn2.Rs.B3.BondCon2.f = Nand1.Mn2.Rs.B3.BondCon1.f;
//   Nand1.Mn2.Rs.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Rs.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Rs.RM1.Rval = Nand1.Mn2.Rs.RM1.R * (1.0 + (Nand1.Mn2.Rs.RM1.TR1 * Nand1.Mn2.Rs.RM1.DTemp + Nand1.Mn2.Rs.RM1.TR2 * Nand1.Mn2.Rs.RM1.DTempSq));
//   Nand1.Mn2.Rs.RM1.e1 = Nand1.Mn2.Rs.RM1.Rval * Nand1.Mn2.Rs.RM1.f1;
//   Nand1.Mn2.Rs.RM1.e1 * Nand1.Mn2.Rs.RM1.f1 = Nand1.Mn2.Rs.RM1.e2 * Nand1.Mn2.Rs.RM1.f2;
//   Nand1.Mn2.Rs.RM1.DTempSq = Nand1.Mn2.Rs.RM1.DTemp ^ 2.0;
//   Nand1.Mn2.Rs.RM1.DTemp = Nand1.Mn2.Rs.RM1.e2 - Nand1.Mn2.Rs.RM1.Tnom;
//   Nand1.Mn2.Rs.RM1.e1 = Nand1.Mn2.Rs.RM1.BondCon1.e;
//   Nand1.Mn2.Rs.RM1.f1 = Nand1.Mn2.Rs.RM1.BondCon1.d * Nand1.Mn2.Rs.RM1.BondCon1.f;
//   Nand1.Mn2.Rs.RM1.e2 = Nand1.Mn2.Rs.RM1.BondCon2.e;
//   Nand1.Mn2.Rs.RM1.f2 = (-Nand1.Mn2.Rs.RM1.BondCon2.d) * Nand1.Mn2.Rs.RM1.BondCon2.f;
//   Nand1.Mn2.Rs.B4.fBondCon1.e = Nand1.Mn2.Rs.B4.eBondCon1.e;
//   Nand1.Mn2.Rs.B4.eBondCon1.f = Nand1.Mn2.Rs.B4.fBondCon1.f;
//   Nand1.Mn2.Rs.B4.fBondCon1.d = -1.0;
//   Nand1.Mn2.Rs.B4.eBondCon1.d = 1.0;
//   Nand1.Mn2.Rs.BG2Heat1.BondCon1.e = Nand1.Mn2.Rs.BG2Heat1.port_b.T;
//   Nand1.Mn2.Rs.BG2Heat1.BondCon1.e * Nand1.Mn2.Rs.BG2Heat1.BondCon1.f = -Nand1.Mn2.Rs.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Rs.v = Nand1.Mn2.Rs.p.v - Nand1.Mn2.Rs.n.v;
//   Nand1.Mn2.Rs.i = Nand1.Mn2.Rs.p.i;
//   Nand1.Mn2.T_nom.BG2Heat1.BondCon1.e = Nand1.Mn2.T_nom.BG2Heat1.port_b.T;
//   Nand1.Mn2.T_nom.BG2Heat1.BondCon1.e * Nand1.Mn2.T_nom.BG2Heat1.BondCon1.f = -Nand1.Mn2.T_nom.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.T_nom.Tabs.e0 = Nand1.Mn2.T_nom.Tabs.s;
//   Nand1.Mn2.T_nom.Tabs.e = Nand1.Mn2.T_nom.Tabs.e0;
//   Nand1.Mn2.T_nom.Tabs.e = Nand1.Mn2.T_nom.Tabs.BondCon1.e;
//   Nand1.Mn2.T_nom.Tabs.f = (-Nand1.Mn2.T_nom.Tabs.BondCon1.d) * Nand1.Mn2.T_nom.Tabs.BondCon1.f;
//   Nand1.Mn2.T_nom.B1.fBondCon1.e = Nand1.Mn2.T_nom.B1.eBondCon1.e;
//   Nand1.Mn2.T_nom.B1.eBondCon1.f = Nand1.Mn2.T_nom.B1.fBondCon1.f;
//   Nand1.Mn2.T_nom.B1.eBondCon1.d = -1.0;
//   Nand1.Mn2.T_nom.B1.fBondCon1.d = 1.0;
//   Nand1.Mn2.T_nom.Tabs.s = Nand1.Mn2.T_nom.T;
//   Nand1.Mn2.Sw1.B1.BondCon2.e = Nand1.Mn2.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Sw1.B1.BondCon2.f = Nand1.Mn2.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Sw1.B2.BondCon2.e = Nand1.Mn2.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Sw1.B2.BondCon2.f = Nand1.Mn2.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Sw1.B3.BondCon2.e = Nand1.Mn2.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Sw1.B3.BondCon2.f = Nand1.Mn2.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Sw1.Heat2BG1.BondCon1.e = Nand1.Mn2.Sw1.Heat2BG1.port_a.T;
//   Nand1.Mn2.Sw1.Heat2BG1.BondCon1.e * Nand1.Mn2.Sw1.Heat2BG1.BondCon1.f = Nand1.Mn2.Sw1.Heat2BG1.port_a.Q_flow;
//   Nand1.Mn2.Sw1.BG2Heat1.BondCon1.e = Nand1.Mn2.Sw1.BG2Heat1.port_b.T;
//   Nand1.Mn2.Sw1.BG2Heat1.BondCon1.e * Nand1.Mn2.Sw1.BG2Heat1.BondCon1.f = -Nand1.Mn2.Sw1.BG2Heat1.port_b.Q_flow;
//   Nand1.Mn2.Sw1.BG2Heat2.BondCon1.e = Nand1.Mn2.Sw1.BG2Heat2.port_b.T;
//   Nand1.Mn2.Sw1.BG2Heat2.BondCon1.e * Nand1.Mn2.Sw1.BG2Heat2.BondCon1.f = -Nand1.Mn2.Sw1.BG2Heat2.port_b.Q_flow;
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mn2.Sw1.Sw1.J1p3_1.f[1];
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mn2.Sw1.Sw1.J1p3_1.f[2];
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.e[1] + (Nand1.Mn2.Sw1.Sw1.J1p3_1.e[2] + Nand1.Mn2.Sw1.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.e[1] = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.d * Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.f[1] = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.e[2] = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.d * Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.f[2] = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.e[3] = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.d * Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Sw1.Sw1.J1p3_1.f[3] = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon2.e = Nand1.Mn2.Sw1.Sw1.B1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon2.f = Nand1.Mn2.Sw1.Sw1.B1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon2.e = Nand1.Mn2.Sw1.Sw1.B2.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon2.f = Nand1.Mn2.Sw1.Sw1.B2.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mn2.Sw1.Sw1.J0p3_1.e[1];
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mn2.Sw1.Sw1.J0p3_1.e[2];
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.f[1] + (Nand1.Mn2.Sw1.Sw1.J0p3_1.f[2] + Nand1.Mn2.Sw1.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.e[1] = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.f[1] = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.d * Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.e[2] = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.e;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.f[2] = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.d * Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.f;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.e[3] = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.f[3] = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.d * Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon2.e = Nand1.Mn2.Sw1.Sw1.B4.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon2.f = Nand1.Mn2.Sw1.Sw1.B4.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.e2 = Nand1.Mn2.Sw1.Sw1.j0p2_1.e1;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.f1 + Nand1.Mn2.Sw1.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.e1 = Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.f1 = Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.d * Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.e2 = Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.e;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.f2 = Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.d * Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.f;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.e2 = Nand1.Mn2.Sw1.Sw1.j0p2_2.e1;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.f1 + Nand1.Mn2.Sw1.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.e1 = Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.f1 = Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.d * Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.e2 = Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.e;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.f2 = Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.d * Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.f;
//   Nand1.Mn2.Sw1.Sw1.Sw1.open = Nand1.Mn2.Sw1.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.Mn2.Sw1.Sw1.Sw1.open then Nand1.Mn2.Sw1.Sw1.Sw1.f else Nand1.Mn2.Sw1.Sw1.Sw1.e;
//   Nand1.Mn2.Sw1.Sw1.Sw1.e = Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.Sw1.f = Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.d * Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon2.e = Nand1.Mn2.Sw1.Sw1.B3.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon2.f = Nand1.Mn2.Sw1.Sw1.B3.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.Mn2.Sw1.control = true;
//   Nand1.Gnd1.B1.fBondCon1.e = Nand1.Gnd1.B1.eBondCon1.e;
//   Nand1.Gnd1.B1.eBondCon1.f = Nand1.Gnd1.B1.fBondCon1.f;
//   Nand1.Gnd1.B1.eBondCon1.d = -1.0;
//   Nand1.Gnd1.B1.fBondCon1.d = 1.0;
//   Nand1.Gnd1.V0.e = Nand1.Gnd1.V0.e0;
//   Nand1.Gnd1.V0.e = Nand1.Gnd1.V0.BondCon1.e;
//   Nand1.Gnd1.V0.f = (-Nand1.Gnd1.V0.BondCon1.d) * Nand1.Gnd1.V0.BondCon1.f;
//   Nand1.Gnd1.El2BG1.BondCon1.e = Nand1.Gnd1.El2BG1.p.v;
//   Nand1.Gnd1.El2BG1.BondCon1.f = Nand1.Gnd1.El2BG1.p.i;
//   Nand1.Gnd2.B1.fBondCon1.e = Nand1.Gnd2.B1.eBondCon1.e;
//   Nand1.Gnd2.B1.eBondCon1.f = Nand1.Gnd2.B1.fBondCon1.f;
//   Nand1.Gnd2.B1.eBondCon1.d = -1.0;
//   Nand1.Gnd2.B1.fBondCon1.d = 1.0;
//   Nand1.Gnd2.V0.e = Nand1.Gnd2.V0.e0;
//   Nand1.Gnd2.V0.e = Nand1.Gnd2.V0.BondCon1.e;
//   Nand1.Gnd2.V0.f = (-Nand1.Gnd2.V0.BondCon1.d) * Nand1.Gnd2.V0.BondCon1.f;
//   Nand1.Gnd2.El2BG1.BondCon1.e = Nand1.Gnd2.El2BG1.p.v;
//   Nand1.Gnd2.El2BG1.BondCon1.f = Nand1.Gnd2.El2BG1.p.i;
//   Nand1.Gnd3.B1.fBondCon1.e = Nand1.Gnd3.B1.eBondCon1.e;
//   Nand1.Gnd3.B1.eBondCon1.f = Nand1.Gnd3.B1.fBondCon1.f;
//   Nand1.Gnd3.B1.eBondCon1.d = -1.0;
//   Nand1.Gnd3.B1.fBondCon1.d = 1.0;
//   Nand1.Gnd3.V0.e = Nand1.Gnd3.V0.e0;
//   Nand1.Gnd3.V0.e = Nand1.Gnd3.V0.BondCon1.e;
//   Nand1.Gnd3.V0.f = (-Nand1.Gnd3.V0.BondCon1.d) * Nand1.Gnd3.V0.BondCon1.f;
//   Nand1.Gnd3.El2BG1.BondCon1.e = Nand1.Gnd3.El2BG1.p.v;
//   Nand1.Gnd3.El2BG1.BondCon1.f = Nand1.Gnd3.El2BG1.p.i;
//   Nand1.Gnd4.B1.fBondCon1.e = Nand1.Gnd4.B1.eBondCon1.e;
//   Nand1.Gnd4.B1.eBondCon1.f = Nand1.Gnd4.B1.fBondCon1.f;
//   Nand1.Gnd4.B1.eBondCon1.d = -1.0;
//   Nand1.Gnd4.B1.fBondCon1.d = 1.0;
//   Nand1.Gnd4.V0.e = Nand1.Gnd4.V0.e0;
//   Nand1.Gnd4.V0.e = Nand1.Gnd4.V0.BondCon1.e;
//   Nand1.Gnd4.V0.f = (-Nand1.Gnd4.V0.BondCon1.d) * Nand1.Gnd4.V0.BondCon1.f;
//   Nand1.Gnd4.El2BG1.BondCon1.e = Nand1.Gnd4.El2BG1.p.v;
//   Nand1.Gnd4.El2BG1.BondCon1.f = Nand1.Gnd4.El2BG1.p.i;
//   Nand1.C4.J1p3_1.f[2] = Nand1.C4.J1p3_1.f[1];
//   Nand1.C4.J1p3_1.f[3] = Nand1.C4.J1p3_1.f[2];
//   Nand1.C4.J1p3_1.e[1] + (Nand1.C4.J1p3_1.e[2] + Nand1.C4.J1p3_1.e[3]) = 0.0;
//   Nand1.C4.J1p3_1.e[1] = Nand1.C4.J1p3_1.BondCon1.d * Nand1.C4.J1p3_1.BondCon1.e;
//   Nand1.C4.J1p3_1.f[1] = Nand1.C4.J1p3_1.BondCon1.f;
//   Nand1.C4.J1p3_1.e[2] = Nand1.C4.J1p3_1.BondCon2.d * Nand1.C4.J1p3_1.BondCon2.e;
//   Nand1.C4.J1p3_1.f[2] = Nand1.C4.J1p3_1.BondCon2.f;
//   Nand1.C4.J1p3_1.e[3] = Nand1.C4.J1p3_1.BondCon3.d * Nand1.C4.J1p3_1.BondCon3.e;
//   Nand1.C4.J1p3_1.f[3] = Nand1.C4.J1p3_1.BondCon3.f;
//   Nand1.C4.B1.BondCon2.e = Nand1.C4.B1.BondCon1.e;
//   Nand1.C4.B1.BondCon2.f = Nand1.C4.B1.BondCon1.f;
//   Nand1.C4.B1.BondCon1.d = -1.0;
//   Nand1.C4.B1.BondCon2.d = 1.0;
//   Nand1.C4.B2.BondCon2.e = Nand1.C4.B2.BondCon1.e;
//   Nand1.C4.B2.BondCon2.f = Nand1.C4.B2.BondCon1.f;
//   Nand1.C4.B2.BondCon1.d = -1.0;
//   Nand1.C4.B2.BondCon2.d = 1.0;
//   Nand1.C4.El2BG1.BondCon1.e = Nand1.C4.El2BG1.p.v;
//   Nand1.C4.El2BG1.BondCon1.f = Nand1.C4.El2BG1.p.i;
//   Nand1.C4.BG2El1.BondCon1.e = Nand1.C4.BG2El1.n.v;
//   Nand1.C4.BG2El1.BondCon1.f = -Nand1.C4.BG2El1.n.i;
//   Nand1.C4.B6.fBondCon1.e = Nand1.C4.B6.eBondCon1.e;
//   Nand1.C4.B6.eBondCon1.f = Nand1.C4.B6.fBondCon1.f;
//   Nand1.C4.B6.eBondCon1.d = -1.0;
//   Nand1.C4.B6.fBondCon1.d = 1.0;
//   Nand1.C4.T_nom.e = Nand1.C4.T_nom.e0;
//   Nand1.C4.T_nom.e = Nand1.C4.T_nom.BondCon1.e;
//   Nand1.C4.T_nom.f = (-Nand1.C4.T_nom.BondCon1.d) * Nand1.C4.T_nom.BondCon1.f;
//   Nand1.C4.B3.BondCon2.e = Nand1.C4.B3.BondCon1.e;
//   Nand1.C4.B3.BondCon2.f = Nand1.C4.B3.BondCon1.f;
//   Nand1.C4.B3.BondCon1.d = -1.0;
//   Nand1.C4.B3.BondCon2.d = 1.0;
//   Nand1.C4.C1.Cval = Nand1.C4.C1.C * ((1.0 + (Nand1.C4.C1.TC1 * Nand1.C4.C1.DTemp + Nand1.C4.C1.TC2 * Nand1.C4.C1.DTempSq)) * Nand1.C4.C1.Area);
//   Nand1.C4.C1.f1 = Nand1.C4.C1.Cval * der(Nand1.C4.C1.e1);
//   Nand1.C4.C1.f2 = 0.0;
//   Nand1.C4.C1.DTempSq = Nand1.C4.C1.DTemp ^ 2.0;
//   Nand1.C4.C1.DTemp = Nand1.C4.C1.e2 - Nand1.C4.C1.Tnom;
//   Nand1.C4.C1.e1 = Nand1.C4.C1.BondCon1.e;
//   Nand1.C4.C1.f1 = Nand1.C4.C1.BondCon1.d * Nand1.C4.C1.BondCon1.f;
//   Nand1.C4.C1.e2 = Nand1.C4.C1.BondCon2.e;
//   Nand1.C4.C1.f2 = (-Nand1.C4.C1.BondCon2.d) * Nand1.C4.C1.BondCon2.f;
//   Nand1.C4.B4.fBondCon1.e = Nand1.C4.B4.eBondCon1.e;
//   Nand1.C4.B4.eBondCon1.f = Nand1.C4.B4.fBondCon1.f;
//   Nand1.C4.B4.fBondCon1.d = -1.0;
//   Nand1.C4.B4.eBondCon1.d = 1.0;
//   Nand1.C4.Sw1.J1p3_1.f[2] = Nand1.C4.Sw1.J1p3_1.f[1];
//   Nand1.C4.Sw1.J1p3_1.f[3] = Nand1.C4.Sw1.J1p3_1.f[2];
//   Nand1.C4.Sw1.J1p3_1.e[1] + (Nand1.C4.Sw1.J1p3_1.e[2] + Nand1.C4.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.C4.Sw1.J1p3_1.e[1] = Nand1.C4.Sw1.J1p3_1.BondCon1.d * Nand1.C4.Sw1.J1p3_1.BondCon1.e;
//   Nand1.C4.Sw1.J1p3_1.f[1] = Nand1.C4.Sw1.J1p3_1.BondCon1.f;
//   Nand1.C4.Sw1.J1p3_1.e[2] = Nand1.C4.Sw1.J1p3_1.BondCon2.d * Nand1.C4.Sw1.J1p3_1.BondCon2.e;
//   Nand1.C4.Sw1.J1p3_1.f[2] = Nand1.C4.Sw1.J1p3_1.BondCon2.f;
//   Nand1.C4.Sw1.J1p3_1.e[3] = Nand1.C4.Sw1.J1p3_1.BondCon3.d * Nand1.C4.Sw1.J1p3_1.BondCon3.e;
//   Nand1.C4.Sw1.J1p3_1.f[3] = Nand1.C4.Sw1.J1p3_1.BondCon3.f;
//   Nand1.C4.Sw1.B1.BondCon2.e = Nand1.C4.Sw1.B1.BondCon1.e;
//   Nand1.C4.Sw1.B1.BondCon2.f = Nand1.C4.Sw1.B1.BondCon1.f;
//   Nand1.C4.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.C4.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.C4.Sw1.B2.BondCon2.e = Nand1.C4.Sw1.B2.BondCon1.e;
//   Nand1.C4.Sw1.B2.BondCon2.f = Nand1.C4.Sw1.B2.BondCon1.f;
//   Nand1.C4.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.C4.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.C4.Sw1.J0p3_1.e[2] = Nand1.C4.Sw1.J0p3_1.e[1];
//   Nand1.C4.Sw1.J0p3_1.e[3] = Nand1.C4.Sw1.J0p3_1.e[2];
//   Nand1.C4.Sw1.J0p3_1.f[1] + (Nand1.C4.Sw1.J0p3_1.f[2] + Nand1.C4.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.C4.Sw1.J0p3_1.e[1] = Nand1.C4.Sw1.J0p3_1.BondCon1.e;
//   Nand1.C4.Sw1.J0p3_1.f[1] = Nand1.C4.Sw1.J0p3_1.BondCon1.d * Nand1.C4.Sw1.J0p3_1.BondCon1.f;
//   Nand1.C4.Sw1.J0p3_1.e[2] = Nand1.C4.Sw1.J0p3_1.BondCon2.e;
//   Nand1.C4.Sw1.J0p3_1.f[2] = Nand1.C4.Sw1.J0p3_1.BondCon2.d * Nand1.C4.Sw1.J0p3_1.BondCon2.f;
//   Nand1.C4.Sw1.J0p3_1.e[3] = Nand1.C4.Sw1.J0p3_1.BondCon3.e;
//   Nand1.C4.Sw1.J0p3_1.f[3] = Nand1.C4.Sw1.J0p3_1.BondCon3.d * Nand1.C4.Sw1.J0p3_1.BondCon3.f;
//   Nand1.C4.Sw1.B4.BondCon2.e = Nand1.C4.Sw1.B4.BondCon1.e;
//   Nand1.C4.Sw1.B4.BondCon2.f = Nand1.C4.Sw1.B4.BondCon1.f;
//   Nand1.C4.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.C4.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.C4.Sw1.j0p2_1.e2 = Nand1.C4.Sw1.j0p2_1.e1;
//   Nand1.C4.Sw1.j0p2_1.f1 + Nand1.C4.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.C4.Sw1.j0p2_1.e1 = Nand1.C4.Sw1.j0p2_1.BondCon1.e;
//   Nand1.C4.Sw1.j0p2_1.f1 = Nand1.C4.Sw1.j0p2_1.BondCon1.d * Nand1.C4.Sw1.j0p2_1.BondCon1.f;
//   Nand1.C4.Sw1.j0p2_1.e2 = Nand1.C4.Sw1.j0p2_1.BondCon2.e;
//   Nand1.C4.Sw1.j0p2_1.f2 = Nand1.C4.Sw1.j0p2_1.BondCon2.d * Nand1.C4.Sw1.j0p2_1.BondCon2.f;
//   Nand1.C4.Sw1.j0p2_2.e2 = Nand1.C4.Sw1.j0p2_2.e1;
//   Nand1.C4.Sw1.j0p2_2.f1 + Nand1.C4.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.C4.Sw1.j0p2_2.e1 = Nand1.C4.Sw1.j0p2_2.BondCon1.e;
//   Nand1.C4.Sw1.j0p2_2.f1 = Nand1.C4.Sw1.j0p2_2.BondCon1.d * Nand1.C4.Sw1.j0p2_2.BondCon1.f;
//   Nand1.C4.Sw1.j0p2_2.e2 = Nand1.C4.Sw1.j0p2_2.BondCon2.e;
//   Nand1.C4.Sw1.j0p2_2.f2 = Nand1.C4.Sw1.j0p2_2.BondCon2.d * Nand1.C4.Sw1.j0p2_2.BondCon2.f;
//   Nand1.C4.Sw1.Sw1.open = Nand1.C4.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.C4.Sw1.Sw1.open then Nand1.C4.Sw1.Sw1.f else Nand1.C4.Sw1.Sw1.e;
//   Nand1.C4.Sw1.Sw1.e = Nand1.C4.Sw1.Sw1.BondCon1.e;
//   Nand1.C4.Sw1.Sw1.f = Nand1.C4.Sw1.Sw1.BondCon1.d * Nand1.C4.Sw1.Sw1.BondCon1.f;
//   Nand1.C4.Sw1.B3.BondCon2.e = Nand1.C4.Sw1.B3.BondCon1.e;
//   Nand1.C4.Sw1.B3.BondCon2.f = Nand1.C4.Sw1.B3.BondCon1.f;
//   Nand1.C4.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.C4.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.C4.B5.fBondCon1.e = Nand1.C4.B5.eBondCon1.e;
//   Nand1.C4.B5.eBondCon1.f = Nand1.C4.B5.fBondCon1.f;
//   Nand1.C4.B5.fBondCon1.d = -1.0;
//   Nand1.C4.B5.eBondCon1.d = 1.0;
//   Nand1.C4.BG2Heat1.BondCon1.e = Nand1.C4.BG2Heat1.port_b.T;
//   Nand1.C4.BG2Heat1.BondCon1.e * Nand1.C4.BG2Heat1.BondCon1.f = -Nand1.C4.BG2Heat1.port_b.Q_flow;
//   Nand1.C4.Sw1.control = true;
//   Nand1.C4.v = Nand1.C4.p.v - Nand1.C4.n.v;
//   Nand1.C4.i = Nand1.C4.p.i;
//   Nand1.C7.J1p3_1.f[2] = Nand1.C7.J1p3_1.f[1];
//   Nand1.C7.J1p3_1.f[3] = Nand1.C7.J1p3_1.f[2];
//   Nand1.C7.J1p3_1.e[1] + (Nand1.C7.J1p3_1.e[2] + Nand1.C7.J1p3_1.e[3]) = 0.0;
//   Nand1.C7.J1p3_1.e[1] = Nand1.C7.J1p3_1.BondCon1.d * Nand1.C7.J1p3_1.BondCon1.e;
//   Nand1.C7.J1p3_1.f[1] = Nand1.C7.J1p3_1.BondCon1.f;
//   Nand1.C7.J1p3_1.e[2] = Nand1.C7.J1p3_1.BondCon2.d * Nand1.C7.J1p3_1.BondCon2.e;
//   Nand1.C7.J1p3_1.f[2] = Nand1.C7.J1p3_1.BondCon2.f;
//   Nand1.C7.J1p3_1.e[3] = Nand1.C7.J1p3_1.BondCon3.d * Nand1.C7.J1p3_1.BondCon3.e;
//   Nand1.C7.J1p3_1.f[3] = Nand1.C7.J1p3_1.BondCon3.f;
//   Nand1.C7.B1.BondCon2.e = Nand1.C7.B1.BondCon1.e;
//   Nand1.C7.B1.BondCon2.f = Nand1.C7.B1.BondCon1.f;
//   Nand1.C7.B1.BondCon1.d = -1.0;
//   Nand1.C7.B1.BondCon2.d = 1.0;
//   Nand1.C7.B2.BondCon2.e = Nand1.C7.B2.BondCon1.e;
//   Nand1.C7.B2.BondCon2.f = Nand1.C7.B2.BondCon1.f;
//   Nand1.C7.B2.BondCon1.d = -1.0;
//   Nand1.C7.B2.BondCon2.d = 1.0;
//   Nand1.C7.El2BG1.BondCon1.e = Nand1.C7.El2BG1.p.v;
//   Nand1.C7.El2BG1.BondCon1.f = Nand1.C7.El2BG1.p.i;
//   Nand1.C7.BG2El1.BondCon1.e = Nand1.C7.BG2El1.n.v;
//   Nand1.C7.BG2El1.BondCon1.f = -Nand1.C7.BG2El1.n.i;
//   Nand1.C7.B6.fBondCon1.e = Nand1.C7.B6.eBondCon1.e;
//   Nand1.C7.B6.eBondCon1.f = Nand1.C7.B6.fBondCon1.f;
//   Nand1.C7.B6.eBondCon1.d = -1.0;
//   Nand1.C7.B6.fBondCon1.d = 1.0;
//   Nand1.C7.T_nom.e = Nand1.C7.T_nom.e0;
//   Nand1.C7.T_nom.e = Nand1.C7.T_nom.BondCon1.e;
//   Nand1.C7.T_nom.f = (-Nand1.C7.T_nom.BondCon1.d) * Nand1.C7.T_nom.BondCon1.f;
//   Nand1.C7.B3.BondCon2.e = Nand1.C7.B3.BondCon1.e;
//   Nand1.C7.B3.BondCon2.f = Nand1.C7.B3.BondCon1.f;
//   Nand1.C7.B3.BondCon1.d = -1.0;
//   Nand1.C7.B3.BondCon2.d = 1.0;
//   Nand1.C7.C1.Cval = Nand1.C7.C1.C * ((1.0 + (Nand1.C7.C1.TC1 * Nand1.C7.C1.DTemp + Nand1.C7.C1.TC2 * Nand1.C7.C1.DTempSq)) * Nand1.C7.C1.Area);
//   Nand1.C7.C1.f1 = Nand1.C7.C1.Cval * der(Nand1.C7.C1.e1);
//   Nand1.C7.C1.f2 = 0.0;
//   Nand1.C7.C1.DTempSq = Nand1.C7.C1.DTemp ^ 2.0;
//   Nand1.C7.C1.DTemp = Nand1.C7.C1.e2 - Nand1.C7.C1.Tnom;
//   Nand1.C7.C1.e1 = Nand1.C7.C1.BondCon1.e;
//   Nand1.C7.C1.f1 = Nand1.C7.C1.BondCon1.d * Nand1.C7.C1.BondCon1.f;
//   Nand1.C7.C1.e2 = Nand1.C7.C1.BondCon2.e;
//   Nand1.C7.C1.f2 = (-Nand1.C7.C1.BondCon2.d) * Nand1.C7.C1.BondCon2.f;
//   Nand1.C7.B4.fBondCon1.e = Nand1.C7.B4.eBondCon1.e;
//   Nand1.C7.B4.eBondCon1.f = Nand1.C7.B4.fBondCon1.f;
//   Nand1.C7.B4.fBondCon1.d = -1.0;
//   Nand1.C7.B4.eBondCon1.d = 1.0;
//   Nand1.C7.Sw1.J1p3_1.f[2] = Nand1.C7.Sw1.J1p3_1.f[1];
//   Nand1.C7.Sw1.J1p3_1.f[3] = Nand1.C7.Sw1.J1p3_1.f[2];
//   Nand1.C7.Sw1.J1p3_1.e[1] + (Nand1.C7.Sw1.J1p3_1.e[2] + Nand1.C7.Sw1.J1p3_1.e[3]) = 0.0;
//   Nand1.C7.Sw1.J1p3_1.e[1] = Nand1.C7.Sw1.J1p3_1.BondCon1.d * Nand1.C7.Sw1.J1p3_1.BondCon1.e;
//   Nand1.C7.Sw1.J1p3_1.f[1] = Nand1.C7.Sw1.J1p3_1.BondCon1.f;
//   Nand1.C7.Sw1.J1p3_1.e[2] = Nand1.C7.Sw1.J1p3_1.BondCon2.d * Nand1.C7.Sw1.J1p3_1.BondCon2.e;
//   Nand1.C7.Sw1.J1p3_1.f[2] = Nand1.C7.Sw1.J1p3_1.BondCon2.f;
//   Nand1.C7.Sw1.J1p3_1.e[3] = Nand1.C7.Sw1.J1p3_1.BondCon3.d * Nand1.C7.Sw1.J1p3_1.BondCon3.e;
//   Nand1.C7.Sw1.J1p3_1.f[3] = Nand1.C7.Sw1.J1p3_1.BondCon3.f;
//   Nand1.C7.Sw1.B1.BondCon2.e = Nand1.C7.Sw1.B1.BondCon1.e;
//   Nand1.C7.Sw1.B1.BondCon2.f = Nand1.C7.Sw1.B1.BondCon1.f;
//   Nand1.C7.Sw1.B1.BondCon1.d = -1.0;
//   Nand1.C7.Sw1.B1.BondCon2.d = 1.0;
//   Nand1.C7.Sw1.B2.BondCon2.e = Nand1.C7.Sw1.B2.BondCon1.e;
//   Nand1.C7.Sw1.B2.BondCon2.f = Nand1.C7.Sw1.B2.BondCon1.f;
//   Nand1.C7.Sw1.B2.BondCon1.d = -1.0;
//   Nand1.C7.Sw1.B2.BondCon2.d = 1.0;
//   Nand1.C7.Sw1.J0p3_1.e[2] = Nand1.C7.Sw1.J0p3_1.e[1];
//   Nand1.C7.Sw1.J0p3_1.e[3] = Nand1.C7.Sw1.J0p3_1.e[2];
//   Nand1.C7.Sw1.J0p3_1.f[1] + (Nand1.C7.Sw1.J0p3_1.f[2] + Nand1.C7.Sw1.J0p3_1.f[3]) = 0.0;
//   Nand1.C7.Sw1.J0p3_1.e[1] = Nand1.C7.Sw1.J0p3_1.BondCon1.e;
//   Nand1.C7.Sw1.J0p3_1.f[1] = Nand1.C7.Sw1.J0p3_1.BondCon1.d * Nand1.C7.Sw1.J0p3_1.BondCon1.f;
//   Nand1.C7.Sw1.J0p3_1.e[2] = Nand1.C7.Sw1.J0p3_1.BondCon2.e;
//   Nand1.C7.Sw1.J0p3_1.f[2] = Nand1.C7.Sw1.J0p3_1.BondCon2.d * Nand1.C7.Sw1.J0p3_1.BondCon2.f;
//   Nand1.C7.Sw1.J0p3_1.e[3] = Nand1.C7.Sw1.J0p3_1.BondCon3.e;
//   Nand1.C7.Sw1.J0p3_1.f[3] = Nand1.C7.Sw1.J0p3_1.BondCon3.d * Nand1.C7.Sw1.J0p3_1.BondCon3.f;
//   Nand1.C7.Sw1.B4.BondCon2.e = Nand1.C7.Sw1.B4.BondCon1.e;
//   Nand1.C7.Sw1.B4.BondCon2.f = Nand1.C7.Sw1.B4.BondCon1.f;
//   Nand1.C7.Sw1.B4.BondCon1.d = -1.0;
//   Nand1.C7.Sw1.B4.BondCon2.d = 1.0;
//   Nand1.C7.Sw1.j0p2_1.e2 = Nand1.C7.Sw1.j0p2_1.e1;
//   Nand1.C7.Sw1.j0p2_1.f1 + Nand1.C7.Sw1.j0p2_1.f2 = 0.0;
//   Nand1.C7.Sw1.j0p2_1.e1 = Nand1.C7.Sw1.j0p2_1.BondCon1.e;
//   Nand1.C7.Sw1.j0p2_1.f1 = Nand1.C7.Sw1.j0p2_1.BondCon1.d * Nand1.C7.Sw1.j0p2_1.BondCon1.f;
//   Nand1.C7.Sw1.j0p2_1.e2 = Nand1.C7.Sw1.j0p2_1.BondCon2.e;
//   Nand1.C7.Sw1.j0p2_1.f2 = Nand1.C7.Sw1.j0p2_1.BondCon2.d * Nand1.C7.Sw1.j0p2_1.BondCon2.f;
//   Nand1.C7.Sw1.j0p2_2.e2 = Nand1.C7.Sw1.j0p2_2.e1;
//   Nand1.C7.Sw1.j0p2_2.f1 + Nand1.C7.Sw1.j0p2_2.f2 = 0.0;
//   Nand1.C7.Sw1.j0p2_2.e1 = Nand1.C7.Sw1.j0p2_2.BondCon1.e;
//   Nand1.C7.Sw1.j0p2_2.f1 = Nand1.C7.Sw1.j0p2_2.BondCon1.d * Nand1.C7.Sw1.j0p2_2.BondCon1.f;
//   Nand1.C7.Sw1.j0p2_2.e2 = Nand1.C7.Sw1.j0p2_2.BondCon2.e;
//   Nand1.C7.Sw1.j0p2_2.f2 = Nand1.C7.Sw1.j0p2_2.BondCon2.d * Nand1.C7.Sw1.j0p2_2.BondCon2.f;
//   Nand1.C7.Sw1.Sw1.open = Nand1.C7.Sw1.Sw1.BooleanInPort1;
//   0.0 = if Nand1.C7.Sw1.Sw1.open then Nand1.C7.Sw1.Sw1.f else Nand1.C7.Sw1.Sw1.e;
//   Nand1.C7.Sw1.Sw1.e = Nand1.C7.Sw1.Sw1.BondCon1.e;
//   Nand1.C7.Sw1.Sw1.f = Nand1.C7.Sw1.Sw1.BondCon1.d * Nand1.C7.Sw1.Sw1.BondCon1.f;
//   Nand1.C7.Sw1.B3.BondCon2.e = Nand1.C7.Sw1.B3.BondCon1.e;
//   Nand1.C7.Sw1.B3.BondCon2.f = Nand1.C7.Sw1.B3.BondCon1.f;
//   Nand1.C7.Sw1.B3.BondCon1.d = -1.0;
//   Nand1.C7.Sw1.B3.BondCon2.d = 1.0;
//   Nand1.C7.B5.fBondCon1.e = Nand1.C7.B5.eBondCon1.e;
//   Nand1.C7.B5.eBondCon1.f = Nand1.C7.B5.fBondCon1.f;
//   Nand1.C7.B5.fBondCon1.d = -1.0;
//   Nand1.C7.B5.eBondCon1.d = 1.0;
//   Nand1.C7.BG2Heat1.BondCon1.e = Nand1.C7.BG2Heat1.port_b.T;
//   Nand1.C7.BG2Heat1.BondCon1.e * Nand1.C7.BG2Heat1.BondCon1.f = -Nand1.C7.BG2Heat1.port_b.Q_flow;
//   Nand1.C7.Sw1.control = true;
//   Nand1.C7.v = Nand1.C7.p.v - Nand1.C7.n.v;
//   Nand1.C7.i = Nand1.C7.p.i;
//   vA = VIN1.v;
//   vB = VIN2.v;
//   vNAND = Vnand.v;
//   Pth = Qtot.Q_flow;
//   VDD.p.i + Nand1.Vdd.i = 0.0;
//   VDD.n.i + Gnd1.p.i = 0.0;
//   (-VDD.p.i) + VDD.El2BG1.p.i = 0.0;
//   (-VDD.n.i) + VDD.BG2El1.n.i = 0.0;
//   VDD.B3.eBondCon1.e = VDD.V1.BondCon1.e;
//   VDD.B3.eBondCon1.f = VDD.V1.BondCon1.f;
//   VDD.B3.eBondCon1.d = VDD.V1.BondCon1.d;
//   VDD.B3.fBondCon1.e = VDD.J1p3_1.BondCon3.e;
//   VDD.B3.fBondCon1.f = VDD.J1p3_1.BondCon3.f;
//   VDD.B3.fBondCon1.d = VDD.J1p3_1.BondCon3.d;
//   VDD.B1.BondCon2.e = VDD.J1p3_1.BondCon2.e;
//   VDD.B1.BondCon2.f = VDD.J1p3_1.BondCon2.f;
//   VDD.B1.BondCon2.d = VDD.J1p3_1.BondCon2.d;
//   VDD.B1.BondCon1.e = VDD.BG2El1.BondCon1.e;
//   VDD.B1.BondCon1.f = VDD.BG2El1.BondCon1.f;
//   VDD.B1.BondCon1.d = VDD.BG2El1.BondCon1.d;
//   VDD.B2.BondCon2.e = VDD.El2BG1.BondCon1.e;
//   VDD.B2.BondCon2.f = VDD.El2BG1.BondCon1.f;
//   VDD.B2.BondCon2.d = VDD.El2BG1.BondCon1.d;
//   VDD.B2.BondCon1.e = VDD.J1p3_1.BondCon1.e;
//   VDD.B2.BondCon1.f = VDD.J1p3_1.BondCon1.f;
//   VDD.B2.BondCon1.d = VDD.J1p3_1.BondCon1.d;
//   VDD.El2BG1.p.v = VDD.p.v;
//   VDD.BG2El1.n.v = VDD.n.v;
//   Gnd4.p.i + VIN1.n.i = 0.0;
//   (-Gnd4.p.i) + Gnd4.El2BG1.p.i = 0.0;
//   Gnd4.El2BG1.p.v = Gnd4.p.v;
//   Gnd4.B1.fBondCon1.e = Gnd4.El2BG1.BondCon1.e;
//   Gnd4.B1.fBondCon1.f = Gnd4.El2BG1.BondCon1.f;
//   Gnd4.B1.fBondCon1.d = Gnd4.El2BG1.BondCon1.d;
//   Gnd4.B1.eBondCon1.e = Gnd4.V0.BondCon1.e;
//   Gnd4.B1.eBondCon1.f = Gnd4.V0.BondCon1.f;
//   Gnd4.B1.eBondCon1.d = Gnd4.V0.BondCon1.d;
//   VIN2.p.i + Nand1.x2.i = 0.0;
//   VIN2.n.i + Gnd5.p.i = 0.0;
//   (-VIN2.p.i) + VIN2.El2BG1.p.i = 0.0;
//   (-VIN2.n.i) + VIN2.BG2El1.n.i = 0.0;
//   VIN2.B3.eBondCon1.e = VIN2.V1.BondCon1.e;
//   VIN2.B3.eBondCon1.f = VIN2.V1.BondCon1.f;
//   VIN2.B3.eBondCon1.d = VIN2.V1.BondCon1.d;
//   VIN2.B3.fBondCon1.e = VIN2.J1p3_1.BondCon3.e;
//   VIN2.B3.fBondCon1.f = VIN2.J1p3_1.BondCon3.f;
//   VIN2.B3.fBondCon1.d = VIN2.J1p3_1.BondCon3.d;
//   VIN2.B1.BondCon2.e = VIN2.J1p3_1.BondCon2.e;
//   VIN2.B1.BondCon2.f = VIN2.J1p3_1.BondCon2.f;
//   VIN2.B1.BondCon2.d = VIN2.J1p3_1.BondCon2.d;
//   VIN2.B1.BondCon1.e = VIN2.BG2El1.BondCon1.e;
//   VIN2.B1.BondCon1.f = VIN2.BG2El1.BondCon1.f;
//   VIN2.B1.BondCon1.d = VIN2.BG2El1.BondCon1.d;
//   VIN2.B2.BondCon2.e = VIN2.El2BG1.BondCon1.e;
//   VIN2.B2.BondCon2.f = VIN2.El2BG1.BondCon1.f;
//   VIN2.B2.BondCon2.d = VIN2.El2BG1.BondCon1.d;
//   VIN2.B2.BondCon1.e = VIN2.J1p3_1.BondCon1.e;
//   VIN2.B2.BondCon1.f = VIN2.J1p3_1.BondCon1.f;
//   VIN2.B2.BondCon1.d = VIN2.J1p3_1.BondCon1.d;
//   VIN2.El2BG1.p.v = VIN2.p.v;
//   VIN2.BG2El1.n.v = VIN2.n.v;
//   (-Gnd5.p.i) + Gnd5.El2BG1.p.i = 0.0;
//   Gnd5.El2BG1.p.v = Gnd5.p.v;
//   Gnd5.B1.fBondCon1.e = Gnd5.El2BG1.BondCon1.e;
//   Gnd5.B1.fBondCon1.f = Gnd5.El2BG1.BondCon1.f;
//   Gnd5.B1.fBondCon1.d = Gnd5.El2BG1.BondCon1.d;
//   Gnd5.B1.eBondCon1.e = Gnd5.V0.BondCon1.e;
//   Gnd5.B1.eBondCon1.f = Gnd5.V0.BondCon1.f;
//   Gnd5.B1.eBondCon1.d = Gnd5.V0.BondCon1.d;
//   (-Gnd1.p.i) + Gnd1.El2BG1.p.i = 0.0;
//   Gnd1.El2BG1.p.v = Gnd1.p.v;
//   Gnd1.B1.fBondCon1.e = Gnd1.El2BG1.BondCon1.e;
//   Gnd1.B1.fBondCon1.f = Gnd1.El2BG1.BondCon1.f;
//   Gnd1.B1.fBondCon1.d = Gnd1.El2BG1.BondCon1.d;
//   Gnd1.B1.eBondCon1.e = Gnd1.V0.BondCon1.e;
//   Gnd1.B1.eBondCon1.f = Gnd1.V0.BondCon1.f;
//   Gnd1.B1.eBondCon1.d = Gnd1.V0.BondCon1.d;
//   Vnand.p.i + Nand1.y.i = 0.0;
//   Vnand.n.i + Gnd2.p.i = 0.0;
//   (-Vnand.p.i) + Vnand.El2BG1.p.i = 0.0;
//   (-Vnand.n.i) + Vnand.BG2El1.n.i = 0.0;
//   Vnand.B3.BondCon2.e = Vnand.De1.BondCon1.e;
//   Vnand.B3.BondCon2.f = Vnand.De1.BondCon1.f;
//   Vnand.B3.BondCon2.d = Vnand.De1.BondCon1.d;
//   Vnand.B3.BondCon1.e = Vnand.J1p3_1.BondCon3.e;
//   Vnand.B3.BondCon1.f = Vnand.J1p3_1.BondCon3.f;
//   Vnand.B3.BondCon1.d = Vnand.J1p3_1.BondCon3.d;
//   Vnand.De1.OutPort1 = Vnand.V;
//   Vnand.B1.BondCon2.e = Vnand.J1p3_1.BondCon1.e;
//   Vnand.B1.BondCon2.f = Vnand.J1p3_1.BondCon1.f;
//   Vnand.B1.BondCon2.d = Vnand.J1p3_1.BondCon1.d;
//   Vnand.B2.BondCon1.e = Vnand.J1p3_1.BondCon2.e;
//   Vnand.B2.BondCon1.f = Vnand.J1p3_1.BondCon2.f;
//   Vnand.B2.BondCon1.d = Vnand.J1p3_1.BondCon2.d;
//   Vnand.B1.BondCon1.e = Vnand.El2BG1.BondCon1.e;
//   Vnand.B1.BondCon1.f = Vnand.El2BG1.BondCon1.f;
//   Vnand.B1.BondCon1.d = Vnand.El2BG1.BondCon1.d;
//   Vnand.B2.BondCon2.e = Vnand.BG2El1.BondCon1.e;
//   Vnand.B2.BondCon2.f = Vnand.BG2El1.BondCon1.f;
//   Vnand.B2.BondCon2.d = Vnand.BG2El1.BondCon1.d;
//   Vnand.El2BG1.p.v = Vnand.p.v;
//   Vnand.BG2El1.n.v = Vnand.n.v;
//   (-Gnd2.p.i) + Gnd2.El2BG1.p.i = 0.0;
//   Gnd2.El2BG1.p.v = Gnd2.p.v;
//   Gnd2.B1.fBondCon1.e = Gnd2.El2BG1.BondCon1.e;
//   Gnd2.B1.fBondCon1.f = Gnd2.El2BG1.BondCon1.f;
//   Gnd2.B1.fBondCon1.d = Gnd2.El2BG1.BondCon1.d;
//   Gnd2.B1.eBondCon1.e = Gnd2.V0.BondCon1.e;
//   Gnd2.B1.eBondCon1.f = Gnd2.V0.BondCon1.f;
//   Gnd2.B1.eBondCon1.d = Gnd2.V0.BondCon1.d;
//   Qtot.port_a.Q_flow + Nand1.heatPort.Q_flow = 0.0;
//   Qtot.port_b.Q_flow + FixedTemperature1.port.Q_flow = 0.0;
//   (-Qtot.port_a.Q_flow) + Qtot.Heat2BG1.port_a.Q_flow = 0.0;
//   (-Qtot.port_b.Q_flow) + Qtot.BG2Heat1.port_b.Q_flow = 0.0;
//   Qtot.B1.P = Qtot.Q_flow1;
//   Qtot.Heat2BG1.port_a.T = Qtot.port_a.T;
//   Qtot.BG2Heat1.port_b.T = Qtot.port_b.T;
//   Qtot.B1.BondCon1.e = Qtot.Heat2BG1.BondCon1.e;
//   Qtot.B1.BondCon1.f = Qtot.Heat2BG1.BondCon1.f;
//   Qtot.B1.BondCon1.d = Qtot.Heat2BG1.BondCon1.d;
//   Qtot.B1.BondCon2.e = Qtot.BG2Heat1.BondCon1.e;
//   Qtot.B1.BondCon2.f = Qtot.BG2Heat1.BondCon1.f;
//   Qtot.B1.BondCon2.d = Qtot.BG2Heat1.BondCon1.d;
//   FixedTemperature1.BG2Heat1.port_b.Q_flow + (-FixedTemperature1.port.Q_flow) = 0.0;
//   FixedTemperature1.B1.fBondCon1.e = FixedTemperature1.BG2Heat1.BondCon1.e;
//   FixedTemperature1.B1.fBondCon1.f = FixedTemperature1.BG2Heat1.BondCon1.f;
//   FixedTemperature1.B1.fBondCon1.d = FixedTemperature1.BG2Heat1.BondCon1.d;
//   FixedTemperature1.B1.eBondCon1.e = FixedTemperature1.Tabs.BondCon1.e;
//   FixedTemperature1.B1.eBondCon1.f = FixedTemperature1.Tabs.BondCon1.f;
//   FixedTemperature1.B1.eBondCon1.d = FixedTemperature1.Tabs.BondCon1.d;
//   FixedTemperature1.BG2Heat1.port_b.T = FixedTemperature1.port.T;
//   VIN1.p.i + Nand1.x1.i = 0.0;
//   (-VIN1.p.i) + VIN1.El2BG1.p.i = 0.0;
//   (-VIN1.n.i) + VIN1.BG2El1.n.i = 0.0;
//   VIN1.B3.eBondCon1.e = VIN1.V1.BondCon1.e;
//   VIN1.B3.eBondCon1.f = VIN1.V1.BondCon1.f;
//   VIN1.B3.eBondCon1.d = VIN1.V1.BondCon1.d;
//   VIN1.B3.fBondCon1.e = VIN1.J1p3_1.BondCon3.e;
//   VIN1.B3.fBondCon1.f = VIN1.J1p3_1.BondCon3.f;
//   VIN1.B3.fBondCon1.d = VIN1.J1p3_1.BondCon3.d;
//   VIN1.B1.BondCon2.e = VIN1.J1p3_1.BondCon2.e;
//   VIN1.B1.BondCon2.f = VIN1.J1p3_1.BondCon2.f;
//   VIN1.B1.BondCon2.d = VIN1.J1p3_1.BondCon2.d;
//   VIN1.B1.BondCon1.e = VIN1.BG2El1.BondCon1.e;
//   VIN1.B1.BondCon1.f = VIN1.BG2El1.BondCon1.f;
//   VIN1.B1.BondCon1.d = VIN1.BG2El1.BondCon1.d;
//   VIN1.B2.BondCon2.e = VIN1.El2BG1.BondCon1.e;
//   VIN1.B2.BondCon2.f = VIN1.El2BG1.BondCon1.f;
//   VIN1.B2.BondCon2.d = VIN1.El2BG1.BondCon1.d;
//   VIN1.B2.BondCon1.e = VIN1.J1p3_1.BondCon1.e;
//   VIN1.B2.BondCon1.f = VIN1.J1p3_1.BondCon1.f;
//   VIN1.B2.BondCon1.d = VIN1.J1p3_1.BondCon1.d;
//   VIN1.El2BG1.p.v = VIN1.p.v;
//   VIN1.BG2El1.n.v = VIN1.n.v;
//   (-Nand1.Vdd.i) + Nand1.Mp1.D.i + Nand1.Mp1.B.i + Nand1.Mp2.D.i + Nand1.Mp2.B.i = 0.0;
//   (-Nand1.x2.i) + Nand1.Mp1.G.i + Nand1.Mn1.G.i = 0.0;
//   (-Nand1.y.i) + Nand1.Mp1.S.i + Nand1.Mp2.S.i + Nand1.Mn1.D.i + Nand1.C4.p.i = 0.0;
//   (-Nand1.heatPort.Q_flow) + Nand1.Mp1.heatPort.Q_flow + Nand1.Mp2.heatPort.Q_flow + Nand1.Mn1.heatPort.Q_flow + Nand1.Mn2.heatPort.Q_flow + Nand1.C4.heatPort.Q_flow + Nand1.C7.heatPort.Q_flow = 0.0;
//   Nand1.Mp1.Csg1.p.i + Nand1.Mp1.Rs.p.i + Nand1.Mp1.Mpi.S.i = 0.0;
//   (-Nand1.Mp1.G.i) + Nand1.Mp1.Csg1.n.i + Nand1.Mp1.Cdg1.n.i + Nand1.Mp1.Cbg1.n.i + Nand1.Mp1.Mpi.G.i = 0.0;
//   Nand1.Mp1.Csg1.heatPort.Q_flow + Nand1.Mp1.Cdg1.heatPort.Q_flow + Nand1.Mp1.Cbg1.heatPort.Q_flow + Nand1.Mp1.Rd.heatPort.Q_flow + Nand1.Mp1.Rs.heatPort.Q_flow + Nand1.Mp1.Mpi.heatPort.Q_flow + Nand1.Mp1.Sw1.p.Q_flow = 0.0;
//   (-Nand1.Mp1.Csg1.p.i) + Nand1.Mp1.Csg1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Csg1.n.i) + Nand1.Mp1.Csg1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Csg1.heatPort.Q_flow) + Nand1.Mp1.Csg1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Csg1.Cgs1.u1 = Nand1.Mp1.Csg1.vds;
//   Nand1.Mp1.Csg1.Cgs1.u2 = Nand1.Mp1.Csg1.vbs;
//   Nand1.Mp1.Csg1.BG2Heat1.port_b.T = Nand1.Mp1.Csg1.heatPort.T;
//   Nand1.Mp1.Csg1.B4.eBondCon1.e = Nand1.Mp1.Csg1.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Csg1.B4.eBondCon1.f = Nand1.Mp1.Csg1.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Csg1.B4.eBondCon1.d = Nand1.Mp1.Csg1.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Csg1.B4.fBondCon1.e = Nand1.Mp1.Csg1.Cgs1.BondCon2.e;
//   Nand1.Mp1.Csg1.B4.fBondCon1.f = Nand1.Mp1.Csg1.Cgs1.BondCon2.f;
//   Nand1.Mp1.Csg1.B4.fBondCon1.d = Nand1.Mp1.Csg1.Cgs1.BondCon2.d;
//   Nand1.Mp1.Csg1.B3.BondCon2.e = Nand1.Mp1.Csg1.Cgs1.BondCon1.e;
//   Nand1.Mp1.Csg1.B3.BondCon2.f = Nand1.Mp1.Csg1.Cgs1.BondCon1.f;
//   Nand1.Mp1.Csg1.B3.BondCon2.d = Nand1.Mp1.Csg1.Cgs1.BondCon1.d;
//   Nand1.Mp1.Csg1.B3.BondCon1.e = Nand1.Mp1.Csg1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Csg1.B3.BondCon1.f = Nand1.Mp1.Csg1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Csg1.B3.BondCon1.d = Nand1.Mp1.Csg1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Csg1.Cgs1.u[5] = Nand1.Mp1.Csg1.u[5];
//   Nand1.Mp1.Csg1.Cgs1.u[4] = Nand1.Mp1.Csg1.u[4];
//   Nand1.Mp1.Csg1.Cgs1.u[3] = Nand1.Mp1.Csg1.u[3];
//   Nand1.Mp1.Csg1.Cgs1.u[2] = Nand1.Mp1.Csg1.u[2];
//   Nand1.Mp1.Csg1.Cgs1.u[1] = Nand1.Mp1.Csg1.u[1];
//   Nand1.Mp1.Csg1.B1.BondCon2.e = Nand1.Mp1.Csg1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Csg1.B1.BondCon2.f = Nand1.Mp1.Csg1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Csg1.B1.BondCon2.d = Nand1.Mp1.Csg1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Csg1.B2.BondCon1.e = Nand1.Mp1.Csg1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Csg1.B2.BondCon1.f = Nand1.Mp1.Csg1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Csg1.B2.BondCon1.d = Nand1.Mp1.Csg1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Csg1.B1.BondCon1.e = Nand1.Mp1.Csg1.El2BG1.BondCon1.e;
//   Nand1.Mp1.Csg1.B1.BondCon1.f = Nand1.Mp1.Csg1.El2BG1.BondCon1.f;
//   Nand1.Mp1.Csg1.B1.BondCon1.d = Nand1.Mp1.Csg1.El2BG1.BondCon1.d;
//   Nand1.Mp1.Csg1.B2.BondCon2.e = Nand1.Mp1.Csg1.BG2El1.BondCon1.e;
//   Nand1.Mp1.Csg1.B2.BondCon2.f = Nand1.Mp1.Csg1.BG2El1.BondCon1.f;
//   Nand1.Mp1.Csg1.B2.BondCon2.d = Nand1.Mp1.Csg1.BG2El1.BondCon1.d;
//   Nand1.Mp1.Csg1.El2BG1.p.v = Nand1.Mp1.Csg1.p.v;
//   Nand1.Mp1.Csg1.BG2El1.n.v = Nand1.Mp1.Csg1.n.v;
//   Nand1.Mp1.Cdg1.p.i + Nand1.Mp1.Rd.p.i + Nand1.Mp1.Mpi.D.i = 0.0;
//   (-Nand1.Mp1.Cdg1.p.i) + Nand1.Mp1.Cdg1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Cdg1.n.i) + Nand1.Mp1.Cdg1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Cdg1.heatPort.Q_flow) + Nand1.Mp1.Cdg1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Cdg1.Cgd1.u[5] = Nand1.Mp1.Cdg1.u[5];
//   Nand1.Mp1.Cdg1.Cgd1.u[4] = Nand1.Mp1.Cdg1.u[4];
//   Nand1.Mp1.Cdg1.Cgd1.u[3] = Nand1.Mp1.Cdg1.u[3];
//   Nand1.Mp1.Cdg1.Cgd1.u[2] = Nand1.Mp1.Cdg1.u[2];
//   Nand1.Mp1.Cdg1.Cgd1.u[1] = Nand1.Mp1.Cdg1.u[1];
//   Nand1.Mp1.Cdg1.Cgd1.u1 = Nand1.Mp1.Cdg1.vds;
//   Nand1.Mp1.Cdg1.Cgd1.u2 = Nand1.Mp1.Cdg1.vbs;
//   Nand1.Mp1.Cdg1.B3.BondCon2.e = Nand1.Mp1.Cdg1.Cgd1.BondCon1.e;
//   Nand1.Mp1.Cdg1.B3.BondCon2.f = Nand1.Mp1.Cdg1.Cgd1.BondCon1.f;
//   Nand1.Mp1.Cdg1.B3.BondCon2.d = Nand1.Mp1.Cdg1.Cgd1.BondCon1.d;
//   Nand1.Mp1.Cdg1.B3.BondCon1.e = Nand1.Mp1.Cdg1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Cdg1.B3.BondCon1.f = Nand1.Mp1.Cdg1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Cdg1.B3.BondCon1.d = Nand1.Mp1.Cdg1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Cdg1.BG2Heat1.port_b.T = Nand1.Mp1.Cdg1.heatPort.T;
//   Nand1.Mp1.Cdg1.B4.eBondCon1.e = Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Cdg1.B4.eBondCon1.f = Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Cdg1.B4.eBondCon1.d = Nand1.Mp1.Cdg1.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Cdg1.B4.fBondCon1.e = Nand1.Mp1.Cdg1.Cgd1.BondCon2.e;
//   Nand1.Mp1.Cdg1.B4.fBondCon1.f = Nand1.Mp1.Cdg1.Cgd1.BondCon2.f;
//   Nand1.Mp1.Cdg1.B4.fBondCon1.d = Nand1.Mp1.Cdg1.Cgd1.BondCon2.d;
//   Nand1.Mp1.Cdg1.B1.BondCon2.e = Nand1.Mp1.Cdg1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Cdg1.B1.BondCon2.f = Nand1.Mp1.Cdg1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Cdg1.B1.BondCon2.d = Nand1.Mp1.Cdg1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Cdg1.B2.BondCon1.e = Nand1.Mp1.Cdg1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Cdg1.B2.BondCon1.f = Nand1.Mp1.Cdg1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Cdg1.B2.BondCon1.d = Nand1.Mp1.Cdg1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Cdg1.B1.BondCon1.e = Nand1.Mp1.Cdg1.El2BG1.BondCon1.e;
//   Nand1.Mp1.Cdg1.B1.BondCon1.f = Nand1.Mp1.Cdg1.El2BG1.BondCon1.f;
//   Nand1.Mp1.Cdg1.B1.BondCon1.d = Nand1.Mp1.Cdg1.El2BG1.BondCon1.d;
//   Nand1.Mp1.Cdg1.B2.BondCon2.e = Nand1.Mp1.Cdg1.BG2El1.BondCon1.e;
//   Nand1.Mp1.Cdg1.B2.BondCon2.f = Nand1.Mp1.Cdg1.BG2El1.BondCon1.f;
//   Nand1.Mp1.Cdg1.B2.BondCon2.d = Nand1.Mp1.Cdg1.BG2El1.BondCon1.d;
//   Nand1.Mp1.Cdg1.El2BG1.p.v = Nand1.Mp1.Cdg1.p.v;
//   Nand1.Mp1.Cdg1.BG2El1.n.v = Nand1.Mp1.Cdg1.n.v;
//   (-Nand1.Mp1.B.i) + Nand1.Mp1.Cbg1.p.i + Nand1.Mp1.Vsb.n.i + Nand1.Mp1.Mpi.B.i = 0.0;
//   (-Nand1.Mp1.Cbg1.p.i) + Nand1.Mp1.Cbg1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Cbg1.n.i) + Nand1.Mp1.Cbg1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Cbg1.heatPort.Q_flow) + Nand1.Mp1.Cbg1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Cbg1.Cgb1.u[5] = Nand1.Mp1.Cbg1.u[5];
//   Nand1.Mp1.Cbg1.Cgb1.u[4] = Nand1.Mp1.Cbg1.u[4];
//   Nand1.Mp1.Cbg1.Cgb1.u[3] = Nand1.Mp1.Cbg1.u[3];
//   Nand1.Mp1.Cbg1.Cgb1.u[2] = Nand1.Mp1.Cbg1.u[2];
//   Nand1.Mp1.Cbg1.Cgb1.u[1] = Nand1.Mp1.Cbg1.u[1];
//   Nand1.Mp1.Cbg1.Cgb1.u1 = Nand1.Mp1.Cbg1.vds;
//   Nand1.Mp1.Cbg1.Cgb1.u2 = Nand1.Mp1.Cbg1.vbs;
//   Nand1.Mp1.Cbg1.B3.BondCon2.e = Nand1.Mp1.Cbg1.Cgb1.BondCon1.e;
//   Nand1.Mp1.Cbg1.B3.BondCon2.f = Nand1.Mp1.Cbg1.Cgb1.BondCon1.f;
//   Nand1.Mp1.Cbg1.B3.BondCon2.d = Nand1.Mp1.Cbg1.Cgb1.BondCon1.d;
//   Nand1.Mp1.Cbg1.B3.BondCon1.e = Nand1.Mp1.Cbg1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Cbg1.B3.BondCon1.f = Nand1.Mp1.Cbg1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Cbg1.B3.BondCon1.d = Nand1.Mp1.Cbg1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Cbg1.BG2Heat1.port_b.T = Nand1.Mp1.Cbg1.heatPort.T;
//   Nand1.Mp1.Cbg1.B4.eBondCon1.e = Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Cbg1.B4.eBondCon1.f = Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Cbg1.B4.eBondCon1.d = Nand1.Mp1.Cbg1.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Cbg1.B4.fBondCon1.e = Nand1.Mp1.Cbg1.Cgb1.BondCon2.e;
//   Nand1.Mp1.Cbg1.B4.fBondCon1.f = Nand1.Mp1.Cbg1.Cgb1.BondCon2.f;
//   Nand1.Mp1.Cbg1.B4.fBondCon1.d = Nand1.Mp1.Cbg1.Cgb1.BondCon2.d;
//   Nand1.Mp1.Cbg1.B1.BondCon2.e = Nand1.Mp1.Cbg1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Cbg1.B1.BondCon2.f = Nand1.Mp1.Cbg1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Cbg1.B1.BondCon2.d = Nand1.Mp1.Cbg1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Cbg1.B2.BondCon1.e = Nand1.Mp1.Cbg1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Cbg1.B2.BondCon1.f = Nand1.Mp1.Cbg1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Cbg1.B2.BondCon1.d = Nand1.Mp1.Cbg1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Cbg1.B1.BondCon1.e = Nand1.Mp1.Cbg1.El2BG1.BondCon1.e;
//   Nand1.Mp1.Cbg1.B1.BondCon1.f = Nand1.Mp1.Cbg1.El2BG1.BondCon1.f;
//   Nand1.Mp1.Cbg1.B1.BondCon1.d = Nand1.Mp1.Cbg1.El2BG1.BondCon1.d;
//   Nand1.Mp1.Cbg1.B2.BondCon2.e = Nand1.Mp1.Cbg1.BG2El1.BondCon1.e;
//   Nand1.Mp1.Cbg1.B2.BondCon2.f = Nand1.Mp1.Cbg1.BG2El1.BondCon1.f;
//   Nand1.Mp1.Cbg1.B2.BondCon2.d = Nand1.Mp1.Cbg1.BG2El1.BondCon1.d;
//   Nand1.Mp1.Cbg1.El2BG1.p.v = Nand1.Mp1.Cbg1.p.v;
//   Nand1.Mp1.Cbg1.BG2El1.n.v = Nand1.Mp1.Cbg1.n.v;
//   (-Nand1.Mp1.S.i) + Nand1.Mp1.Vsb.p.i + Nand1.Mp1.Rs.n.i + Nand1.Mp1.Vsd.p.i = 0.0;
//   (-Nand1.Mp1.Vsb.p.i) + Nand1.Mp1.Vsb.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Vsb.n.i) + Nand1.Mp1.Vsb.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Vsb.B3.BondCon2.e = Nand1.Mp1.Vsb.De1.BondCon1.e;
//   Nand1.Mp1.Vsb.B3.BondCon2.f = Nand1.Mp1.Vsb.De1.BondCon1.f;
//   Nand1.Mp1.Vsb.B3.BondCon2.d = Nand1.Mp1.Vsb.De1.BondCon1.d;
//   Nand1.Mp1.Vsb.B3.BondCon1.e = Nand1.Mp1.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Vsb.B3.BondCon1.f = Nand1.Mp1.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Vsb.B3.BondCon1.d = Nand1.Mp1.Vsb.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Vsb.De1.OutPort1 = Nand1.Mp1.Vsb.V;
//   Nand1.Mp1.Vsb.B1.BondCon2.e = Nand1.Mp1.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Vsb.B1.BondCon2.f = Nand1.Mp1.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Vsb.B1.BondCon2.d = Nand1.Mp1.Vsb.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Vsb.B2.BondCon1.e = Nand1.Mp1.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Vsb.B2.BondCon1.f = Nand1.Mp1.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Vsb.B2.BondCon1.d = Nand1.Mp1.Vsb.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Vsb.B1.BondCon1.e = Nand1.Mp1.Vsb.El2BG1.BondCon1.e;
//   Nand1.Mp1.Vsb.B1.BondCon1.f = Nand1.Mp1.Vsb.El2BG1.BondCon1.f;
//   Nand1.Mp1.Vsb.B1.BondCon1.d = Nand1.Mp1.Vsb.El2BG1.BondCon1.d;
//   Nand1.Mp1.Vsb.B2.BondCon2.e = Nand1.Mp1.Vsb.BG2El1.BondCon1.e;
//   Nand1.Mp1.Vsb.B2.BondCon2.f = Nand1.Mp1.Vsb.BG2El1.BondCon1.f;
//   Nand1.Mp1.Vsb.B2.BondCon2.d = Nand1.Mp1.Vsb.BG2El1.BondCon1.d;
//   Nand1.Mp1.Vsb.El2BG1.p.v = Nand1.Mp1.Vsb.p.v;
//   Nand1.Mp1.Vsb.BG2El1.n.v = Nand1.Mp1.Vsb.n.v;
//   (-Nand1.Mp1.D.i) + Nand1.Mp1.Rd.n.i + Nand1.Mp1.Vsd.n.i = 0.0;
//   (-Nand1.Mp1.Rd.p.i) + Nand1.Mp1.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Rd.n.i) + Nand1.Mp1.Rd.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Rd.heatPort.Q_flow) + Nand1.Mp1.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Rd.BG2Heat1.port_b.T = Nand1.Mp1.Rd.heatPort.T;
//   Nand1.Mp1.Rd.B4.eBondCon1.e = Nand1.Mp1.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Rd.B4.eBondCon1.f = Nand1.Mp1.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Rd.B4.eBondCon1.d = Nand1.Mp1.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Rd.B4.fBondCon1.e = Nand1.Mp1.Rd.RM1.BondCon2.e;
//   Nand1.Mp1.Rd.B4.fBondCon1.f = Nand1.Mp1.Rd.RM1.BondCon2.f;
//   Nand1.Mp1.Rd.B4.fBondCon1.d = Nand1.Mp1.Rd.RM1.BondCon2.d;
//   Nand1.Mp1.Rd.B3.BondCon2.e = Nand1.Mp1.Rd.RM1.BondCon1.e;
//   Nand1.Mp1.Rd.B3.BondCon2.f = Nand1.Mp1.Rd.RM1.BondCon1.f;
//   Nand1.Mp1.Rd.B3.BondCon2.d = Nand1.Mp1.Rd.RM1.BondCon1.d;
//   Nand1.Mp1.Rd.B3.BondCon1.e = Nand1.Mp1.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Rd.B3.BondCon1.f = Nand1.Mp1.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Rd.B3.BondCon1.d = Nand1.Mp1.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Rd.B1.BondCon2.e = Nand1.Mp1.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Rd.B1.BondCon2.f = Nand1.Mp1.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Rd.B1.BondCon2.d = Nand1.Mp1.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Rd.B2.BondCon1.e = Nand1.Mp1.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Rd.B2.BondCon1.f = Nand1.Mp1.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Rd.B2.BondCon1.d = Nand1.Mp1.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Rd.B1.BondCon1.e = Nand1.Mp1.Rd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Rd.B1.BondCon1.f = Nand1.Mp1.Rd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Rd.B1.BondCon1.d = Nand1.Mp1.Rd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Rd.B2.BondCon2.e = Nand1.Mp1.Rd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Rd.B2.BondCon2.f = Nand1.Mp1.Rd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Rd.B2.BondCon2.d = Nand1.Mp1.Rd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Rd.El2BG1.p.v = Nand1.Mp1.Rd.p.v;
//   Nand1.Mp1.Rd.BG2El1.n.v = Nand1.Mp1.Rd.n.v;
//   (-Nand1.Mp1.Rs.p.i) + Nand1.Mp1.Rs.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Rs.n.i) + Nand1.Mp1.Rs.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Rs.heatPort.Q_flow) + Nand1.Mp1.Rs.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Rs.BG2Heat1.port_b.T = Nand1.Mp1.Rs.heatPort.T;
//   Nand1.Mp1.Rs.B4.eBondCon1.e = Nand1.Mp1.Rs.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Rs.B4.eBondCon1.f = Nand1.Mp1.Rs.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Rs.B4.eBondCon1.d = Nand1.Mp1.Rs.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Rs.B4.fBondCon1.e = Nand1.Mp1.Rs.RM1.BondCon2.e;
//   Nand1.Mp1.Rs.B4.fBondCon1.f = Nand1.Mp1.Rs.RM1.BondCon2.f;
//   Nand1.Mp1.Rs.B4.fBondCon1.d = Nand1.Mp1.Rs.RM1.BondCon2.d;
//   Nand1.Mp1.Rs.B3.BondCon2.e = Nand1.Mp1.Rs.RM1.BondCon1.e;
//   Nand1.Mp1.Rs.B3.BondCon2.f = Nand1.Mp1.Rs.RM1.BondCon1.f;
//   Nand1.Mp1.Rs.B3.BondCon2.d = Nand1.Mp1.Rs.RM1.BondCon1.d;
//   Nand1.Mp1.Rs.B3.BondCon1.e = Nand1.Mp1.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Rs.B3.BondCon1.f = Nand1.Mp1.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Rs.B3.BondCon1.d = Nand1.Mp1.Rs.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Rs.B1.BondCon2.e = Nand1.Mp1.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Rs.B1.BondCon2.f = Nand1.Mp1.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Rs.B1.BondCon2.d = Nand1.Mp1.Rs.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Rs.B2.BondCon1.e = Nand1.Mp1.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Rs.B2.BondCon1.f = Nand1.Mp1.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Rs.B2.BondCon1.d = Nand1.Mp1.Rs.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Rs.B1.BondCon1.e = Nand1.Mp1.Rs.El2BG1.BondCon1.e;
//   Nand1.Mp1.Rs.B1.BondCon1.f = Nand1.Mp1.Rs.El2BG1.BondCon1.f;
//   Nand1.Mp1.Rs.B1.BondCon1.d = Nand1.Mp1.Rs.El2BG1.BondCon1.d;
//   Nand1.Mp1.Rs.B2.BondCon2.e = Nand1.Mp1.Rs.BG2El1.BondCon1.e;
//   Nand1.Mp1.Rs.B2.BondCon2.f = Nand1.Mp1.Rs.BG2El1.BondCon1.f;
//   Nand1.Mp1.Rs.B2.BondCon2.d = Nand1.Mp1.Rs.BG2El1.BondCon1.d;
//   Nand1.Mp1.Rs.El2BG1.p.v = Nand1.Mp1.Rs.p.v;
//   Nand1.Mp1.Rs.BG2El1.n.v = Nand1.Mp1.Rs.n.v;
//   (-Nand1.Mp1.Mpi.heatPort.Q_flow) + Nand1.Mp1.Mpi.Tdev1.port.Q_flow + Nand1.Mp1.Mpi.Dsb.heatPort.Q_flow + Nand1.Mp1.Mpi.Ddb.heatPort.Q_flow + Nand1.Mp1.Mpi.Isd.heatPort.Q_flow + Nand1.Mp1.Mpi.Rsg.heatPort.Q_flow + Nand1.Mp1.Mpi.Rdg.heatPort.Q_flow + Nand1.Mp1.Mpi.Rbg.heatPort.Q_flow + Nand1.Mp1.Mpi.Rsd.heatPort.Q_flow = 0.0;
//   (-Nand1.Mp1.Mpi.S.i) + Nand1.Mp1.Mpi.Vsg.p.i + Nand1.Mp1.Mpi.Vsb.p.i + Nand1.Mp1.Mpi.Dsb.p.i + Nand1.Mp1.Mpi.Vsd.p.i + Nand1.Mp1.Mpi.Isd.p.i + Nand1.Mp1.Mpi.Rsg.n.i + Nand1.Mp1.Mpi.Rsd.n.i = 0.0;
//   (-Nand1.Mp1.Mpi.G.i) + Nand1.Mp1.Mpi.Vsg.n.i + Nand1.Mp1.Mpi.Rsg.p.i + Nand1.Mp1.Mpi.Rdg.p.i + Nand1.Mp1.Mpi.Rbg.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Vsg.p.i) + Nand1.Mp1.Mpi.Vsg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Vsg.n.i) + Nand1.Mp1.Mpi.Vsg.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon2.e = Nand1.Mp1.Mpi.Vsg.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon2.f = Nand1.Mp1.Mpi.Vsg.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon2.d = Nand1.Mp1.Mpi.Vsg.De1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon1.e = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon1.f = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Vsg.B3.BondCon1.d = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Vsg.De1.OutPort1 = Nand1.Mp1.Mpi.Vsg.V;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon2.e = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon2.f = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon2.d = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon1.e = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon1.f = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon1.d = Nand1.Mp1.Mpi.Vsg.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon1.e = Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon1.f = Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B1.BondCon1.d = Nand1.Mp1.Mpi.Vsg.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon2.e = Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon2.f = Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsg.B2.BondCon2.d = Nand1.Mp1.Mpi.Vsg.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsg.El2BG1.p.v = Nand1.Mp1.Mpi.Vsg.p.v;
//   Nand1.Mp1.Mpi.Vsg.BG2El1.n.v = Nand1.Mp1.Mpi.Vsg.n.v;
//   (-Nand1.Mp1.Mpi.B.i) + Nand1.Mp1.Mpi.Vsb.n.i + Nand1.Mp1.Mpi.Dsb.n.i + Nand1.Mp1.Mpi.Ddb.n.i + Nand1.Mp1.Mpi.Rbg.n.i = 0.0;
//   (-Nand1.Mp1.Mpi.Vsb.p.i) + Nand1.Mp1.Mpi.Vsb.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Vsb.n.i) + Nand1.Mp1.Mpi.Vsb.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon2.e = Nand1.Mp1.Mpi.Vsb.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon2.f = Nand1.Mp1.Mpi.Vsb.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon2.d = Nand1.Mp1.Mpi.Vsb.De1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon1.e = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon1.f = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Vsb.B3.BondCon1.d = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Vsb.De1.OutPort1 = Nand1.Mp1.Mpi.Vsb.V;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon2.e = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon2.f = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon2.d = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon1.e = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon1.f = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon1.d = Nand1.Mp1.Mpi.Vsb.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon1.e = Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon1.f = Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B1.BondCon1.d = Nand1.Mp1.Mpi.Vsb.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon2.e = Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon2.f = Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsb.B2.BondCon2.d = Nand1.Mp1.Mpi.Vsb.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsb.El2BG1.p.v = Nand1.Mp1.Mpi.Vsb.p.v;
//   Nand1.Mp1.Mpi.Vsb.BG2El1.n.v = Nand1.Mp1.Mpi.Vsb.n.v;
//   (-Nand1.Mp1.Mpi.Dsb.heatPort.Q_flow) + Nand1.Mp1.Mpi.Dsb.Tdev1.port.Q_flow + Nand1.Mp1.Mpi.Dsb.Rd.heatPort.Q_flow + Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.p.i) + Nand1.Mp1.Mpi.Dsb.Rd.p.i + Nand1.Mp1.Mpi.Dsb.DjM1.p.i + Nand1.Mp1.Mpi.Dsb.Vd.p.i + Nand1.Mp1.Mpi.Dsb.VarC1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.n.i) + Nand1.Mp1.Mpi.Dsb.Rd.n.i + Nand1.Mp1.Mpi.Dsb.DjM1.n.i + Nand1.Mp1.Mpi.Dsb.Vd.n.i + Nand1.Mp1.Mpi.Dsb.VarC1.n.i = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.Rd.p.i) + Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.Rd.n.i) + Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.control;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B3.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B1.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B2.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.Sw1.B4.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Dsb.Rd.heatPort.Q_flow) + Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Dsb.Rd.heatPort.T;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.eBondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B5.fBondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.fBondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.eBondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.Sw1.p.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B4.fBondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon2.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.R1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B1.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B2.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B3.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Dsb.Rd.El2BG1.p.v = Nand1.Mp1.Mpi.Dsb.Rd.p.v;
//   Nand1.Mp1.Mpi.Dsb.Rd.BG2El1.n.v = Nand1.Mp1.Mpi.Dsb.Rd.n.v;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.e = Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Rd.B6.eBondCon1.d = Nand1.Mp1.Mpi.Dsb.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Dsb.DjM1.p.i) + Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.DjM1.n.i) + Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.Q_flow) + Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.T;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.f = Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.eBondCon1.d = Nand1.Mp1.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.f = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B4.fBondCon1.d = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon2.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon2.d = Nand1.Mp1.Mpi.Dsb.DjM1.DjM1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.f = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B3.BondCon1.d = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon2.d = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.f = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon1.d = Nand1.Mp1.Mpi.Dsb.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B1.BondCon1.d = Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.DjM1.B2.BondCon2.d = Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.DjM1.El2BG1.p.v = Nand1.Mp1.Mpi.Dsb.DjM1.p.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.BG2El1.n.v = Nand1.Mp1.Mpi.Dsb.DjM1.n.v;
//   (-Nand1.Mp1.Mpi.Dsb.Vd.p.i) + Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.Vd.n.i) + Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Vd.De1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B3.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Dsb.Vd.De1.OutPort1 = Nand1.Mp1.Mpi.Dsb.Vd.V;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B1.BondCon1.d = Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.Vd.B2.BondCon2.d = Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.Vd.El2BG1.p.v = Nand1.Mp1.Mpi.Dsb.Vd.p.v;
//   Nand1.Mp1.Mpi.Dsb.Vd.BG2El1.n.v = Nand1.Mp1.Mpi.Dsb.Vd.n.v;
//   (-Nand1.Mp1.Mpi.Dsb.VarC1.p.i) + Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Dsb.VarC1.n.i) + Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Dsb.VarC1.mC1.s = Nand1.Mp1.Mpi.Dsb.VarC1.u;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.e = Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.f = Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon2.d = Nand1.Mp1.Mpi.Dsb.VarC1.mC1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.e = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.f = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B3.BondCon1.d = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.e = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.f = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon2.d = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.e = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.f = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon1.d = Nand1.Mp1.Mpi.Dsb.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.e = Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.f = Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B1.BondCon1.d = Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.e = Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.f = Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Dsb.VarC1.B2.BondCon2.d = Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Dsb.VarC1.El2BG1.p.v = Nand1.Mp1.Mpi.Dsb.VarC1.p.v;
//   Nand1.Mp1.Mpi.Dsb.VarC1.BG2El1.n.v = Nand1.Mp1.Mpi.Dsb.VarC1.n.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.p.v = Nand1.Mp1.Mpi.Dsb.Rd.p.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.p.v = Nand1.Mp1.Mpi.Dsb.VarC1.p.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.p.v = Nand1.Mp1.Mpi.Dsb.Vd.p.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.p.v = Nand1.Mp1.Mpi.Dsb.p.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.n.v = Nand1.Mp1.Mpi.Dsb.Rd.n.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.n.v = Nand1.Mp1.Mpi.Dsb.VarC1.n.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.n.v = Nand1.Mp1.Mpi.Dsb.Vd.n.v;
//   Nand1.Mp1.Mpi.Dsb.DjM1.n.v = Nand1.Mp1.Mpi.Dsb.n.v;
//   Nand1.Mp1.Mpi.Dsb.VarC1.u = Nand1.Mp1.Mpi.Dsb.nlCM1.y;
//   Nand1.Mp1.Mpi.Dsb.Vd.V = Nand1.Mp1.Mpi.Dsb.nlCM1.u;
//   Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.T = Nand1.Mp1.Mpi.Dsb.Rd.heatPort.T;
//   Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.T = Nand1.Mp1.Mpi.Dsb.Tdev1.port.T;
//   Nand1.Mp1.Mpi.Dsb.DjM1.heatPort.T = Nand1.Mp1.Mpi.Dsb.heatPort.T;
//   Nand1.Mp1.Mpi.Dsb.Tdev1.T = Nand1.Mp1.Mpi.Dsb.nlCM1.Tdev;
//   (-Nand1.Mp1.Mpi.D.i) + Nand1.Mp1.Mpi.Ddb.p.i + Nand1.Mp1.Mpi.Vsd.n.i + Nand1.Mp1.Mpi.Isd.n.i + Nand1.Mp1.Mpi.Rdg.n.i + Nand1.Mp1.Mpi.Rsd.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.heatPort.Q_flow) + Nand1.Mp1.Mpi.Ddb.Tdev1.port.Q_flow + Nand1.Mp1.Mpi.Ddb.Rd.heatPort.Q_flow + Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.p.i) + Nand1.Mp1.Mpi.Ddb.Rd.p.i + Nand1.Mp1.Mpi.Ddb.DjM1.p.i + Nand1.Mp1.Mpi.Ddb.Vd.p.i + Nand1.Mp1.Mpi.Ddb.VarC1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.n.i) + Nand1.Mp1.Mpi.Ddb.Rd.n.i + Nand1.Mp1.Mpi.Ddb.DjM1.n.i + Nand1.Mp1.Mpi.Ddb.Vd.n.i + Nand1.Mp1.Mpi.Ddb.VarC1.n.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.Rd.p.i) + Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.Rd.n.i) + Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.control;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B3.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B1.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B2.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.Sw1.B4.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Ddb.Rd.heatPort.Q_flow) + Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Ddb.Rd.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.eBondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B5.fBondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.fBondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.eBondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.Sw1.p.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B4.fBondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon2.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.R1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B1.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B2.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B3.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Ddb.Rd.El2BG1.p.v = Nand1.Mp1.Mpi.Ddb.Rd.p.v;
//   Nand1.Mp1.Mpi.Ddb.Rd.BG2El1.n.v = Nand1.Mp1.Mpi.Ddb.Rd.n.v;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.e = Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Rd.B6.eBondCon1.d = Nand1.Mp1.Mpi.Ddb.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Ddb.DjM1.p.i) + Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.DjM1.n.i) + Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.Q_flow) + Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.f = Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.eBondCon1.d = Nand1.Mp1.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.f = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B4.fBondCon1.d = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon2.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon2.d = Nand1.Mp1.Mpi.Ddb.DjM1.DjM1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.f = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B3.BondCon1.d = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon2.d = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.f = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon1.d = Nand1.Mp1.Mpi.Ddb.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B1.BondCon1.d = Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.DjM1.B2.BondCon2.d = Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.DjM1.El2BG1.p.v = Nand1.Mp1.Mpi.Ddb.DjM1.p.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.BG2El1.n.v = Nand1.Mp1.Mpi.Ddb.DjM1.n.v;
//   (-Nand1.Mp1.Mpi.Ddb.Vd.p.i) + Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.Vd.n.i) + Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Vd.De1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B3.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Ddb.Vd.De1.OutPort1 = Nand1.Mp1.Mpi.Ddb.Vd.V;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B1.BondCon1.d = Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.Vd.B2.BondCon2.d = Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.Vd.El2BG1.p.v = Nand1.Mp1.Mpi.Ddb.Vd.p.v;
//   Nand1.Mp1.Mpi.Ddb.Vd.BG2El1.n.v = Nand1.Mp1.Mpi.Ddb.Vd.n.v;
//   (-Nand1.Mp1.Mpi.Ddb.VarC1.p.i) + Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Ddb.VarC1.n.i) + Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Ddb.VarC1.mC1.s = Nand1.Mp1.Mpi.Ddb.VarC1.u;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.e = Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.f = Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon2.d = Nand1.Mp1.Mpi.Ddb.VarC1.mC1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.e = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.f = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B3.BondCon1.d = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.e = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.f = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon2.d = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.e = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.f = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon1.d = Nand1.Mp1.Mpi.Ddb.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.e = Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.f = Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B1.BondCon1.d = Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.e = Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.f = Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Ddb.VarC1.B2.BondCon2.d = Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Ddb.VarC1.El2BG1.p.v = Nand1.Mp1.Mpi.Ddb.VarC1.p.v;
//   Nand1.Mp1.Mpi.Ddb.VarC1.BG2El1.n.v = Nand1.Mp1.Mpi.Ddb.VarC1.n.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.p.v = Nand1.Mp1.Mpi.Ddb.Rd.p.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.p.v = Nand1.Mp1.Mpi.Ddb.VarC1.p.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.p.v = Nand1.Mp1.Mpi.Ddb.Vd.p.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.p.v = Nand1.Mp1.Mpi.Ddb.p.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.n.v = Nand1.Mp1.Mpi.Ddb.Rd.n.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.n.v = Nand1.Mp1.Mpi.Ddb.VarC1.n.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.n.v = Nand1.Mp1.Mpi.Ddb.Vd.n.v;
//   Nand1.Mp1.Mpi.Ddb.DjM1.n.v = Nand1.Mp1.Mpi.Ddb.n.v;
//   Nand1.Mp1.Mpi.Ddb.VarC1.u = Nand1.Mp1.Mpi.Ddb.nlCM1.y;
//   Nand1.Mp1.Mpi.Ddb.Vd.V = Nand1.Mp1.Mpi.Ddb.nlCM1.u;
//   Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.T = Nand1.Mp1.Mpi.Ddb.Rd.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.T = Nand1.Mp1.Mpi.Ddb.Tdev1.port.T;
//   Nand1.Mp1.Mpi.Ddb.DjM1.heatPort.T = Nand1.Mp1.Mpi.Ddb.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.Tdev1.T = Nand1.Mp1.Mpi.Ddb.nlCM1.Tdev;
//   (-Nand1.Mp1.Mpi.Vsd.p.i) + Nand1.Mp1.Mpi.Vsd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Vsd.n.i) + Nand1.Mp1.Mpi.Vsd.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon2.e = Nand1.Mp1.Mpi.Vsd.De1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon2.f = Nand1.Mp1.Mpi.Vsd.De1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon2.d = Nand1.Mp1.Mpi.Vsd.De1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon1.e = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon1.f = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Vsd.B3.BondCon1.d = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Vsd.De1.OutPort1 = Nand1.Mp1.Mpi.Vsd.V;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon2.e = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon2.f = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon2.d = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon1.e = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon1.f = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon1.d = Nand1.Mp1.Mpi.Vsd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon1.e = Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon1.f = Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B1.BondCon1.d = Nand1.Mp1.Mpi.Vsd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon2.e = Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon2.f = Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Vsd.B2.BondCon2.d = Nand1.Mp1.Mpi.Vsd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Vsd.El2BG1.p.v = Nand1.Mp1.Mpi.Vsd.p.v;
//   Nand1.Mp1.Mpi.Vsd.BG2El1.n.v = Nand1.Mp1.Mpi.Vsd.n.v;
//   (-Nand1.Mp1.Mpi.Isd.p.i) + Nand1.Mp1.Mpi.Isd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Isd.n.i) + Nand1.Mp1.Mpi.Isd.BG2El1.n.i = 0.0;
//   (-Nand1.Mp1.Mpi.Isd.heatPort.Q_flow) + Nand1.Mp1.Mpi.Isd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Isd.I1.s = Nand1.Mp1.Mpi.Isd.InPort1;
//   Nand1.Mp1.Mpi.Isd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Isd.I1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B4.fBondCon1.f = Nand1.Mp1.Mpi.Isd.I1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B4.fBondCon1.d = Nand1.Mp1.Mpi.Isd.I1.BondCon1.d;
//   Nand1.Mp1.Mpi.Isd.B3.fBondCon1.e = Nand1.Mp1.Mpi.Isd.I1.BondCon2.e;
//   Nand1.Mp1.Mpi.Isd.B3.fBondCon1.f = Nand1.Mp1.Mpi.Isd.I1.BondCon2.f;
//   Nand1.Mp1.Mpi.Isd.B3.fBondCon1.d = Nand1.Mp1.Mpi.Isd.I1.BondCon2.d;
//   Nand1.Mp1.Mpi.Isd.B3.eBondCon1.e = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Isd.B3.eBondCon1.f = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Isd.B3.eBondCon1.d = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Isd.B4.eBondCon1.e = Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B4.eBondCon1.d = Nand1.Mp1.Mpi.Isd.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon2.e = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon2.f = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon2.d = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon1.e = Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon1.f = Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B1.BondCon1.d = Nand1.Mp1.Mpi.Isd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon2.e = Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon2.f = Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon2.d = Nand1.Mp1.Mpi.Isd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon1.e = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon1.f = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Isd.B2.BondCon1.d = Nand1.Mp1.Mpi.Isd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Isd.El2BG1.p.v = Nand1.Mp1.Mpi.Isd.p.v;
//   Nand1.Mp1.Mpi.Isd.BG2El1.n.v = Nand1.Mp1.Mpi.Isd.n.v;
//   Nand1.Mp1.Mpi.Isd.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Isd.heatPort.T;
//   (-Nand1.Mp1.Mpi.Rsg.p.i) + Nand1.Mp1.Mpi.Rsg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Rsg.n.i) + Nand1.Mp1.Mpi.Rsg.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BooleanInPort1 = Nand1.Mp1.Mpi.Rsg.Sw1.control;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon2.d = Nand1.Mp1.Mpi.Rsg.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.e = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.f = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B3.BondCon1.d = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.e = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.f = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon1.d = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon2.d = Nand1.Mp1.Mpi.Rsg.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.e = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.f = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon1.d = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon2.d = Nand1.Mp1.Mpi.Rsg.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.e = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.f = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B1.BondCon1.d = Nand1.Mp1.Mpi.Rsg.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon2.d = Nand1.Mp1.Mpi.Rsg.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B2.BondCon2.d = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_2.BondCon2.d = Nand1.Mp1.Mpi.Rsg.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.Sw1.B4.BondCon2.d = Nand1.Mp1.Mpi.Rsg.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Rsg.heatPort.Q_flow) + Nand1.Mp1.Mpi.Rsg.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Rsg.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Rsg.heatPort.T;
//   Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.e = Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B5.eBondCon1.d = Nand1.Mp1.Mpi.Rsg.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rsg.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.f = Nand1.Mp1.Mpi.Rsg.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rsg.B5.fBondCon1.d = Nand1.Mp1.Mpi.Rsg.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rsg.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.f = Nand1.Mp1.Mpi.Rsg.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rsg.B6.fBondCon1.d = Nand1.Mp1.Mpi.Rsg.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.e = Nand1.Mp1.Mpi.Rsg.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rsg.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rsg.B4.eBondCon1.d = Nand1.Mp1.Mpi.Rsg.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rsg.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.f = Nand1.Mp1.Mpi.Rsg.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.B4.fBondCon1.d = Nand1.Mp1.Mpi.Rsg.R1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsg.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsg.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon2.d = Nand1.Mp1.Mpi.Rsg.R1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon2.d = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon1.e = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon1.f = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon1.d = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon1.e = Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon1.f = Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B1.BondCon1.d = Nand1.Mp1.Mpi.Rsg.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B2.BondCon2.d = Nand1.Mp1.Mpi.Rsg.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon1.e = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon1.f = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsg.B3.BondCon1.d = Nand1.Mp1.Mpi.Rsg.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rsg.El2BG1.p.v = Nand1.Mp1.Mpi.Rsg.p.v;
//   Nand1.Mp1.Mpi.Rsg.BG2El1.n.v = Nand1.Mp1.Mpi.Rsg.n.v;
//   Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.e = Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsg.B6.eBondCon1.d = Nand1.Mp1.Mpi.Rsg.T_nom.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Rdg.p.i) + Nand1.Mp1.Mpi.Rdg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Rdg.n.i) + Nand1.Mp1.Mpi.Rdg.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BooleanInPort1 = Nand1.Mp1.Mpi.Rdg.Sw1.control;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon2.d = Nand1.Mp1.Mpi.Rdg.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.e = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.f = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B3.BondCon1.d = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.e = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.f = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon1.d = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon2.d = Nand1.Mp1.Mpi.Rdg.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.e = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.f = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon1.d = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon2.d = Nand1.Mp1.Mpi.Rdg.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.e = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.f = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B1.BondCon1.d = Nand1.Mp1.Mpi.Rdg.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon2.d = Nand1.Mp1.Mpi.Rdg.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B2.BondCon2.d = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_2.BondCon2.d = Nand1.Mp1.Mpi.Rdg.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.Sw1.B4.BondCon2.d = Nand1.Mp1.Mpi.Rdg.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Rdg.heatPort.Q_flow) + Nand1.Mp1.Mpi.Rdg.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Rdg.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Rdg.heatPort.T;
//   Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.e = Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B5.eBondCon1.d = Nand1.Mp1.Mpi.Rdg.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rdg.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.f = Nand1.Mp1.Mpi.Rdg.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rdg.B5.fBondCon1.d = Nand1.Mp1.Mpi.Rdg.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rdg.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.f = Nand1.Mp1.Mpi.Rdg.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rdg.B6.fBondCon1.d = Nand1.Mp1.Mpi.Rdg.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.e = Nand1.Mp1.Mpi.Rdg.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rdg.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rdg.B4.eBondCon1.d = Nand1.Mp1.Mpi.Rdg.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rdg.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.f = Nand1.Mp1.Mpi.Rdg.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.B4.fBondCon1.d = Nand1.Mp1.Mpi.Rdg.R1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon2.e = Nand1.Mp1.Mpi.Rdg.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon2.f = Nand1.Mp1.Mpi.Rdg.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon2.d = Nand1.Mp1.Mpi.Rdg.R1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon2.e = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon2.f = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon2.d = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon1.e = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon1.f = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon1.d = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon1.e = Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon1.f = Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B1.BondCon1.d = Nand1.Mp1.Mpi.Rdg.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon2.e = Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon2.f = Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B2.BondCon2.d = Nand1.Mp1.Mpi.Rdg.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon1.e = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon1.f = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rdg.B3.BondCon1.d = Nand1.Mp1.Mpi.Rdg.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rdg.El2BG1.p.v = Nand1.Mp1.Mpi.Rdg.p.v;
//   Nand1.Mp1.Mpi.Rdg.BG2El1.n.v = Nand1.Mp1.Mpi.Rdg.n.v;
//   Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.e = Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rdg.B6.eBondCon1.d = Nand1.Mp1.Mpi.Rdg.T_nom.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Rbg.p.i) + Nand1.Mp1.Mpi.Rbg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Rbg.n.i) + Nand1.Mp1.Mpi.Rbg.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BooleanInPort1 = Nand1.Mp1.Mpi.Rbg.Sw1.control;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon2.d = Nand1.Mp1.Mpi.Rbg.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.e = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.f = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B3.BondCon1.d = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.e = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.f = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon1.d = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon2.d = Nand1.Mp1.Mpi.Rbg.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.e = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.f = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon1.d = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon2.d = Nand1.Mp1.Mpi.Rbg.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.e = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.f = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B1.BondCon1.d = Nand1.Mp1.Mpi.Rbg.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon2.d = Nand1.Mp1.Mpi.Rbg.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B2.BondCon2.d = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_2.BondCon2.d = Nand1.Mp1.Mpi.Rbg.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.Sw1.B4.BondCon2.d = Nand1.Mp1.Mpi.Rbg.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Rbg.heatPort.Q_flow) + Nand1.Mp1.Mpi.Rbg.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Rbg.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Rbg.heatPort.T;
//   Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.e = Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B5.eBondCon1.d = Nand1.Mp1.Mpi.Rbg.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rbg.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.f = Nand1.Mp1.Mpi.Rbg.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rbg.B5.fBondCon1.d = Nand1.Mp1.Mpi.Rbg.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rbg.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.f = Nand1.Mp1.Mpi.Rbg.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rbg.B6.fBondCon1.d = Nand1.Mp1.Mpi.Rbg.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.e = Nand1.Mp1.Mpi.Rbg.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rbg.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rbg.B4.eBondCon1.d = Nand1.Mp1.Mpi.Rbg.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rbg.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.f = Nand1.Mp1.Mpi.Rbg.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.B4.fBondCon1.d = Nand1.Mp1.Mpi.Rbg.R1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon2.e = Nand1.Mp1.Mpi.Rbg.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon2.f = Nand1.Mp1.Mpi.Rbg.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon2.d = Nand1.Mp1.Mpi.Rbg.R1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon2.e = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon2.f = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon2.d = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon1.e = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon1.f = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon1.d = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon1.e = Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon1.f = Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B1.BondCon1.d = Nand1.Mp1.Mpi.Rbg.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon2.e = Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon2.f = Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B2.BondCon2.d = Nand1.Mp1.Mpi.Rbg.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon1.e = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon1.f = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rbg.B3.BondCon1.d = Nand1.Mp1.Mpi.Rbg.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rbg.El2BG1.p.v = Nand1.Mp1.Mpi.Rbg.p.v;
//   Nand1.Mp1.Mpi.Rbg.BG2El1.n.v = Nand1.Mp1.Mpi.Rbg.n.v;
//   Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.e = Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rbg.B6.eBondCon1.d = Nand1.Mp1.Mpi.Rbg.T_nom.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Rsd.p.i) + Nand1.Mp1.Mpi.Rsd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Mpi.Rsd.n.i) + Nand1.Mp1.Mpi.Rsd.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BooleanInPort1 = Nand1.Mp1.Mpi.Rsd.Sw1.control;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon2.d = Nand1.Mp1.Mpi.Rsd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.e = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.f = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B3.BondCon1.d = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.e = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.f = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon1.d = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon2.d = Nand1.Mp1.Mpi.Rsd.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.e = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.f = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon1.d = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon2.d = Nand1.Mp1.Mpi.Rsd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.e = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.f = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B1.BondCon1.d = Nand1.Mp1.Mpi.Rsd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon2.d = Nand1.Mp1.Mpi.Rsd.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B2.BondCon2.d = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_2.BondCon2.d = Nand1.Mp1.Mpi.Rsd.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.e = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.f = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.Sw1.B4.BondCon2.d = Nand1.Mp1.Mpi.Rsd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp1.Mpi.Rsd.heatPort.Q_flow) + Nand1.Mp1.Mpi.Rsd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Mpi.Rsd.BG2Heat1.port_b.T = Nand1.Mp1.Mpi.Rsd.heatPort.T;
//   Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.e = Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.f = Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B5.eBondCon1.d = Nand1.Mp1.Mpi.Rsd.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.e = Nand1.Mp1.Mpi.Rsd.Sw1.n2.e;
//   Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.f = Nand1.Mp1.Mpi.Rsd.Sw1.n2.f;
//   Nand1.Mp1.Mpi.Rsd.B5.fBondCon1.d = Nand1.Mp1.Mpi.Rsd.Sw1.n2.d;
//   Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.e = Nand1.Mp1.Mpi.Rsd.Sw1.n1.e;
//   Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.f = Nand1.Mp1.Mpi.Rsd.Sw1.n1.f;
//   Nand1.Mp1.Mpi.Rsd.B6.fBondCon1.d = Nand1.Mp1.Mpi.Rsd.Sw1.n1.d;
//   Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.e = Nand1.Mp1.Mpi.Rsd.Sw1.p.e;
//   Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.f = Nand1.Mp1.Mpi.Rsd.Sw1.p.f;
//   Nand1.Mp1.Mpi.Rsd.B4.eBondCon1.d = Nand1.Mp1.Mpi.Rsd.Sw1.p.d;
//   Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.e = Nand1.Mp1.Mpi.Rsd.R1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.f = Nand1.Mp1.Mpi.Rsd.R1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.B4.fBondCon1.d = Nand1.Mp1.Mpi.Rsd.R1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon2.e = Nand1.Mp1.Mpi.Rsd.R1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon2.f = Nand1.Mp1.Mpi.Rsd.R1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon2.d = Nand1.Mp1.Mpi.Rsd.R1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon2.e = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon2.f = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon2.d = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon1.e = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon1.f = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon1.d = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon1.e = Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon1.f = Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B1.BondCon1.d = Nand1.Mp1.Mpi.Rsd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon2.e = Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon2.f = Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B2.BondCon2.d = Nand1.Mp1.Mpi.Rsd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon1.e = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon1.f = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Mpi.Rsd.B3.BondCon1.d = Nand1.Mp1.Mpi.Rsd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Mpi.Rsd.El2BG1.p.v = Nand1.Mp1.Mpi.Rsd.p.v;
//   Nand1.Mp1.Mpi.Rsd.BG2El1.n.v = Nand1.Mp1.Mpi.Rsd.n.v;
//   Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.e = Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.e;
//   Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.f = Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.f;
//   Nand1.Mp1.Mpi.Rsd.B6.eBondCon1.d = Nand1.Mp1.Mpi.Rsd.T_nom.BondCon1.d;
//   Nand1.Mp1.Mpi.IDS0.u1 = Nand1.Mp1.Mpi.Vsd.V;
//   Nand1.Mp1.Mpi.Dsb.p.v = Nand1.Mp1.Mpi.Isd.p.v;
//   Nand1.Mp1.Mpi.Dsb.p.v = Nand1.Mp1.Mpi.Rsd.n.v;
//   Nand1.Mp1.Mpi.Dsb.p.v = Nand1.Mp1.Mpi.Rsg.n.v;
//   Nand1.Mp1.Mpi.Dsb.p.v = Nand1.Mp1.Mpi.S.v;
//   Nand1.Mp1.Mpi.Dsb.p.v = Nand1.Mp1.Mpi.Vsb.p.v;
//   Nand1.Mp1.Mpi.Dsb.p.v = Nand1.Mp1.Mpi.Vsd.p.v;
//   Nand1.Mp1.Mpi.Dsb.p.v = Nand1.Mp1.Mpi.Vsg.p.v;
//   Nand1.Mp1.Mpi.D.v = Nand1.Mp1.Mpi.Ddb.p.v;
//   Nand1.Mp1.Mpi.D.v = Nand1.Mp1.Mpi.Isd.n.v;
//   Nand1.Mp1.Mpi.D.v = Nand1.Mp1.Mpi.Rdg.n.v;
//   Nand1.Mp1.Mpi.D.v = Nand1.Mp1.Mpi.Rsd.p.v;
//   Nand1.Mp1.Mpi.D.v = Nand1.Mp1.Mpi.Vsd.n.v;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.Dsb.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.Isd.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.Rbg.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.Rdg.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.Rsd.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.Rsg.heatPort.T;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.Tdev1.port.T;
//   Nand1.Mp1.Mpi.Ddb.heatPort.T = Nand1.Mp1.Mpi.heatPort.T;
//   Nand1.Mp1.Mpi.B.v = Nand1.Mp1.Mpi.Ddb.n.v;
//   Nand1.Mp1.Mpi.B.v = Nand1.Mp1.Mpi.Dsb.n.v;
//   Nand1.Mp1.Mpi.B.v = Nand1.Mp1.Mpi.Rbg.n.v;
//   Nand1.Mp1.Mpi.B.v = Nand1.Mp1.Mpi.Vsb.n.v;
//   Nand1.Mp1.Mpi.G.v = Nand1.Mp1.Mpi.Rbg.p.v;
//   Nand1.Mp1.Mpi.G.v = Nand1.Mp1.Mpi.Rdg.p.v;
//   Nand1.Mp1.Mpi.G.v = Nand1.Mp1.Mpi.Rsg.p.v;
//   Nand1.Mp1.Mpi.G.v = Nand1.Mp1.Mpi.Vsg.n.v;
//   Nand1.Mp1.Mpi.IDS0.y = Nand1.Mp1.Mpi.Isd.InPort1;
//   Nand1.Mp1.Mpi.IDS0.Tdev = Nand1.Mp1.Mpi.Tdev1.T;
//   Nand1.Mp1.Mpi.IDS0.u2 = Nand1.Mp1.Mpi.Vsg.V;
//   Nand1.Mp1.Mpi.IDS0.u3 = Nand1.Mp1.Mpi.Vsb.V;
//   Nand1.Mp1.Mpi.IDS0.y1[5] = Nand1.Mp1.Mpi.y1[5];
//   Nand1.Mp1.Mpi.IDS0.y1[4] = Nand1.Mp1.Mpi.y1[4];
//   Nand1.Mp1.Mpi.IDS0.y1[3] = Nand1.Mp1.Mpi.y1[3];
//   Nand1.Mp1.Mpi.IDS0.y1[2] = Nand1.Mp1.Mpi.y1[2];
//   Nand1.Mp1.Mpi.IDS0.y1[1] = Nand1.Mp1.Mpi.y1[1];
//   Nand1.Mp1.T_nom.BG2Heat1.port_b.Q_flow + (-Nand1.Mp1.T_nom.port.Q_flow) = 0.0;
//   Nand1.Mp1.T_nom.port.Q_flow + Nand1.Mp1.Sw1.n1.Q_flow = 0.0;
//   Nand1.Mp1.T_nom.B1.fBondCon1.e = Nand1.Mp1.T_nom.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.T_nom.B1.fBondCon1.f = Nand1.Mp1.T_nom.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.T_nom.B1.fBondCon1.d = Nand1.Mp1.T_nom.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.T_nom.B1.eBondCon1.e = Nand1.Mp1.T_nom.Tabs.BondCon1.e;
//   Nand1.Mp1.T_nom.B1.eBondCon1.f = Nand1.Mp1.T_nom.Tabs.BondCon1.f;
//   Nand1.Mp1.T_nom.B1.eBondCon1.d = Nand1.Mp1.T_nom.Tabs.BondCon1.d;
//   Nand1.Mp1.T_nom.BG2Heat1.port_b.T = Nand1.Mp1.T_nom.port.T;
//   (-Nand1.Mp1.heatPort.Q_flow) + Nand1.Mp1.Sw1.n2.Q_flow = 0.0;
//   (-Nand1.Mp1.Sw1.p.Q_flow) + Nand1.Mp1.Sw1.Heat2BG1.port_a.Q_flow = 0.0;
//   (-Nand1.Mp1.Sw1.n1.Q_flow) + Nand1.Mp1.Sw1.BG2Heat1.port_b.Q_flow = 0.0;
//   (-Nand1.Mp1.Sw1.n2.Q_flow) + Nand1.Mp1.Sw1.BG2Heat2.port_b.Q_flow = 0.0;
//   Nand1.Mp1.Sw1.Sw1.Sw1.BooleanInPort1 = Nand1.Mp1.Sw1.Sw1.control;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon2.e = Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon2.f = Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon2.d = Nand1.Mp1.Sw1.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon1.e = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon1.f = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Sw1.Sw1.B3.BondCon1.d = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon1.e = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon1.f = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon1.d = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.e = Nand1.Mp1.Sw1.Sw1.p.e;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.f = Nand1.Mp1.Sw1.Sw1.p.f;
//   Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon2.d = Nand1.Mp1.Sw1.Sw1.p.d;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon1.e = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon1.f = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon1.d = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon2.e = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon2.f = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon2.d = Nand1.Mp1.Sw1.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon1.e = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon1.f = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp1.Sw1.Sw1.B1.BondCon1.d = Nand1.Mp1.Sw1.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.e = Nand1.Mp1.Sw1.Sw1.n2.e;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.f = Nand1.Mp1.Sw1.Sw1.n2.f;
//   Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon2.d = Nand1.Mp1.Sw1.Sw1.n2.d;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon2.e = Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon2.f = Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B2.BondCon2.d = Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.e = Nand1.Mp1.Sw1.Sw1.n1.e;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.f = Nand1.Mp1.Sw1.Sw1.n1.f;
//   Nand1.Mp1.Sw1.Sw1.j0p2_2.BondCon2.d = Nand1.Mp1.Sw1.Sw1.n1.d;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon2.e = Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon2.f = Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp1.Sw1.Sw1.B4.BondCon2.d = Nand1.Mp1.Sw1.Sw1.j0p2_1.BondCon1.d;
//   Nand1.Mp1.Sw1.B3.BondCon1.e = Nand1.Mp1.Sw1.Sw1.n1.e;
//   Nand1.Mp1.Sw1.B3.BondCon1.f = Nand1.Mp1.Sw1.Sw1.n1.f;
//   Nand1.Mp1.Sw1.B3.BondCon1.d = Nand1.Mp1.Sw1.Sw1.n1.d;
//   Nand1.Mp1.Sw1.B2.BondCon1.e = Nand1.Mp1.Sw1.Sw1.n2.e;
//   Nand1.Mp1.Sw1.B2.BondCon1.f = Nand1.Mp1.Sw1.Sw1.n2.f;
//   Nand1.Mp1.Sw1.B2.BondCon1.d = Nand1.Mp1.Sw1.Sw1.n2.d;
//   Nand1.Mp1.Sw1.B1.BondCon2.e = Nand1.Mp1.Sw1.Sw1.p.e;
//   Nand1.Mp1.Sw1.B1.BondCon2.f = Nand1.Mp1.Sw1.Sw1.p.f;
//   Nand1.Mp1.Sw1.B1.BondCon2.d = Nand1.Mp1.Sw1.Sw1.p.d;
//   Nand1.Mp1.Sw1.Sw1.control = Nand1.Mp1.Sw1.control;
//   Nand1.Mp1.Sw1.Heat2BG1.port_a.T = Nand1.Mp1.Sw1.p.T;
//   Nand1.Mp1.Sw1.B1.BondCon1.e = Nand1.Mp1.Sw1.Heat2BG1.BondCon1.e;
//   Nand1.Mp1.Sw1.B1.BondCon1.f = Nand1.Mp1.Sw1.Heat2BG1.BondCon1.f;
//   Nand1.Mp1.Sw1.B1.BondCon1.d = Nand1.Mp1.Sw1.Heat2BG1.BondCon1.d;
//   Nand1.Mp1.Sw1.BG2Heat1.port_b.T = Nand1.Mp1.Sw1.n1.T;
//   Nand1.Mp1.Sw1.B3.BondCon2.e = Nand1.Mp1.Sw1.BG2Heat1.BondCon1.e;
//   Nand1.Mp1.Sw1.B3.BondCon2.f = Nand1.Mp1.Sw1.BG2Heat1.BondCon1.f;
//   Nand1.Mp1.Sw1.B3.BondCon2.d = Nand1.Mp1.Sw1.BG2Heat1.BondCon1.d;
//   Nand1.Mp1.Sw1.BG2Heat2.port_b.T = Nand1.Mp1.Sw1.n2.T;
//   Nand1.Mp1.Sw1.B2.BondCon2.e = Nand1.Mp1.Sw1.BG2Heat2.BondCon1.e;
//   Nand1.Mp1.Sw1.B2.BondCon2.f = Nand1.Mp1.Sw1.BG2Heat2.BondCon1.f;
//   Nand1.Mp1.Sw1.B2.BondCon2.d = Nand1.Mp1.Sw1.BG2Heat2.BondCon1.d;
//   (-Nand1.Mp1.Vsd.p.i) + Nand1.Mp1.Vsd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp1.Vsd.n.i) + Nand1.Mp1.Vsd.BG2El1.n.i = 0.0;
//   Nand1.Mp1.Vsd.B3.BondCon2.e = Nand1.Mp1.Vsd.De1.BondCon1.e;
//   Nand1.Mp1.Vsd.B3.BondCon2.f = Nand1.Mp1.Vsd.De1.BondCon1.f;
//   Nand1.Mp1.Vsd.B3.BondCon2.d = Nand1.Mp1.Vsd.De1.BondCon1.d;
//   Nand1.Mp1.Vsd.B3.BondCon1.e = Nand1.Mp1.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp1.Vsd.B3.BondCon1.f = Nand1.Mp1.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp1.Vsd.B3.BondCon1.d = Nand1.Mp1.Vsd.J1p3_1.BondCon3.d;
//   Nand1.Mp1.Vsd.De1.OutPort1 = Nand1.Mp1.Vsd.V;
//   Nand1.Mp1.Vsd.B1.BondCon2.e = Nand1.Mp1.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp1.Vsd.B1.BondCon2.f = Nand1.Mp1.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp1.Vsd.B1.BondCon2.d = Nand1.Mp1.Vsd.J1p3_1.BondCon1.d;
//   Nand1.Mp1.Vsd.B2.BondCon1.e = Nand1.Mp1.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp1.Vsd.B2.BondCon1.f = Nand1.Mp1.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp1.Vsd.B2.BondCon1.d = Nand1.Mp1.Vsd.J1p3_1.BondCon2.d;
//   Nand1.Mp1.Vsd.B1.BondCon1.e = Nand1.Mp1.Vsd.El2BG1.BondCon1.e;
//   Nand1.Mp1.Vsd.B1.BondCon1.f = Nand1.Mp1.Vsd.El2BG1.BondCon1.f;
//   Nand1.Mp1.Vsd.B1.BondCon1.d = Nand1.Mp1.Vsd.El2BG1.BondCon1.d;
//   Nand1.Mp1.Vsd.B2.BondCon2.e = Nand1.Mp1.Vsd.BG2El1.BondCon1.e;
//   Nand1.Mp1.Vsd.B2.BondCon2.f = Nand1.Mp1.Vsd.BG2El1.BondCon1.f;
//   Nand1.Mp1.Vsd.B2.BondCon2.d = Nand1.Mp1.Vsd.BG2El1.BondCon1.d;
//   Nand1.Mp1.Vsd.El2BG1.p.v = Nand1.Mp1.Vsd.p.v;
//   Nand1.Mp1.Vsd.BG2El1.n.v = Nand1.Mp1.Vsd.n.v;
//   Nand1.Mp1.Cbg1.vds = Nand1.Mp1.Cdg1.vds;
//   Nand1.Mp1.Cbg1.vds = Nand1.Mp1.Csg1.vds;
//   Nand1.Mp1.Cbg1.vds = Nand1.Mp1.Vsd.V;
//   Nand1.Mp1.D.v = Nand1.Mp1.Rd.n.v;
//   Nand1.Mp1.D.v = Nand1.Mp1.Vsd.n.v;
//   Nand1.Mp1.Rs.n.v = Nand1.Mp1.S.v;
//   Nand1.Mp1.Rs.n.v = Nand1.Mp1.Vsb.p.v;
//   Nand1.Mp1.Rs.n.v = Nand1.Mp1.Vsd.p.v;
//   Nand1.Mp1.Cbg1.heatPort.T = Nand1.Mp1.Cdg1.heatPort.T;
//   Nand1.Mp1.Cbg1.heatPort.T = Nand1.Mp1.Csg1.heatPort.T;
//   Nand1.Mp1.Cbg1.heatPort.T = Nand1.Mp1.Mpi.heatPort.T;
//   Nand1.Mp1.Cbg1.heatPort.T = Nand1.Mp1.Rd.heatPort.T;
//   Nand1.Mp1.Cbg1.heatPort.T = Nand1.Mp1.Rs.heatPort.T;
//   Nand1.Mp1.Cbg1.heatPort.T = Nand1.Mp1.Sw1.p.T;
//   Nand1.Mp1.Sw1.n2.T = Nand1.Mp1.heatPort.T;
//   Nand1.Mp1.Sw1.n1.T = Nand1.Mp1.T_nom.port.T;
//   Nand1.Mp1.B.v = Nand1.Mp1.Cbg1.p.v;
//   Nand1.Mp1.B.v = Nand1.Mp1.Mpi.B.v;
//   Nand1.Mp1.B.v = Nand1.Mp1.Vsb.n.v;
//   Nand1.Mp1.Cdg1.p.v = Nand1.Mp1.Mpi.D.v;
//   Nand1.Mp1.Cdg1.p.v = Nand1.Mp1.Rd.p.v;
//   Nand1.Mp1.Csg1.p.v = Nand1.Mp1.Mpi.S.v;
//   Nand1.Mp1.Csg1.p.v = Nand1.Mp1.Rs.p.v;
//   Nand1.Mp1.Cbg1.n.v = Nand1.Mp1.Cdg1.n.v;
//   Nand1.Mp1.Cbg1.n.v = Nand1.Mp1.Csg1.n.v;
//   Nand1.Mp1.Cbg1.n.v = Nand1.Mp1.G.v;
//   Nand1.Mp1.Cbg1.n.v = Nand1.Mp1.Mpi.G.v;
//   Nand1.Mp1.Cbg1.vbs = Nand1.Mp1.Cdg1.vbs;
//   Nand1.Mp1.Cbg1.vbs = Nand1.Mp1.Csg1.vbs;
//   Nand1.Mp1.Cbg1.vbs = Nand1.Mp1.Vsb.V;
//   Nand1.Mp1.Cbg1.u[5] = Nand1.Mp1.Cdg1.u[5];
//   Nand1.Mp1.Cbg1.u[5] = Nand1.Mp1.Csg1.u[5];
//   Nand1.Mp1.Cbg1.u[5] = Nand1.Mp1.Mpi.y1[5];
//   Nand1.Mp1.Cbg1.u[4] = Nand1.Mp1.Cdg1.u[4];
//   Nand1.Mp1.Cbg1.u[4] = Nand1.Mp1.Csg1.u[4];
//   Nand1.Mp1.Cbg1.u[4] = Nand1.Mp1.Mpi.y1[4];
//   Nand1.Mp1.Cbg1.u[3] = Nand1.Mp1.Cdg1.u[3];
//   Nand1.Mp1.Cbg1.u[3] = Nand1.Mp1.Csg1.u[3];
//   Nand1.Mp1.Cbg1.u[3] = Nand1.Mp1.Mpi.y1[3];
//   Nand1.Mp1.Cbg1.u[2] = Nand1.Mp1.Cdg1.u[2];
//   Nand1.Mp1.Cbg1.u[2] = Nand1.Mp1.Csg1.u[2];
//   Nand1.Mp1.Cbg1.u[2] = Nand1.Mp1.Mpi.y1[2];
//   Nand1.Mp1.Cbg1.u[1] = Nand1.Mp1.Cdg1.u[1];
//   Nand1.Mp1.Cbg1.u[1] = Nand1.Mp1.Csg1.u[1];
//   Nand1.Mp1.Cbg1.u[1] = Nand1.Mp1.Mpi.y1[1];
//   (-Nand1.x1.i) + Nand1.Mp2.G.i + Nand1.Mn2.G.i = 0.0;
//   Nand1.Mp2.Csg1.p.i + Nand1.Mp2.Rs.p.i + Nand1.Mp2.Mpi.S.i = 0.0;
//   (-Nand1.Mp2.G.i) + Nand1.Mp2.Csg1.n.i + Nand1.Mp2.Cdg1.n.i + Nand1.Mp2.Cbg1.n.i + Nand1.Mp2.Mpi.G.i = 0.0;
//   Nand1.Mp2.Csg1.heatPort.Q_flow + Nand1.Mp2.Cdg1.heatPort.Q_flow + Nand1.Mp2.Cbg1.heatPort.Q_flow + Nand1.Mp2.Rd.heatPort.Q_flow + Nand1.Mp2.Rs.heatPort.Q_flow + Nand1.Mp2.Mpi.heatPort.Q_flow + Nand1.Mp2.Sw1.p.Q_flow = 0.0;
//   (-Nand1.Mp2.Csg1.p.i) + Nand1.Mp2.Csg1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Csg1.n.i) + Nand1.Mp2.Csg1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Csg1.heatPort.Q_flow) + Nand1.Mp2.Csg1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Csg1.Cgs1.u1 = Nand1.Mp2.Csg1.vds;
//   Nand1.Mp2.Csg1.Cgs1.u2 = Nand1.Mp2.Csg1.vbs;
//   Nand1.Mp2.Csg1.BG2Heat1.port_b.T = Nand1.Mp2.Csg1.heatPort.T;
//   Nand1.Mp2.Csg1.B4.eBondCon1.e = Nand1.Mp2.Csg1.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Csg1.B4.eBondCon1.f = Nand1.Mp2.Csg1.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Csg1.B4.eBondCon1.d = Nand1.Mp2.Csg1.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Csg1.B4.fBondCon1.e = Nand1.Mp2.Csg1.Cgs1.BondCon2.e;
//   Nand1.Mp2.Csg1.B4.fBondCon1.f = Nand1.Mp2.Csg1.Cgs1.BondCon2.f;
//   Nand1.Mp2.Csg1.B4.fBondCon1.d = Nand1.Mp2.Csg1.Cgs1.BondCon2.d;
//   Nand1.Mp2.Csg1.B3.BondCon2.e = Nand1.Mp2.Csg1.Cgs1.BondCon1.e;
//   Nand1.Mp2.Csg1.B3.BondCon2.f = Nand1.Mp2.Csg1.Cgs1.BondCon1.f;
//   Nand1.Mp2.Csg1.B3.BondCon2.d = Nand1.Mp2.Csg1.Cgs1.BondCon1.d;
//   Nand1.Mp2.Csg1.B3.BondCon1.e = Nand1.Mp2.Csg1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Csg1.B3.BondCon1.f = Nand1.Mp2.Csg1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Csg1.B3.BondCon1.d = Nand1.Mp2.Csg1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Csg1.Cgs1.u[5] = Nand1.Mp2.Csg1.u[5];
//   Nand1.Mp2.Csg1.Cgs1.u[4] = Nand1.Mp2.Csg1.u[4];
//   Nand1.Mp2.Csg1.Cgs1.u[3] = Nand1.Mp2.Csg1.u[3];
//   Nand1.Mp2.Csg1.Cgs1.u[2] = Nand1.Mp2.Csg1.u[2];
//   Nand1.Mp2.Csg1.Cgs1.u[1] = Nand1.Mp2.Csg1.u[1];
//   Nand1.Mp2.Csg1.B1.BondCon2.e = Nand1.Mp2.Csg1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Csg1.B1.BondCon2.f = Nand1.Mp2.Csg1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Csg1.B1.BondCon2.d = Nand1.Mp2.Csg1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Csg1.B2.BondCon1.e = Nand1.Mp2.Csg1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Csg1.B2.BondCon1.f = Nand1.Mp2.Csg1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Csg1.B2.BondCon1.d = Nand1.Mp2.Csg1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Csg1.B1.BondCon1.e = Nand1.Mp2.Csg1.El2BG1.BondCon1.e;
//   Nand1.Mp2.Csg1.B1.BondCon1.f = Nand1.Mp2.Csg1.El2BG1.BondCon1.f;
//   Nand1.Mp2.Csg1.B1.BondCon1.d = Nand1.Mp2.Csg1.El2BG1.BondCon1.d;
//   Nand1.Mp2.Csg1.B2.BondCon2.e = Nand1.Mp2.Csg1.BG2El1.BondCon1.e;
//   Nand1.Mp2.Csg1.B2.BondCon2.f = Nand1.Mp2.Csg1.BG2El1.BondCon1.f;
//   Nand1.Mp2.Csg1.B2.BondCon2.d = Nand1.Mp2.Csg1.BG2El1.BondCon1.d;
//   Nand1.Mp2.Csg1.El2BG1.p.v = Nand1.Mp2.Csg1.p.v;
//   Nand1.Mp2.Csg1.BG2El1.n.v = Nand1.Mp2.Csg1.n.v;
//   Nand1.Mp2.Cdg1.p.i + Nand1.Mp2.Rd.p.i + Nand1.Mp2.Mpi.D.i = 0.0;
//   (-Nand1.Mp2.Cdg1.p.i) + Nand1.Mp2.Cdg1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Cdg1.n.i) + Nand1.Mp2.Cdg1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Cdg1.heatPort.Q_flow) + Nand1.Mp2.Cdg1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Cdg1.Cgd1.u[5] = Nand1.Mp2.Cdg1.u[5];
//   Nand1.Mp2.Cdg1.Cgd1.u[4] = Nand1.Mp2.Cdg1.u[4];
//   Nand1.Mp2.Cdg1.Cgd1.u[3] = Nand1.Mp2.Cdg1.u[3];
//   Nand1.Mp2.Cdg1.Cgd1.u[2] = Nand1.Mp2.Cdg1.u[2];
//   Nand1.Mp2.Cdg1.Cgd1.u[1] = Nand1.Mp2.Cdg1.u[1];
//   Nand1.Mp2.Cdg1.Cgd1.u1 = Nand1.Mp2.Cdg1.vds;
//   Nand1.Mp2.Cdg1.Cgd1.u2 = Nand1.Mp2.Cdg1.vbs;
//   Nand1.Mp2.Cdg1.B3.BondCon2.e = Nand1.Mp2.Cdg1.Cgd1.BondCon1.e;
//   Nand1.Mp2.Cdg1.B3.BondCon2.f = Nand1.Mp2.Cdg1.Cgd1.BondCon1.f;
//   Nand1.Mp2.Cdg1.B3.BondCon2.d = Nand1.Mp2.Cdg1.Cgd1.BondCon1.d;
//   Nand1.Mp2.Cdg1.B3.BondCon1.e = Nand1.Mp2.Cdg1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Cdg1.B3.BondCon1.f = Nand1.Mp2.Cdg1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Cdg1.B3.BondCon1.d = Nand1.Mp2.Cdg1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Cdg1.BG2Heat1.port_b.T = Nand1.Mp2.Cdg1.heatPort.T;
//   Nand1.Mp2.Cdg1.B4.eBondCon1.e = Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Cdg1.B4.eBondCon1.f = Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Cdg1.B4.eBondCon1.d = Nand1.Mp2.Cdg1.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Cdg1.B4.fBondCon1.e = Nand1.Mp2.Cdg1.Cgd1.BondCon2.e;
//   Nand1.Mp2.Cdg1.B4.fBondCon1.f = Nand1.Mp2.Cdg1.Cgd1.BondCon2.f;
//   Nand1.Mp2.Cdg1.B4.fBondCon1.d = Nand1.Mp2.Cdg1.Cgd1.BondCon2.d;
//   Nand1.Mp2.Cdg1.B1.BondCon2.e = Nand1.Mp2.Cdg1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Cdg1.B1.BondCon2.f = Nand1.Mp2.Cdg1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Cdg1.B1.BondCon2.d = Nand1.Mp2.Cdg1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Cdg1.B2.BondCon1.e = Nand1.Mp2.Cdg1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Cdg1.B2.BondCon1.f = Nand1.Mp2.Cdg1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Cdg1.B2.BondCon1.d = Nand1.Mp2.Cdg1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Cdg1.B1.BondCon1.e = Nand1.Mp2.Cdg1.El2BG1.BondCon1.e;
//   Nand1.Mp2.Cdg1.B1.BondCon1.f = Nand1.Mp2.Cdg1.El2BG1.BondCon1.f;
//   Nand1.Mp2.Cdg1.B1.BondCon1.d = Nand1.Mp2.Cdg1.El2BG1.BondCon1.d;
//   Nand1.Mp2.Cdg1.B2.BondCon2.e = Nand1.Mp2.Cdg1.BG2El1.BondCon1.e;
//   Nand1.Mp2.Cdg1.B2.BondCon2.f = Nand1.Mp2.Cdg1.BG2El1.BondCon1.f;
//   Nand1.Mp2.Cdg1.B2.BondCon2.d = Nand1.Mp2.Cdg1.BG2El1.BondCon1.d;
//   Nand1.Mp2.Cdg1.El2BG1.p.v = Nand1.Mp2.Cdg1.p.v;
//   Nand1.Mp2.Cdg1.BG2El1.n.v = Nand1.Mp2.Cdg1.n.v;
//   (-Nand1.Mp2.B.i) + Nand1.Mp2.Cbg1.p.i + Nand1.Mp2.Vsb.n.i + Nand1.Mp2.Mpi.B.i = 0.0;
//   (-Nand1.Mp2.Cbg1.p.i) + Nand1.Mp2.Cbg1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Cbg1.n.i) + Nand1.Mp2.Cbg1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Cbg1.heatPort.Q_flow) + Nand1.Mp2.Cbg1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Cbg1.Cgb1.u[5] = Nand1.Mp2.Cbg1.u[5];
//   Nand1.Mp2.Cbg1.Cgb1.u[4] = Nand1.Mp2.Cbg1.u[4];
//   Nand1.Mp2.Cbg1.Cgb1.u[3] = Nand1.Mp2.Cbg1.u[3];
//   Nand1.Mp2.Cbg1.Cgb1.u[2] = Nand1.Mp2.Cbg1.u[2];
//   Nand1.Mp2.Cbg1.Cgb1.u[1] = Nand1.Mp2.Cbg1.u[1];
//   Nand1.Mp2.Cbg1.Cgb1.u1 = Nand1.Mp2.Cbg1.vds;
//   Nand1.Mp2.Cbg1.Cgb1.u2 = Nand1.Mp2.Cbg1.vbs;
//   Nand1.Mp2.Cbg1.B3.BondCon2.e = Nand1.Mp2.Cbg1.Cgb1.BondCon1.e;
//   Nand1.Mp2.Cbg1.B3.BondCon2.f = Nand1.Mp2.Cbg1.Cgb1.BondCon1.f;
//   Nand1.Mp2.Cbg1.B3.BondCon2.d = Nand1.Mp2.Cbg1.Cgb1.BondCon1.d;
//   Nand1.Mp2.Cbg1.B3.BondCon1.e = Nand1.Mp2.Cbg1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Cbg1.B3.BondCon1.f = Nand1.Mp2.Cbg1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Cbg1.B3.BondCon1.d = Nand1.Mp2.Cbg1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Cbg1.BG2Heat1.port_b.T = Nand1.Mp2.Cbg1.heatPort.T;
//   Nand1.Mp2.Cbg1.B4.eBondCon1.e = Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Cbg1.B4.eBondCon1.f = Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Cbg1.B4.eBondCon1.d = Nand1.Mp2.Cbg1.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Cbg1.B4.fBondCon1.e = Nand1.Mp2.Cbg1.Cgb1.BondCon2.e;
//   Nand1.Mp2.Cbg1.B4.fBondCon1.f = Nand1.Mp2.Cbg1.Cgb1.BondCon2.f;
//   Nand1.Mp2.Cbg1.B4.fBondCon1.d = Nand1.Mp2.Cbg1.Cgb1.BondCon2.d;
//   Nand1.Mp2.Cbg1.B1.BondCon2.e = Nand1.Mp2.Cbg1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Cbg1.B1.BondCon2.f = Nand1.Mp2.Cbg1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Cbg1.B1.BondCon2.d = Nand1.Mp2.Cbg1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Cbg1.B2.BondCon1.e = Nand1.Mp2.Cbg1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Cbg1.B2.BondCon1.f = Nand1.Mp2.Cbg1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Cbg1.B2.BondCon1.d = Nand1.Mp2.Cbg1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Cbg1.B1.BondCon1.e = Nand1.Mp2.Cbg1.El2BG1.BondCon1.e;
//   Nand1.Mp2.Cbg1.B1.BondCon1.f = Nand1.Mp2.Cbg1.El2BG1.BondCon1.f;
//   Nand1.Mp2.Cbg1.B1.BondCon1.d = Nand1.Mp2.Cbg1.El2BG1.BondCon1.d;
//   Nand1.Mp2.Cbg1.B2.BondCon2.e = Nand1.Mp2.Cbg1.BG2El1.BondCon1.e;
//   Nand1.Mp2.Cbg1.B2.BondCon2.f = Nand1.Mp2.Cbg1.BG2El1.BondCon1.f;
//   Nand1.Mp2.Cbg1.B2.BondCon2.d = Nand1.Mp2.Cbg1.BG2El1.BondCon1.d;
//   Nand1.Mp2.Cbg1.El2BG1.p.v = Nand1.Mp2.Cbg1.p.v;
//   Nand1.Mp2.Cbg1.BG2El1.n.v = Nand1.Mp2.Cbg1.n.v;
//   (-Nand1.Mp2.S.i) + Nand1.Mp2.Vsb.p.i + Nand1.Mp2.Rs.n.i + Nand1.Mp2.Vsd.p.i = 0.0;
//   (-Nand1.Mp2.Vsb.p.i) + Nand1.Mp2.Vsb.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Vsb.n.i) + Nand1.Mp2.Vsb.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Vsb.B3.BondCon2.e = Nand1.Mp2.Vsb.De1.BondCon1.e;
//   Nand1.Mp2.Vsb.B3.BondCon2.f = Nand1.Mp2.Vsb.De1.BondCon1.f;
//   Nand1.Mp2.Vsb.B3.BondCon2.d = Nand1.Mp2.Vsb.De1.BondCon1.d;
//   Nand1.Mp2.Vsb.B3.BondCon1.e = Nand1.Mp2.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Vsb.B3.BondCon1.f = Nand1.Mp2.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Vsb.B3.BondCon1.d = Nand1.Mp2.Vsb.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Vsb.De1.OutPort1 = Nand1.Mp2.Vsb.V;
//   Nand1.Mp2.Vsb.B1.BondCon2.e = Nand1.Mp2.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Vsb.B1.BondCon2.f = Nand1.Mp2.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Vsb.B1.BondCon2.d = Nand1.Mp2.Vsb.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Vsb.B2.BondCon1.e = Nand1.Mp2.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Vsb.B2.BondCon1.f = Nand1.Mp2.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Vsb.B2.BondCon1.d = Nand1.Mp2.Vsb.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Vsb.B1.BondCon1.e = Nand1.Mp2.Vsb.El2BG1.BondCon1.e;
//   Nand1.Mp2.Vsb.B1.BondCon1.f = Nand1.Mp2.Vsb.El2BG1.BondCon1.f;
//   Nand1.Mp2.Vsb.B1.BondCon1.d = Nand1.Mp2.Vsb.El2BG1.BondCon1.d;
//   Nand1.Mp2.Vsb.B2.BondCon2.e = Nand1.Mp2.Vsb.BG2El1.BondCon1.e;
//   Nand1.Mp2.Vsb.B2.BondCon2.f = Nand1.Mp2.Vsb.BG2El1.BondCon1.f;
//   Nand1.Mp2.Vsb.B2.BondCon2.d = Nand1.Mp2.Vsb.BG2El1.BondCon1.d;
//   Nand1.Mp2.Vsb.El2BG1.p.v = Nand1.Mp2.Vsb.p.v;
//   Nand1.Mp2.Vsb.BG2El1.n.v = Nand1.Mp2.Vsb.n.v;
//   (-Nand1.Mp2.D.i) + Nand1.Mp2.Rd.n.i + Nand1.Mp2.Vsd.n.i = 0.0;
//   (-Nand1.Mp2.Rd.p.i) + Nand1.Mp2.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Rd.n.i) + Nand1.Mp2.Rd.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Rd.heatPort.Q_flow) + Nand1.Mp2.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Rd.BG2Heat1.port_b.T = Nand1.Mp2.Rd.heatPort.T;
//   Nand1.Mp2.Rd.B4.eBondCon1.e = Nand1.Mp2.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Rd.B4.eBondCon1.f = Nand1.Mp2.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Rd.B4.eBondCon1.d = Nand1.Mp2.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Rd.B4.fBondCon1.e = Nand1.Mp2.Rd.RM1.BondCon2.e;
//   Nand1.Mp2.Rd.B4.fBondCon1.f = Nand1.Mp2.Rd.RM1.BondCon2.f;
//   Nand1.Mp2.Rd.B4.fBondCon1.d = Nand1.Mp2.Rd.RM1.BondCon2.d;
//   Nand1.Mp2.Rd.B3.BondCon2.e = Nand1.Mp2.Rd.RM1.BondCon1.e;
//   Nand1.Mp2.Rd.B3.BondCon2.f = Nand1.Mp2.Rd.RM1.BondCon1.f;
//   Nand1.Mp2.Rd.B3.BondCon2.d = Nand1.Mp2.Rd.RM1.BondCon1.d;
//   Nand1.Mp2.Rd.B3.BondCon1.e = Nand1.Mp2.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Rd.B3.BondCon1.f = Nand1.Mp2.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Rd.B3.BondCon1.d = Nand1.Mp2.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Rd.B1.BondCon2.e = Nand1.Mp2.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Rd.B1.BondCon2.f = Nand1.Mp2.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Rd.B1.BondCon2.d = Nand1.Mp2.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Rd.B2.BondCon1.e = Nand1.Mp2.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Rd.B2.BondCon1.f = Nand1.Mp2.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Rd.B2.BondCon1.d = Nand1.Mp2.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Rd.B1.BondCon1.e = Nand1.Mp2.Rd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Rd.B1.BondCon1.f = Nand1.Mp2.Rd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Rd.B1.BondCon1.d = Nand1.Mp2.Rd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Rd.B2.BondCon2.e = Nand1.Mp2.Rd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Rd.B2.BondCon2.f = Nand1.Mp2.Rd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Rd.B2.BondCon2.d = Nand1.Mp2.Rd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Rd.El2BG1.p.v = Nand1.Mp2.Rd.p.v;
//   Nand1.Mp2.Rd.BG2El1.n.v = Nand1.Mp2.Rd.n.v;
//   (-Nand1.Mp2.Rs.p.i) + Nand1.Mp2.Rs.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Rs.n.i) + Nand1.Mp2.Rs.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Rs.heatPort.Q_flow) + Nand1.Mp2.Rs.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Rs.BG2Heat1.port_b.T = Nand1.Mp2.Rs.heatPort.T;
//   Nand1.Mp2.Rs.B4.eBondCon1.e = Nand1.Mp2.Rs.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Rs.B4.eBondCon1.f = Nand1.Mp2.Rs.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Rs.B4.eBondCon1.d = Nand1.Mp2.Rs.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Rs.B4.fBondCon1.e = Nand1.Mp2.Rs.RM1.BondCon2.e;
//   Nand1.Mp2.Rs.B4.fBondCon1.f = Nand1.Mp2.Rs.RM1.BondCon2.f;
//   Nand1.Mp2.Rs.B4.fBondCon1.d = Nand1.Mp2.Rs.RM1.BondCon2.d;
//   Nand1.Mp2.Rs.B3.BondCon2.e = Nand1.Mp2.Rs.RM1.BondCon1.e;
//   Nand1.Mp2.Rs.B3.BondCon2.f = Nand1.Mp2.Rs.RM1.BondCon1.f;
//   Nand1.Mp2.Rs.B3.BondCon2.d = Nand1.Mp2.Rs.RM1.BondCon1.d;
//   Nand1.Mp2.Rs.B3.BondCon1.e = Nand1.Mp2.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Rs.B3.BondCon1.f = Nand1.Mp2.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Rs.B3.BondCon1.d = Nand1.Mp2.Rs.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Rs.B1.BondCon2.e = Nand1.Mp2.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Rs.B1.BondCon2.f = Nand1.Mp2.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Rs.B1.BondCon2.d = Nand1.Mp2.Rs.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Rs.B2.BondCon1.e = Nand1.Mp2.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Rs.B2.BondCon1.f = Nand1.Mp2.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Rs.B2.BondCon1.d = Nand1.Mp2.Rs.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Rs.B1.BondCon1.e = Nand1.Mp2.Rs.El2BG1.BondCon1.e;
//   Nand1.Mp2.Rs.B1.BondCon1.f = Nand1.Mp2.Rs.El2BG1.BondCon1.f;
//   Nand1.Mp2.Rs.B1.BondCon1.d = Nand1.Mp2.Rs.El2BG1.BondCon1.d;
//   Nand1.Mp2.Rs.B2.BondCon2.e = Nand1.Mp2.Rs.BG2El1.BondCon1.e;
//   Nand1.Mp2.Rs.B2.BondCon2.f = Nand1.Mp2.Rs.BG2El1.BondCon1.f;
//   Nand1.Mp2.Rs.B2.BondCon2.d = Nand1.Mp2.Rs.BG2El1.BondCon1.d;
//   Nand1.Mp2.Rs.El2BG1.p.v = Nand1.Mp2.Rs.p.v;
//   Nand1.Mp2.Rs.BG2El1.n.v = Nand1.Mp2.Rs.n.v;
//   (-Nand1.Mp2.Mpi.heatPort.Q_flow) + Nand1.Mp2.Mpi.Tdev1.port.Q_flow + Nand1.Mp2.Mpi.Dsb.heatPort.Q_flow + Nand1.Mp2.Mpi.Ddb.heatPort.Q_flow + Nand1.Mp2.Mpi.Isd.heatPort.Q_flow + Nand1.Mp2.Mpi.Rsg.heatPort.Q_flow + Nand1.Mp2.Mpi.Rdg.heatPort.Q_flow + Nand1.Mp2.Mpi.Rbg.heatPort.Q_flow + Nand1.Mp2.Mpi.Rsd.heatPort.Q_flow = 0.0;
//   (-Nand1.Mp2.Mpi.S.i) + Nand1.Mp2.Mpi.Vsg.p.i + Nand1.Mp2.Mpi.Vsb.p.i + Nand1.Mp2.Mpi.Dsb.p.i + Nand1.Mp2.Mpi.Vsd.p.i + Nand1.Mp2.Mpi.Isd.p.i + Nand1.Mp2.Mpi.Rsg.n.i + Nand1.Mp2.Mpi.Rsd.n.i = 0.0;
//   (-Nand1.Mp2.Mpi.G.i) + Nand1.Mp2.Mpi.Vsg.n.i + Nand1.Mp2.Mpi.Rsg.p.i + Nand1.Mp2.Mpi.Rdg.p.i + Nand1.Mp2.Mpi.Rbg.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Vsg.p.i) + Nand1.Mp2.Mpi.Vsg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Vsg.n.i) + Nand1.Mp2.Mpi.Vsg.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon2.e = Nand1.Mp2.Mpi.Vsg.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon2.f = Nand1.Mp2.Mpi.Vsg.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon2.d = Nand1.Mp2.Mpi.Vsg.De1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon1.e = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon1.f = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Vsg.B3.BondCon1.d = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Vsg.De1.OutPort1 = Nand1.Mp2.Mpi.Vsg.V;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon2.e = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon2.f = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon2.d = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon1.e = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon1.f = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon1.d = Nand1.Mp2.Mpi.Vsg.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon1.e = Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon1.f = Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B1.BondCon1.d = Nand1.Mp2.Mpi.Vsg.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon2.e = Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon2.f = Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsg.B2.BondCon2.d = Nand1.Mp2.Mpi.Vsg.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsg.El2BG1.p.v = Nand1.Mp2.Mpi.Vsg.p.v;
//   Nand1.Mp2.Mpi.Vsg.BG2El1.n.v = Nand1.Mp2.Mpi.Vsg.n.v;
//   (-Nand1.Mp2.Mpi.B.i) + Nand1.Mp2.Mpi.Vsb.n.i + Nand1.Mp2.Mpi.Dsb.n.i + Nand1.Mp2.Mpi.Ddb.n.i + Nand1.Mp2.Mpi.Rbg.n.i = 0.0;
//   (-Nand1.Mp2.Mpi.Vsb.p.i) + Nand1.Mp2.Mpi.Vsb.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Vsb.n.i) + Nand1.Mp2.Mpi.Vsb.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon2.e = Nand1.Mp2.Mpi.Vsb.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon2.f = Nand1.Mp2.Mpi.Vsb.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon2.d = Nand1.Mp2.Mpi.Vsb.De1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon1.e = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon1.f = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Vsb.B3.BondCon1.d = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Vsb.De1.OutPort1 = Nand1.Mp2.Mpi.Vsb.V;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon2.e = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon2.f = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon2.d = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon1.e = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon1.f = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon1.d = Nand1.Mp2.Mpi.Vsb.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon1.e = Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon1.f = Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B1.BondCon1.d = Nand1.Mp2.Mpi.Vsb.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon2.e = Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon2.f = Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsb.B2.BondCon2.d = Nand1.Mp2.Mpi.Vsb.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsb.El2BG1.p.v = Nand1.Mp2.Mpi.Vsb.p.v;
//   Nand1.Mp2.Mpi.Vsb.BG2El1.n.v = Nand1.Mp2.Mpi.Vsb.n.v;
//   (-Nand1.Mp2.Mpi.Dsb.heatPort.Q_flow) + Nand1.Mp2.Mpi.Dsb.Tdev1.port.Q_flow + Nand1.Mp2.Mpi.Dsb.Rd.heatPort.Q_flow + Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.p.i) + Nand1.Mp2.Mpi.Dsb.Rd.p.i + Nand1.Mp2.Mpi.Dsb.DjM1.p.i + Nand1.Mp2.Mpi.Dsb.Vd.p.i + Nand1.Mp2.Mpi.Dsb.VarC1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.n.i) + Nand1.Mp2.Mpi.Dsb.Rd.n.i + Nand1.Mp2.Mpi.Dsb.DjM1.n.i + Nand1.Mp2.Mpi.Dsb.Vd.n.i + Nand1.Mp2.Mpi.Dsb.VarC1.n.i = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.Rd.p.i) + Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.Rd.n.i) + Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.control;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B3.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B1.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B2.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.Sw1.B4.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Dsb.Rd.heatPort.Q_flow) + Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Dsb.Rd.heatPort.T;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.eBondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B5.fBondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.fBondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.eBondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.Sw1.p.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B4.fBondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon2.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.R1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B1.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B2.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B3.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Dsb.Rd.El2BG1.p.v = Nand1.Mp2.Mpi.Dsb.Rd.p.v;
//   Nand1.Mp2.Mpi.Dsb.Rd.BG2El1.n.v = Nand1.Mp2.Mpi.Dsb.Rd.n.v;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.e = Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Rd.B6.eBondCon1.d = Nand1.Mp2.Mpi.Dsb.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Dsb.DjM1.p.i) + Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.DjM1.n.i) + Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.Q_flow) + Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.T;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.f = Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.eBondCon1.d = Nand1.Mp2.Mpi.Dsb.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.f = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B4.fBondCon1.d = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon2.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon2.d = Nand1.Mp2.Mpi.Dsb.DjM1.DjM1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.f = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B3.BondCon1.d = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon2.d = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.f = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon1.d = Nand1.Mp2.Mpi.Dsb.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B1.BondCon1.d = Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.DjM1.B2.BondCon2.d = Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.DjM1.El2BG1.p.v = Nand1.Mp2.Mpi.Dsb.DjM1.p.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.BG2El1.n.v = Nand1.Mp2.Mpi.Dsb.DjM1.n.v;
//   (-Nand1.Mp2.Mpi.Dsb.Vd.p.i) + Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.Vd.n.i) + Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Vd.De1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B3.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Dsb.Vd.De1.OutPort1 = Nand1.Mp2.Mpi.Dsb.Vd.V;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B1.BondCon1.d = Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.Vd.B2.BondCon2.d = Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.Vd.El2BG1.p.v = Nand1.Mp2.Mpi.Dsb.Vd.p.v;
//   Nand1.Mp2.Mpi.Dsb.Vd.BG2El1.n.v = Nand1.Mp2.Mpi.Dsb.Vd.n.v;
//   (-Nand1.Mp2.Mpi.Dsb.VarC1.p.i) + Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Dsb.VarC1.n.i) + Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Dsb.VarC1.mC1.s = Nand1.Mp2.Mpi.Dsb.VarC1.u;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.e = Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.f = Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon2.d = Nand1.Mp2.Mpi.Dsb.VarC1.mC1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.e = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.f = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B3.BondCon1.d = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.e = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.f = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon2.d = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.e = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.f = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon1.d = Nand1.Mp2.Mpi.Dsb.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.e = Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.f = Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B1.BondCon1.d = Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.e = Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.f = Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Dsb.VarC1.B2.BondCon2.d = Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Dsb.VarC1.El2BG1.p.v = Nand1.Mp2.Mpi.Dsb.VarC1.p.v;
//   Nand1.Mp2.Mpi.Dsb.VarC1.BG2El1.n.v = Nand1.Mp2.Mpi.Dsb.VarC1.n.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.p.v = Nand1.Mp2.Mpi.Dsb.Rd.p.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.p.v = Nand1.Mp2.Mpi.Dsb.VarC1.p.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.p.v = Nand1.Mp2.Mpi.Dsb.Vd.p.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.p.v = Nand1.Mp2.Mpi.Dsb.p.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.n.v = Nand1.Mp2.Mpi.Dsb.Rd.n.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.n.v = Nand1.Mp2.Mpi.Dsb.VarC1.n.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.n.v = Nand1.Mp2.Mpi.Dsb.Vd.n.v;
//   Nand1.Mp2.Mpi.Dsb.DjM1.n.v = Nand1.Mp2.Mpi.Dsb.n.v;
//   Nand1.Mp2.Mpi.Dsb.VarC1.u = Nand1.Mp2.Mpi.Dsb.nlCM1.y;
//   Nand1.Mp2.Mpi.Dsb.Vd.V = Nand1.Mp2.Mpi.Dsb.nlCM1.u;
//   Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.T = Nand1.Mp2.Mpi.Dsb.Rd.heatPort.T;
//   Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.T = Nand1.Mp2.Mpi.Dsb.Tdev1.port.T;
//   Nand1.Mp2.Mpi.Dsb.DjM1.heatPort.T = Nand1.Mp2.Mpi.Dsb.heatPort.T;
//   Nand1.Mp2.Mpi.Dsb.Tdev1.T = Nand1.Mp2.Mpi.Dsb.nlCM1.Tdev;
//   (-Nand1.Mp2.Mpi.D.i) + Nand1.Mp2.Mpi.Ddb.p.i + Nand1.Mp2.Mpi.Vsd.n.i + Nand1.Mp2.Mpi.Isd.n.i + Nand1.Mp2.Mpi.Rdg.n.i + Nand1.Mp2.Mpi.Rsd.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.heatPort.Q_flow) + Nand1.Mp2.Mpi.Ddb.Tdev1.port.Q_flow + Nand1.Mp2.Mpi.Ddb.Rd.heatPort.Q_flow + Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.p.i) + Nand1.Mp2.Mpi.Ddb.Rd.p.i + Nand1.Mp2.Mpi.Ddb.DjM1.p.i + Nand1.Mp2.Mpi.Ddb.Vd.p.i + Nand1.Mp2.Mpi.Ddb.VarC1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.n.i) + Nand1.Mp2.Mpi.Ddb.Rd.n.i + Nand1.Mp2.Mpi.Ddb.DjM1.n.i + Nand1.Mp2.Mpi.Ddb.Vd.n.i + Nand1.Mp2.Mpi.Ddb.VarC1.n.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.Rd.p.i) + Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.Rd.n.i) + Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.control;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B3.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B1.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B2.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.Sw1.B4.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Ddb.Rd.heatPort.Q_flow) + Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Ddb.Rd.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.eBondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B5.fBondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.fBondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.eBondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.Sw1.p.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B4.fBondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon2.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.R1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B1.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B2.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B3.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Ddb.Rd.El2BG1.p.v = Nand1.Mp2.Mpi.Ddb.Rd.p.v;
//   Nand1.Mp2.Mpi.Ddb.Rd.BG2El1.n.v = Nand1.Mp2.Mpi.Ddb.Rd.n.v;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.e = Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Rd.B6.eBondCon1.d = Nand1.Mp2.Mpi.Ddb.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Ddb.DjM1.p.i) + Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.DjM1.n.i) + Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.Q_flow) + Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.f = Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.eBondCon1.d = Nand1.Mp2.Mpi.Ddb.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.f = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B4.fBondCon1.d = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon2.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon2.d = Nand1.Mp2.Mpi.Ddb.DjM1.DjM1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.f = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B3.BondCon1.d = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon2.d = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.f = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon1.d = Nand1.Mp2.Mpi.Ddb.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B1.BondCon1.d = Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.DjM1.B2.BondCon2.d = Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.DjM1.El2BG1.p.v = Nand1.Mp2.Mpi.Ddb.DjM1.p.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.BG2El1.n.v = Nand1.Mp2.Mpi.Ddb.DjM1.n.v;
//   (-Nand1.Mp2.Mpi.Ddb.Vd.p.i) + Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.Vd.n.i) + Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Vd.De1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B3.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Ddb.Vd.De1.OutPort1 = Nand1.Mp2.Mpi.Ddb.Vd.V;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B1.BondCon1.d = Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.Vd.B2.BondCon2.d = Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.Vd.El2BG1.p.v = Nand1.Mp2.Mpi.Ddb.Vd.p.v;
//   Nand1.Mp2.Mpi.Ddb.Vd.BG2El1.n.v = Nand1.Mp2.Mpi.Ddb.Vd.n.v;
//   (-Nand1.Mp2.Mpi.Ddb.VarC1.p.i) + Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Ddb.VarC1.n.i) + Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Ddb.VarC1.mC1.s = Nand1.Mp2.Mpi.Ddb.VarC1.u;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.e = Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.f = Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon2.d = Nand1.Mp2.Mpi.Ddb.VarC1.mC1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.e = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.f = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B3.BondCon1.d = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.e = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.f = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon2.d = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.e = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.f = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon1.d = Nand1.Mp2.Mpi.Ddb.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.e = Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.f = Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B1.BondCon1.d = Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.e = Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.f = Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Ddb.VarC1.B2.BondCon2.d = Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Ddb.VarC1.El2BG1.p.v = Nand1.Mp2.Mpi.Ddb.VarC1.p.v;
//   Nand1.Mp2.Mpi.Ddb.VarC1.BG2El1.n.v = Nand1.Mp2.Mpi.Ddb.VarC1.n.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.p.v = Nand1.Mp2.Mpi.Ddb.Rd.p.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.p.v = Nand1.Mp2.Mpi.Ddb.VarC1.p.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.p.v = Nand1.Mp2.Mpi.Ddb.Vd.p.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.p.v = Nand1.Mp2.Mpi.Ddb.p.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.n.v = Nand1.Mp2.Mpi.Ddb.Rd.n.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.n.v = Nand1.Mp2.Mpi.Ddb.VarC1.n.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.n.v = Nand1.Mp2.Mpi.Ddb.Vd.n.v;
//   Nand1.Mp2.Mpi.Ddb.DjM1.n.v = Nand1.Mp2.Mpi.Ddb.n.v;
//   Nand1.Mp2.Mpi.Ddb.VarC1.u = Nand1.Mp2.Mpi.Ddb.nlCM1.y;
//   Nand1.Mp2.Mpi.Ddb.Vd.V = Nand1.Mp2.Mpi.Ddb.nlCM1.u;
//   Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.T = Nand1.Mp2.Mpi.Ddb.Rd.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.T = Nand1.Mp2.Mpi.Ddb.Tdev1.port.T;
//   Nand1.Mp2.Mpi.Ddb.DjM1.heatPort.T = Nand1.Mp2.Mpi.Ddb.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.Tdev1.T = Nand1.Mp2.Mpi.Ddb.nlCM1.Tdev;
//   (-Nand1.Mp2.Mpi.Vsd.p.i) + Nand1.Mp2.Mpi.Vsd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Vsd.n.i) + Nand1.Mp2.Mpi.Vsd.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon2.e = Nand1.Mp2.Mpi.Vsd.De1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon2.f = Nand1.Mp2.Mpi.Vsd.De1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon2.d = Nand1.Mp2.Mpi.Vsd.De1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon1.e = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon1.f = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Vsd.B3.BondCon1.d = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Vsd.De1.OutPort1 = Nand1.Mp2.Mpi.Vsd.V;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon2.e = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon2.f = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon2.d = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon1.e = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon1.f = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon1.d = Nand1.Mp2.Mpi.Vsd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon1.e = Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon1.f = Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B1.BondCon1.d = Nand1.Mp2.Mpi.Vsd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon2.e = Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon2.f = Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Vsd.B2.BondCon2.d = Nand1.Mp2.Mpi.Vsd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Vsd.El2BG1.p.v = Nand1.Mp2.Mpi.Vsd.p.v;
//   Nand1.Mp2.Mpi.Vsd.BG2El1.n.v = Nand1.Mp2.Mpi.Vsd.n.v;
//   (-Nand1.Mp2.Mpi.Isd.p.i) + Nand1.Mp2.Mpi.Isd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Isd.n.i) + Nand1.Mp2.Mpi.Isd.BG2El1.n.i = 0.0;
//   (-Nand1.Mp2.Mpi.Isd.heatPort.Q_flow) + Nand1.Mp2.Mpi.Isd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Isd.I1.s = Nand1.Mp2.Mpi.Isd.InPort1;
//   Nand1.Mp2.Mpi.Isd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Isd.I1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B4.fBondCon1.f = Nand1.Mp2.Mpi.Isd.I1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B4.fBondCon1.d = Nand1.Mp2.Mpi.Isd.I1.BondCon1.d;
//   Nand1.Mp2.Mpi.Isd.B3.fBondCon1.e = Nand1.Mp2.Mpi.Isd.I1.BondCon2.e;
//   Nand1.Mp2.Mpi.Isd.B3.fBondCon1.f = Nand1.Mp2.Mpi.Isd.I1.BondCon2.f;
//   Nand1.Mp2.Mpi.Isd.B3.fBondCon1.d = Nand1.Mp2.Mpi.Isd.I1.BondCon2.d;
//   Nand1.Mp2.Mpi.Isd.B3.eBondCon1.e = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Isd.B3.eBondCon1.f = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Isd.B3.eBondCon1.d = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Isd.B4.eBondCon1.e = Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B4.eBondCon1.d = Nand1.Mp2.Mpi.Isd.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon2.e = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon2.f = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon2.d = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon1.e = Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon1.f = Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B1.BondCon1.d = Nand1.Mp2.Mpi.Isd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon2.e = Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon2.f = Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon2.d = Nand1.Mp2.Mpi.Isd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon1.e = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon1.f = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Isd.B2.BondCon1.d = Nand1.Mp2.Mpi.Isd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Isd.El2BG1.p.v = Nand1.Mp2.Mpi.Isd.p.v;
//   Nand1.Mp2.Mpi.Isd.BG2El1.n.v = Nand1.Mp2.Mpi.Isd.n.v;
//   Nand1.Mp2.Mpi.Isd.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Isd.heatPort.T;
//   (-Nand1.Mp2.Mpi.Rsg.p.i) + Nand1.Mp2.Mpi.Rsg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Rsg.n.i) + Nand1.Mp2.Mpi.Rsg.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BooleanInPort1 = Nand1.Mp2.Mpi.Rsg.Sw1.control;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon2.d = Nand1.Mp2.Mpi.Rsg.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.e = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.f = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B3.BondCon1.d = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.e = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.f = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon1.d = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon2.d = Nand1.Mp2.Mpi.Rsg.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.e = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.f = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon1.d = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon2.d = Nand1.Mp2.Mpi.Rsg.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.e = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.f = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B1.BondCon1.d = Nand1.Mp2.Mpi.Rsg.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon2.d = Nand1.Mp2.Mpi.Rsg.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B2.BondCon2.d = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_2.BondCon2.d = Nand1.Mp2.Mpi.Rsg.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.Sw1.B4.BondCon2.d = Nand1.Mp2.Mpi.Rsg.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Rsg.heatPort.Q_flow) + Nand1.Mp2.Mpi.Rsg.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Rsg.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Rsg.heatPort.T;
//   Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.e = Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B5.eBondCon1.d = Nand1.Mp2.Mpi.Rsg.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rsg.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.f = Nand1.Mp2.Mpi.Rsg.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rsg.B5.fBondCon1.d = Nand1.Mp2.Mpi.Rsg.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rsg.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.f = Nand1.Mp2.Mpi.Rsg.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rsg.B6.fBondCon1.d = Nand1.Mp2.Mpi.Rsg.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.e = Nand1.Mp2.Mpi.Rsg.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rsg.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rsg.B4.eBondCon1.d = Nand1.Mp2.Mpi.Rsg.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rsg.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.f = Nand1.Mp2.Mpi.Rsg.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.B4.fBondCon1.d = Nand1.Mp2.Mpi.Rsg.R1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsg.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsg.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon2.d = Nand1.Mp2.Mpi.Rsg.R1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon2.d = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon1.e = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon1.f = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon1.d = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon1.e = Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon1.f = Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B1.BondCon1.d = Nand1.Mp2.Mpi.Rsg.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B2.BondCon2.d = Nand1.Mp2.Mpi.Rsg.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon1.e = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon1.f = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsg.B3.BondCon1.d = Nand1.Mp2.Mpi.Rsg.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rsg.El2BG1.p.v = Nand1.Mp2.Mpi.Rsg.p.v;
//   Nand1.Mp2.Mpi.Rsg.BG2El1.n.v = Nand1.Mp2.Mpi.Rsg.n.v;
//   Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.e = Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsg.B6.eBondCon1.d = Nand1.Mp2.Mpi.Rsg.T_nom.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Rdg.p.i) + Nand1.Mp2.Mpi.Rdg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Rdg.n.i) + Nand1.Mp2.Mpi.Rdg.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BooleanInPort1 = Nand1.Mp2.Mpi.Rdg.Sw1.control;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon2.d = Nand1.Mp2.Mpi.Rdg.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.e = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.f = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B3.BondCon1.d = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.e = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.f = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon1.d = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon2.d = Nand1.Mp2.Mpi.Rdg.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.e = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.f = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon1.d = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon2.d = Nand1.Mp2.Mpi.Rdg.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.e = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.f = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B1.BondCon1.d = Nand1.Mp2.Mpi.Rdg.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon2.d = Nand1.Mp2.Mpi.Rdg.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B2.BondCon2.d = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_2.BondCon2.d = Nand1.Mp2.Mpi.Rdg.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.Sw1.B4.BondCon2.d = Nand1.Mp2.Mpi.Rdg.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Rdg.heatPort.Q_flow) + Nand1.Mp2.Mpi.Rdg.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Rdg.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Rdg.heatPort.T;
//   Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.e = Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B5.eBondCon1.d = Nand1.Mp2.Mpi.Rdg.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rdg.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.f = Nand1.Mp2.Mpi.Rdg.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rdg.B5.fBondCon1.d = Nand1.Mp2.Mpi.Rdg.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rdg.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.f = Nand1.Mp2.Mpi.Rdg.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rdg.B6.fBondCon1.d = Nand1.Mp2.Mpi.Rdg.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.e = Nand1.Mp2.Mpi.Rdg.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rdg.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rdg.B4.eBondCon1.d = Nand1.Mp2.Mpi.Rdg.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rdg.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.f = Nand1.Mp2.Mpi.Rdg.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.B4.fBondCon1.d = Nand1.Mp2.Mpi.Rdg.R1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon2.e = Nand1.Mp2.Mpi.Rdg.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon2.f = Nand1.Mp2.Mpi.Rdg.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon2.d = Nand1.Mp2.Mpi.Rdg.R1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon2.e = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon2.f = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon2.d = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon1.e = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon1.f = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon1.d = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon1.e = Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon1.f = Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B1.BondCon1.d = Nand1.Mp2.Mpi.Rdg.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon2.e = Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon2.f = Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B2.BondCon2.d = Nand1.Mp2.Mpi.Rdg.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon1.e = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon1.f = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rdg.B3.BondCon1.d = Nand1.Mp2.Mpi.Rdg.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rdg.El2BG1.p.v = Nand1.Mp2.Mpi.Rdg.p.v;
//   Nand1.Mp2.Mpi.Rdg.BG2El1.n.v = Nand1.Mp2.Mpi.Rdg.n.v;
//   Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.e = Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rdg.B6.eBondCon1.d = Nand1.Mp2.Mpi.Rdg.T_nom.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Rbg.p.i) + Nand1.Mp2.Mpi.Rbg.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Rbg.n.i) + Nand1.Mp2.Mpi.Rbg.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BooleanInPort1 = Nand1.Mp2.Mpi.Rbg.Sw1.control;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon2.d = Nand1.Mp2.Mpi.Rbg.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.e = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.f = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B3.BondCon1.d = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.e = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.f = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon1.d = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon2.d = Nand1.Mp2.Mpi.Rbg.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.e = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.f = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon1.d = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon2.d = Nand1.Mp2.Mpi.Rbg.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.e = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.f = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B1.BondCon1.d = Nand1.Mp2.Mpi.Rbg.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon2.d = Nand1.Mp2.Mpi.Rbg.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B2.BondCon2.d = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_2.BondCon2.d = Nand1.Mp2.Mpi.Rbg.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.Sw1.B4.BondCon2.d = Nand1.Mp2.Mpi.Rbg.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Rbg.heatPort.Q_flow) + Nand1.Mp2.Mpi.Rbg.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Rbg.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Rbg.heatPort.T;
//   Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.e = Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B5.eBondCon1.d = Nand1.Mp2.Mpi.Rbg.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rbg.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.f = Nand1.Mp2.Mpi.Rbg.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rbg.B5.fBondCon1.d = Nand1.Mp2.Mpi.Rbg.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rbg.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.f = Nand1.Mp2.Mpi.Rbg.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rbg.B6.fBondCon1.d = Nand1.Mp2.Mpi.Rbg.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.e = Nand1.Mp2.Mpi.Rbg.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rbg.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rbg.B4.eBondCon1.d = Nand1.Mp2.Mpi.Rbg.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rbg.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.f = Nand1.Mp2.Mpi.Rbg.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.B4.fBondCon1.d = Nand1.Mp2.Mpi.Rbg.R1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon2.e = Nand1.Mp2.Mpi.Rbg.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon2.f = Nand1.Mp2.Mpi.Rbg.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon2.d = Nand1.Mp2.Mpi.Rbg.R1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon2.e = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon2.f = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon2.d = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon1.e = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon1.f = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon1.d = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon1.e = Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon1.f = Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B1.BondCon1.d = Nand1.Mp2.Mpi.Rbg.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon2.e = Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon2.f = Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B2.BondCon2.d = Nand1.Mp2.Mpi.Rbg.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon1.e = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon1.f = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rbg.B3.BondCon1.d = Nand1.Mp2.Mpi.Rbg.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rbg.El2BG1.p.v = Nand1.Mp2.Mpi.Rbg.p.v;
//   Nand1.Mp2.Mpi.Rbg.BG2El1.n.v = Nand1.Mp2.Mpi.Rbg.n.v;
//   Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.e = Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rbg.B6.eBondCon1.d = Nand1.Mp2.Mpi.Rbg.T_nom.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Rsd.p.i) + Nand1.Mp2.Mpi.Rsd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Mpi.Rsd.n.i) + Nand1.Mp2.Mpi.Rsd.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BooleanInPort1 = Nand1.Mp2.Mpi.Rsd.Sw1.control;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon2.d = Nand1.Mp2.Mpi.Rsd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.e = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.f = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B3.BondCon1.d = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.e = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.f = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon1.d = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon2.d = Nand1.Mp2.Mpi.Rsd.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.e = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.f = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon1.d = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon2.d = Nand1.Mp2.Mpi.Rsd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.e = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.f = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B1.BondCon1.d = Nand1.Mp2.Mpi.Rsd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon2.d = Nand1.Mp2.Mpi.Rsd.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B2.BondCon2.d = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_2.BondCon2.d = Nand1.Mp2.Mpi.Rsd.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.e = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.f = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.Sw1.B4.BondCon2.d = Nand1.Mp2.Mpi.Rsd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mp2.Mpi.Rsd.heatPort.Q_flow) + Nand1.Mp2.Mpi.Rsd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Mpi.Rsd.BG2Heat1.port_b.T = Nand1.Mp2.Mpi.Rsd.heatPort.T;
//   Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.e = Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.f = Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B5.eBondCon1.d = Nand1.Mp2.Mpi.Rsd.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.e = Nand1.Mp2.Mpi.Rsd.Sw1.n2.e;
//   Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.f = Nand1.Mp2.Mpi.Rsd.Sw1.n2.f;
//   Nand1.Mp2.Mpi.Rsd.B5.fBondCon1.d = Nand1.Mp2.Mpi.Rsd.Sw1.n2.d;
//   Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.e = Nand1.Mp2.Mpi.Rsd.Sw1.n1.e;
//   Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.f = Nand1.Mp2.Mpi.Rsd.Sw1.n1.f;
//   Nand1.Mp2.Mpi.Rsd.B6.fBondCon1.d = Nand1.Mp2.Mpi.Rsd.Sw1.n1.d;
//   Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.e = Nand1.Mp2.Mpi.Rsd.Sw1.p.e;
//   Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.f = Nand1.Mp2.Mpi.Rsd.Sw1.p.f;
//   Nand1.Mp2.Mpi.Rsd.B4.eBondCon1.d = Nand1.Mp2.Mpi.Rsd.Sw1.p.d;
//   Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.e = Nand1.Mp2.Mpi.Rsd.R1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.f = Nand1.Mp2.Mpi.Rsd.R1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.B4.fBondCon1.d = Nand1.Mp2.Mpi.Rsd.R1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon2.e = Nand1.Mp2.Mpi.Rsd.R1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon2.f = Nand1.Mp2.Mpi.Rsd.R1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon2.d = Nand1.Mp2.Mpi.Rsd.R1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon2.e = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon2.f = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon2.d = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon1.e = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon1.f = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon1.d = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon1.e = Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon1.f = Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B1.BondCon1.d = Nand1.Mp2.Mpi.Rsd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon2.e = Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon2.f = Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B2.BondCon2.d = Nand1.Mp2.Mpi.Rsd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon1.e = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon1.f = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Mpi.Rsd.B3.BondCon1.d = Nand1.Mp2.Mpi.Rsd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Mpi.Rsd.El2BG1.p.v = Nand1.Mp2.Mpi.Rsd.p.v;
//   Nand1.Mp2.Mpi.Rsd.BG2El1.n.v = Nand1.Mp2.Mpi.Rsd.n.v;
//   Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.e = Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.e;
//   Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.f = Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.f;
//   Nand1.Mp2.Mpi.Rsd.B6.eBondCon1.d = Nand1.Mp2.Mpi.Rsd.T_nom.BondCon1.d;
//   Nand1.Mp2.Mpi.IDS0.u1 = Nand1.Mp2.Mpi.Vsd.V;
//   Nand1.Mp2.Mpi.Dsb.p.v = Nand1.Mp2.Mpi.Isd.p.v;
//   Nand1.Mp2.Mpi.Dsb.p.v = Nand1.Mp2.Mpi.Rsd.n.v;
//   Nand1.Mp2.Mpi.Dsb.p.v = Nand1.Mp2.Mpi.Rsg.n.v;
//   Nand1.Mp2.Mpi.Dsb.p.v = Nand1.Mp2.Mpi.S.v;
//   Nand1.Mp2.Mpi.Dsb.p.v = Nand1.Mp2.Mpi.Vsb.p.v;
//   Nand1.Mp2.Mpi.Dsb.p.v = Nand1.Mp2.Mpi.Vsd.p.v;
//   Nand1.Mp2.Mpi.Dsb.p.v = Nand1.Mp2.Mpi.Vsg.p.v;
//   Nand1.Mp2.Mpi.D.v = Nand1.Mp2.Mpi.Ddb.p.v;
//   Nand1.Mp2.Mpi.D.v = Nand1.Mp2.Mpi.Isd.n.v;
//   Nand1.Mp2.Mpi.D.v = Nand1.Mp2.Mpi.Rdg.n.v;
//   Nand1.Mp2.Mpi.D.v = Nand1.Mp2.Mpi.Rsd.p.v;
//   Nand1.Mp2.Mpi.D.v = Nand1.Mp2.Mpi.Vsd.n.v;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.Dsb.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.Isd.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.Rbg.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.Rdg.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.Rsd.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.Rsg.heatPort.T;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.Tdev1.port.T;
//   Nand1.Mp2.Mpi.Ddb.heatPort.T = Nand1.Mp2.Mpi.heatPort.T;
//   Nand1.Mp2.Mpi.B.v = Nand1.Mp2.Mpi.Ddb.n.v;
//   Nand1.Mp2.Mpi.B.v = Nand1.Mp2.Mpi.Dsb.n.v;
//   Nand1.Mp2.Mpi.B.v = Nand1.Mp2.Mpi.Rbg.n.v;
//   Nand1.Mp2.Mpi.B.v = Nand1.Mp2.Mpi.Vsb.n.v;
//   Nand1.Mp2.Mpi.G.v = Nand1.Mp2.Mpi.Rbg.p.v;
//   Nand1.Mp2.Mpi.G.v = Nand1.Mp2.Mpi.Rdg.p.v;
//   Nand1.Mp2.Mpi.G.v = Nand1.Mp2.Mpi.Rsg.p.v;
//   Nand1.Mp2.Mpi.G.v = Nand1.Mp2.Mpi.Vsg.n.v;
//   Nand1.Mp2.Mpi.IDS0.y = Nand1.Mp2.Mpi.Isd.InPort1;
//   Nand1.Mp2.Mpi.IDS0.Tdev = Nand1.Mp2.Mpi.Tdev1.T;
//   Nand1.Mp2.Mpi.IDS0.u2 = Nand1.Mp2.Mpi.Vsg.V;
//   Nand1.Mp2.Mpi.IDS0.u3 = Nand1.Mp2.Mpi.Vsb.V;
//   Nand1.Mp2.Mpi.IDS0.y1[5] = Nand1.Mp2.Mpi.y1[5];
//   Nand1.Mp2.Mpi.IDS0.y1[4] = Nand1.Mp2.Mpi.y1[4];
//   Nand1.Mp2.Mpi.IDS0.y1[3] = Nand1.Mp2.Mpi.y1[3];
//   Nand1.Mp2.Mpi.IDS0.y1[2] = Nand1.Mp2.Mpi.y1[2];
//   Nand1.Mp2.Mpi.IDS0.y1[1] = Nand1.Mp2.Mpi.y1[1];
//   Nand1.Mp2.T_nom.BG2Heat1.port_b.Q_flow + (-Nand1.Mp2.T_nom.port.Q_flow) = 0.0;
//   Nand1.Mp2.T_nom.port.Q_flow + Nand1.Mp2.Sw1.n1.Q_flow = 0.0;
//   Nand1.Mp2.T_nom.B1.fBondCon1.e = Nand1.Mp2.T_nom.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.T_nom.B1.fBondCon1.f = Nand1.Mp2.T_nom.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.T_nom.B1.fBondCon1.d = Nand1.Mp2.T_nom.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.T_nom.B1.eBondCon1.e = Nand1.Mp2.T_nom.Tabs.BondCon1.e;
//   Nand1.Mp2.T_nom.B1.eBondCon1.f = Nand1.Mp2.T_nom.Tabs.BondCon1.f;
//   Nand1.Mp2.T_nom.B1.eBondCon1.d = Nand1.Mp2.T_nom.Tabs.BondCon1.d;
//   Nand1.Mp2.T_nom.BG2Heat1.port_b.T = Nand1.Mp2.T_nom.port.T;
//   (-Nand1.Mp2.heatPort.Q_flow) + Nand1.Mp2.Sw1.n2.Q_flow = 0.0;
//   (-Nand1.Mp2.Sw1.p.Q_flow) + Nand1.Mp2.Sw1.Heat2BG1.port_a.Q_flow = 0.0;
//   (-Nand1.Mp2.Sw1.n1.Q_flow) + Nand1.Mp2.Sw1.BG2Heat1.port_b.Q_flow = 0.0;
//   (-Nand1.Mp2.Sw1.n2.Q_flow) + Nand1.Mp2.Sw1.BG2Heat2.port_b.Q_flow = 0.0;
//   Nand1.Mp2.Sw1.Sw1.Sw1.BooleanInPort1 = Nand1.Mp2.Sw1.Sw1.control;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon2.e = Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon2.f = Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon2.d = Nand1.Mp2.Sw1.Sw1.Sw1.BondCon1.d;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon1.e = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon1.f = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Sw1.Sw1.B3.BondCon1.d = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon1.e = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon1.f = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon1.d = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.e = Nand1.Mp2.Sw1.Sw1.p.e;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.f = Nand1.Mp2.Sw1.Sw1.p.f;
//   Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon2.d = Nand1.Mp2.Sw1.Sw1.p.d;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon1.e = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon1.f = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon1.d = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon2.e = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon2.f = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon2.d = Nand1.Mp2.Sw1.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon1.e = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon1.f = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mp2.Sw1.Sw1.B1.BondCon1.d = Nand1.Mp2.Sw1.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.e = Nand1.Mp2.Sw1.Sw1.n2.e;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.f = Nand1.Mp2.Sw1.Sw1.n2.f;
//   Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon2.d = Nand1.Mp2.Sw1.Sw1.n2.d;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon2.e = Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon2.f = Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B2.BondCon2.d = Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.e = Nand1.Mp2.Sw1.Sw1.n1.e;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.f = Nand1.Mp2.Sw1.Sw1.n1.f;
//   Nand1.Mp2.Sw1.Sw1.j0p2_2.BondCon2.d = Nand1.Mp2.Sw1.Sw1.n1.d;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon2.e = Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon2.f = Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mp2.Sw1.Sw1.B4.BondCon2.d = Nand1.Mp2.Sw1.Sw1.j0p2_1.BondCon1.d;
//   Nand1.Mp2.Sw1.B3.BondCon1.e = Nand1.Mp2.Sw1.Sw1.n1.e;
//   Nand1.Mp2.Sw1.B3.BondCon1.f = Nand1.Mp2.Sw1.Sw1.n1.f;
//   Nand1.Mp2.Sw1.B3.BondCon1.d = Nand1.Mp2.Sw1.Sw1.n1.d;
//   Nand1.Mp2.Sw1.B2.BondCon1.e = Nand1.Mp2.Sw1.Sw1.n2.e;
//   Nand1.Mp2.Sw1.B2.BondCon1.f = Nand1.Mp2.Sw1.Sw1.n2.f;
//   Nand1.Mp2.Sw1.B2.BondCon1.d = Nand1.Mp2.Sw1.Sw1.n2.d;
//   Nand1.Mp2.Sw1.B1.BondCon2.e = Nand1.Mp2.Sw1.Sw1.p.e;
//   Nand1.Mp2.Sw1.B1.BondCon2.f = Nand1.Mp2.Sw1.Sw1.p.f;
//   Nand1.Mp2.Sw1.B1.BondCon2.d = Nand1.Mp2.Sw1.Sw1.p.d;
//   Nand1.Mp2.Sw1.Sw1.control = Nand1.Mp2.Sw1.control;
//   Nand1.Mp2.Sw1.Heat2BG1.port_a.T = Nand1.Mp2.Sw1.p.T;
//   Nand1.Mp2.Sw1.B1.BondCon1.e = Nand1.Mp2.Sw1.Heat2BG1.BondCon1.e;
//   Nand1.Mp2.Sw1.B1.BondCon1.f = Nand1.Mp2.Sw1.Heat2BG1.BondCon1.f;
//   Nand1.Mp2.Sw1.B1.BondCon1.d = Nand1.Mp2.Sw1.Heat2BG1.BondCon1.d;
//   Nand1.Mp2.Sw1.BG2Heat1.port_b.T = Nand1.Mp2.Sw1.n1.T;
//   Nand1.Mp2.Sw1.B3.BondCon2.e = Nand1.Mp2.Sw1.BG2Heat1.BondCon1.e;
//   Nand1.Mp2.Sw1.B3.BondCon2.f = Nand1.Mp2.Sw1.BG2Heat1.BondCon1.f;
//   Nand1.Mp2.Sw1.B3.BondCon2.d = Nand1.Mp2.Sw1.BG2Heat1.BondCon1.d;
//   Nand1.Mp2.Sw1.BG2Heat2.port_b.T = Nand1.Mp2.Sw1.n2.T;
//   Nand1.Mp2.Sw1.B2.BondCon2.e = Nand1.Mp2.Sw1.BG2Heat2.BondCon1.e;
//   Nand1.Mp2.Sw1.B2.BondCon2.f = Nand1.Mp2.Sw1.BG2Heat2.BondCon1.f;
//   Nand1.Mp2.Sw1.B2.BondCon2.d = Nand1.Mp2.Sw1.BG2Heat2.BondCon1.d;
//   (-Nand1.Mp2.Vsd.p.i) + Nand1.Mp2.Vsd.El2BG1.p.i = 0.0;
//   (-Nand1.Mp2.Vsd.n.i) + Nand1.Mp2.Vsd.BG2El1.n.i = 0.0;
//   Nand1.Mp2.Vsd.B3.BondCon2.e = Nand1.Mp2.Vsd.De1.BondCon1.e;
//   Nand1.Mp2.Vsd.B3.BondCon2.f = Nand1.Mp2.Vsd.De1.BondCon1.f;
//   Nand1.Mp2.Vsd.B3.BondCon2.d = Nand1.Mp2.Vsd.De1.BondCon1.d;
//   Nand1.Mp2.Vsd.B3.BondCon1.e = Nand1.Mp2.Vsd.J1p3_1.BondCon3.e;
//   Nand1.Mp2.Vsd.B3.BondCon1.f = Nand1.Mp2.Vsd.J1p3_1.BondCon3.f;
//   Nand1.Mp2.Vsd.B3.BondCon1.d = Nand1.Mp2.Vsd.J1p3_1.BondCon3.d;
//   Nand1.Mp2.Vsd.De1.OutPort1 = Nand1.Mp2.Vsd.V;
//   Nand1.Mp2.Vsd.B1.BondCon2.e = Nand1.Mp2.Vsd.J1p3_1.BondCon1.e;
//   Nand1.Mp2.Vsd.B1.BondCon2.f = Nand1.Mp2.Vsd.J1p3_1.BondCon1.f;
//   Nand1.Mp2.Vsd.B1.BondCon2.d = Nand1.Mp2.Vsd.J1p3_1.BondCon1.d;
//   Nand1.Mp2.Vsd.B2.BondCon1.e = Nand1.Mp2.Vsd.J1p3_1.BondCon2.e;
//   Nand1.Mp2.Vsd.B2.BondCon1.f = Nand1.Mp2.Vsd.J1p3_1.BondCon2.f;
//   Nand1.Mp2.Vsd.B2.BondCon1.d = Nand1.Mp2.Vsd.J1p3_1.BondCon2.d;
//   Nand1.Mp2.Vsd.B1.BondCon1.e = Nand1.Mp2.Vsd.El2BG1.BondCon1.e;
//   Nand1.Mp2.Vsd.B1.BondCon1.f = Nand1.Mp2.Vsd.El2BG1.BondCon1.f;
//   Nand1.Mp2.Vsd.B1.BondCon1.d = Nand1.Mp2.Vsd.El2BG1.BondCon1.d;
//   Nand1.Mp2.Vsd.B2.BondCon2.e = Nand1.Mp2.Vsd.BG2El1.BondCon1.e;
//   Nand1.Mp2.Vsd.B2.BondCon2.f = Nand1.Mp2.Vsd.BG2El1.BondCon1.f;
//   Nand1.Mp2.Vsd.B2.BondCon2.d = Nand1.Mp2.Vsd.BG2El1.BondCon1.d;
//   Nand1.Mp2.Vsd.El2BG1.p.v = Nand1.Mp2.Vsd.p.v;
//   Nand1.Mp2.Vsd.BG2El1.n.v = Nand1.Mp2.Vsd.n.v;
//   Nand1.Mp2.Cbg1.vds = Nand1.Mp2.Cdg1.vds;
//   Nand1.Mp2.Cbg1.vds = Nand1.Mp2.Csg1.vds;
//   Nand1.Mp2.Cbg1.vds = Nand1.Mp2.Vsd.V;
//   Nand1.Mp2.D.v = Nand1.Mp2.Rd.n.v;
//   Nand1.Mp2.D.v = Nand1.Mp2.Vsd.n.v;
//   Nand1.Mp2.Rs.n.v = Nand1.Mp2.S.v;
//   Nand1.Mp2.Rs.n.v = Nand1.Mp2.Vsb.p.v;
//   Nand1.Mp2.Rs.n.v = Nand1.Mp2.Vsd.p.v;
//   Nand1.Mp2.Cbg1.heatPort.T = Nand1.Mp2.Cdg1.heatPort.T;
//   Nand1.Mp2.Cbg1.heatPort.T = Nand1.Mp2.Csg1.heatPort.T;
//   Nand1.Mp2.Cbg1.heatPort.T = Nand1.Mp2.Mpi.heatPort.T;
//   Nand1.Mp2.Cbg1.heatPort.T = Nand1.Mp2.Rd.heatPort.T;
//   Nand1.Mp2.Cbg1.heatPort.T = Nand1.Mp2.Rs.heatPort.T;
//   Nand1.Mp2.Cbg1.heatPort.T = Nand1.Mp2.Sw1.p.T;
//   Nand1.Mp2.Sw1.n2.T = Nand1.Mp2.heatPort.T;
//   Nand1.Mp2.Sw1.n1.T = Nand1.Mp2.T_nom.port.T;
//   Nand1.Mp2.B.v = Nand1.Mp2.Cbg1.p.v;
//   Nand1.Mp2.B.v = Nand1.Mp2.Mpi.B.v;
//   Nand1.Mp2.B.v = Nand1.Mp2.Vsb.n.v;
//   Nand1.Mp2.Cdg1.p.v = Nand1.Mp2.Mpi.D.v;
//   Nand1.Mp2.Cdg1.p.v = Nand1.Mp2.Rd.p.v;
//   Nand1.Mp2.Csg1.p.v = Nand1.Mp2.Mpi.S.v;
//   Nand1.Mp2.Csg1.p.v = Nand1.Mp2.Rs.p.v;
//   Nand1.Mp2.Cbg1.n.v = Nand1.Mp2.Cdg1.n.v;
//   Nand1.Mp2.Cbg1.n.v = Nand1.Mp2.Csg1.n.v;
//   Nand1.Mp2.Cbg1.n.v = Nand1.Mp2.G.v;
//   Nand1.Mp2.Cbg1.n.v = Nand1.Mp2.Mpi.G.v;
//   Nand1.Mp2.Cbg1.vbs = Nand1.Mp2.Cdg1.vbs;
//   Nand1.Mp2.Cbg1.vbs = Nand1.Mp2.Csg1.vbs;
//   Nand1.Mp2.Cbg1.vbs = Nand1.Mp2.Vsb.V;
//   Nand1.Mp2.Cbg1.u[5] = Nand1.Mp2.Cdg1.u[5];
//   Nand1.Mp2.Cbg1.u[5] = Nand1.Mp2.Csg1.u[5];
//   Nand1.Mp2.Cbg1.u[5] = Nand1.Mp2.Mpi.y1[5];
//   Nand1.Mp2.Cbg1.u[4] = Nand1.Mp2.Cdg1.u[4];
//   Nand1.Mp2.Cbg1.u[4] = Nand1.Mp2.Csg1.u[4];
//   Nand1.Mp2.Cbg1.u[4] = Nand1.Mp2.Mpi.y1[4];
//   Nand1.Mp2.Cbg1.u[3] = Nand1.Mp2.Cdg1.u[3];
//   Nand1.Mp2.Cbg1.u[3] = Nand1.Mp2.Csg1.u[3];
//   Nand1.Mp2.Cbg1.u[3] = Nand1.Mp2.Mpi.y1[3];
//   Nand1.Mp2.Cbg1.u[2] = Nand1.Mp2.Cdg1.u[2];
//   Nand1.Mp2.Cbg1.u[2] = Nand1.Mp2.Csg1.u[2];
//   Nand1.Mp2.Cbg1.u[2] = Nand1.Mp2.Mpi.y1[2];
//   Nand1.Mp2.Cbg1.u[1] = Nand1.Mp2.Cdg1.u[1];
//   Nand1.Mp2.Cbg1.u[1] = Nand1.Mp2.Csg1.u[1];
//   Nand1.Mp2.Cbg1.u[1] = Nand1.Mp2.Mpi.y1[1];
//   Nand1.Mn1.S.i + Nand1.Mn2.D.i + Nand1.C7.p.i = 0.0;
//   Nand1.Mn1.B.i + Nand1.Gnd4.p.i = 0.0;
//   Nand1.Mn1.Mni.D.i + Nand1.Mn1.Cgd1.n.i + Nand1.Mn1.Rd.p.i = 0.0;
//   (-Nand1.Mn1.G.i) + Nand1.Mn1.Mni.G.i + Nand1.Mn1.Cgs1.p.i + Nand1.Mn1.Cgd1.p.i + Nand1.Mn1.Cgb1.p.i = 0.0;
//   Nand1.Mn1.Mni.S.i + Nand1.Mn1.Cgs1.n.i + Nand1.Mn1.Rs.p.i = 0.0;
//   (-Nand1.Mn1.B.i) + Nand1.Mn1.Mni.B.i + Nand1.Mn1.Cgb1.n.i + Nand1.Mn1.Vbs.p.i = 0.0;
//   Nand1.Mn1.Mni.heatPort.Q_flow + Nand1.Mn1.Cgs1.heatPort.Q_flow + Nand1.Mn1.Cgd1.heatPort.Q_flow + Nand1.Mn1.Cgb1.heatPort.Q_flow + Nand1.Mn1.Rd.heatPort.Q_flow + Nand1.Mn1.Rs.heatPort.Q_flow + Nand1.Mn1.Sw1.p.Q_flow = 0.0;
//   (-Nand1.Mn1.Mni.D.i) + Nand1.Mn1.Mni.Ids.p.i + Nand1.Mn1.Mni.Vds.p.i + Nand1.Mn1.Mni.Rgd.n.i + Nand1.Mn1.Mni.Dbd.n.i + Nand1.Mn1.Mni.Rds.p.i = 0.0;
//   (-Nand1.Mn1.Mni.S.i) + Nand1.Mn1.Mni.Ids.n.i + Nand1.Mn1.Mni.Vds.n.i + Nand1.Mn1.Mni.Vgs.n.i + Nand1.Mn1.Mni.Rgs.n.i + Nand1.Mn1.Mni.Vbs.n.i + Nand1.Mn1.Mni.Dbs.n.i + Nand1.Mn1.Mni.Rds.n.i = 0.0;
//   (-Nand1.Mn1.Mni.heatPort.Q_flow) + Nand1.Mn1.Mni.Ids.heatPort.Q_flow + Nand1.Mn1.Mni.Tdev1.port.Q_flow + Nand1.Mn1.Mni.Rgs.heatPort.Q_flow + Nand1.Mn1.Mni.Dbs.heatPort.Q_flow + Nand1.Mn1.Mni.Rgd.heatPort.Q_flow + Nand1.Mn1.Mni.Rgb.heatPort.Q_flow + Nand1.Mn1.Mni.Dbd.heatPort.Q_flow + Nand1.Mn1.Mni.Rds.heatPort.Q_flow = 0.0;
//   (-Nand1.Mn1.Mni.Ids.p.i) + Nand1.Mn1.Mni.Ids.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Ids.n.i) + Nand1.Mn1.Mni.Ids.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Mni.Ids.heatPort.Q_flow) + Nand1.Mn1.Mni.Ids.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Ids.I1.s = Nand1.Mn1.Mni.Ids.InPort1;
//   Nand1.Mn1.Mni.Ids.B4.fBondCon1.e = Nand1.Mn1.Mni.Ids.I1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.B4.fBondCon1.f = Nand1.Mn1.Mni.Ids.I1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.B4.fBondCon1.d = Nand1.Mn1.Mni.Ids.I1.BondCon1.d;
//   Nand1.Mn1.Mni.Ids.B3.fBondCon1.e = Nand1.Mn1.Mni.Ids.I1.BondCon2.e;
//   Nand1.Mn1.Mni.Ids.B3.fBondCon1.f = Nand1.Mn1.Mni.Ids.I1.BondCon2.f;
//   Nand1.Mn1.Mni.Ids.B3.fBondCon1.d = Nand1.Mn1.Mni.Ids.I1.BondCon2.d;
//   Nand1.Mn1.Mni.Ids.B3.eBondCon1.e = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Ids.B3.eBondCon1.f = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Ids.B3.eBondCon1.d = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Ids.B4.eBondCon1.e = Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.B4.eBondCon1.f = Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.B4.eBondCon1.d = Nand1.Mn1.Mni.Ids.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Ids.B1.BondCon2.e = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Ids.B1.BondCon2.f = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Ids.B1.BondCon2.d = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Ids.B1.BondCon1.e = Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.B1.BondCon1.f = Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.B1.BondCon1.d = Nand1.Mn1.Mni.Ids.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Ids.B2.BondCon2.e = Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.B2.BondCon2.f = Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.B2.BondCon2.d = Nand1.Mn1.Mni.Ids.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Ids.B2.BondCon1.e = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Ids.B2.BondCon1.f = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Ids.B2.BondCon1.d = Nand1.Mn1.Mni.Ids.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Ids.El2BG1.p.v = Nand1.Mn1.Mni.Ids.p.v;
//   Nand1.Mn1.Mni.Ids.BG2El1.n.v = Nand1.Mn1.Mni.Ids.n.v;
//   Nand1.Mn1.Mni.Ids.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Ids.heatPort.T;
//   (-Nand1.Mn1.Mni.Vds.p.i) + Nand1.Mn1.Mni.Vds.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Vds.n.i) + Nand1.Mn1.Mni.Vds.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Vds.B3.BondCon2.e = Nand1.Mn1.Mni.Vds.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.B3.BondCon2.f = Nand1.Mn1.Mni.Vds.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B3.BondCon2.d = Nand1.Mn1.Mni.Vds.De1.BondCon1.d;
//   Nand1.Mn1.Mni.Vds.B3.BondCon1.e = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Vds.B3.BondCon1.f = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Vds.B3.BondCon1.d = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Vds.De1.OutPort1 = Nand1.Mn1.Mni.Vds.V;
//   Nand1.Mn1.Mni.Vds.B1.BondCon2.e = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.B1.BondCon2.f = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B1.BondCon2.d = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Vds.B2.BondCon1.e = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Vds.B2.BondCon1.f = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Vds.B2.BondCon1.d = Nand1.Mn1.Mni.Vds.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Vds.B1.BondCon1.e = Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.B1.BondCon1.f = Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B1.BondCon1.d = Nand1.Mn1.Mni.Vds.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Vds.B2.BondCon2.e = Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Vds.B2.BondCon2.f = Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Vds.B2.BondCon2.d = Nand1.Mn1.Mni.Vds.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Vds.El2BG1.p.v = Nand1.Mn1.Mni.Vds.p.v;
//   Nand1.Mn1.Mni.Vds.BG2El1.n.v = Nand1.Mn1.Mni.Vds.n.v;
//   (-Nand1.Mn1.Mni.G.i) + Nand1.Mn1.Mni.Vgs.p.i + Nand1.Mn1.Mni.Rgs.p.i + Nand1.Mn1.Mni.Rgd.p.i + Nand1.Mn1.Mni.Rgb.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Vgs.p.i) + Nand1.Mn1.Mni.Vgs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Vgs.n.i) + Nand1.Mn1.Mni.Vgs.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon2.e = Nand1.Mn1.Mni.Vgs.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon2.f = Nand1.Mn1.Mni.Vgs.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon2.d = Nand1.Mn1.Mni.Vgs.De1.BondCon1.d;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon1.e = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon1.f = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Vgs.B3.BondCon1.d = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Vgs.De1.OutPort1 = Nand1.Mn1.Mni.Vgs.V;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon2.e = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon2.f = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon2.d = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon1.e = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon1.f = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon1.d = Nand1.Mn1.Mni.Vgs.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon1.e = Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon1.f = Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B1.BondCon1.d = Nand1.Mn1.Mni.Vgs.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon2.e = Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon2.f = Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Vgs.B2.BondCon2.d = Nand1.Mn1.Mni.Vgs.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Vgs.El2BG1.p.v = Nand1.Mn1.Mni.Vgs.p.v;
//   Nand1.Mn1.Mni.Vgs.BG2El1.n.v = Nand1.Mn1.Mni.Vgs.n.v;
//   (-Nand1.Mn1.Mni.Rgs.p.i) + Nand1.Mn1.Mni.Rgs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Rgs.n.i) + Nand1.Mn1.Mni.Rgs.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BooleanInPort1 = Nand1.Mn1.Mni.Rgs.Sw1.control;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon2.d = Nand1.Mn1.Mni.Rgs.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.e = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.f = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B3.BondCon1.d = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.e = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.f = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon1.d = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.p.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.p.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon2.d = Nand1.Mn1.Mni.Rgs.Sw1.p.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.e = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.f = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon1.d = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon2.d = Nand1.Mn1.Mni.Rgs.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.e = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.f = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B1.BondCon1.d = Nand1.Mn1.Mni.Rgs.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon2.d = Nand1.Mn1.Mni.Rgs.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B2.BondCon2.d = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.j0p2_2.BondCon2.d = Nand1.Mn1.Mni.Rgs.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.Sw1.B4.BondCon2.d = Nand1.Mn1.Mni.Rgs.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn1.Mni.Rgs.heatPort.Q_flow) + Nand1.Mn1.Mni.Rgs.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Rgs.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Rgs.heatPort.T;
//   Nand1.Mn1.Mni.Rgs.B5.eBondCon1.e = Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B5.eBondCon1.f = Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B5.eBondCon1.d = Nand1.Mn1.Mni.Rgs.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.B5.fBondCon1.e = Nand1.Mn1.Mni.Rgs.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rgs.B5.fBondCon1.f = Nand1.Mn1.Mni.Rgs.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rgs.B5.fBondCon1.d = Nand1.Mn1.Mni.Rgs.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rgs.B6.fBondCon1.e = Nand1.Mn1.Mni.Rgs.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rgs.B6.fBondCon1.f = Nand1.Mn1.Mni.Rgs.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rgs.B6.fBondCon1.d = Nand1.Mn1.Mni.Rgs.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rgs.B4.eBondCon1.e = Nand1.Mn1.Mni.Rgs.Sw1.p.e;
//   Nand1.Mn1.Mni.Rgs.B4.eBondCon1.f = Nand1.Mn1.Mni.Rgs.Sw1.p.f;
//   Nand1.Mn1.Mni.Rgs.B4.eBondCon1.d = Nand1.Mn1.Mni.Rgs.Sw1.p.d;
//   Nand1.Mn1.Mni.Rgs.B4.fBondCon1.e = Nand1.Mn1.Mni.Rgs.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.B4.fBondCon1.f = Nand1.Mn1.Mni.Rgs.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.B4.fBondCon1.d = Nand1.Mn1.Mni.Rgs.R1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon2.e = Nand1.Mn1.Mni.Rgs.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon2.f = Nand1.Mn1.Mni.Rgs.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon2.d = Nand1.Mn1.Mni.Rgs.R1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon2.e = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon2.f = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon2.d = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon1.e = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon1.f = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon1.d = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon1.e = Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon1.f = Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B1.BondCon1.d = Nand1.Mn1.Mni.Rgs.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon2.e = Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon2.f = Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B2.BondCon2.d = Nand1.Mn1.Mni.Rgs.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon1.e = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon1.f = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgs.B3.BondCon1.d = Nand1.Mn1.Mni.Rgs.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgs.El2BG1.p.v = Nand1.Mn1.Mni.Rgs.p.v;
//   Nand1.Mn1.Mni.Rgs.BG2El1.n.v = Nand1.Mn1.Mni.Rgs.n.v;
//   Nand1.Mn1.Mni.Rgs.B6.eBondCon1.e = Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rgs.B6.eBondCon1.f = Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rgs.B6.eBondCon1.d = Nand1.Mn1.Mni.Rgs.T_nom.BondCon1.d;
//   (-Nand1.Mn1.Mni.B.i) + Nand1.Mn1.Mni.Vbs.p.i + Nand1.Mn1.Mni.Dbs.p.i + Nand1.Mn1.Mni.Rgb.n.i + Nand1.Mn1.Mni.Dbd.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Vbs.p.i) + Nand1.Mn1.Mni.Vbs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Vbs.n.i) + Nand1.Mn1.Mni.Vbs.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon2.e = Nand1.Mn1.Mni.Vbs.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon2.f = Nand1.Mn1.Mni.Vbs.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon2.d = Nand1.Mn1.Mni.Vbs.De1.BondCon1.d;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon1.e = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon1.f = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Vbs.B3.BondCon1.d = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Vbs.De1.OutPort1 = Nand1.Mn1.Mni.Vbs.V;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon2.e = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon2.f = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon2.d = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon1.e = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon1.f = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon1.d = Nand1.Mn1.Mni.Vbs.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon1.e = Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon1.f = Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B1.BondCon1.d = Nand1.Mn1.Mni.Vbs.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon2.e = Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon2.f = Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Vbs.B2.BondCon2.d = Nand1.Mn1.Mni.Vbs.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Vbs.El2BG1.p.v = Nand1.Mn1.Mni.Vbs.p.v;
//   Nand1.Mn1.Mni.Vbs.BG2El1.n.v = Nand1.Mn1.Mni.Vbs.n.v;
//   (-Nand1.Mn1.Mni.Dbs.heatPort.Q_flow) + Nand1.Mn1.Mni.Dbs.Tdev1.port.Q_flow + Nand1.Mn1.Mni.Dbs.Rd.heatPort.Q_flow + Nand1.Mn1.Mni.Dbs.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.p.i) + Nand1.Mn1.Mni.Dbs.Rd.p.i + Nand1.Mn1.Mni.Dbs.DjM1.p.i + Nand1.Mn1.Mni.Dbs.Vd.p.i + Nand1.Mn1.Mni.Dbs.VarC1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.n.i) + Nand1.Mn1.Mni.Dbs.Rd.n.i + Nand1.Mn1.Mni.Dbs.DjM1.n.i + Nand1.Mn1.Mni.Dbs.Vd.n.i + Nand1.Mn1.Mni.Dbs.VarC1.n.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.Rd.p.i) + Nand1.Mn1.Mni.Dbs.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.Rd.n.i) + Nand1.Mn1.Mni.Dbs.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mn1.Mni.Dbs.Rd.Sw1.control;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B3.BondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B1.BondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B2.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.Sw1.B4.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn1.Mni.Dbs.Rd.heatPort.Q_flow) + Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Dbs.Rd.heatPort.T;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.eBondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B5.fBondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n2.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.fBondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.n1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.eBondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.Sw1.p.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B4.fBondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.R1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B1.BondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B2.BondCon2.d = Nand1.Mn1.Mni.Dbs.Rd.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B3.BondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbs.Rd.El2BG1.p.v = Nand1.Mn1.Mni.Dbs.Rd.p.v;
//   Nand1.Mn1.Mni.Dbs.Rd.BG2El1.n.v = Nand1.Mn1.Mni.Dbs.Rd.n.v;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.e = Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.f = Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Rd.B6.eBondCon1.d = Nand1.Mn1.Mni.Dbs.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mn1.Mni.Dbs.DjM1.p.i) + Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.DjM1.n.i) + Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.DjM1.heatPort.Q_flow) + Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Dbs.DjM1.heatPort.T;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.eBondCon1.d = Nand1.Mn1.Mni.Dbs.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.f = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B4.fBondCon1.d = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon2.d = Nand1.Mn1.Mni.Dbs.DjM1.DjM1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.f = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B3.BondCon1.d = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon2.d = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.f = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon1.d = Nand1.Mn1.Mni.Dbs.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.e = Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.f = Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B1.BondCon1.d = Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.DjM1.B2.BondCon2.d = Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.DjM1.El2BG1.p.v = Nand1.Mn1.Mni.Dbs.DjM1.p.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.BG2El1.n.v = Nand1.Mn1.Mni.Dbs.DjM1.n.v;
//   (-Nand1.Mn1.Mni.Dbs.Vd.p.i) + Nand1.Mn1.Mni.Dbs.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.Vd.n.i) + Nand1.Mn1.Mni.Dbs.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon2.d = Nand1.Mn1.Mni.Dbs.Vd.De1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.e = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.f = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B3.BondCon1.d = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbs.Vd.De1.OutPort1 = Nand1.Mn1.Mni.Dbs.Vd.V;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon2.d = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.e = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.f = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon1.d = Nand1.Mn1.Mni.Dbs.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.e = Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.f = Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B1.BondCon1.d = Nand1.Mn1.Mni.Dbs.Vd.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.Vd.B2.BondCon2.d = Nand1.Mn1.Mni.Dbs.Vd.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.Vd.El2BG1.p.v = Nand1.Mn1.Mni.Dbs.Vd.p.v;
//   Nand1.Mn1.Mni.Dbs.Vd.BG2El1.n.v = Nand1.Mn1.Mni.Dbs.Vd.n.v;
//   (-Nand1.Mn1.Mni.Dbs.VarC1.p.i) + Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbs.VarC1.n.i) + Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Dbs.VarC1.mC1.s = Nand1.Mn1.Mni.Dbs.VarC1.u;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon2.d = Nand1.Mn1.Mni.Dbs.VarC1.mC1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.e = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.f = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B3.BondCon1.d = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon2.d = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.e = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.f = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon1.d = Nand1.Mn1.Mni.Dbs.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.e = Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.f = Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B1.BondCon1.d = Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbs.VarC1.B2.BondCon2.d = Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbs.VarC1.El2BG1.p.v = Nand1.Mn1.Mni.Dbs.VarC1.p.v;
//   Nand1.Mn1.Mni.Dbs.VarC1.BG2El1.n.v = Nand1.Mn1.Mni.Dbs.VarC1.n.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.p.v = Nand1.Mn1.Mni.Dbs.Rd.p.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.p.v = Nand1.Mn1.Mni.Dbs.VarC1.p.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.p.v = Nand1.Mn1.Mni.Dbs.Vd.p.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.p.v = Nand1.Mn1.Mni.Dbs.p.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.n.v = Nand1.Mn1.Mni.Dbs.Rd.n.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.n.v = Nand1.Mn1.Mni.Dbs.VarC1.n.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.n.v = Nand1.Mn1.Mni.Dbs.Vd.n.v;
//   Nand1.Mn1.Mni.Dbs.DjM1.n.v = Nand1.Mn1.Mni.Dbs.n.v;
//   Nand1.Mn1.Mni.Dbs.VarC1.u = Nand1.Mn1.Mni.Dbs.nlCM1.y;
//   Nand1.Mn1.Mni.Dbs.Vd.V = Nand1.Mn1.Mni.Dbs.nlCM1.u;
//   Nand1.Mn1.Mni.Dbs.DjM1.heatPort.T = Nand1.Mn1.Mni.Dbs.Rd.heatPort.T;
//   Nand1.Mn1.Mni.Dbs.DjM1.heatPort.T = Nand1.Mn1.Mni.Dbs.Tdev1.port.T;
//   Nand1.Mn1.Mni.Dbs.DjM1.heatPort.T = Nand1.Mn1.Mni.Dbs.heatPort.T;
//   Nand1.Mn1.Mni.Dbs.Tdev1.T = Nand1.Mn1.Mni.Dbs.nlCM1.Tdev;
//   (-Nand1.Mn1.Mni.Rgd.p.i) + Nand1.Mn1.Mni.Rgd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Rgd.n.i) + Nand1.Mn1.Mni.Rgd.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BooleanInPort1 = Nand1.Mn1.Mni.Rgd.Sw1.control;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon2.d = Nand1.Mn1.Mni.Rgd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.e = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.f = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B3.BondCon1.d = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.e = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.f = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon1.d = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.p.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.p.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon2.d = Nand1.Mn1.Mni.Rgd.Sw1.p.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.e = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.f = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon1.d = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon2.d = Nand1.Mn1.Mni.Rgd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.e = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.f = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B1.BondCon1.d = Nand1.Mn1.Mni.Rgd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon2.d = Nand1.Mn1.Mni.Rgd.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B2.BondCon2.d = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.j0p2_2.BondCon2.d = Nand1.Mn1.Mni.Rgd.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.Sw1.B4.BondCon2.d = Nand1.Mn1.Mni.Rgd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn1.Mni.Rgd.heatPort.Q_flow) + Nand1.Mn1.Mni.Rgd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Rgd.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Rgd.heatPort.T;
//   Nand1.Mn1.Mni.Rgd.B5.eBondCon1.e = Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B5.eBondCon1.f = Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B5.eBondCon1.d = Nand1.Mn1.Mni.Rgd.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.B5.fBondCon1.e = Nand1.Mn1.Mni.Rgd.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rgd.B5.fBondCon1.f = Nand1.Mn1.Mni.Rgd.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rgd.B5.fBondCon1.d = Nand1.Mn1.Mni.Rgd.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rgd.B6.fBondCon1.e = Nand1.Mn1.Mni.Rgd.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rgd.B6.fBondCon1.f = Nand1.Mn1.Mni.Rgd.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rgd.B6.fBondCon1.d = Nand1.Mn1.Mni.Rgd.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rgd.B4.eBondCon1.e = Nand1.Mn1.Mni.Rgd.Sw1.p.e;
//   Nand1.Mn1.Mni.Rgd.B4.eBondCon1.f = Nand1.Mn1.Mni.Rgd.Sw1.p.f;
//   Nand1.Mn1.Mni.Rgd.B4.eBondCon1.d = Nand1.Mn1.Mni.Rgd.Sw1.p.d;
//   Nand1.Mn1.Mni.Rgd.B4.fBondCon1.e = Nand1.Mn1.Mni.Rgd.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.B4.fBondCon1.f = Nand1.Mn1.Mni.Rgd.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.B4.fBondCon1.d = Nand1.Mn1.Mni.Rgd.R1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon2.e = Nand1.Mn1.Mni.Rgd.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon2.f = Nand1.Mn1.Mni.Rgd.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon2.d = Nand1.Mn1.Mni.Rgd.R1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon2.e = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon2.f = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon2.d = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon1.e = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon1.f = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon1.d = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon1.e = Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon1.f = Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B1.BondCon1.d = Nand1.Mn1.Mni.Rgd.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon2.e = Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon2.f = Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B2.BondCon2.d = Nand1.Mn1.Mni.Rgd.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon1.e = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon1.f = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgd.B3.BondCon1.d = Nand1.Mn1.Mni.Rgd.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgd.El2BG1.p.v = Nand1.Mn1.Mni.Rgd.p.v;
//   Nand1.Mn1.Mni.Rgd.BG2El1.n.v = Nand1.Mn1.Mni.Rgd.n.v;
//   Nand1.Mn1.Mni.Rgd.B6.eBondCon1.e = Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rgd.B6.eBondCon1.f = Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rgd.B6.eBondCon1.d = Nand1.Mn1.Mni.Rgd.T_nom.BondCon1.d;
//   (-Nand1.Mn1.Mni.Rgb.p.i) + Nand1.Mn1.Mni.Rgb.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Rgb.n.i) + Nand1.Mn1.Mni.Rgb.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BooleanInPort1 = Nand1.Mn1.Mni.Rgb.Sw1.control;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon2.d = Nand1.Mn1.Mni.Rgb.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.e = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.f = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B3.BondCon1.d = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.e = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.f = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon1.d = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.p.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.p.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon2.d = Nand1.Mn1.Mni.Rgb.Sw1.p.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.e = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.f = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon1.d = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon2.d = Nand1.Mn1.Mni.Rgb.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.e = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.f = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B1.BondCon1.d = Nand1.Mn1.Mni.Rgb.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon2.d = Nand1.Mn1.Mni.Rgb.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B2.BondCon2.d = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.j0p2_2.BondCon2.d = Nand1.Mn1.Mni.Rgb.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.Sw1.B4.BondCon2.d = Nand1.Mn1.Mni.Rgb.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn1.Mni.Rgb.heatPort.Q_flow) + Nand1.Mn1.Mni.Rgb.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Rgb.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Rgb.heatPort.T;
//   Nand1.Mn1.Mni.Rgb.B5.eBondCon1.e = Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B5.eBondCon1.f = Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B5.eBondCon1.d = Nand1.Mn1.Mni.Rgb.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.B5.fBondCon1.e = Nand1.Mn1.Mni.Rgb.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rgb.B5.fBondCon1.f = Nand1.Mn1.Mni.Rgb.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rgb.B5.fBondCon1.d = Nand1.Mn1.Mni.Rgb.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rgb.B6.fBondCon1.e = Nand1.Mn1.Mni.Rgb.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rgb.B6.fBondCon1.f = Nand1.Mn1.Mni.Rgb.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rgb.B6.fBondCon1.d = Nand1.Mn1.Mni.Rgb.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rgb.B4.eBondCon1.e = Nand1.Mn1.Mni.Rgb.Sw1.p.e;
//   Nand1.Mn1.Mni.Rgb.B4.eBondCon1.f = Nand1.Mn1.Mni.Rgb.Sw1.p.f;
//   Nand1.Mn1.Mni.Rgb.B4.eBondCon1.d = Nand1.Mn1.Mni.Rgb.Sw1.p.d;
//   Nand1.Mn1.Mni.Rgb.B4.fBondCon1.e = Nand1.Mn1.Mni.Rgb.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.B4.fBondCon1.f = Nand1.Mn1.Mni.Rgb.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.B4.fBondCon1.d = Nand1.Mn1.Mni.Rgb.R1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon2.e = Nand1.Mn1.Mni.Rgb.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon2.f = Nand1.Mn1.Mni.Rgb.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon2.d = Nand1.Mn1.Mni.Rgb.R1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon2.e = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon2.f = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon2.d = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon1.e = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon1.f = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon1.d = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon1.e = Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon1.f = Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B1.BondCon1.d = Nand1.Mn1.Mni.Rgb.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon2.e = Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon2.f = Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B2.BondCon2.d = Nand1.Mn1.Mni.Rgb.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon1.e = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon1.f = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rgb.B3.BondCon1.d = Nand1.Mn1.Mni.Rgb.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rgb.El2BG1.p.v = Nand1.Mn1.Mni.Rgb.p.v;
//   Nand1.Mn1.Mni.Rgb.BG2El1.n.v = Nand1.Mn1.Mni.Rgb.n.v;
//   Nand1.Mn1.Mni.Rgb.B6.eBondCon1.e = Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rgb.B6.eBondCon1.f = Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rgb.B6.eBondCon1.d = Nand1.Mn1.Mni.Rgb.T_nom.BondCon1.d;
//   (-Nand1.Mn1.Mni.Dbd.heatPort.Q_flow) + Nand1.Mn1.Mni.Dbd.Tdev1.port.Q_flow + Nand1.Mn1.Mni.Dbd.Rd.heatPort.Q_flow + Nand1.Mn1.Mni.Dbd.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.p.i) + Nand1.Mn1.Mni.Dbd.Rd.p.i + Nand1.Mn1.Mni.Dbd.DjM1.p.i + Nand1.Mn1.Mni.Dbd.Vd.p.i + Nand1.Mn1.Mni.Dbd.VarC1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.n.i) + Nand1.Mn1.Mni.Dbd.Rd.n.i + Nand1.Mn1.Mni.Dbd.DjM1.n.i + Nand1.Mn1.Mni.Dbd.Vd.n.i + Nand1.Mn1.Mni.Dbd.VarC1.n.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.Rd.p.i) + Nand1.Mn1.Mni.Dbd.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.Rd.n.i) + Nand1.Mn1.Mni.Dbd.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mn1.Mni.Dbd.Rd.Sw1.control;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B3.BondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B1.BondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B2.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.Sw1.B4.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn1.Mni.Dbd.Rd.heatPort.Q_flow) + Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Dbd.Rd.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.eBondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B5.fBondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n2.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.fBondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.n1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.eBondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.Sw1.p.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B4.fBondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.R1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B1.BondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B2.BondCon2.d = Nand1.Mn1.Mni.Dbd.Rd.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B3.BondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbd.Rd.El2BG1.p.v = Nand1.Mn1.Mni.Dbd.Rd.p.v;
//   Nand1.Mn1.Mni.Dbd.Rd.BG2El1.n.v = Nand1.Mn1.Mni.Dbd.Rd.n.v;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.e = Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.f = Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Rd.B6.eBondCon1.d = Nand1.Mn1.Mni.Dbd.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mn1.Mni.Dbd.DjM1.p.i) + Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.DjM1.n.i) + Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.DjM1.heatPort.Q_flow) + Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Dbd.DjM1.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.f = Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.eBondCon1.d = Nand1.Mn1.Mni.Dbd.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.f = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B4.fBondCon1.d = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon2.d = Nand1.Mn1.Mni.Dbd.DjM1.DjM1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.f = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B3.BondCon1.d = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon2.d = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.f = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon1.d = Nand1.Mn1.Mni.Dbd.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.e = Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.f = Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B1.BondCon1.d = Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.DjM1.B2.BondCon2.d = Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.DjM1.El2BG1.p.v = Nand1.Mn1.Mni.Dbd.DjM1.p.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.BG2El1.n.v = Nand1.Mn1.Mni.Dbd.DjM1.n.v;
//   (-Nand1.Mn1.Mni.Dbd.Vd.p.i) + Nand1.Mn1.Mni.Dbd.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.Vd.n.i) + Nand1.Mn1.Mni.Dbd.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon2.d = Nand1.Mn1.Mni.Dbd.Vd.De1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.e = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.f = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B3.BondCon1.d = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbd.Vd.De1.OutPort1 = Nand1.Mn1.Mni.Dbd.Vd.V;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon2.d = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.e = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.f = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon1.d = Nand1.Mn1.Mni.Dbd.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.e = Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.f = Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B1.BondCon1.d = Nand1.Mn1.Mni.Dbd.Vd.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.Vd.B2.BondCon2.d = Nand1.Mn1.Mni.Dbd.Vd.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.Vd.El2BG1.p.v = Nand1.Mn1.Mni.Dbd.Vd.p.v;
//   Nand1.Mn1.Mni.Dbd.Vd.BG2El1.n.v = Nand1.Mn1.Mni.Dbd.Vd.n.v;
//   (-Nand1.Mn1.Mni.Dbd.VarC1.p.i) + Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Dbd.VarC1.n.i) + Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Dbd.VarC1.mC1.s = Nand1.Mn1.Mni.Dbd.VarC1.u;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.e = Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.f = Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon2.d = Nand1.Mn1.Mni.Dbd.VarC1.mC1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.e = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.f = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B3.BondCon1.d = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.e = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.f = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon2.d = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.e = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.f = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon1.d = Nand1.Mn1.Mni.Dbd.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.e = Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.f = Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B1.BondCon1.d = Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.e = Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.f = Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Dbd.VarC1.B2.BondCon2.d = Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.VarC1.El2BG1.p.v = Nand1.Mn1.Mni.Dbd.VarC1.p.v;
//   Nand1.Mn1.Mni.Dbd.VarC1.BG2El1.n.v = Nand1.Mn1.Mni.Dbd.VarC1.n.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.p.v = Nand1.Mn1.Mni.Dbd.Rd.p.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.p.v = Nand1.Mn1.Mni.Dbd.VarC1.p.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.p.v = Nand1.Mn1.Mni.Dbd.Vd.p.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.p.v = Nand1.Mn1.Mni.Dbd.p.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.n.v = Nand1.Mn1.Mni.Dbd.Rd.n.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.n.v = Nand1.Mn1.Mni.Dbd.VarC1.n.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.n.v = Nand1.Mn1.Mni.Dbd.Vd.n.v;
//   Nand1.Mn1.Mni.Dbd.DjM1.n.v = Nand1.Mn1.Mni.Dbd.n.v;
//   Nand1.Mn1.Mni.Dbd.VarC1.u = Nand1.Mn1.Mni.Dbd.nlCM1.y;
//   Nand1.Mn1.Mni.Dbd.Vd.V = Nand1.Mn1.Mni.Dbd.nlCM1.u;
//   Nand1.Mn1.Mni.Dbd.DjM1.heatPort.T = Nand1.Mn1.Mni.Dbd.Rd.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.DjM1.heatPort.T = Nand1.Mn1.Mni.Dbd.Tdev1.port.T;
//   Nand1.Mn1.Mni.Dbd.DjM1.heatPort.T = Nand1.Mn1.Mni.Dbd.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.Tdev1.T = Nand1.Mn1.Mni.Dbd.nlCM1.Tdev;
//   (-Nand1.Mn1.Mni.Rds.p.i) + Nand1.Mn1.Mni.Rds.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Mni.Rds.n.i) + Nand1.Mn1.Mni.Rds.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Mni.Rds.Sw1.Sw1.BooleanInPort1 = Nand1.Mn1.Mni.Rds.Sw1.control;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon2.d = Nand1.Mn1.Mni.Rds.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.e = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.f = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B3.BondCon1.d = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.e = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.f = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon1.d = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.p.e;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.p.f;
//   Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon2.d = Nand1.Mn1.Mni.Rds.Sw1.p.d;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.e = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.f = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon1.d = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon2.d = Nand1.Mn1.Mni.Rds.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.e = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.f = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B1.BondCon1.d = Nand1.Mn1.Mni.Rds.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon2.d = Nand1.Mn1.Mni.Rds.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B2.BondCon2.d = Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.j0p2_2.BondCon2.d = Nand1.Mn1.Mni.Rds.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.e = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.f = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.Sw1.B4.BondCon2.d = Nand1.Mn1.Mni.Rds.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn1.Mni.Rds.heatPort.Q_flow) + Nand1.Mn1.Mni.Rds.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Mni.Rds.BG2Heat1.port_b.T = Nand1.Mn1.Mni.Rds.heatPort.T;
//   Nand1.Mn1.Mni.Rds.B5.eBondCon1.e = Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B5.eBondCon1.f = Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B5.eBondCon1.d = Nand1.Mn1.Mni.Rds.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.B5.fBondCon1.e = Nand1.Mn1.Mni.Rds.Sw1.n2.e;
//   Nand1.Mn1.Mni.Rds.B5.fBondCon1.f = Nand1.Mn1.Mni.Rds.Sw1.n2.f;
//   Nand1.Mn1.Mni.Rds.B5.fBondCon1.d = Nand1.Mn1.Mni.Rds.Sw1.n2.d;
//   Nand1.Mn1.Mni.Rds.B6.fBondCon1.e = Nand1.Mn1.Mni.Rds.Sw1.n1.e;
//   Nand1.Mn1.Mni.Rds.B6.fBondCon1.f = Nand1.Mn1.Mni.Rds.Sw1.n1.f;
//   Nand1.Mn1.Mni.Rds.B6.fBondCon1.d = Nand1.Mn1.Mni.Rds.Sw1.n1.d;
//   Nand1.Mn1.Mni.Rds.B4.eBondCon1.e = Nand1.Mn1.Mni.Rds.Sw1.p.e;
//   Nand1.Mn1.Mni.Rds.B4.eBondCon1.f = Nand1.Mn1.Mni.Rds.Sw1.p.f;
//   Nand1.Mn1.Mni.Rds.B4.eBondCon1.d = Nand1.Mn1.Mni.Rds.Sw1.p.d;
//   Nand1.Mn1.Mni.Rds.B4.fBondCon1.e = Nand1.Mn1.Mni.Rds.R1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.B4.fBondCon1.f = Nand1.Mn1.Mni.Rds.R1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.B4.fBondCon1.d = Nand1.Mn1.Mni.Rds.R1.BondCon2.d;
//   Nand1.Mn1.Mni.Rds.B3.BondCon2.e = Nand1.Mn1.Mni.Rds.R1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B3.BondCon2.f = Nand1.Mn1.Mni.Rds.R1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B3.BondCon2.d = Nand1.Mn1.Mni.Rds.R1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.B1.BondCon2.e = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B1.BondCon2.f = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B1.BondCon2.d = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.B2.BondCon1.e = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Mni.Rds.B2.BondCon1.f = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Mni.Rds.B2.BondCon1.d = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Mni.Rds.B1.BondCon1.e = Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B1.BondCon1.f = Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B1.BondCon1.d = Nand1.Mn1.Mni.Rds.El2BG1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.B2.BondCon2.e = Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B2.BondCon2.f = Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B2.BondCon2.d = Nand1.Mn1.Mni.Rds.BG2El1.BondCon1.d;
//   Nand1.Mn1.Mni.Rds.B3.BondCon1.e = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Mni.Rds.B3.BondCon1.f = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Mni.Rds.B3.BondCon1.d = Nand1.Mn1.Mni.Rds.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Mni.Rds.El2BG1.p.v = Nand1.Mn1.Mni.Rds.p.v;
//   Nand1.Mn1.Mni.Rds.BG2El1.n.v = Nand1.Mn1.Mni.Rds.n.v;
//   Nand1.Mn1.Mni.Rds.B6.eBondCon1.e = Nand1.Mn1.Mni.Rds.T_nom.BondCon1.e;
//   Nand1.Mn1.Mni.Rds.B6.eBondCon1.f = Nand1.Mn1.Mni.Rds.T_nom.BondCon1.f;
//   Nand1.Mn1.Mni.Rds.B6.eBondCon1.d = Nand1.Mn1.Mni.Rds.T_nom.BondCon1.d;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.Dbs.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.Ids.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.Rds.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.Rgb.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.Rgd.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.Rgs.heatPort.T;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.Tdev1.port.T;
//   Nand1.Mn1.Mni.Dbd.heatPort.T = Nand1.Mn1.Mni.heatPort.T;
//   Nand1.Mn1.Mni.Dbs.n.v = Nand1.Mn1.Mni.Ids.n.v;
//   Nand1.Mn1.Mni.Dbs.n.v = Nand1.Mn1.Mni.Rds.n.v;
//   Nand1.Mn1.Mni.Dbs.n.v = Nand1.Mn1.Mni.Rgs.n.v;
//   Nand1.Mn1.Mni.Dbs.n.v = Nand1.Mn1.Mni.S.v;
//   Nand1.Mn1.Mni.Dbs.n.v = Nand1.Mn1.Mni.Vbs.n.v;
//   Nand1.Mn1.Mni.Dbs.n.v = Nand1.Mn1.Mni.Vds.n.v;
//   Nand1.Mn1.Mni.Dbs.n.v = Nand1.Mn1.Mni.Vgs.n.v;
//   Nand1.Mn1.Mni.D.v = Nand1.Mn1.Mni.Dbd.n.v;
//   Nand1.Mn1.Mni.D.v = Nand1.Mn1.Mni.Ids.p.v;
//   Nand1.Mn1.Mni.D.v = Nand1.Mn1.Mni.Rds.p.v;
//   Nand1.Mn1.Mni.D.v = Nand1.Mn1.Mni.Rgd.n.v;
//   Nand1.Mn1.Mni.D.v = Nand1.Mn1.Mni.Vds.p.v;
//   Nand1.Mn1.Mni.B.v = Nand1.Mn1.Mni.Dbd.p.v;
//   Nand1.Mn1.Mni.B.v = Nand1.Mn1.Mni.Dbs.p.v;
//   Nand1.Mn1.Mni.B.v = Nand1.Mn1.Mni.Rgb.n.v;
//   Nand1.Mn1.Mni.B.v = Nand1.Mn1.Mni.Vbs.p.v;
//   Nand1.Mn1.Mni.G.v = Nand1.Mn1.Mni.Rgb.p.v;
//   Nand1.Mn1.Mni.G.v = Nand1.Mn1.Mni.Rgd.p.v;
//   Nand1.Mn1.Mni.G.v = Nand1.Mn1.Mni.Rgs.p.v;
//   Nand1.Mn1.Mni.G.v = Nand1.Mn1.Mni.Vgs.p.v;
//   Nand1.Mn1.Mni.IDS0.u3 = Nand1.Mn1.Mni.Vbs.V;
//   Nand1.Mn1.Mni.IDS0.y = Nand1.Mn1.Mni.Ids.InPort1;
//   Nand1.Mn1.Mni.IDS0.Tdev = Nand1.Mn1.Mni.Tdev1.T;
//   Nand1.Mn1.Mni.IDS0.u1 = Nand1.Mn1.Mni.Vds.V;
//   Nand1.Mn1.Mni.IDS0.u2 = Nand1.Mn1.Mni.Vgs.V;
//   Nand1.Mn1.Mni.IDS0.y1[5] = Nand1.Mn1.Mni.y1[5];
//   Nand1.Mn1.Mni.IDS0.y1[4] = Nand1.Mn1.Mni.y1[4];
//   Nand1.Mn1.Mni.IDS0.y1[3] = Nand1.Mn1.Mni.y1[3];
//   Nand1.Mn1.Mni.IDS0.y1[2] = Nand1.Mn1.Mni.y1[2];
//   Nand1.Mn1.Mni.IDS0.y1[1] = Nand1.Mn1.Mni.y1[1];
//   (-Nand1.Mn1.Cgs1.p.i) + Nand1.Mn1.Cgs1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Cgs1.n.i) + Nand1.Mn1.Cgs1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Cgs1.heatPort.Q_flow) + Nand1.Mn1.Cgs1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Cgs1.Cgs1.u1 = Nand1.Mn1.Cgs1.vds;
//   Nand1.Mn1.Cgs1.Cgs1.u2 = Nand1.Mn1.Cgs1.vbs;
//   Nand1.Mn1.Cgs1.BG2Heat1.port_b.T = Nand1.Mn1.Cgs1.heatPort.T;
//   Nand1.Mn1.Cgs1.B4.eBondCon1.e = Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Cgs1.B4.eBondCon1.f = Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Cgs1.B4.eBondCon1.d = Nand1.Mn1.Cgs1.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Cgs1.B4.fBondCon1.e = Nand1.Mn1.Cgs1.Cgs1.BondCon2.e;
//   Nand1.Mn1.Cgs1.B4.fBondCon1.f = Nand1.Mn1.Cgs1.Cgs1.BondCon2.f;
//   Nand1.Mn1.Cgs1.B4.fBondCon1.d = Nand1.Mn1.Cgs1.Cgs1.BondCon2.d;
//   Nand1.Mn1.Cgs1.B3.BondCon2.e = Nand1.Mn1.Cgs1.Cgs1.BondCon1.e;
//   Nand1.Mn1.Cgs1.B3.BondCon2.f = Nand1.Mn1.Cgs1.Cgs1.BondCon1.f;
//   Nand1.Mn1.Cgs1.B3.BondCon2.d = Nand1.Mn1.Cgs1.Cgs1.BondCon1.d;
//   Nand1.Mn1.Cgs1.B3.BondCon1.e = Nand1.Mn1.Cgs1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Cgs1.B3.BondCon1.f = Nand1.Mn1.Cgs1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Cgs1.B3.BondCon1.d = Nand1.Mn1.Cgs1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Cgs1.Cgs1.u[5] = Nand1.Mn1.Cgs1.u[5];
//   Nand1.Mn1.Cgs1.Cgs1.u[4] = Nand1.Mn1.Cgs1.u[4];
//   Nand1.Mn1.Cgs1.Cgs1.u[3] = Nand1.Mn1.Cgs1.u[3];
//   Nand1.Mn1.Cgs1.Cgs1.u[2] = Nand1.Mn1.Cgs1.u[2];
//   Nand1.Mn1.Cgs1.Cgs1.u[1] = Nand1.Mn1.Cgs1.u[1];
//   Nand1.Mn1.Cgs1.B1.BondCon2.e = Nand1.Mn1.Cgs1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Cgs1.B1.BondCon2.f = Nand1.Mn1.Cgs1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Cgs1.B1.BondCon2.d = Nand1.Mn1.Cgs1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Cgs1.B2.BondCon1.e = Nand1.Mn1.Cgs1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Cgs1.B2.BondCon1.f = Nand1.Mn1.Cgs1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Cgs1.B2.BondCon1.d = Nand1.Mn1.Cgs1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Cgs1.B1.BondCon1.e = Nand1.Mn1.Cgs1.El2BG1.BondCon1.e;
//   Nand1.Mn1.Cgs1.B1.BondCon1.f = Nand1.Mn1.Cgs1.El2BG1.BondCon1.f;
//   Nand1.Mn1.Cgs1.B1.BondCon1.d = Nand1.Mn1.Cgs1.El2BG1.BondCon1.d;
//   Nand1.Mn1.Cgs1.B2.BondCon2.e = Nand1.Mn1.Cgs1.BG2El1.BondCon1.e;
//   Nand1.Mn1.Cgs1.B2.BondCon2.f = Nand1.Mn1.Cgs1.BG2El1.BondCon1.f;
//   Nand1.Mn1.Cgs1.B2.BondCon2.d = Nand1.Mn1.Cgs1.BG2El1.BondCon1.d;
//   Nand1.Mn1.Cgs1.El2BG1.p.v = Nand1.Mn1.Cgs1.p.v;
//   Nand1.Mn1.Cgs1.BG2El1.n.v = Nand1.Mn1.Cgs1.n.v;
//   (-Nand1.Mn1.Cgd1.p.i) + Nand1.Mn1.Cgd1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Cgd1.n.i) + Nand1.Mn1.Cgd1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Cgd1.heatPort.Q_flow) + Nand1.Mn1.Cgd1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Cgd1.Cgd1.u[5] = Nand1.Mn1.Cgd1.u[5];
//   Nand1.Mn1.Cgd1.Cgd1.u[4] = Nand1.Mn1.Cgd1.u[4];
//   Nand1.Mn1.Cgd1.Cgd1.u[3] = Nand1.Mn1.Cgd1.u[3];
//   Nand1.Mn1.Cgd1.Cgd1.u[2] = Nand1.Mn1.Cgd1.u[2];
//   Nand1.Mn1.Cgd1.Cgd1.u[1] = Nand1.Mn1.Cgd1.u[1];
//   Nand1.Mn1.Cgd1.Cgd1.u1 = Nand1.Mn1.Cgd1.vds;
//   Nand1.Mn1.Cgd1.Cgd1.u2 = Nand1.Mn1.Cgd1.vbs;
//   Nand1.Mn1.Cgd1.B3.BondCon2.e = Nand1.Mn1.Cgd1.Cgd1.BondCon1.e;
//   Nand1.Mn1.Cgd1.B3.BondCon2.f = Nand1.Mn1.Cgd1.Cgd1.BondCon1.f;
//   Nand1.Mn1.Cgd1.B3.BondCon2.d = Nand1.Mn1.Cgd1.Cgd1.BondCon1.d;
//   Nand1.Mn1.Cgd1.B3.BondCon1.e = Nand1.Mn1.Cgd1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Cgd1.B3.BondCon1.f = Nand1.Mn1.Cgd1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Cgd1.B3.BondCon1.d = Nand1.Mn1.Cgd1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Cgd1.BG2Heat1.port_b.T = Nand1.Mn1.Cgd1.heatPort.T;
//   Nand1.Mn1.Cgd1.B4.eBondCon1.e = Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Cgd1.B4.eBondCon1.f = Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Cgd1.B4.eBondCon1.d = Nand1.Mn1.Cgd1.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Cgd1.B4.fBondCon1.e = Nand1.Mn1.Cgd1.Cgd1.BondCon2.e;
//   Nand1.Mn1.Cgd1.B4.fBondCon1.f = Nand1.Mn1.Cgd1.Cgd1.BondCon2.f;
//   Nand1.Mn1.Cgd1.B4.fBondCon1.d = Nand1.Mn1.Cgd1.Cgd1.BondCon2.d;
//   Nand1.Mn1.Cgd1.B1.BondCon2.e = Nand1.Mn1.Cgd1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Cgd1.B1.BondCon2.f = Nand1.Mn1.Cgd1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Cgd1.B1.BondCon2.d = Nand1.Mn1.Cgd1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Cgd1.B2.BondCon1.e = Nand1.Mn1.Cgd1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Cgd1.B2.BondCon1.f = Nand1.Mn1.Cgd1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Cgd1.B2.BondCon1.d = Nand1.Mn1.Cgd1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Cgd1.B1.BondCon1.e = Nand1.Mn1.Cgd1.El2BG1.BondCon1.e;
//   Nand1.Mn1.Cgd1.B1.BondCon1.f = Nand1.Mn1.Cgd1.El2BG1.BondCon1.f;
//   Nand1.Mn1.Cgd1.B1.BondCon1.d = Nand1.Mn1.Cgd1.El2BG1.BondCon1.d;
//   Nand1.Mn1.Cgd1.B2.BondCon2.e = Nand1.Mn1.Cgd1.BG2El1.BondCon1.e;
//   Nand1.Mn1.Cgd1.B2.BondCon2.f = Nand1.Mn1.Cgd1.BG2El1.BondCon1.f;
//   Nand1.Mn1.Cgd1.B2.BondCon2.d = Nand1.Mn1.Cgd1.BG2El1.BondCon1.d;
//   Nand1.Mn1.Cgd1.El2BG1.p.v = Nand1.Mn1.Cgd1.p.v;
//   Nand1.Mn1.Cgd1.BG2El1.n.v = Nand1.Mn1.Cgd1.n.v;
//   (-Nand1.Mn1.Cgb1.p.i) + Nand1.Mn1.Cgb1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Cgb1.n.i) + Nand1.Mn1.Cgb1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Cgb1.heatPort.Q_flow) + Nand1.Mn1.Cgb1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Cgb1.Cgb1.u[5] = Nand1.Mn1.Cgb1.u[5];
//   Nand1.Mn1.Cgb1.Cgb1.u[4] = Nand1.Mn1.Cgb1.u[4];
//   Nand1.Mn1.Cgb1.Cgb1.u[3] = Nand1.Mn1.Cgb1.u[3];
//   Nand1.Mn1.Cgb1.Cgb1.u[2] = Nand1.Mn1.Cgb1.u[2];
//   Nand1.Mn1.Cgb1.Cgb1.u[1] = Nand1.Mn1.Cgb1.u[1];
//   Nand1.Mn1.Cgb1.Cgb1.u1 = Nand1.Mn1.Cgb1.vds;
//   Nand1.Mn1.Cgb1.Cgb1.u2 = Nand1.Mn1.Cgb1.vbs;
//   Nand1.Mn1.Cgb1.B3.BondCon2.e = Nand1.Mn1.Cgb1.Cgb1.BondCon1.e;
//   Nand1.Mn1.Cgb1.B3.BondCon2.f = Nand1.Mn1.Cgb1.Cgb1.BondCon1.f;
//   Nand1.Mn1.Cgb1.B3.BondCon2.d = Nand1.Mn1.Cgb1.Cgb1.BondCon1.d;
//   Nand1.Mn1.Cgb1.B3.BondCon1.e = Nand1.Mn1.Cgb1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Cgb1.B3.BondCon1.f = Nand1.Mn1.Cgb1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Cgb1.B3.BondCon1.d = Nand1.Mn1.Cgb1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Cgb1.BG2Heat1.port_b.T = Nand1.Mn1.Cgb1.heatPort.T;
//   Nand1.Mn1.Cgb1.B4.eBondCon1.e = Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Cgb1.B4.eBondCon1.f = Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Cgb1.B4.eBondCon1.d = Nand1.Mn1.Cgb1.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Cgb1.B4.fBondCon1.e = Nand1.Mn1.Cgb1.Cgb1.BondCon2.e;
//   Nand1.Mn1.Cgb1.B4.fBondCon1.f = Nand1.Mn1.Cgb1.Cgb1.BondCon2.f;
//   Nand1.Mn1.Cgb1.B4.fBondCon1.d = Nand1.Mn1.Cgb1.Cgb1.BondCon2.d;
//   Nand1.Mn1.Cgb1.B1.BondCon2.e = Nand1.Mn1.Cgb1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Cgb1.B1.BondCon2.f = Nand1.Mn1.Cgb1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Cgb1.B1.BondCon2.d = Nand1.Mn1.Cgb1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Cgb1.B2.BondCon1.e = Nand1.Mn1.Cgb1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Cgb1.B2.BondCon1.f = Nand1.Mn1.Cgb1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Cgb1.B2.BondCon1.d = Nand1.Mn1.Cgb1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Cgb1.B1.BondCon1.e = Nand1.Mn1.Cgb1.El2BG1.BondCon1.e;
//   Nand1.Mn1.Cgb1.B1.BondCon1.f = Nand1.Mn1.Cgb1.El2BG1.BondCon1.f;
//   Nand1.Mn1.Cgb1.B1.BondCon1.d = Nand1.Mn1.Cgb1.El2BG1.BondCon1.d;
//   Nand1.Mn1.Cgb1.B2.BondCon2.e = Nand1.Mn1.Cgb1.BG2El1.BondCon1.e;
//   Nand1.Mn1.Cgb1.B2.BondCon2.f = Nand1.Mn1.Cgb1.BG2El1.BondCon1.f;
//   Nand1.Mn1.Cgb1.B2.BondCon2.d = Nand1.Mn1.Cgb1.BG2El1.BondCon1.d;
//   Nand1.Mn1.Cgb1.El2BG1.p.v = Nand1.Mn1.Cgb1.p.v;
//   Nand1.Mn1.Cgb1.BG2El1.n.v = Nand1.Mn1.Cgb1.n.v;
//   (-Nand1.Mn1.D.i) + Nand1.Mn1.Vds.p.i + Nand1.Mn1.Rd.n.i = 0.0;
//   (-Nand1.Mn1.S.i) + Nand1.Mn1.Vds.n.i + Nand1.Mn1.Vbs.n.i + Nand1.Mn1.Rs.n.i = 0.0;
//   (-Nand1.Mn1.Vds.p.i) + Nand1.Mn1.Vds.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Vds.n.i) + Nand1.Mn1.Vds.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Vds.B3.BondCon2.e = Nand1.Mn1.Vds.De1.BondCon1.e;
//   Nand1.Mn1.Vds.B3.BondCon2.f = Nand1.Mn1.Vds.De1.BondCon1.f;
//   Nand1.Mn1.Vds.B3.BondCon2.d = Nand1.Mn1.Vds.De1.BondCon1.d;
//   Nand1.Mn1.Vds.B3.BondCon1.e = Nand1.Mn1.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Vds.B3.BondCon1.f = Nand1.Mn1.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Vds.B3.BondCon1.d = Nand1.Mn1.Vds.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Vds.De1.OutPort1 = Nand1.Mn1.Vds.V;
//   Nand1.Mn1.Vds.B1.BondCon2.e = Nand1.Mn1.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Vds.B1.BondCon2.f = Nand1.Mn1.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Vds.B1.BondCon2.d = Nand1.Mn1.Vds.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Vds.B2.BondCon1.e = Nand1.Mn1.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Vds.B2.BondCon1.f = Nand1.Mn1.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Vds.B2.BondCon1.d = Nand1.Mn1.Vds.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Vds.B1.BondCon1.e = Nand1.Mn1.Vds.El2BG1.BondCon1.e;
//   Nand1.Mn1.Vds.B1.BondCon1.f = Nand1.Mn1.Vds.El2BG1.BondCon1.f;
//   Nand1.Mn1.Vds.B1.BondCon1.d = Nand1.Mn1.Vds.El2BG1.BondCon1.d;
//   Nand1.Mn1.Vds.B2.BondCon2.e = Nand1.Mn1.Vds.BG2El1.BondCon1.e;
//   Nand1.Mn1.Vds.B2.BondCon2.f = Nand1.Mn1.Vds.BG2El1.BondCon1.f;
//   Nand1.Mn1.Vds.B2.BondCon2.d = Nand1.Mn1.Vds.BG2El1.BondCon1.d;
//   Nand1.Mn1.Vds.El2BG1.p.v = Nand1.Mn1.Vds.p.v;
//   Nand1.Mn1.Vds.BG2El1.n.v = Nand1.Mn1.Vds.n.v;
//   (-Nand1.Mn1.Vbs.p.i) + Nand1.Mn1.Vbs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Vbs.n.i) + Nand1.Mn1.Vbs.BG2El1.n.i = 0.0;
//   Nand1.Mn1.Vbs.B3.BondCon2.e = Nand1.Mn1.Vbs.De1.BondCon1.e;
//   Nand1.Mn1.Vbs.B3.BondCon2.f = Nand1.Mn1.Vbs.De1.BondCon1.f;
//   Nand1.Mn1.Vbs.B3.BondCon2.d = Nand1.Mn1.Vbs.De1.BondCon1.d;
//   Nand1.Mn1.Vbs.B3.BondCon1.e = Nand1.Mn1.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Vbs.B3.BondCon1.f = Nand1.Mn1.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Vbs.B3.BondCon1.d = Nand1.Mn1.Vbs.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Vbs.De1.OutPort1 = Nand1.Mn1.Vbs.V;
//   Nand1.Mn1.Vbs.B1.BondCon2.e = Nand1.Mn1.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Vbs.B1.BondCon2.f = Nand1.Mn1.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Vbs.B1.BondCon2.d = Nand1.Mn1.Vbs.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Vbs.B2.BondCon1.e = Nand1.Mn1.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Vbs.B2.BondCon1.f = Nand1.Mn1.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Vbs.B2.BondCon1.d = Nand1.Mn1.Vbs.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Vbs.B1.BondCon1.e = Nand1.Mn1.Vbs.El2BG1.BondCon1.e;
//   Nand1.Mn1.Vbs.B1.BondCon1.f = Nand1.Mn1.Vbs.El2BG1.BondCon1.f;
//   Nand1.Mn1.Vbs.B1.BondCon1.d = Nand1.Mn1.Vbs.El2BG1.BondCon1.d;
//   Nand1.Mn1.Vbs.B2.BondCon2.e = Nand1.Mn1.Vbs.BG2El1.BondCon1.e;
//   Nand1.Mn1.Vbs.B2.BondCon2.f = Nand1.Mn1.Vbs.BG2El1.BondCon1.f;
//   Nand1.Mn1.Vbs.B2.BondCon2.d = Nand1.Mn1.Vbs.BG2El1.BondCon1.d;
//   Nand1.Mn1.Vbs.El2BG1.p.v = Nand1.Mn1.Vbs.p.v;
//   Nand1.Mn1.Vbs.BG2El1.n.v = Nand1.Mn1.Vbs.n.v;
//   (-Nand1.Mn1.Rd.p.i) + Nand1.Mn1.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Rd.n.i) + Nand1.Mn1.Rd.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Rd.heatPort.Q_flow) + Nand1.Mn1.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Rd.BG2Heat1.port_b.T = Nand1.Mn1.Rd.heatPort.T;
//   Nand1.Mn1.Rd.B4.eBondCon1.e = Nand1.Mn1.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Rd.B4.eBondCon1.f = Nand1.Mn1.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Rd.B4.eBondCon1.d = Nand1.Mn1.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Rd.B4.fBondCon1.e = Nand1.Mn1.Rd.RM1.BondCon2.e;
//   Nand1.Mn1.Rd.B4.fBondCon1.f = Nand1.Mn1.Rd.RM1.BondCon2.f;
//   Nand1.Mn1.Rd.B4.fBondCon1.d = Nand1.Mn1.Rd.RM1.BondCon2.d;
//   Nand1.Mn1.Rd.B3.BondCon2.e = Nand1.Mn1.Rd.RM1.BondCon1.e;
//   Nand1.Mn1.Rd.B3.BondCon2.f = Nand1.Mn1.Rd.RM1.BondCon1.f;
//   Nand1.Mn1.Rd.B3.BondCon2.d = Nand1.Mn1.Rd.RM1.BondCon1.d;
//   Nand1.Mn1.Rd.B3.BondCon1.e = Nand1.Mn1.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Rd.B3.BondCon1.f = Nand1.Mn1.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Rd.B3.BondCon1.d = Nand1.Mn1.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Rd.B1.BondCon2.e = Nand1.Mn1.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Rd.B1.BondCon2.f = Nand1.Mn1.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Rd.B1.BondCon2.d = Nand1.Mn1.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Rd.B2.BondCon1.e = Nand1.Mn1.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Rd.B2.BondCon1.f = Nand1.Mn1.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Rd.B2.BondCon1.d = Nand1.Mn1.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Rd.B1.BondCon1.e = Nand1.Mn1.Rd.El2BG1.BondCon1.e;
//   Nand1.Mn1.Rd.B1.BondCon1.f = Nand1.Mn1.Rd.El2BG1.BondCon1.f;
//   Nand1.Mn1.Rd.B1.BondCon1.d = Nand1.Mn1.Rd.El2BG1.BondCon1.d;
//   Nand1.Mn1.Rd.B2.BondCon2.e = Nand1.Mn1.Rd.BG2El1.BondCon1.e;
//   Nand1.Mn1.Rd.B2.BondCon2.f = Nand1.Mn1.Rd.BG2El1.BondCon1.f;
//   Nand1.Mn1.Rd.B2.BondCon2.d = Nand1.Mn1.Rd.BG2El1.BondCon1.d;
//   Nand1.Mn1.Rd.El2BG1.p.v = Nand1.Mn1.Rd.p.v;
//   Nand1.Mn1.Rd.BG2El1.n.v = Nand1.Mn1.Rd.n.v;
//   (-Nand1.Mn1.Rs.p.i) + Nand1.Mn1.Rs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn1.Rs.n.i) + Nand1.Mn1.Rs.BG2El1.n.i = 0.0;
//   (-Nand1.Mn1.Rs.heatPort.Q_flow) + Nand1.Mn1.Rs.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Rs.BG2Heat1.port_b.T = Nand1.Mn1.Rs.heatPort.T;
//   Nand1.Mn1.Rs.B4.eBondCon1.e = Nand1.Mn1.Rs.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Rs.B4.eBondCon1.f = Nand1.Mn1.Rs.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Rs.B4.eBondCon1.d = Nand1.Mn1.Rs.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Rs.B4.fBondCon1.e = Nand1.Mn1.Rs.RM1.BondCon2.e;
//   Nand1.Mn1.Rs.B4.fBondCon1.f = Nand1.Mn1.Rs.RM1.BondCon2.f;
//   Nand1.Mn1.Rs.B4.fBondCon1.d = Nand1.Mn1.Rs.RM1.BondCon2.d;
//   Nand1.Mn1.Rs.B3.BondCon2.e = Nand1.Mn1.Rs.RM1.BondCon1.e;
//   Nand1.Mn1.Rs.B3.BondCon2.f = Nand1.Mn1.Rs.RM1.BondCon1.f;
//   Nand1.Mn1.Rs.B3.BondCon2.d = Nand1.Mn1.Rs.RM1.BondCon1.d;
//   Nand1.Mn1.Rs.B3.BondCon1.e = Nand1.Mn1.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Rs.B3.BondCon1.f = Nand1.Mn1.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Rs.B3.BondCon1.d = Nand1.Mn1.Rs.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Rs.B1.BondCon2.e = Nand1.Mn1.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Rs.B1.BondCon2.f = Nand1.Mn1.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Rs.B1.BondCon2.d = Nand1.Mn1.Rs.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Rs.B2.BondCon1.e = Nand1.Mn1.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Rs.B2.BondCon1.f = Nand1.Mn1.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Rs.B2.BondCon1.d = Nand1.Mn1.Rs.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Rs.B1.BondCon1.e = Nand1.Mn1.Rs.El2BG1.BondCon1.e;
//   Nand1.Mn1.Rs.B1.BondCon1.f = Nand1.Mn1.Rs.El2BG1.BondCon1.f;
//   Nand1.Mn1.Rs.B1.BondCon1.d = Nand1.Mn1.Rs.El2BG1.BondCon1.d;
//   Nand1.Mn1.Rs.B2.BondCon2.e = Nand1.Mn1.Rs.BG2El1.BondCon1.e;
//   Nand1.Mn1.Rs.B2.BondCon2.f = Nand1.Mn1.Rs.BG2El1.BondCon1.f;
//   Nand1.Mn1.Rs.B2.BondCon2.d = Nand1.Mn1.Rs.BG2El1.BondCon1.d;
//   Nand1.Mn1.Rs.El2BG1.p.v = Nand1.Mn1.Rs.p.v;
//   Nand1.Mn1.Rs.BG2El1.n.v = Nand1.Mn1.Rs.n.v;
//   Nand1.Mn1.T_nom.BG2Heat1.port_b.Q_flow + (-Nand1.Mn1.T_nom.port.Q_flow) = 0.0;
//   Nand1.Mn1.T_nom.port.Q_flow + Nand1.Mn1.Sw1.n1.Q_flow = 0.0;
//   Nand1.Mn1.T_nom.B1.fBondCon1.e = Nand1.Mn1.T_nom.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.T_nom.B1.fBondCon1.f = Nand1.Mn1.T_nom.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.T_nom.B1.fBondCon1.d = Nand1.Mn1.T_nom.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.T_nom.B1.eBondCon1.e = Nand1.Mn1.T_nom.Tabs.BondCon1.e;
//   Nand1.Mn1.T_nom.B1.eBondCon1.f = Nand1.Mn1.T_nom.Tabs.BondCon1.f;
//   Nand1.Mn1.T_nom.B1.eBondCon1.d = Nand1.Mn1.T_nom.Tabs.BondCon1.d;
//   Nand1.Mn1.T_nom.BG2Heat1.port_b.T = Nand1.Mn1.T_nom.port.T;
//   (-Nand1.Mn1.heatPort.Q_flow) + Nand1.Mn1.Sw1.n2.Q_flow = 0.0;
//   (-Nand1.Mn1.Sw1.p.Q_flow) + Nand1.Mn1.Sw1.Heat2BG1.port_a.Q_flow = 0.0;
//   (-Nand1.Mn1.Sw1.n1.Q_flow) + Nand1.Mn1.Sw1.BG2Heat1.port_b.Q_flow = 0.0;
//   (-Nand1.Mn1.Sw1.n2.Q_flow) + Nand1.Mn1.Sw1.BG2Heat2.port_b.Q_flow = 0.0;
//   Nand1.Mn1.Sw1.Sw1.Sw1.BooleanInPort1 = Nand1.Mn1.Sw1.Sw1.control;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon2.e = Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon2.f = Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon2.d = Nand1.Mn1.Sw1.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon1.e = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon1.f = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn1.Sw1.Sw1.B3.BondCon1.d = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon1.e = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon1.f = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon1.d = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.e = Nand1.Mn1.Sw1.Sw1.p.e;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.f = Nand1.Mn1.Sw1.Sw1.p.f;
//   Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon2.d = Nand1.Mn1.Sw1.Sw1.p.d;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon1.e = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon1.f = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon1.d = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon2.e = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon2.f = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon2.d = Nand1.Mn1.Sw1.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon1.e = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon1.f = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn1.Sw1.Sw1.B1.BondCon1.d = Nand1.Mn1.Sw1.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.e = Nand1.Mn1.Sw1.Sw1.n2.e;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.f = Nand1.Mn1.Sw1.Sw1.n2.f;
//   Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon2.d = Nand1.Mn1.Sw1.Sw1.n2.d;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon2.e = Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon2.f = Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B2.BondCon2.d = Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.e = Nand1.Mn1.Sw1.Sw1.n1.e;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.f = Nand1.Mn1.Sw1.Sw1.n1.f;
//   Nand1.Mn1.Sw1.Sw1.j0p2_2.BondCon2.d = Nand1.Mn1.Sw1.Sw1.n1.d;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon2.e = Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon2.f = Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn1.Sw1.Sw1.B4.BondCon2.d = Nand1.Mn1.Sw1.Sw1.j0p2_1.BondCon1.d;
//   Nand1.Mn1.Sw1.B3.BondCon1.e = Nand1.Mn1.Sw1.Sw1.n1.e;
//   Nand1.Mn1.Sw1.B3.BondCon1.f = Nand1.Mn1.Sw1.Sw1.n1.f;
//   Nand1.Mn1.Sw1.B3.BondCon1.d = Nand1.Mn1.Sw1.Sw1.n1.d;
//   Nand1.Mn1.Sw1.B2.BondCon1.e = Nand1.Mn1.Sw1.Sw1.n2.e;
//   Nand1.Mn1.Sw1.B2.BondCon1.f = Nand1.Mn1.Sw1.Sw1.n2.f;
//   Nand1.Mn1.Sw1.B2.BondCon1.d = Nand1.Mn1.Sw1.Sw1.n2.d;
//   Nand1.Mn1.Sw1.B1.BondCon2.e = Nand1.Mn1.Sw1.Sw1.p.e;
//   Nand1.Mn1.Sw1.B1.BondCon2.f = Nand1.Mn1.Sw1.Sw1.p.f;
//   Nand1.Mn1.Sw1.B1.BondCon2.d = Nand1.Mn1.Sw1.Sw1.p.d;
//   Nand1.Mn1.Sw1.Sw1.control = Nand1.Mn1.Sw1.control;
//   Nand1.Mn1.Sw1.Heat2BG1.port_a.T = Nand1.Mn1.Sw1.p.T;
//   Nand1.Mn1.Sw1.B1.BondCon1.e = Nand1.Mn1.Sw1.Heat2BG1.BondCon1.e;
//   Nand1.Mn1.Sw1.B1.BondCon1.f = Nand1.Mn1.Sw1.Heat2BG1.BondCon1.f;
//   Nand1.Mn1.Sw1.B1.BondCon1.d = Nand1.Mn1.Sw1.Heat2BG1.BondCon1.d;
//   Nand1.Mn1.Sw1.BG2Heat1.port_b.T = Nand1.Mn1.Sw1.n1.T;
//   Nand1.Mn1.Sw1.B3.BondCon2.e = Nand1.Mn1.Sw1.BG2Heat1.BondCon1.e;
//   Nand1.Mn1.Sw1.B3.BondCon2.f = Nand1.Mn1.Sw1.BG2Heat1.BondCon1.f;
//   Nand1.Mn1.Sw1.B3.BondCon2.d = Nand1.Mn1.Sw1.BG2Heat1.BondCon1.d;
//   Nand1.Mn1.Sw1.BG2Heat2.port_b.T = Nand1.Mn1.Sw1.n2.T;
//   Nand1.Mn1.Sw1.B2.BondCon2.e = Nand1.Mn1.Sw1.BG2Heat2.BondCon1.e;
//   Nand1.Mn1.Sw1.B2.BondCon2.f = Nand1.Mn1.Sw1.BG2Heat2.BondCon1.f;
//   Nand1.Mn1.Sw1.B2.BondCon2.d = Nand1.Mn1.Sw1.BG2Heat2.BondCon1.d;
//   Nand1.Mn1.Cgb1.heatPort.T = Nand1.Mn1.Cgd1.heatPort.T;
//   Nand1.Mn1.Cgb1.heatPort.T = Nand1.Mn1.Cgs1.heatPort.T;
//   Nand1.Mn1.Cgb1.heatPort.T = Nand1.Mn1.Mni.heatPort.T;
//   Nand1.Mn1.Cgb1.heatPort.T = Nand1.Mn1.Rd.heatPort.T;
//   Nand1.Mn1.Cgb1.heatPort.T = Nand1.Mn1.Rs.heatPort.T;
//   Nand1.Mn1.Cgb1.heatPort.T = Nand1.Mn1.Sw1.p.T;
//   Nand1.Mn1.Sw1.n2.T = Nand1.Mn1.heatPort.T;
//   Nand1.Mn1.Sw1.n1.T = Nand1.Mn1.T_nom.port.T;
//   Nand1.Mn1.B.v = Nand1.Mn1.Cgb1.n.v;
//   Nand1.Mn1.B.v = Nand1.Mn1.Mni.B.v;
//   Nand1.Mn1.B.v = Nand1.Mn1.Vbs.p.v;
//   Nand1.Mn1.Cgb1.p.v = Nand1.Mn1.Cgd1.p.v;
//   Nand1.Mn1.Cgb1.p.v = Nand1.Mn1.Cgs1.p.v;
//   Nand1.Mn1.Cgb1.p.v = Nand1.Mn1.G.v;
//   Nand1.Mn1.Cgb1.p.v = Nand1.Mn1.Mni.G.v;
//   Nand1.Mn1.D.v = Nand1.Mn1.Rd.n.v;
//   Nand1.Mn1.D.v = Nand1.Mn1.Vds.p.v;
//   Nand1.Mn1.Rs.n.v = Nand1.Mn1.S.v;
//   Nand1.Mn1.Rs.n.v = Nand1.Mn1.Vbs.n.v;
//   Nand1.Mn1.Rs.n.v = Nand1.Mn1.Vds.n.v;
//   Nand1.Mn1.Cgb1.vds = Nand1.Mn1.Cgd1.vds;
//   Nand1.Mn1.Cgb1.vds = Nand1.Mn1.Cgs1.vds;
//   Nand1.Mn1.Cgb1.vds = Nand1.Mn1.Vds.V;
//   Nand1.Mn1.Cgb1.vbs = Nand1.Mn1.Cgd1.vbs;
//   Nand1.Mn1.Cgb1.vbs = Nand1.Mn1.Cgs1.vbs;
//   Nand1.Mn1.Cgb1.vbs = Nand1.Mn1.Vbs.V;
//   Nand1.Mn1.Cgd1.n.v = Nand1.Mn1.Mni.D.v;
//   Nand1.Mn1.Cgd1.n.v = Nand1.Mn1.Rd.p.v;
//   Nand1.Mn1.Cgs1.n.v = Nand1.Mn1.Mni.S.v;
//   Nand1.Mn1.Cgs1.n.v = Nand1.Mn1.Rs.p.v;
//   Nand1.Mn1.Cgb1.u[5] = Nand1.Mn1.Cgd1.u[5];
//   Nand1.Mn1.Cgb1.u[5] = Nand1.Mn1.Cgs1.u[5];
//   Nand1.Mn1.Cgb1.u[5] = Nand1.Mn1.Mni.y1[5];
//   Nand1.Mn1.Cgb1.u[4] = Nand1.Mn1.Cgd1.u[4];
//   Nand1.Mn1.Cgb1.u[4] = Nand1.Mn1.Cgs1.u[4];
//   Nand1.Mn1.Cgb1.u[4] = Nand1.Mn1.Mni.y1[4];
//   Nand1.Mn1.Cgb1.u[3] = Nand1.Mn1.Cgd1.u[3];
//   Nand1.Mn1.Cgb1.u[3] = Nand1.Mn1.Cgs1.u[3];
//   Nand1.Mn1.Cgb1.u[3] = Nand1.Mn1.Mni.y1[3];
//   Nand1.Mn1.Cgb1.u[2] = Nand1.Mn1.Cgd1.u[2];
//   Nand1.Mn1.Cgb1.u[2] = Nand1.Mn1.Cgs1.u[2];
//   Nand1.Mn1.Cgb1.u[2] = Nand1.Mn1.Mni.y1[2];
//   Nand1.Mn1.Cgb1.u[1] = Nand1.Mn1.Cgd1.u[1];
//   Nand1.Mn1.Cgb1.u[1] = Nand1.Mn1.Cgs1.u[1];
//   Nand1.Mn1.Cgb1.u[1] = Nand1.Mn1.Mni.y1[1];
//   Nand1.Mn2.S.i + Nand1.Mn2.B.i + Nand1.Gnd1.p.i = 0.0;
//   Nand1.Mn2.Mni.D.i + Nand1.Mn2.Cgd1.n.i + Nand1.Mn2.Rd.p.i = 0.0;
//   (-Nand1.Mn2.G.i) + Nand1.Mn2.Mni.G.i + Nand1.Mn2.Cgs1.p.i + Nand1.Mn2.Cgd1.p.i + Nand1.Mn2.Cgb1.p.i = 0.0;
//   Nand1.Mn2.Mni.S.i + Nand1.Mn2.Cgs1.n.i + Nand1.Mn2.Rs.p.i = 0.0;
//   (-Nand1.Mn2.B.i) + Nand1.Mn2.Mni.B.i + Nand1.Mn2.Cgb1.n.i + Nand1.Mn2.Vbs.p.i = 0.0;
//   Nand1.Mn2.Mni.heatPort.Q_flow + Nand1.Mn2.Cgs1.heatPort.Q_flow + Nand1.Mn2.Cgd1.heatPort.Q_flow + Nand1.Mn2.Cgb1.heatPort.Q_flow + Nand1.Mn2.Rd.heatPort.Q_flow + Nand1.Mn2.Rs.heatPort.Q_flow + Nand1.Mn2.Sw1.p.Q_flow = 0.0;
//   (-Nand1.Mn2.Mni.D.i) + Nand1.Mn2.Mni.Ids.p.i + Nand1.Mn2.Mni.Vds.p.i + Nand1.Mn2.Mni.Rgd.n.i + Nand1.Mn2.Mni.Dbd.n.i + Nand1.Mn2.Mni.Rds.p.i = 0.0;
//   (-Nand1.Mn2.Mni.S.i) + Nand1.Mn2.Mni.Ids.n.i + Nand1.Mn2.Mni.Vds.n.i + Nand1.Mn2.Mni.Vgs.n.i + Nand1.Mn2.Mni.Rgs.n.i + Nand1.Mn2.Mni.Vbs.n.i + Nand1.Mn2.Mni.Dbs.n.i + Nand1.Mn2.Mni.Rds.n.i = 0.0;
//   (-Nand1.Mn2.Mni.heatPort.Q_flow) + Nand1.Mn2.Mni.Ids.heatPort.Q_flow + Nand1.Mn2.Mni.Tdev1.port.Q_flow + Nand1.Mn2.Mni.Rgs.heatPort.Q_flow + Nand1.Mn2.Mni.Dbs.heatPort.Q_flow + Nand1.Mn2.Mni.Rgd.heatPort.Q_flow + Nand1.Mn2.Mni.Rgb.heatPort.Q_flow + Nand1.Mn2.Mni.Dbd.heatPort.Q_flow + Nand1.Mn2.Mni.Rds.heatPort.Q_flow = 0.0;
//   (-Nand1.Mn2.Mni.Ids.p.i) + Nand1.Mn2.Mni.Ids.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Ids.n.i) + Nand1.Mn2.Mni.Ids.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Mni.Ids.heatPort.Q_flow) + Nand1.Mn2.Mni.Ids.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Ids.I1.s = Nand1.Mn2.Mni.Ids.InPort1;
//   Nand1.Mn2.Mni.Ids.B4.fBondCon1.e = Nand1.Mn2.Mni.Ids.I1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.B4.fBondCon1.f = Nand1.Mn2.Mni.Ids.I1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.B4.fBondCon1.d = Nand1.Mn2.Mni.Ids.I1.BondCon1.d;
//   Nand1.Mn2.Mni.Ids.B3.fBondCon1.e = Nand1.Mn2.Mni.Ids.I1.BondCon2.e;
//   Nand1.Mn2.Mni.Ids.B3.fBondCon1.f = Nand1.Mn2.Mni.Ids.I1.BondCon2.f;
//   Nand1.Mn2.Mni.Ids.B3.fBondCon1.d = Nand1.Mn2.Mni.Ids.I1.BondCon2.d;
//   Nand1.Mn2.Mni.Ids.B3.eBondCon1.e = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Ids.B3.eBondCon1.f = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Ids.B3.eBondCon1.d = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Ids.B4.eBondCon1.e = Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.B4.eBondCon1.f = Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.B4.eBondCon1.d = Nand1.Mn2.Mni.Ids.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Ids.B1.BondCon2.e = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Ids.B1.BondCon2.f = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Ids.B1.BondCon2.d = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Ids.B1.BondCon1.e = Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.B1.BondCon1.f = Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.B1.BondCon1.d = Nand1.Mn2.Mni.Ids.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Ids.B2.BondCon2.e = Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.B2.BondCon2.f = Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.B2.BondCon2.d = Nand1.Mn2.Mni.Ids.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Ids.B2.BondCon1.e = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Ids.B2.BondCon1.f = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Ids.B2.BondCon1.d = Nand1.Mn2.Mni.Ids.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Ids.El2BG1.p.v = Nand1.Mn2.Mni.Ids.p.v;
//   Nand1.Mn2.Mni.Ids.BG2El1.n.v = Nand1.Mn2.Mni.Ids.n.v;
//   Nand1.Mn2.Mni.Ids.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Ids.heatPort.T;
//   (-Nand1.Mn2.Mni.Vds.p.i) + Nand1.Mn2.Mni.Vds.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Vds.n.i) + Nand1.Mn2.Mni.Vds.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Vds.B3.BondCon2.e = Nand1.Mn2.Mni.Vds.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.B3.BondCon2.f = Nand1.Mn2.Mni.Vds.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B3.BondCon2.d = Nand1.Mn2.Mni.Vds.De1.BondCon1.d;
//   Nand1.Mn2.Mni.Vds.B3.BondCon1.e = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Vds.B3.BondCon1.f = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Vds.B3.BondCon1.d = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Vds.De1.OutPort1 = Nand1.Mn2.Mni.Vds.V;
//   Nand1.Mn2.Mni.Vds.B1.BondCon2.e = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.B1.BondCon2.f = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B1.BondCon2.d = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Vds.B2.BondCon1.e = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Vds.B2.BondCon1.f = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Vds.B2.BondCon1.d = Nand1.Mn2.Mni.Vds.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Vds.B1.BondCon1.e = Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.B1.BondCon1.f = Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B1.BondCon1.d = Nand1.Mn2.Mni.Vds.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Vds.B2.BondCon2.e = Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Vds.B2.BondCon2.f = Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Vds.B2.BondCon2.d = Nand1.Mn2.Mni.Vds.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Vds.El2BG1.p.v = Nand1.Mn2.Mni.Vds.p.v;
//   Nand1.Mn2.Mni.Vds.BG2El1.n.v = Nand1.Mn2.Mni.Vds.n.v;
//   (-Nand1.Mn2.Mni.G.i) + Nand1.Mn2.Mni.Vgs.p.i + Nand1.Mn2.Mni.Rgs.p.i + Nand1.Mn2.Mni.Rgd.p.i + Nand1.Mn2.Mni.Rgb.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Vgs.p.i) + Nand1.Mn2.Mni.Vgs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Vgs.n.i) + Nand1.Mn2.Mni.Vgs.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon2.e = Nand1.Mn2.Mni.Vgs.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon2.f = Nand1.Mn2.Mni.Vgs.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon2.d = Nand1.Mn2.Mni.Vgs.De1.BondCon1.d;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon1.e = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon1.f = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Vgs.B3.BondCon1.d = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Vgs.De1.OutPort1 = Nand1.Mn2.Mni.Vgs.V;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon2.e = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon2.f = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon2.d = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon1.e = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon1.f = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon1.d = Nand1.Mn2.Mni.Vgs.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon1.e = Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon1.f = Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B1.BondCon1.d = Nand1.Mn2.Mni.Vgs.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon2.e = Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon2.f = Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Vgs.B2.BondCon2.d = Nand1.Mn2.Mni.Vgs.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Vgs.El2BG1.p.v = Nand1.Mn2.Mni.Vgs.p.v;
//   Nand1.Mn2.Mni.Vgs.BG2El1.n.v = Nand1.Mn2.Mni.Vgs.n.v;
//   (-Nand1.Mn2.Mni.Rgs.p.i) + Nand1.Mn2.Mni.Rgs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Rgs.n.i) + Nand1.Mn2.Mni.Rgs.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BooleanInPort1 = Nand1.Mn2.Mni.Rgs.Sw1.control;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon2.d = Nand1.Mn2.Mni.Rgs.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.e = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.f = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B3.BondCon1.d = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.e = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.f = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon1.d = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.p.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.p.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon2.d = Nand1.Mn2.Mni.Rgs.Sw1.p.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.e = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.f = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon1.d = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon2.d = Nand1.Mn2.Mni.Rgs.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.e = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.f = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B1.BondCon1.d = Nand1.Mn2.Mni.Rgs.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon2.d = Nand1.Mn2.Mni.Rgs.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B2.BondCon2.d = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.j0p2_2.BondCon2.d = Nand1.Mn2.Mni.Rgs.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.Sw1.B4.BondCon2.d = Nand1.Mn2.Mni.Rgs.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn2.Mni.Rgs.heatPort.Q_flow) + Nand1.Mn2.Mni.Rgs.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Rgs.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Rgs.heatPort.T;
//   Nand1.Mn2.Mni.Rgs.B5.eBondCon1.e = Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B5.eBondCon1.f = Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B5.eBondCon1.d = Nand1.Mn2.Mni.Rgs.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.B5.fBondCon1.e = Nand1.Mn2.Mni.Rgs.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rgs.B5.fBondCon1.f = Nand1.Mn2.Mni.Rgs.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rgs.B5.fBondCon1.d = Nand1.Mn2.Mni.Rgs.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rgs.B6.fBondCon1.e = Nand1.Mn2.Mni.Rgs.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rgs.B6.fBondCon1.f = Nand1.Mn2.Mni.Rgs.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rgs.B6.fBondCon1.d = Nand1.Mn2.Mni.Rgs.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rgs.B4.eBondCon1.e = Nand1.Mn2.Mni.Rgs.Sw1.p.e;
//   Nand1.Mn2.Mni.Rgs.B4.eBondCon1.f = Nand1.Mn2.Mni.Rgs.Sw1.p.f;
//   Nand1.Mn2.Mni.Rgs.B4.eBondCon1.d = Nand1.Mn2.Mni.Rgs.Sw1.p.d;
//   Nand1.Mn2.Mni.Rgs.B4.fBondCon1.e = Nand1.Mn2.Mni.Rgs.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.B4.fBondCon1.f = Nand1.Mn2.Mni.Rgs.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.B4.fBondCon1.d = Nand1.Mn2.Mni.Rgs.R1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon2.e = Nand1.Mn2.Mni.Rgs.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon2.f = Nand1.Mn2.Mni.Rgs.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon2.d = Nand1.Mn2.Mni.Rgs.R1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon2.e = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon2.f = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon2.d = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon1.e = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon1.f = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon1.d = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon1.e = Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon1.f = Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B1.BondCon1.d = Nand1.Mn2.Mni.Rgs.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon2.e = Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon2.f = Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B2.BondCon2.d = Nand1.Mn2.Mni.Rgs.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon1.e = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon1.f = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgs.B3.BondCon1.d = Nand1.Mn2.Mni.Rgs.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgs.El2BG1.p.v = Nand1.Mn2.Mni.Rgs.p.v;
//   Nand1.Mn2.Mni.Rgs.BG2El1.n.v = Nand1.Mn2.Mni.Rgs.n.v;
//   Nand1.Mn2.Mni.Rgs.B6.eBondCon1.e = Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rgs.B6.eBondCon1.f = Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rgs.B6.eBondCon1.d = Nand1.Mn2.Mni.Rgs.T_nom.BondCon1.d;
//   (-Nand1.Mn2.Mni.B.i) + Nand1.Mn2.Mni.Vbs.p.i + Nand1.Mn2.Mni.Dbs.p.i + Nand1.Mn2.Mni.Rgb.n.i + Nand1.Mn2.Mni.Dbd.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Vbs.p.i) + Nand1.Mn2.Mni.Vbs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Vbs.n.i) + Nand1.Mn2.Mni.Vbs.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon2.e = Nand1.Mn2.Mni.Vbs.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon2.f = Nand1.Mn2.Mni.Vbs.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon2.d = Nand1.Mn2.Mni.Vbs.De1.BondCon1.d;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon1.e = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon1.f = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Vbs.B3.BondCon1.d = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Vbs.De1.OutPort1 = Nand1.Mn2.Mni.Vbs.V;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon2.e = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon2.f = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon2.d = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon1.e = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon1.f = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon1.d = Nand1.Mn2.Mni.Vbs.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon1.e = Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon1.f = Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B1.BondCon1.d = Nand1.Mn2.Mni.Vbs.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon2.e = Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon2.f = Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Vbs.B2.BondCon2.d = Nand1.Mn2.Mni.Vbs.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Vbs.El2BG1.p.v = Nand1.Mn2.Mni.Vbs.p.v;
//   Nand1.Mn2.Mni.Vbs.BG2El1.n.v = Nand1.Mn2.Mni.Vbs.n.v;
//   (-Nand1.Mn2.Mni.Dbs.heatPort.Q_flow) + Nand1.Mn2.Mni.Dbs.Tdev1.port.Q_flow + Nand1.Mn2.Mni.Dbs.Rd.heatPort.Q_flow + Nand1.Mn2.Mni.Dbs.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.p.i) + Nand1.Mn2.Mni.Dbs.Rd.p.i + Nand1.Mn2.Mni.Dbs.DjM1.p.i + Nand1.Mn2.Mni.Dbs.Vd.p.i + Nand1.Mn2.Mni.Dbs.VarC1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.n.i) + Nand1.Mn2.Mni.Dbs.Rd.n.i + Nand1.Mn2.Mni.Dbs.DjM1.n.i + Nand1.Mn2.Mni.Dbs.Vd.n.i + Nand1.Mn2.Mni.Dbs.VarC1.n.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.Rd.p.i) + Nand1.Mn2.Mni.Dbs.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.Rd.n.i) + Nand1.Mn2.Mni.Dbs.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mn2.Mni.Dbs.Rd.Sw1.control;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B3.BondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B1.BondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B2.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.Sw1.B4.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn2.Mni.Dbs.Rd.heatPort.Q_flow) + Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Dbs.Rd.heatPort.T;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.eBondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B5.fBondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n2.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.fBondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.n1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.eBondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.Sw1.p.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B4.fBondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.R1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B1.BondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B2.BondCon2.d = Nand1.Mn2.Mni.Dbs.Rd.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B3.BondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbs.Rd.El2BG1.p.v = Nand1.Mn2.Mni.Dbs.Rd.p.v;
//   Nand1.Mn2.Mni.Dbs.Rd.BG2El1.n.v = Nand1.Mn2.Mni.Dbs.Rd.n.v;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.e = Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.f = Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Rd.B6.eBondCon1.d = Nand1.Mn2.Mni.Dbs.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mn2.Mni.Dbs.DjM1.p.i) + Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.DjM1.n.i) + Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.DjM1.heatPort.Q_flow) + Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Dbs.DjM1.heatPort.T;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.eBondCon1.d = Nand1.Mn2.Mni.Dbs.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.f = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B4.fBondCon1.d = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon2.d = Nand1.Mn2.Mni.Dbs.DjM1.DjM1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.f = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B3.BondCon1.d = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon2.d = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.f = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon1.d = Nand1.Mn2.Mni.Dbs.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.e = Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.f = Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B1.BondCon1.d = Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.DjM1.B2.BondCon2.d = Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.DjM1.El2BG1.p.v = Nand1.Mn2.Mni.Dbs.DjM1.p.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.BG2El1.n.v = Nand1.Mn2.Mni.Dbs.DjM1.n.v;
//   (-Nand1.Mn2.Mni.Dbs.Vd.p.i) + Nand1.Mn2.Mni.Dbs.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.Vd.n.i) + Nand1.Mn2.Mni.Dbs.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon2.d = Nand1.Mn2.Mni.Dbs.Vd.De1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.e = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.f = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B3.BondCon1.d = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbs.Vd.De1.OutPort1 = Nand1.Mn2.Mni.Dbs.Vd.V;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon2.d = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.e = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.f = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon1.d = Nand1.Mn2.Mni.Dbs.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.e = Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.f = Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B1.BondCon1.d = Nand1.Mn2.Mni.Dbs.Vd.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.Vd.B2.BondCon2.d = Nand1.Mn2.Mni.Dbs.Vd.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.Vd.El2BG1.p.v = Nand1.Mn2.Mni.Dbs.Vd.p.v;
//   Nand1.Mn2.Mni.Dbs.Vd.BG2El1.n.v = Nand1.Mn2.Mni.Dbs.Vd.n.v;
//   (-Nand1.Mn2.Mni.Dbs.VarC1.p.i) + Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbs.VarC1.n.i) + Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Dbs.VarC1.mC1.s = Nand1.Mn2.Mni.Dbs.VarC1.u;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon2.d = Nand1.Mn2.Mni.Dbs.VarC1.mC1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.e = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.f = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B3.BondCon1.d = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon2.d = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.e = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.f = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon1.d = Nand1.Mn2.Mni.Dbs.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.e = Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.f = Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B1.BondCon1.d = Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbs.VarC1.B2.BondCon2.d = Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbs.VarC1.El2BG1.p.v = Nand1.Mn2.Mni.Dbs.VarC1.p.v;
//   Nand1.Mn2.Mni.Dbs.VarC1.BG2El1.n.v = Nand1.Mn2.Mni.Dbs.VarC1.n.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.p.v = Nand1.Mn2.Mni.Dbs.Rd.p.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.p.v = Nand1.Mn2.Mni.Dbs.VarC1.p.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.p.v = Nand1.Mn2.Mni.Dbs.Vd.p.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.p.v = Nand1.Mn2.Mni.Dbs.p.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.n.v = Nand1.Mn2.Mni.Dbs.Rd.n.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.n.v = Nand1.Mn2.Mni.Dbs.VarC1.n.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.n.v = Nand1.Mn2.Mni.Dbs.Vd.n.v;
//   Nand1.Mn2.Mni.Dbs.DjM1.n.v = Nand1.Mn2.Mni.Dbs.n.v;
//   Nand1.Mn2.Mni.Dbs.VarC1.u = Nand1.Mn2.Mni.Dbs.nlCM1.y;
//   Nand1.Mn2.Mni.Dbs.Vd.V = Nand1.Mn2.Mni.Dbs.nlCM1.u;
//   Nand1.Mn2.Mni.Dbs.DjM1.heatPort.T = Nand1.Mn2.Mni.Dbs.Rd.heatPort.T;
//   Nand1.Mn2.Mni.Dbs.DjM1.heatPort.T = Nand1.Mn2.Mni.Dbs.Tdev1.port.T;
//   Nand1.Mn2.Mni.Dbs.DjM1.heatPort.T = Nand1.Mn2.Mni.Dbs.heatPort.T;
//   Nand1.Mn2.Mni.Dbs.Tdev1.T = Nand1.Mn2.Mni.Dbs.nlCM1.Tdev;
//   (-Nand1.Mn2.Mni.Rgd.p.i) + Nand1.Mn2.Mni.Rgd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Rgd.n.i) + Nand1.Mn2.Mni.Rgd.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BooleanInPort1 = Nand1.Mn2.Mni.Rgd.Sw1.control;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon2.d = Nand1.Mn2.Mni.Rgd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.e = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.f = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B3.BondCon1.d = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.e = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.f = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon1.d = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.p.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.p.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon2.d = Nand1.Mn2.Mni.Rgd.Sw1.p.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.e = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.f = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon1.d = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon2.d = Nand1.Mn2.Mni.Rgd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.e = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.f = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B1.BondCon1.d = Nand1.Mn2.Mni.Rgd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon2.d = Nand1.Mn2.Mni.Rgd.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B2.BondCon2.d = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.j0p2_2.BondCon2.d = Nand1.Mn2.Mni.Rgd.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.Sw1.B4.BondCon2.d = Nand1.Mn2.Mni.Rgd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn2.Mni.Rgd.heatPort.Q_flow) + Nand1.Mn2.Mni.Rgd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Rgd.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Rgd.heatPort.T;
//   Nand1.Mn2.Mni.Rgd.B5.eBondCon1.e = Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B5.eBondCon1.f = Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B5.eBondCon1.d = Nand1.Mn2.Mni.Rgd.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.B5.fBondCon1.e = Nand1.Mn2.Mni.Rgd.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rgd.B5.fBondCon1.f = Nand1.Mn2.Mni.Rgd.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rgd.B5.fBondCon1.d = Nand1.Mn2.Mni.Rgd.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rgd.B6.fBondCon1.e = Nand1.Mn2.Mni.Rgd.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rgd.B6.fBondCon1.f = Nand1.Mn2.Mni.Rgd.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rgd.B6.fBondCon1.d = Nand1.Mn2.Mni.Rgd.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rgd.B4.eBondCon1.e = Nand1.Mn2.Mni.Rgd.Sw1.p.e;
//   Nand1.Mn2.Mni.Rgd.B4.eBondCon1.f = Nand1.Mn2.Mni.Rgd.Sw1.p.f;
//   Nand1.Mn2.Mni.Rgd.B4.eBondCon1.d = Nand1.Mn2.Mni.Rgd.Sw1.p.d;
//   Nand1.Mn2.Mni.Rgd.B4.fBondCon1.e = Nand1.Mn2.Mni.Rgd.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.B4.fBondCon1.f = Nand1.Mn2.Mni.Rgd.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.B4.fBondCon1.d = Nand1.Mn2.Mni.Rgd.R1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon2.e = Nand1.Mn2.Mni.Rgd.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon2.f = Nand1.Mn2.Mni.Rgd.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon2.d = Nand1.Mn2.Mni.Rgd.R1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon2.e = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon2.f = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon2.d = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon1.e = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon1.f = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon1.d = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon1.e = Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon1.f = Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B1.BondCon1.d = Nand1.Mn2.Mni.Rgd.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon2.e = Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon2.f = Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B2.BondCon2.d = Nand1.Mn2.Mni.Rgd.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon1.e = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon1.f = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgd.B3.BondCon1.d = Nand1.Mn2.Mni.Rgd.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgd.El2BG1.p.v = Nand1.Mn2.Mni.Rgd.p.v;
//   Nand1.Mn2.Mni.Rgd.BG2El1.n.v = Nand1.Mn2.Mni.Rgd.n.v;
//   Nand1.Mn2.Mni.Rgd.B6.eBondCon1.e = Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rgd.B6.eBondCon1.f = Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rgd.B6.eBondCon1.d = Nand1.Mn2.Mni.Rgd.T_nom.BondCon1.d;
//   (-Nand1.Mn2.Mni.Rgb.p.i) + Nand1.Mn2.Mni.Rgb.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Rgb.n.i) + Nand1.Mn2.Mni.Rgb.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BooleanInPort1 = Nand1.Mn2.Mni.Rgb.Sw1.control;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon2.d = Nand1.Mn2.Mni.Rgb.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.e = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.f = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B3.BondCon1.d = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.e = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.f = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon1.d = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.p.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.p.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon2.d = Nand1.Mn2.Mni.Rgb.Sw1.p.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.e = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.f = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon1.d = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon2.d = Nand1.Mn2.Mni.Rgb.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.e = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.f = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B1.BondCon1.d = Nand1.Mn2.Mni.Rgb.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon2.d = Nand1.Mn2.Mni.Rgb.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B2.BondCon2.d = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.j0p2_2.BondCon2.d = Nand1.Mn2.Mni.Rgb.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.Sw1.B4.BondCon2.d = Nand1.Mn2.Mni.Rgb.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn2.Mni.Rgb.heatPort.Q_flow) + Nand1.Mn2.Mni.Rgb.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Rgb.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Rgb.heatPort.T;
//   Nand1.Mn2.Mni.Rgb.B5.eBondCon1.e = Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B5.eBondCon1.f = Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B5.eBondCon1.d = Nand1.Mn2.Mni.Rgb.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.B5.fBondCon1.e = Nand1.Mn2.Mni.Rgb.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rgb.B5.fBondCon1.f = Nand1.Mn2.Mni.Rgb.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rgb.B5.fBondCon1.d = Nand1.Mn2.Mni.Rgb.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rgb.B6.fBondCon1.e = Nand1.Mn2.Mni.Rgb.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rgb.B6.fBondCon1.f = Nand1.Mn2.Mni.Rgb.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rgb.B6.fBondCon1.d = Nand1.Mn2.Mni.Rgb.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rgb.B4.eBondCon1.e = Nand1.Mn2.Mni.Rgb.Sw1.p.e;
//   Nand1.Mn2.Mni.Rgb.B4.eBondCon1.f = Nand1.Mn2.Mni.Rgb.Sw1.p.f;
//   Nand1.Mn2.Mni.Rgb.B4.eBondCon1.d = Nand1.Mn2.Mni.Rgb.Sw1.p.d;
//   Nand1.Mn2.Mni.Rgb.B4.fBondCon1.e = Nand1.Mn2.Mni.Rgb.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.B4.fBondCon1.f = Nand1.Mn2.Mni.Rgb.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.B4.fBondCon1.d = Nand1.Mn2.Mni.Rgb.R1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon2.e = Nand1.Mn2.Mni.Rgb.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon2.f = Nand1.Mn2.Mni.Rgb.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon2.d = Nand1.Mn2.Mni.Rgb.R1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon2.e = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon2.f = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon2.d = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon1.e = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon1.f = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon1.d = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon1.e = Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon1.f = Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B1.BondCon1.d = Nand1.Mn2.Mni.Rgb.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon2.e = Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon2.f = Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B2.BondCon2.d = Nand1.Mn2.Mni.Rgb.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon1.e = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon1.f = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rgb.B3.BondCon1.d = Nand1.Mn2.Mni.Rgb.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rgb.El2BG1.p.v = Nand1.Mn2.Mni.Rgb.p.v;
//   Nand1.Mn2.Mni.Rgb.BG2El1.n.v = Nand1.Mn2.Mni.Rgb.n.v;
//   Nand1.Mn2.Mni.Rgb.B6.eBondCon1.e = Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rgb.B6.eBondCon1.f = Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rgb.B6.eBondCon1.d = Nand1.Mn2.Mni.Rgb.T_nom.BondCon1.d;
//   (-Nand1.Mn2.Mni.Dbd.heatPort.Q_flow) + Nand1.Mn2.Mni.Dbd.Tdev1.port.Q_flow + Nand1.Mn2.Mni.Dbd.Rd.heatPort.Q_flow + Nand1.Mn2.Mni.Dbd.DjM1.heatPort.Q_flow = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.p.i) + Nand1.Mn2.Mni.Dbd.Rd.p.i + Nand1.Mn2.Mni.Dbd.DjM1.p.i + Nand1.Mn2.Mni.Dbd.Vd.p.i + Nand1.Mn2.Mni.Dbd.VarC1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.n.i) + Nand1.Mn2.Mni.Dbd.Rd.n.i + Nand1.Mn2.Mni.Dbd.DjM1.n.i + Nand1.Mn2.Mni.Dbd.Vd.n.i + Nand1.Mn2.Mni.Dbd.VarC1.n.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.Rd.p.i) + Nand1.Mn2.Mni.Dbd.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.Rd.n.i) + Nand1.Mn2.Mni.Dbd.Rd.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BooleanInPort1 = Nand1.Mn2.Mni.Dbd.Rd.Sw1.control;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B3.BondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B1.BondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B2.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_2.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.Sw1.B4.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn2.Mni.Dbd.Rd.heatPort.Q_flow) + Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Dbd.Rd.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.eBondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B5.fBondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n2.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.fBondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.n1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.eBondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.Sw1.p.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B4.fBondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.R1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B1.BondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B2.BondCon2.d = Nand1.Mn2.Mni.Dbd.Rd.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B3.BondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbd.Rd.El2BG1.p.v = Nand1.Mn2.Mni.Dbd.Rd.p.v;
//   Nand1.Mn2.Mni.Dbd.Rd.BG2El1.n.v = Nand1.Mn2.Mni.Dbd.Rd.n.v;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.e = Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.f = Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Rd.B6.eBondCon1.d = Nand1.Mn2.Mni.Dbd.Rd.T_nom.BondCon1.d;
//   (-Nand1.Mn2.Mni.Dbd.DjM1.p.i) + Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.DjM1.n.i) + Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.DjM1.heatPort.Q_flow) + Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Dbd.DjM1.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.f = Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.eBondCon1.d = Nand1.Mn2.Mni.Dbd.DjM1.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.f = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B4.fBondCon1.d = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon2.d = Nand1.Mn2.Mni.Dbd.DjM1.DjM1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.f = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B3.BondCon1.d = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon2.d = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.f = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon1.d = Nand1.Mn2.Mni.Dbd.DjM1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.e = Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.f = Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B1.BondCon1.d = Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.DjM1.B2.BondCon2.d = Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.DjM1.El2BG1.p.v = Nand1.Mn2.Mni.Dbd.DjM1.p.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.BG2El1.n.v = Nand1.Mn2.Mni.Dbd.DjM1.n.v;
//   (-Nand1.Mn2.Mni.Dbd.Vd.p.i) + Nand1.Mn2.Mni.Dbd.Vd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.Vd.n.i) + Nand1.Mn2.Mni.Dbd.Vd.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon2.d = Nand1.Mn2.Mni.Dbd.Vd.De1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.e = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.f = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B3.BondCon1.d = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbd.Vd.De1.OutPort1 = Nand1.Mn2.Mni.Dbd.Vd.V;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon2.d = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.e = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.f = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon1.d = Nand1.Mn2.Mni.Dbd.Vd.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.e = Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.f = Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B1.BondCon1.d = Nand1.Mn2.Mni.Dbd.Vd.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.Vd.B2.BondCon2.d = Nand1.Mn2.Mni.Dbd.Vd.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.Vd.El2BG1.p.v = Nand1.Mn2.Mni.Dbd.Vd.p.v;
//   Nand1.Mn2.Mni.Dbd.Vd.BG2El1.n.v = Nand1.Mn2.Mni.Dbd.Vd.n.v;
//   (-Nand1.Mn2.Mni.Dbd.VarC1.p.i) + Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Dbd.VarC1.n.i) + Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Dbd.VarC1.mC1.s = Nand1.Mn2.Mni.Dbd.VarC1.u;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.e = Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.f = Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon2.d = Nand1.Mn2.Mni.Dbd.VarC1.mC1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.e = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.f = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B3.BondCon1.d = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.e = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.f = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon2.d = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.e = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.f = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon1.d = Nand1.Mn2.Mni.Dbd.VarC1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.e = Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.f = Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B1.BondCon1.d = Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.e = Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.f = Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Dbd.VarC1.B2.BondCon2.d = Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.VarC1.El2BG1.p.v = Nand1.Mn2.Mni.Dbd.VarC1.p.v;
//   Nand1.Mn2.Mni.Dbd.VarC1.BG2El1.n.v = Nand1.Mn2.Mni.Dbd.VarC1.n.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.p.v = Nand1.Mn2.Mni.Dbd.Rd.p.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.p.v = Nand1.Mn2.Mni.Dbd.VarC1.p.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.p.v = Nand1.Mn2.Mni.Dbd.Vd.p.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.p.v = Nand1.Mn2.Mni.Dbd.p.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.n.v = Nand1.Mn2.Mni.Dbd.Rd.n.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.n.v = Nand1.Mn2.Mni.Dbd.VarC1.n.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.n.v = Nand1.Mn2.Mni.Dbd.Vd.n.v;
//   Nand1.Mn2.Mni.Dbd.DjM1.n.v = Nand1.Mn2.Mni.Dbd.n.v;
//   Nand1.Mn2.Mni.Dbd.VarC1.u = Nand1.Mn2.Mni.Dbd.nlCM1.y;
//   Nand1.Mn2.Mni.Dbd.Vd.V = Nand1.Mn2.Mni.Dbd.nlCM1.u;
//   Nand1.Mn2.Mni.Dbd.DjM1.heatPort.T = Nand1.Mn2.Mni.Dbd.Rd.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.DjM1.heatPort.T = Nand1.Mn2.Mni.Dbd.Tdev1.port.T;
//   Nand1.Mn2.Mni.Dbd.DjM1.heatPort.T = Nand1.Mn2.Mni.Dbd.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.Tdev1.T = Nand1.Mn2.Mni.Dbd.nlCM1.Tdev;
//   (-Nand1.Mn2.Mni.Rds.p.i) + Nand1.Mn2.Mni.Rds.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Mni.Rds.n.i) + Nand1.Mn2.Mni.Rds.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Mni.Rds.Sw1.Sw1.BooleanInPort1 = Nand1.Mn2.Mni.Rds.Sw1.control;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon2.d = Nand1.Mn2.Mni.Rds.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.e = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.f = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B3.BondCon1.d = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.e = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.f = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon1.d = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.p.e;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.p.f;
//   Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon2.d = Nand1.Mn2.Mni.Rds.Sw1.p.d;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.e = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.f = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon1.d = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon2.d = Nand1.Mn2.Mni.Rds.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.e = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.f = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B1.BondCon1.d = Nand1.Mn2.Mni.Rds.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon2.d = Nand1.Mn2.Mni.Rds.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B2.BondCon2.d = Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.j0p2_2.BondCon2.d = Nand1.Mn2.Mni.Rds.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.e = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.f = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.Sw1.B4.BondCon2.d = Nand1.Mn2.Mni.Rds.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.Mn2.Mni.Rds.heatPort.Q_flow) + Nand1.Mn2.Mni.Rds.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Mni.Rds.BG2Heat1.port_b.T = Nand1.Mn2.Mni.Rds.heatPort.T;
//   Nand1.Mn2.Mni.Rds.B5.eBondCon1.e = Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B5.eBondCon1.f = Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B5.eBondCon1.d = Nand1.Mn2.Mni.Rds.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.B5.fBondCon1.e = Nand1.Mn2.Mni.Rds.Sw1.n2.e;
//   Nand1.Mn2.Mni.Rds.B5.fBondCon1.f = Nand1.Mn2.Mni.Rds.Sw1.n2.f;
//   Nand1.Mn2.Mni.Rds.B5.fBondCon1.d = Nand1.Mn2.Mni.Rds.Sw1.n2.d;
//   Nand1.Mn2.Mni.Rds.B6.fBondCon1.e = Nand1.Mn2.Mni.Rds.Sw1.n1.e;
//   Nand1.Mn2.Mni.Rds.B6.fBondCon1.f = Nand1.Mn2.Mni.Rds.Sw1.n1.f;
//   Nand1.Mn2.Mni.Rds.B6.fBondCon1.d = Nand1.Mn2.Mni.Rds.Sw1.n1.d;
//   Nand1.Mn2.Mni.Rds.B4.eBondCon1.e = Nand1.Mn2.Mni.Rds.Sw1.p.e;
//   Nand1.Mn2.Mni.Rds.B4.eBondCon1.f = Nand1.Mn2.Mni.Rds.Sw1.p.f;
//   Nand1.Mn2.Mni.Rds.B4.eBondCon1.d = Nand1.Mn2.Mni.Rds.Sw1.p.d;
//   Nand1.Mn2.Mni.Rds.B4.fBondCon1.e = Nand1.Mn2.Mni.Rds.R1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.B4.fBondCon1.f = Nand1.Mn2.Mni.Rds.R1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.B4.fBondCon1.d = Nand1.Mn2.Mni.Rds.R1.BondCon2.d;
//   Nand1.Mn2.Mni.Rds.B3.BondCon2.e = Nand1.Mn2.Mni.Rds.R1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B3.BondCon2.f = Nand1.Mn2.Mni.Rds.R1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B3.BondCon2.d = Nand1.Mn2.Mni.Rds.R1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.B1.BondCon2.e = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B1.BondCon2.f = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B1.BondCon2.d = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.B2.BondCon1.e = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Mni.Rds.B2.BondCon1.f = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Mni.Rds.B2.BondCon1.d = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Mni.Rds.B1.BondCon1.e = Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B1.BondCon1.f = Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B1.BondCon1.d = Nand1.Mn2.Mni.Rds.El2BG1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.B2.BondCon2.e = Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B2.BondCon2.f = Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B2.BondCon2.d = Nand1.Mn2.Mni.Rds.BG2El1.BondCon1.d;
//   Nand1.Mn2.Mni.Rds.B3.BondCon1.e = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Mni.Rds.B3.BondCon1.f = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Mni.Rds.B3.BondCon1.d = Nand1.Mn2.Mni.Rds.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Mni.Rds.El2BG1.p.v = Nand1.Mn2.Mni.Rds.p.v;
//   Nand1.Mn2.Mni.Rds.BG2El1.n.v = Nand1.Mn2.Mni.Rds.n.v;
//   Nand1.Mn2.Mni.Rds.B6.eBondCon1.e = Nand1.Mn2.Mni.Rds.T_nom.BondCon1.e;
//   Nand1.Mn2.Mni.Rds.B6.eBondCon1.f = Nand1.Mn2.Mni.Rds.T_nom.BondCon1.f;
//   Nand1.Mn2.Mni.Rds.B6.eBondCon1.d = Nand1.Mn2.Mni.Rds.T_nom.BondCon1.d;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.Dbs.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.Ids.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.Rds.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.Rgb.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.Rgd.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.Rgs.heatPort.T;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.Tdev1.port.T;
//   Nand1.Mn2.Mni.Dbd.heatPort.T = Nand1.Mn2.Mni.heatPort.T;
//   Nand1.Mn2.Mni.Dbs.n.v = Nand1.Mn2.Mni.Ids.n.v;
//   Nand1.Mn2.Mni.Dbs.n.v = Nand1.Mn2.Mni.Rds.n.v;
//   Nand1.Mn2.Mni.Dbs.n.v = Nand1.Mn2.Mni.Rgs.n.v;
//   Nand1.Mn2.Mni.Dbs.n.v = Nand1.Mn2.Mni.S.v;
//   Nand1.Mn2.Mni.Dbs.n.v = Nand1.Mn2.Mni.Vbs.n.v;
//   Nand1.Mn2.Mni.Dbs.n.v = Nand1.Mn2.Mni.Vds.n.v;
//   Nand1.Mn2.Mni.Dbs.n.v = Nand1.Mn2.Mni.Vgs.n.v;
//   Nand1.Mn2.Mni.D.v = Nand1.Mn2.Mni.Dbd.n.v;
//   Nand1.Mn2.Mni.D.v = Nand1.Mn2.Mni.Ids.p.v;
//   Nand1.Mn2.Mni.D.v = Nand1.Mn2.Mni.Rds.p.v;
//   Nand1.Mn2.Mni.D.v = Nand1.Mn2.Mni.Rgd.n.v;
//   Nand1.Mn2.Mni.D.v = Nand1.Mn2.Mni.Vds.p.v;
//   Nand1.Mn2.Mni.B.v = Nand1.Mn2.Mni.Dbd.p.v;
//   Nand1.Mn2.Mni.B.v = Nand1.Mn2.Mni.Dbs.p.v;
//   Nand1.Mn2.Mni.B.v = Nand1.Mn2.Mni.Rgb.n.v;
//   Nand1.Mn2.Mni.B.v = Nand1.Mn2.Mni.Vbs.p.v;
//   Nand1.Mn2.Mni.G.v = Nand1.Mn2.Mni.Rgb.p.v;
//   Nand1.Mn2.Mni.G.v = Nand1.Mn2.Mni.Rgd.p.v;
//   Nand1.Mn2.Mni.G.v = Nand1.Mn2.Mni.Rgs.p.v;
//   Nand1.Mn2.Mni.G.v = Nand1.Mn2.Mni.Vgs.p.v;
//   Nand1.Mn2.Mni.IDS0.u3 = Nand1.Mn2.Mni.Vbs.V;
//   Nand1.Mn2.Mni.IDS0.y = Nand1.Mn2.Mni.Ids.InPort1;
//   Nand1.Mn2.Mni.IDS0.Tdev = Nand1.Mn2.Mni.Tdev1.T;
//   Nand1.Mn2.Mni.IDS0.u1 = Nand1.Mn2.Mni.Vds.V;
//   Nand1.Mn2.Mni.IDS0.u2 = Nand1.Mn2.Mni.Vgs.V;
//   Nand1.Mn2.Mni.IDS0.y1[5] = Nand1.Mn2.Mni.y1[5];
//   Nand1.Mn2.Mni.IDS0.y1[4] = Nand1.Mn2.Mni.y1[4];
//   Nand1.Mn2.Mni.IDS0.y1[3] = Nand1.Mn2.Mni.y1[3];
//   Nand1.Mn2.Mni.IDS0.y1[2] = Nand1.Mn2.Mni.y1[2];
//   Nand1.Mn2.Mni.IDS0.y1[1] = Nand1.Mn2.Mni.y1[1];
//   (-Nand1.Mn2.Cgs1.p.i) + Nand1.Mn2.Cgs1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Cgs1.n.i) + Nand1.Mn2.Cgs1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Cgs1.heatPort.Q_flow) + Nand1.Mn2.Cgs1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Cgs1.Cgs1.u1 = Nand1.Mn2.Cgs1.vds;
//   Nand1.Mn2.Cgs1.Cgs1.u2 = Nand1.Mn2.Cgs1.vbs;
//   Nand1.Mn2.Cgs1.BG2Heat1.port_b.T = Nand1.Mn2.Cgs1.heatPort.T;
//   Nand1.Mn2.Cgs1.B4.eBondCon1.e = Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Cgs1.B4.eBondCon1.f = Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Cgs1.B4.eBondCon1.d = Nand1.Mn2.Cgs1.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Cgs1.B4.fBondCon1.e = Nand1.Mn2.Cgs1.Cgs1.BondCon2.e;
//   Nand1.Mn2.Cgs1.B4.fBondCon1.f = Nand1.Mn2.Cgs1.Cgs1.BondCon2.f;
//   Nand1.Mn2.Cgs1.B4.fBondCon1.d = Nand1.Mn2.Cgs1.Cgs1.BondCon2.d;
//   Nand1.Mn2.Cgs1.B3.BondCon2.e = Nand1.Mn2.Cgs1.Cgs1.BondCon1.e;
//   Nand1.Mn2.Cgs1.B3.BondCon2.f = Nand1.Mn2.Cgs1.Cgs1.BondCon1.f;
//   Nand1.Mn2.Cgs1.B3.BondCon2.d = Nand1.Mn2.Cgs1.Cgs1.BondCon1.d;
//   Nand1.Mn2.Cgs1.B3.BondCon1.e = Nand1.Mn2.Cgs1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Cgs1.B3.BondCon1.f = Nand1.Mn2.Cgs1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Cgs1.B3.BondCon1.d = Nand1.Mn2.Cgs1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Cgs1.Cgs1.u[5] = Nand1.Mn2.Cgs1.u[5];
//   Nand1.Mn2.Cgs1.Cgs1.u[4] = Nand1.Mn2.Cgs1.u[4];
//   Nand1.Mn2.Cgs1.Cgs1.u[3] = Nand1.Mn2.Cgs1.u[3];
//   Nand1.Mn2.Cgs1.Cgs1.u[2] = Nand1.Mn2.Cgs1.u[2];
//   Nand1.Mn2.Cgs1.Cgs1.u[1] = Nand1.Mn2.Cgs1.u[1];
//   Nand1.Mn2.Cgs1.B1.BondCon2.e = Nand1.Mn2.Cgs1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Cgs1.B1.BondCon2.f = Nand1.Mn2.Cgs1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Cgs1.B1.BondCon2.d = Nand1.Mn2.Cgs1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Cgs1.B2.BondCon1.e = Nand1.Mn2.Cgs1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Cgs1.B2.BondCon1.f = Nand1.Mn2.Cgs1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Cgs1.B2.BondCon1.d = Nand1.Mn2.Cgs1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Cgs1.B1.BondCon1.e = Nand1.Mn2.Cgs1.El2BG1.BondCon1.e;
//   Nand1.Mn2.Cgs1.B1.BondCon1.f = Nand1.Mn2.Cgs1.El2BG1.BondCon1.f;
//   Nand1.Mn2.Cgs1.B1.BondCon1.d = Nand1.Mn2.Cgs1.El2BG1.BondCon1.d;
//   Nand1.Mn2.Cgs1.B2.BondCon2.e = Nand1.Mn2.Cgs1.BG2El1.BondCon1.e;
//   Nand1.Mn2.Cgs1.B2.BondCon2.f = Nand1.Mn2.Cgs1.BG2El1.BondCon1.f;
//   Nand1.Mn2.Cgs1.B2.BondCon2.d = Nand1.Mn2.Cgs1.BG2El1.BondCon1.d;
//   Nand1.Mn2.Cgs1.El2BG1.p.v = Nand1.Mn2.Cgs1.p.v;
//   Nand1.Mn2.Cgs1.BG2El1.n.v = Nand1.Mn2.Cgs1.n.v;
//   (-Nand1.Mn2.Cgd1.p.i) + Nand1.Mn2.Cgd1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Cgd1.n.i) + Nand1.Mn2.Cgd1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Cgd1.heatPort.Q_flow) + Nand1.Mn2.Cgd1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Cgd1.Cgd1.u[5] = Nand1.Mn2.Cgd1.u[5];
//   Nand1.Mn2.Cgd1.Cgd1.u[4] = Nand1.Mn2.Cgd1.u[4];
//   Nand1.Mn2.Cgd1.Cgd1.u[3] = Nand1.Mn2.Cgd1.u[3];
//   Nand1.Mn2.Cgd1.Cgd1.u[2] = Nand1.Mn2.Cgd1.u[2];
//   Nand1.Mn2.Cgd1.Cgd1.u[1] = Nand1.Mn2.Cgd1.u[1];
//   Nand1.Mn2.Cgd1.Cgd1.u1 = Nand1.Mn2.Cgd1.vds;
//   Nand1.Mn2.Cgd1.Cgd1.u2 = Nand1.Mn2.Cgd1.vbs;
//   Nand1.Mn2.Cgd1.B3.BondCon2.e = Nand1.Mn2.Cgd1.Cgd1.BondCon1.e;
//   Nand1.Mn2.Cgd1.B3.BondCon2.f = Nand1.Mn2.Cgd1.Cgd1.BondCon1.f;
//   Nand1.Mn2.Cgd1.B3.BondCon2.d = Nand1.Mn2.Cgd1.Cgd1.BondCon1.d;
//   Nand1.Mn2.Cgd1.B3.BondCon1.e = Nand1.Mn2.Cgd1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Cgd1.B3.BondCon1.f = Nand1.Mn2.Cgd1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Cgd1.B3.BondCon1.d = Nand1.Mn2.Cgd1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Cgd1.BG2Heat1.port_b.T = Nand1.Mn2.Cgd1.heatPort.T;
//   Nand1.Mn2.Cgd1.B4.eBondCon1.e = Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Cgd1.B4.eBondCon1.f = Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Cgd1.B4.eBondCon1.d = Nand1.Mn2.Cgd1.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Cgd1.B4.fBondCon1.e = Nand1.Mn2.Cgd1.Cgd1.BondCon2.e;
//   Nand1.Mn2.Cgd1.B4.fBondCon1.f = Nand1.Mn2.Cgd1.Cgd1.BondCon2.f;
//   Nand1.Mn2.Cgd1.B4.fBondCon1.d = Nand1.Mn2.Cgd1.Cgd1.BondCon2.d;
//   Nand1.Mn2.Cgd1.B1.BondCon2.e = Nand1.Mn2.Cgd1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Cgd1.B1.BondCon2.f = Nand1.Mn2.Cgd1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Cgd1.B1.BondCon2.d = Nand1.Mn2.Cgd1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Cgd1.B2.BondCon1.e = Nand1.Mn2.Cgd1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Cgd1.B2.BondCon1.f = Nand1.Mn2.Cgd1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Cgd1.B2.BondCon1.d = Nand1.Mn2.Cgd1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Cgd1.B1.BondCon1.e = Nand1.Mn2.Cgd1.El2BG1.BondCon1.e;
//   Nand1.Mn2.Cgd1.B1.BondCon1.f = Nand1.Mn2.Cgd1.El2BG1.BondCon1.f;
//   Nand1.Mn2.Cgd1.B1.BondCon1.d = Nand1.Mn2.Cgd1.El2BG1.BondCon1.d;
//   Nand1.Mn2.Cgd1.B2.BondCon2.e = Nand1.Mn2.Cgd1.BG2El1.BondCon1.e;
//   Nand1.Mn2.Cgd1.B2.BondCon2.f = Nand1.Mn2.Cgd1.BG2El1.BondCon1.f;
//   Nand1.Mn2.Cgd1.B2.BondCon2.d = Nand1.Mn2.Cgd1.BG2El1.BondCon1.d;
//   Nand1.Mn2.Cgd1.El2BG1.p.v = Nand1.Mn2.Cgd1.p.v;
//   Nand1.Mn2.Cgd1.BG2El1.n.v = Nand1.Mn2.Cgd1.n.v;
//   (-Nand1.Mn2.Cgb1.p.i) + Nand1.Mn2.Cgb1.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Cgb1.n.i) + Nand1.Mn2.Cgb1.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Cgb1.heatPort.Q_flow) + Nand1.Mn2.Cgb1.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Cgb1.Cgb1.u[5] = Nand1.Mn2.Cgb1.u[5];
//   Nand1.Mn2.Cgb1.Cgb1.u[4] = Nand1.Mn2.Cgb1.u[4];
//   Nand1.Mn2.Cgb1.Cgb1.u[3] = Nand1.Mn2.Cgb1.u[3];
//   Nand1.Mn2.Cgb1.Cgb1.u[2] = Nand1.Mn2.Cgb1.u[2];
//   Nand1.Mn2.Cgb1.Cgb1.u[1] = Nand1.Mn2.Cgb1.u[1];
//   Nand1.Mn2.Cgb1.Cgb1.u1 = Nand1.Mn2.Cgb1.vds;
//   Nand1.Mn2.Cgb1.Cgb1.u2 = Nand1.Mn2.Cgb1.vbs;
//   Nand1.Mn2.Cgb1.B3.BondCon2.e = Nand1.Mn2.Cgb1.Cgb1.BondCon1.e;
//   Nand1.Mn2.Cgb1.B3.BondCon2.f = Nand1.Mn2.Cgb1.Cgb1.BondCon1.f;
//   Nand1.Mn2.Cgb1.B3.BondCon2.d = Nand1.Mn2.Cgb1.Cgb1.BondCon1.d;
//   Nand1.Mn2.Cgb1.B3.BondCon1.e = Nand1.Mn2.Cgb1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Cgb1.B3.BondCon1.f = Nand1.Mn2.Cgb1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Cgb1.B3.BondCon1.d = Nand1.Mn2.Cgb1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Cgb1.BG2Heat1.port_b.T = Nand1.Mn2.Cgb1.heatPort.T;
//   Nand1.Mn2.Cgb1.B4.eBondCon1.e = Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Cgb1.B4.eBondCon1.f = Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Cgb1.B4.eBondCon1.d = Nand1.Mn2.Cgb1.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Cgb1.B4.fBondCon1.e = Nand1.Mn2.Cgb1.Cgb1.BondCon2.e;
//   Nand1.Mn2.Cgb1.B4.fBondCon1.f = Nand1.Mn2.Cgb1.Cgb1.BondCon2.f;
//   Nand1.Mn2.Cgb1.B4.fBondCon1.d = Nand1.Mn2.Cgb1.Cgb1.BondCon2.d;
//   Nand1.Mn2.Cgb1.B1.BondCon2.e = Nand1.Mn2.Cgb1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Cgb1.B1.BondCon2.f = Nand1.Mn2.Cgb1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Cgb1.B1.BondCon2.d = Nand1.Mn2.Cgb1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Cgb1.B2.BondCon1.e = Nand1.Mn2.Cgb1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Cgb1.B2.BondCon1.f = Nand1.Mn2.Cgb1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Cgb1.B2.BondCon1.d = Nand1.Mn2.Cgb1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Cgb1.B1.BondCon1.e = Nand1.Mn2.Cgb1.El2BG1.BondCon1.e;
//   Nand1.Mn2.Cgb1.B1.BondCon1.f = Nand1.Mn2.Cgb1.El2BG1.BondCon1.f;
//   Nand1.Mn2.Cgb1.B1.BondCon1.d = Nand1.Mn2.Cgb1.El2BG1.BondCon1.d;
//   Nand1.Mn2.Cgb1.B2.BondCon2.e = Nand1.Mn2.Cgb1.BG2El1.BondCon1.e;
//   Nand1.Mn2.Cgb1.B2.BondCon2.f = Nand1.Mn2.Cgb1.BG2El1.BondCon1.f;
//   Nand1.Mn2.Cgb1.B2.BondCon2.d = Nand1.Mn2.Cgb1.BG2El1.BondCon1.d;
//   Nand1.Mn2.Cgb1.El2BG1.p.v = Nand1.Mn2.Cgb1.p.v;
//   Nand1.Mn2.Cgb1.BG2El1.n.v = Nand1.Mn2.Cgb1.n.v;
//   (-Nand1.Mn2.D.i) + Nand1.Mn2.Vds.p.i + Nand1.Mn2.Rd.n.i = 0.0;
//   (-Nand1.Mn2.S.i) + Nand1.Mn2.Vds.n.i + Nand1.Mn2.Vbs.n.i + Nand1.Mn2.Rs.n.i = 0.0;
//   (-Nand1.Mn2.Vds.p.i) + Nand1.Mn2.Vds.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Vds.n.i) + Nand1.Mn2.Vds.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Vds.B3.BondCon2.e = Nand1.Mn2.Vds.De1.BondCon1.e;
//   Nand1.Mn2.Vds.B3.BondCon2.f = Nand1.Mn2.Vds.De1.BondCon1.f;
//   Nand1.Mn2.Vds.B3.BondCon2.d = Nand1.Mn2.Vds.De1.BondCon1.d;
//   Nand1.Mn2.Vds.B3.BondCon1.e = Nand1.Mn2.Vds.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Vds.B3.BondCon1.f = Nand1.Mn2.Vds.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Vds.B3.BondCon1.d = Nand1.Mn2.Vds.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Vds.De1.OutPort1 = Nand1.Mn2.Vds.V;
//   Nand1.Mn2.Vds.B1.BondCon2.e = Nand1.Mn2.Vds.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Vds.B1.BondCon2.f = Nand1.Mn2.Vds.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Vds.B1.BondCon2.d = Nand1.Mn2.Vds.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Vds.B2.BondCon1.e = Nand1.Mn2.Vds.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Vds.B2.BondCon1.f = Nand1.Mn2.Vds.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Vds.B2.BondCon1.d = Nand1.Mn2.Vds.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Vds.B1.BondCon1.e = Nand1.Mn2.Vds.El2BG1.BondCon1.e;
//   Nand1.Mn2.Vds.B1.BondCon1.f = Nand1.Mn2.Vds.El2BG1.BondCon1.f;
//   Nand1.Mn2.Vds.B1.BondCon1.d = Nand1.Mn2.Vds.El2BG1.BondCon1.d;
//   Nand1.Mn2.Vds.B2.BondCon2.e = Nand1.Mn2.Vds.BG2El1.BondCon1.e;
//   Nand1.Mn2.Vds.B2.BondCon2.f = Nand1.Mn2.Vds.BG2El1.BondCon1.f;
//   Nand1.Mn2.Vds.B2.BondCon2.d = Nand1.Mn2.Vds.BG2El1.BondCon1.d;
//   Nand1.Mn2.Vds.El2BG1.p.v = Nand1.Mn2.Vds.p.v;
//   Nand1.Mn2.Vds.BG2El1.n.v = Nand1.Mn2.Vds.n.v;
//   (-Nand1.Mn2.Vbs.p.i) + Nand1.Mn2.Vbs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Vbs.n.i) + Nand1.Mn2.Vbs.BG2El1.n.i = 0.0;
//   Nand1.Mn2.Vbs.B3.BondCon2.e = Nand1.Mn2.Vbs.De1.BondCon1.e;
//   Nand1.Mn2.Vbs.B3.BondCon2.f = Nand1.Mn2.Vbs.De1.BondCon1.f;
//   Nand1.Mn2.Vbs.B3.BondCon2.d = Nand1.Mn2.Vbs.De1.BondCon1.d;
//   Nand1.Mn2.Vbs.B3.BondCon1.e = Nand1.Mn2.Vbs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Vbs.B3.BondCon1.f = Nand1.Mn2.Vbs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Vbs.B3.BondCon1.d = Nand1.Mn2.Vbs.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Vbs.De1.OutPort1 = Nand1.Mn2.Vbs.V;
//   Nand1.Mn2.Vbs.B1.BondCon2.e = Nand1.Mn2.Vbs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Vbs.B1.BondCon2.f = Nand1.Mn2.Vbs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Vbs.B1.BondCon2.d = Nand1.Mn2.Vbs.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Vbs.B2.BondCon1.e = Nand1.Mn2.Vbs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Vbs.B2.BondCon1.f = Nand1.Mn2.Vbs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Vbs.B2.BondCon1.d = Nand1.Mn2.Vbs.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Vbs.B1.BondCon1.e = Nand1.Mn2.Vbs.El2BG1.BondCon1.e;
//   Nand1.Mn2.Vbs.B1.BondCon1.f = Nand1.Mn2.Vbs.El2BG1.BondCon1.f;
//   Nand1.Mn2.Vbs.B1.BondCon1.d = Nand1.Mn2.Vbs.El2BG1.BondCon1.d;
//   Nand1.Mn2.Vbs.B2.BondCon2.e = Nand1.Mn2.Vbs.BG2El1.BondCon1.e;
//   Nand1.Mn2.Vbs.B2.BondCon2.f = Nand1.Mn2.Vbs.BG2El1.BondCon1.f;
//   Nand1.Mn2.Vbs.B2.BondCon2.d = Nand1.Mn2.Vbs.BG2El1.BondCon1.d;
//   Nand1.Mn2.Vbs.El2BG1.p.v = Nand1.Mn2.Vbs.p.v;
//   Nand1.Mn2.Vbs.BG2El1.n.v = Nand1.Mn2.Vbs.n.v;
//   (-Nand1.Mn2.Rd.p.i) + Nand1.Mn2.Rd.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Rd.n.i) + Nand1.Mn2.Rd.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Rd.heatPort.Q_flow) + Nand1.Mn2.Rd.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Rd.BG2Heat1.port_b.T = Nand1.Mn2.Rd.heatPort.T;
//   Nand1.Mn2.Rd.B4.eBondCon1.e = Nand1.Mn2.Rd.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Rd.B4.eBondCon1.f = Nand1.Mn2.Rd.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Rd.B4.eBondCon1.d = Nand1.Mn2.Rd.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Rd.B4.fBondCon1.e = Nand1.Mn2.Rd.RM1.BondCon2.e;
//   Nand1.Mn2.Rd.B4.fBondCon1.f = Nand1.Mn2.Rd.RM1.BondCon2.f;
//   Nand1.Mn2.Rd.B4.fBondCon1.d = Nand1.Mn2.Rd.RM1.BondCon2.d;
//   Nand1.Mn2.Rd.B3.BondCon2.e = Nand1.Mn2.Rd.RM1.BondCon1.e;
//   Nand1.Mn2.Rd.B3.BondCon2.f = Nand1.Mn2.Rd.RM1.BondCon1.f;
//   Nand1.Mn2.Rd.B3.BondCon2.d = Nand1.Mn2.Rd.RM1.BondCon1.d;
//   Nand1.Mn2.Rd.B3.BondCon1.e = Nand1.Mn2.Rd.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Rd.B3.BondCon1.f = Nand1.Mn2.Rd.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Rd.B3.BondCon1.d = Nand1.Mn2.Rd.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Rd.B1.BondCon2.e = Nand1.Mn2.Rd.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Rd.B1.BondCon2.f = Nand1.Mn2.Rd.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Rd.B1.BondCon2.d = Nand1.Mn2.Rd.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Rd.B2.BondCon1.e = Nand1.Mn2.Rd.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Rd.B2.BondCon1.f = Nand1.Mn2.Rd.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Rd.B2.BondCon1.d = Nand1.Mn2.Rd.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Rd.B1.BondCon1.e = Nand1.Mn2.Rd.El2BG1.BondCon1.e;
//   Nand1.Mn2.Rd.B1.BondCon1.f = Nand1.Mn2.Rd.El2BG1.BondCon1.f;
//   Nand1.Mn2.Rd.B1.BondCon1.d = Nand1.Mn2.Rd.El2BG1.BondCon1.d;
//   Nand1.Mn2.Rd.B2.BondCon2.e = Nand1.Mn2.Rd.BG2El1.BondCon1.e;
//   Nand1.Mn2.Rd.B2.BondCon2.f = Nand1.Mn2.Rd.BG2El1.BondCon1.f;
//   Nand1.Mn2.Rd.B2.BondCon2.d = Nand1.Mn2.Rd.BG2El1.BondCon1.d;
//   Nand1.Mn2.Rd.El2BG1.p.v = Nand1.Mn2.Rd.p.v;
//   Nand1.Mn2.Rd.BG2El1.n.v = Nand1.Mn2.Rd.n.v;
//   (-Nand1.Mn2.Rs.p.i) + Nand1.Mn2.Rs.El2BG1.p.i = 0.0;
//   (-Nand1.Mn2.Rs.n.i) + Nand1.Mn2.Rs.BG2El1.n.i = 0.0;
//   (-Nand1.Mn2.Rs.heatPort.Q_flow) + Nand1.Mn2.Rs.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Rs.BG2Heat1.port_b.T = Nand1.Mn2.Rs.heatPort.T;
//   Nand1.Mn2.Rs.B4.eBondCon1.e = Nand1.Mn2.Rs.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Rs.B4.eBondCon1.f = Nand1.Mn2.Rs.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Rs.B4.eBondCon1.d = Nand1.Mn2.Rs.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Rs.B4.fBondCon1.e = Nand1.Mn2.Rs.RM1.BondCon2.e;
//   Nand1.Mn2.Rs.B4.fBondCon1.f = Nand1.Mn2.Rs.RM1.BondCon2.f;
//   Nand1.Mn2.Rs.B4.fBondCon1.d = Nand1.Mn2.Rs.RM1.BondCon2.d;
//   Nand1.Mn2.Rs.B3.BondCon2.e = Nand1.Mn2.Rs.RM1.BondCon1.e;
//   Nand1.Mn2.Rs.B3.BondCon2.f = Nand1.Mn2.Rs.RM1.BondCon1.f;
//   Nand1.Mn2.Rs.B3.BondCon2.d = Nand1.Mn2.Rs.RM1.BondCon1.d;
//   Nand1.Mn2.Rs.B3.BondCon1.e = Nand1.Mn2.Rs.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Rs.B3.BondCon1.f = Nand1.Mn2.Rs.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Rs.B3.BondCon1.d = Nand1.Mn2.Rs.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Rs.B1.BondCon2.e = Nand1.Mn2.Rs.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Rs.B1.BondCon2.f = Nand1.Mn2.Rs.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Rs.B1.BondCon2.d = Nand1.Mn2.Rs.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Rs.B2.BondCon1.e = Nand1.Mn2.Rs.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Rs.B2.BondCon1.f = Nand1.Mn2.Rs.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Rs.B2.BondCon1.d = Nand1.Mn2.Rs.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Rs.B1.BondCon1.e = Nand1.Mn2.Rs.El2BG1.BondCon1.e;
//   Nand1.Mn2.Rs.B1.BondCon1.f = Nand1.Mn2.Rs.El2BG1.BondCon1.f;
//   Nand1.Mn2.Rs.B1.BondCon1.d = Nand1.Mn2.Rs.El2BG1.BondCon1.d;
//   Nand1.Mn2.Rs.B2.BondCon2.e = Nand1.Mn2.Rs.BG2El1.BondCon1.e;
//   Nand1.Mn2.Rs.B2.BondCon2.f = Nand1.Mn2.Rs.BG2El1.BondCon1.f;
//   Nand1.Mn2.Rs.B2.BondCon2.d = Nand1.Mn2.Rs.BG2El1.BondCon1.d;
//   Nand1.Mn2.Rs.El2BG1.p.v = Nand1.Mn2.Rs.p.v;
//   Nand1.Mn2.Rs.BG2El1.n.v = Nand1.Mn2.Rs.n.v;
//   Nand1.Mn2.T_nom.BG2Heat1.port_b.Q_flow + (-Nand1.Mn2.T_nom.port.Q_flow) = 0.0;
//   Nand1.Mn2.T_nom.port.Q_flow + Nand1.Mn2.Sw1.n1.Q_flow = 0.0;
//   Nand1.Mn2.T_nom.B1.fBondCon1.e = Nand1.Mn2.T_nom.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.T_nom.B1.fBondCon1.f = Nand1.Mn2.T_nom.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.T_nom.B1.fBondCon1.d = Nand1.Mn2.T_nom.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.T_nom.B1.eBondCon1.e = Nand1.Mn2.T_nom.Tabs.BondCon1.e;
//   Nand1.Mn2.T_nom.B1.eBondCon1.f = Nand1.Mn2.T_nom.Tabs.BondCon1.f;
//   Nand1.Mn2.T_nom.B1.eBondCon1.d = Nand1.Mn2.T_nom.Tabs.BondCon1.d;
//   Nand1.Mn2.T_nom.BG2Heat1.port_b.T = Nand1.Mn2.T_nom.port.T;
//   (-Nand1.Mn2.heatPort.Q_flow) + Nand1.Mn2.Sw1.n2.Q_flow = 0.0;
//   (-Nand1.Mn2.Sw1.p.Q_flow) + Nand1.Mn2.Sw1.Heat2BG1.port_a.Q_flow = 0.0;
//   (-Nand1.Mn2.Sw1.n1.Q_flow) + Nand1.Mn2.Sw1.BG2Heat1.port_b.Q_flow = 0.0;
//   (-Nand1.Mn2.Sw1.n2.Q_flow) + Nand1.Mn2.Sw1.BG2Heat2.port_b.Q_flow = 0.0;
//   Nand1.Mn2.Sw1.Sw1.Sw1.BooleanInPort1 = Nand1.Mn2.Sw1.Sw1.control;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon2.e = Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon2.f = Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon2.d = Nand1.Mn2.Sw1.Sw1.Sw1.BondCon1.d;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon1.e = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.e;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon1.f = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.f;
//   Nand1.Mn2.Sw1.Sw1.B3.BondCon1.d = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon3.d;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon1.e = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon1.f = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon1.d = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon1.d;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.e = Nand1.Mn2.Sw1.Sw1.p.e;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.f = Nand1.Mn2.Sw1.Sw1.p.f;
//   Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon2.d = Nand1.Mn2.Sw1.Sw1.p.d;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon1.e = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.e;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon1.f = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.f;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon1.d = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon2.d;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon2.e = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon2.f = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon2.d = Nand1.Mn2.Sw1.Sw1.J1p3_1.BondCon1.d;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon1.e = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.e;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon1.f = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.f;
//   Nand1.Mn2.Sw1.Sw1.B1.BondCon1.d = Nand1.Mn2.Sw1.Sw1.J0p3_1.BondCon3.d;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.e = Nand1.Mn2.Sw1.Sw1.n2.e;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.f = Nand1.Mn2.Sw1.Sw1.n2.f;
//   Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon2.d = Nand1.Mn2.Sw1.Sw1.n2.d;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon2.e = Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon2.f = Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B2.BondCon2.d = Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon1.d;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.e = Nand1.Mn2.Sw1.Sw1.n1.e;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.f = Nand1.Mn2.Sw1.Sw1.n1.f;
//   Nand1.Mn2.Sw1.Sw1.j0p2_2.BondCon2.d = Nand1.Mn2.Sw1.Sw1.n1.d;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon2.e = Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.e;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon2.f = Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.f;
//   Nand1.Mn2.Sw1.Sw1.B4.BondCon2.d = Nand1.Mn2.Sw1.Sw1.j0p2_1.BondCon1.d;
//   Nand1.Mn2.Sw1.B3.BondCon1.e = Nand1.Mn2.Sw1.Sw1.n1.e;
//   Nand1.Mn2.Sw1.B3.BondCon1.f = Nand1.Mn2.Sw1.Sw1.n1.f;
//   Nand1.Mn2.Sw1.B3.BondCon1.d = Nand1.Mn2.Sw1.Sw1.n1.d;
//   Nand1.Mn2.Sw1.B2.BondCon1.e = Nand1.Mn2.Sw1.Sw1.n2.e;
//   Nand1.Mn2.Sw1.B2.BondCon1.f = Nand1.Mn2.Sw1.Sw1.n2.f;
//   Nand1.Mn2.Sw1.B2.BondCon1.d = Nand1.Mn2.Sw1.Sw1.n2.d;
//   Nand1.Mn2.Sw1.B1.BondCon2.e = Nand1.Mn2.Sw1.Sw1.p.e;
//   Nand1.Mn2.Sw1.B1.BondCon2.f = Nand1.Mn2.Sw1.Sw1.p.f;
//   Nand1.Mn2.Sw1.B1.BondCon2.d = Nand1.Mn2.Sw1.Sw1.p.d;
//   Nand1.Mn2.Sw1.Sw1.control = Nand1.Mn2.Sw1.control;
//   Nand1.Mn2.Sw1.Heat2BG1.port_a.T = Nand1.Mn2.Sw1.p.T;
//   Nand1.Mn2.Sw1.B1.BondCon1.e = Nand1.Mn2.Sw1.Heat2BG1.BondCon1.e;
//   Nand1.Mn2.Sw1.B1.BondCon1.f = Nand1.Mn2.Sw1.Heat2BG1.BondCon1.f;
//   Nand1.Mn2.Sw1.B1.BondCon1.d = Nand1.Mn2.Sw1.Heat2BG1.BondCon1.d;
//   Nand1.Mn2.Sw1.BG2Heat1.port_b.T = Nand1.Mn2.Sw1.n1.T;
//   Nand1.Mn2.Sw1.B3.BondCon2.e = Nand1.Mn2.Sw1.BG2Heat1.BondCon1.e;
//   Nand1.Mn2.Sw1.B3.BondCon2.f = Nand1.Mn2.Sw1.BG2Heat1.BondCon1.f;
//   Nand1.Mn2.Sw1.B3.BondCon2.d = Nand1.Mn2.Sw1.BG2Heat1.BondCon1.d;
//   Nand1.Mn2.Sw1.BG2Heat2.port_b.T = Nand1.Mn2.Sw1.n2.T;
//   Nand1.Mn2.Sw1.B2.BondCon2.e = Nand1.Mn2.Sw1.BG2Heat2.BondCon1.e;
//   Nand1.Mn2.Sw1.B2.BondCon2.f = Nand1.Mn2.Sw1.BG2Heat2.BondCon1.f;
//   Nand1.Mn2.Sw1.B2.BondCon2.d = Nand1.Mn2.Sw1.BG2Heat2.BondCon1.d;
//   Nand1.Mn2.Cgb1.heatPort.T = Nand1.Mn2.Cgd1.heatPort.T;
//   Nand1.Mn2.Cgb1.heatPort.T = Nand1.Mn2.Cgs1.heatPort.T;
//   Nand1.Mn2.Cgb1.heatPort.T = Nand1.Mn2.Mni.heatPort.T;
//   Nand1.Mn2.Cgb1.heatPort.T = Nand1.Mn2.Rd.heatPort.T;
//   Nand1.Mn2.Cgb1.heatPort.T = Nand1.Mn2.Rs.heatPort.T;
//   Nand1.Mn2.Cgb1.heatPort.T = Nand1.Mn2.Sw1.p.T;
//   Nand1.Mn2.Sw1.n2.T = Nand1.Mn2.heatPort.T;
//   Nand1.Mn2.Sw1.n1.T = Nand1.Mn2.T_nom.port.T;
//   Nand1.Mn2.B.v = Nand1.Mn2.Cgb1.n.v;
//   Nand1.Mn2.B.v = Nand1.Mn2.Mni.B.v;
//   Nand1.Mn2.B.v = Nand1.Mn2.Vbs.p.v;
//   Nand1.Mn2.Cgb1.p.v = Nand1.Mn2.Cgd1.p.v;
//   Nand1.Mn2.Cgb1.p.v = Nand1.Mn2.Cgs1.p.v;
//   Nand1.Mn2.Cgb1.p.v = Nand1.Mn2.G.v;
//   Nand1.Mn2.Cgb1.p.v = Nand1.Mn2.Mni.G.v;
//   Nand1.Mn2.D.v = Nand1.Mn2.Rd.n.v;
//   Nand1.Mn2.D.v = Nand1.Mn2.Vds.p.v;
//   Nand1.Mn2.Rs.n.v = Nand1.Mn2.S.v;
//   Nand1.Mn2.Rs.n.v = Nand1.Mn2.Vbs.n.v;
//   Nand1.Mn2.Rs.n.v = Nand1.Mn2.Vds.n.v;
//   Nand1.Mn2.Cgb1.vds = Nand1.Mn2.Cgd1.vds;
//   Nand1.Mn2.Cgb1.vds = Nand1.Mn2.Cgs1.vds;
//   Nand1.Mn2.Cgb1.vds = Nand1.Mn2.Vds.V;
//   Nand1.Mn2.Cgb1.vbs = Nand1.Mn2.Cgd1.vbs;
//   Nand1.Mn2.Cgb1.vbs = Nand1.Mn2.Cgs1.vbs;
//   Nand1.Mn2.Cgb1.vbs = Nand1.Mn2.Vbs.V;
//   Nand1.Mn2.Cgd1.n.v = Nand1.Mn2.Mni.D.v;
//   Nand1.Mn2.Cgd1.n.v = Nand1.Mn2.Rd.p.v;
//   Nand1.Mn2.Cgs1.n.v = Nand1.Mn2.Mni.S.v;
//   Nand1.Mn2.Cgs1.n.v = Nand1.Mn2.Rs.p.v;
//   Nand1.Mn2.Cgb1.u[5] = Nand1.Mn2.Cgd1.u[5];
//   Nand1.Mn2.Cgb1.u[5] = Nand1.Mn2.Cgs1.u[5];
//   Nand1.Mn2.Cgb1.u[5] = Nand1.Mn2.Mni.y1[5];
//   Nand1.Mn2.Cgb1.u[4] = Nand1.Mn2.Cgd1.u[4];
//   Nand1.Mn2.Cgb1.u[4] = Nand1.Mn2.Cgs1.u[4];
//   Nand1.Mn2.Cgb1.u[4] = Nand1.Mn2.Mni.y1[4];
//   Nand1.Mn2.Cgb1.u[3] = Nand1.Mn2.Cgd1.u[3];
//   Nand1.Mn2.Cgb1.u[3] = Nand1.Mn2.Cgs1.u[3];
//   Nand1.Mn2.Cgb1.u[3] = Nand1.Mn2.Mni.y1[3];
//   Nand1.Mn2.Cgb1.u[2] = Nand1.Mn2.Cgd1.u[2];
//   Nand1.Mn2.Cgb1.u[2] = Nand1.Mn2.Cgs1.u[2];
//   Nand1.Mn2.Cgb1.u[2] = Nand1.Mn2.Mni.y1[2];
//   Nand1.Mn2.Cgb1.u[1] = Nand1.Mn2.Cgd1.u[1];
//   Nand1.Mn2.Cgb1.u[1] = Nand1.Mn2.Cgs1.u[1];
//   Nand1.Mn2.Cgb1.u[1] = Nand1.Mn2.Mni.y1[1];
//   (-Nand1.Gnd1.p.i) + Nand1.Gnd1.El2BG1.p.i = 0.0;
//   Nand1.Gnd1.El2BG1.p.v = Nand1.Gnd1.p.v;
//   Nand1.Gnd1.B1.fBondCon1.e = Nand1.Gnd1.El2BG1.BondCon1.e;
//   Nand1.Gnd1.B1.fBondCon1.f = Nand1.Gnd1.El2BG1.BondCon1.f;
//   Nand1.Gnd1.B1.fBondCon1.d = Nand1.Gnd1.El2BG1.BondCon1.d;
//   Nand1.Gnd1.B1.eBondCon1.e = Nand1.Gnd1.V0.BondCon1.e;
//   Nand1.Gnd1.B1.eBondCon1.f = Nand1.Gnd1.V0.BondCon1.f;
//   Nand1.Gnd1.B1.eBondCon1.d = Nand1.Gnd1.V0.BondCon1.d;
//   Nand1.Gnd2.p.i + Nand1.C4.n.i = 0.0;
//   (-Nand1.Gnd2.p.i) + Nand1.Gnd2.El2BG1.p.i = 0.0;
//   Nand1.Gnd2.El2BG1.p.v = Nand1.Gnd2.p.v;
//   Nand1.Gnd2.B1.fBondCon1.e = Nand1.Gnd2.El2BG1.BondCon1.e;
//   Nand1.Gnd2.B1.fBondCon1.f = Nand1.Gnd2.El2BG1.BondCon1.f;
//   Nand1.Gnd2.B1.fBondCon1.d = Nand1.Gnd2.El2BG1.BondCon1.d;
//   Nand1.Gnd2.B1.eBondCon1.e = Nand1.Gnd2.V0.BondCon1.e;
//   Nand1.Gnd2.B1.eBondCon1.f = Nand1.Gnd2.V0.BondCon1.f;
//   Nand1.Gnd2.B1.eBondCon1.d = Nand1.Gnd2.V0.BondCon1.d;
//   Nand1.Gnd3.p.i + Nand1.C7.n.i = 0.0;
//   (-Nand1.Gnd3.p.i) + Nand1.Gnd3.El2BG1.p.i = 0.0;
//   Nand1.Gnd3.El2BG1.p.v = Nand1.Gnd3.p.v;
//   Nand1.Gnd3.B1.fBondCon1.e = Nand1.Gnd3.El2BG1.BondCon1.e;
//   Nand1.Gnd3.B1.fBondCon1.f = Nand1.Gnd3.El2BG1.BondCon1.f;
//   Nand1.Gnd3.B1.fBondCon1.d = Nand1.Gnd3.El2BG1.BondCon1.d;
//   Nand1.Gnd3.B1.eBondCon1.e = Nand1.Gnd3.V0.BondCon1.e;
//   Nand1.Gnd3.B1.eBondCon1.f = Nand1.Gnd3.V0.BondCon1.f;
//   Nand1.Gnd3.B1.eBondCon1.d = Nand1.Gnd3.V0.BondCon1.d;
//   (-Nand1.Gnd4.p.i) + Nand1.Gnd4.El2BG1.p.i = 0.0;
//   Nand1.Gnd4.El2BG1.p.v = Nand1.Gnd4.p.v;
//   Nand1.Gnd4.B1.fBondCon1.e = Nand1.Gnd4.El2BG1.BondCon1.e;
//   Nand1.Gnd4.B1.fBondCon1.f = Nand1.Gnd4.El2BG1.BondCon1.f;
//   Nand1.Gnd4.B1.fBondCon1.d = Nand1.Gnd4.El2BG1.BondCon1.d;
//   Nand1.Gnd4.B1.eBondCon1.e = Nand1.Gnd4.V0.BondCon1.e;
//   Nand1.Gnd4.B1.eBondCon1.f = Nand1.Gnd4.V0.BondCon1.f;
//   Nand1.Gnd4.B1.eBondCon1.d = Nand1.Gnd4.V0.BondCon1.d;
//   (-Nand1.C4.p.i) + Nand1.C4.El2BG1.p.i = 0.0;
//   (-Nand1.C4.n.i) + Nand1.C4.BG2El1.n.i = 0.0;
//   Nand1.C4.Sw1.Sw1.BooleanInPort1 = Nand1.C4.Sw1.control;
//   Nand1.C4.Sw1.B3.BondCon2.e = Nand1.C4.Sw1.Sw1.BondCon1.e;
//   Nand1.C4.Sw1.B3.BondCon2.f = Nand1.C4.Sw1.Sw1.BondCon1.f;
//   Nand1.C4.Sw1.B3.BondCon2.d = Nand1.C4.Sw1.Sw1.BondCon1.d;
//   Nand1.C4.Sw1.B3.BondCon1.e = Nand1.C4.Sw1.J1p3_1.BondCon3.e;
//   Nand1.C4.Sw1.B3.BondCon1.f = Nand1.C4.Sw1.J1p3_1.BondCon3.f;
//   Nand1.C4.Sw1.B3.BondCon1.d = Nand1.C4.Sw1.J1p3_1.BondCon3.d;
//   Nand1.C4.Sw1.B4.BondCon1.e = Nand1.C4.Sw1.J0p3_1.BondCon1.e;
//   Nand1.C4.Sw1.B4.BondCon1.f = Nand1.C4.Sw1.J0p3_1.BondCon1.f;
//   Nand1.C4.Sw1.B4.BondCon1.d = Nand1.C4.Sw1.J0p3_1.BondCon1.d;
//   Nand1.C4.Sw1.J0p3_1.BondCon2.e = Nand1.C4.Sw1.p.e;
//   Nand1.C4.Sw1.J0p3_1.BondCon2.f = Nand1.C4.Sw1.p.f;
//   Nand1.C4.Sw1.J0p3_1.BondCon2.d = Nand1.C4.Sw1.p.d;
//   Nand1.C4.Sw1.B2.BondCon1.e = Nand1.C4.Sw1.J1p3_1.BondCon2.e;
//   Nand1.C4.Sw1.B2.BondCon1.f = Nand1.C4.Sw1.J1p3_1.BondCon2.f;
//   Nand1.C4.Sw1.B2.BondCon1.d = Nand1.C4.Sw1.J1p3_1.BondCon2.d;
//   Nand1.C4.Sw1.B1.BondCon2.e = Nand1.C4.Sw1.J1p3_1.BondCon1.e;
//   Nand1.C4.Sw1.B1.BondCon2.f = Nand1.C4.Sw1.J1p3_1.BondCon1.f;
//   Nand1.C4.Sw1.B1.BondCon2.d = Nand1.C4.Sw1.J1p3_1.BondCon1.d;
//   Nand1.C4.Sw1.B1.BondCon1.e = Nand1.C4.Sw1.J0p3_1.BondCon3.e;
//   Nand1.C4.Sw1.B1.BondCon1.f = Nand1.C4.Sw1.J0p3_1.BondCon3.f;
//   Nand1.C4.Sw1.B1.BondCon1.d = Nand1.C4.Sw1.J0p3_1.BondCon3.d;
//   Nand1.C4.Sw1.j0p2_1.BondCon2.e = Nand1.C4.Sw1.n2.e;
//   Nand1.C4.Sw1.j0p2_1.BondCon2.f = Nand1.C4.Sw1.n2.f;
//   Nand1.C4.Sw1.j0p2_1.BondCon2.d = Nand1.C4.Sw1.n2.d;
//   Nand1.C4.Sw1.B2.BondCon2.e = Nand1.C4.Sw1.j0p2_2.BondCon1.e;
//   Nand1.C4.Sw1.B2.BondCon2.f = Nand1.C4.Sw1.j0p2_2.BondCon1.f;
//   Nand1.C4.Sw1.B2.BondCon2.d = Nand1.C4.Sw1.j0p2_2.BondCon1.d;
//   Nand1.C4.Sw1.j0p2_2.BondCon2.e = Nand1.C4.Sw1.n1.e;
//   Nand1.C4.Sw1.j0p2_2.BondCon2.f = Nand1.C4.Sw1.n1.f;
//   Nand1.C4.Sw1.j0p2_2.BondCon2.d = Nand1.C4.Sw1.n1.d;
//   Nand1.C4.Sw1.B4.BondCon2.e = Nand1.C4.Sw1.j0p2_1.BondCon1.e;
//   Nand1.C4.Sw1.B4.BondCon2.f = Nand1.C4.Sw1.j0p2_1.BondCon1.f;
//   Nand1.C4.Sw1.B4.BondCon2.d = Nand1.C4.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.C4.heatPort.Q_flow) + Nand1.C4.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.C4.BG2Heat1.port_b.T = Nand1.C4.heatPort.T;
//   Nand1.C4.B5.eBondCon1.e = Nand1.C4.BG2Heat1.BondCon1.e;
//   Nand1.C4.B5.eBondCon1.f = Nand1.C4.BG2Heat1.BondCon1.f;
//   Nand1.C4.B5.eBondCon1.d = Nand1.C4.BG2Heat1.BondCon1.d;
//   Nand1.C4.B5.fBondCon1.e = Nand1.C4.Sw1.n2.e;
//   Nand1.C4.B5.fBondCon1.f = Nand1.C4.Sw1.n2.f;
//   Nand1.C4.B5.fBondCon1.d = Nand1.C4.Sw1.n2.d;
//   Nand1.C4.B6.fBondCon1.e = Nand1.C4.Sw1.n1.e;
//   Nand1.C4.B6.fBondCon1.f = Nand1.C4.Sw1.n1.f;
//   Nand1.C4.B6.fBondCon1.d = Nand1.C4.Sw1.n1.d;
//   Nand1.C4.B4.eBondCon1.e = Nand1.C4.Sw1.p.e;
//   Nand1.C4.B4.eBondCon1.f = Nand1.C4.Sw1.p.f;
//   Nand1.C4.B4.eBondCon1.d = Nand1.C4.Sw1.p.d;
//   Nand1.C4.B4.fBondCon1.e = Nand1.C4.C1.BondCon2.e;
//   Nand1.C4.B4.fBondCon1.f = Nand1.C4.C1.BondCon2.f;
//   Nand1.C4.B4.fBondCon1.d = Nand1.C4.C1.BondCon2.d;
//   Nand1.C4.B3.BondCon2.e = Nand1.C4.C1.BondCon1.e;
//   Nand1.C4.B3.BondCon2.f = Nand1.C4.C1.BondCon1.f;
//   Nand1.C4.B3.BondCon2.d = Nand1.C4.C1.BondCon1.d;
//   Nand1.C4.B3.BondCon1.e = Nand1.C4.J1p3_1.BondCon3.e;
//   Nand1.C4.B3.BondCon1.f = Nand1.C4.J1p3_1.BondCon3.f;
//   Nand1.C4.B3.BondCon1.d = Nand1.C4.J1p3_1.BondCon3.d;
//   Nand1.C4.B1.BondCon2.e = Nand1.C4.J1p3_1.BondCon1.e;
//   Nand1.C4.B1.BondCon2.f = Nand1.C4.J1p3_1.BondCon1.f;
//   Nand1.C4.B1.BondCon2.d = Nand1.C4.J1p3_1.BondCon1.d;
//   Nand1.C4.B2.BondCon1.e = Nand1.C4.J1p3_1.BondCon2.e;
//   Nand1.C4.B2.BondCon1.f = Nand1.C4.J1p3_1.BondCon2.f;
//   Nand1.C4.B2.BondCon1.d = Nand1.C4.J1p3_1.BondCon2.d;
//   Nand1.C4.B1.BondCon1.e = Nand1.C4.El2BG1.BondCon1.e;
//   Nand1.C4.B1.BondCon1.f = Nand1.C4.El2BG1.BondCon1.f;
//   Nand1.C4.B1.BondCon1.d = Nand1.C4.El2BG1.BondCon1.d;
//   Nand1.C4.B2.BondCon2.e = Nand1.C4.BG2El1.BondCon1.e;
//   Nand1.C4.B2.BondCon2.f = Nand1.C4.BG2El1.BondCon1.f;
//   Nand1.C4.B2.BondCon2.d = Nand1.C4.BG2El1.BondCon1.d;
//   Nand1.C4.B6.eBondCon1.e = Nand1.C4.T_nom.BondCon1.e;
//   Nand1.C4.B6.eBondCon1.f = Nand1.C4.T_nom.BondCon1.f;
//   Nand1.C4.B6.eBondCon1.d = Nand1.C4.T_nom.BondCon1.d;
//   Nand1.C4.El2BG1.p.v = Nand1.C4.p.v;
//   Nand1.C4.BG2El1.n.v = Nand1.C4.n.v;
//   (-Nand1.C7.p.i) + Nand1.C7.El2BG1.p.i = 0.0;
//   (-Nand1.C7.n.i) + Nand1.C7.BG2El1.n.i = 0.0;
//   Nand1.C7.Sw1.Sw1.BooleanInPort1 = Nand1.C7.Sw1.control;
//   Nand1.C7.Sw1.B3.BondCon2.e = Nand1.C7.Sw1.Sw1.BondCon1.e;
//   Nand1.C7.Sw1.B3.BondCon2.f = Nand1.C7.Sw1.Sw1.BondCon1.f;
//   Nand1.C7.Sw1.B3.BondCon2.d = Nand1.C7.Sw1.Sw1.BondCon1.d;
//   Nand1.C7.Sw1.B3.BondCon1.e = Nand1.C7.Sw1.J1p3_1.BondCon3.e;
//   Nand1.C7.Sw1.B3.BondCon1.f = Nand1.C7.Sw1.J1p3_1.BondCon3.f;
//   Nand1.C7.Sw1.B3.BondCon1.d = Nand1.C7.Sw1.J1p3_1.BondCon3.d;
//   Nand1.C7.Sw1.B4.BondCon1.e = Nand1.C7.Sw1.J0p3_1.BondCon1.e;
//   Nand1.C7.Sw1.B4.BondCon1.f = Nand1.C7.Sw1.J0p3_1.BondCon1.f;
//   Nand1.C7.Sw1.B4.BondCon1.d = Nand1.C7.Sw1.J0p3_1.BondCon1.d;
//   Nand1.C7.Sw1.J0p3_1.BondCon2.e = Nand1.C7.Sw1.p.e;
//   Nand1.C7.Sw1.J0p3_1.BondCon2.f = Nand1.C7.Sw1.p.f;
//   Nand1.C7.Sw1.J0p3_1.BondCon2.d = Nand1.C7.Sw1.p.d;
//   Nand1.C7.Sw1.B2.BondCon1.e = Nand1.C7.Sw1.J1p3_1.BondCon2.e;
//   Nand1.C7.Sw1.B2.BondCon1.f = Nand1.C7.Sw1.J1p3_1.BondCon2.f;
//   Nand1.C7.Sw1.B2.BondCon1.d = Nand1.C7.Sw1.J1p3_1.BondCon2.d;
//   Nand1.C7.Sw1.B1.BondCon2.e = Nand1.C7.Sw1.J1p3_1.BondCon1.e;
//   Nand1.C7.Sw1.B1.BondCon2.f = Nand1.C7.Sw1.J1p3_1.BondCon1.f;
//   Nand1.C7.Sw1.B1.BondCon2.d = Nand1.C7.Sw1.J1p3_1.BondCon1.d;
//   Nand1.C7.Sw1.B1.BondCon1.e = Nand1.C7.Sw1.J0p3_1.BondCon3.e;
//   Nand1.C7.Sw1.B1.BondCon1.f = Nand1.C7.Sw1.J0p3_1.BondCon3.f;
//   Nand1.C7.Sw1.B1.BondCon1.d = Nand1.C7.Sw1.J0p3_1.BondCon3.d;
//   Nand1.C7.Sw1.j0p2_1.BondCon2.e = Nand1.C7.Sw1.n2.e;
//   Nand1.C7.Sw1.j0p2_1.BondCon2.f = Nand1.C7.Sw1.n2.f;
//   Nand1.C7.Sw1.j0p2_1.BondCon2.d = Nand1.C7.Sw1.n2.d;
//   Nand1.C7.Sw1.B2.BondCon2.e = Nand1.C7.Sw1.j0p2_2.BondCon1.e;
//   Nand1.C7.Sw1.B2.BondCon2.f = Nand1.C7.Sw1.j0p2_2.BondCon1.f;
//   Nand1.C7.Sw1.B2.BondCon2.d = Nand1.C7.Sw1.j0p2_2.BondCon1.d;
//   Nand1.C7.Sw1.j0p2_2.BondCon2.e = Nand1.C7.Sw1.n1.e;
//   Nand1.C7.Sw1.j0p2_2.BondCon2.f = Nand1.C7.Sw1.n1.f;
//   Nand1.C7.Sw1.j0p2_2.BondCon2.d = Nand1.C7.Sw1.n1.d;
//   Nand1.C7.Sw1.B4.BondCon2.e = Nand1.C7.Sw1.j0p2_1.BondCon1.e;
//   Nand1.C7.Sw1.B4.BondCon2.f = Nand1.C7.Sw1.j0p2_1.BondCon1.f;
//   Nand1.C7.Sw1.B4.BondCon2.d = Nand1.C7.Sw1.j0p2_1.BondCon1.d;
//   (-Nand1.C7.heatPort.Q_flow) + Nand1.C7.BG2Heat1.port_b.Q_flow = 0.0;
//   Nand1.C7.BG2Heat1.port_b.T = Nand1.C7.heatPort.T;
//   Nand1.C7.B5.eBondCon1.e = Nand1.C7.BG2Heat1.BondCon1.e;
//   Nand1.C7.B5.eBondCon1.f = Nand1.C7.BG2Heat1.BondCon1.f;
//   Nand1.C7.B5.eBondCon1.d = Nand1.C7.BG2Heat1.BondCon1.d;
//   Nand1.C7.B5.fBondCon1.e = Nand1.C7.Sw1.n2.e;
//   Nand1.C7.B5.fBondCon1.f = Nand1.C7.Sw1.n2.f;
//   Nand1.C7.B5.fBondCon1.d = Nand1.C7.Sw1.n2.d;
//   Nand1.C7.B6.fBondCon1.e = Nand1.C7.Sw1.n1.e;
//   Nand1.C7.B6.fBondCon1.f = Nand1.C7.Sw1.n1.f;
//   Nand1.C7.B6.fBondCon1.d = Nand1.C7.Sw1.n1.d;
//   Nand1.C7.B4.eBondCon1.e = Nand1.C7.Sw1.p.e;
//   Nand1.C7.B4.eBondCon1.f = Nand1.C7.Sw1.p.f;
//   Nand1.C7.B4.eBondCon1.d = Nand1.C7.Sw1.p.d;
//   Nand1.C7.B4.fBondCon1.e = Nand1.C7.C1.BondCon2.e;
//   Nand1.C7.B4.fBondCon1.f = Nand1.C7.C1.BondCon2.f;
//   Nand1.C7.B4.fBondCon1.d = Nand1.C7.C1.BondCon2.d;
//   Nand1.C7.B3.BondCon2.e = Nand1.C7.C1.BondCon1.e;
//   Nand1.C7.B3.BondCon2.f = Nand1.C7.C1.BondCon1.f;
//   Nand1.C7.B3.BondCon2.d = Nand1.C7.C1.BondCon1.d;
//   Nand1.C7.B3.BondCon1.e = Nand1.C7.J1p3_1.BondCon3.e;
//   Nand1.C7.B3.BondCon1.f = Nand1.C7.J1p3_1.BondCon3.f;
//   Nand1.C7.B3.BondCon1.d = Nand1.C7.J1p3_1.BondCon3.d;
//   Nand1.C7.B1.BondCon2.e = Nand1.C7.J1p3_1.BondCon1.e;
//   Nand1.C7.B1.BondCon2.f = Nand1.C7.J1p3_1.BondCon1.f;
//   Nand1.C7.B1.BondCon2.d = Nand1.C7.J1p3_1.BondCon1.d;
//   Nand1.C7.B2.BondCon1.e = Nand1.C7.J1p3_1.BondCon2.e;
//   Nand1.C7.B2.BondCon1.f = Nand1.C7.J1p3_1.BondCon2.f;
//   Nand1.C7.B2.BondCon1.d = Nand1.C7.J1p3_1.BondCon2.d;
//   Nand1.C7.B1.BondCon1.e = Nand1.C7.El2BG1.BondCon1.e;
//   Nand1.C7.B1.BondCon1.f = Nand1.C7.El2BG1.BondCon1.f;
//   Nand1.C7.B1.BondCon1.d = Nand1.C7.El2BG1.BondCon1.d;
//   Nand1.C7.B2.BondCon2.e = Nand1.C7.BG2El1.BondCon1.e;
//   Nand1.C7.B2.BondCon2.f = Nand1.C7.BG2El1.BondCon1.f;
//   Nand1.C7.B2.BondCon2.d = Nand1.C7.BG2El1.BondCon1.d;
//   Nand1.C7.B6.eBondCon1.e = Nand1.C7.T_nom.BondCon1.e;
//   Nand1.C7.B6.eBondCon1.f = Nand1.C7.T_nom.BondCon1.f;
//   Nand1.C7.B6.eBondCon1.d = Nand1.C7.T_nom.BondCon1.d;
//   Nand1.C7.El2BG1.p.v = Nand1.C7.p.v;
//   Nand1.C7.BG2El1.n.v = Nand1.C7.n.v;
//   Nand1.C4.heatPort.T = Nand1.C7.heatPort.T;
//   Nand1.C4.heatPort.T = Nand1.Mn1.heatPort.T;
//   Nand1.C4.heatPort.T = Nand1.Mn2.heatPort.T;
//   Nand1.C4.heatPort.T = Nand1.Mp1.heatPort.T;
//   Nand1.C4.heatPort.T = Nand1.Mp2.heatPort.T;
//   Nand1.C4.heatPort.T = Nand1.heatPort.T;
//   Nand1.C7.n.v = Nand1.Gnd3.p.v;
//   Nand1.C7.p.v = Nand1.Mn1.S.v;
//   Nand1.C7.p.v = Nand1.Mn2.D.v;
//   Nand1.C4.p.v = Nand1.Mn1.D.v;
//   Nand1.C4.p.v = Nand1.Mp1.S.v;
//   Nand1.C4.p.v = Nand1.Mp2.S.v;
//   Nand1.C4.p.v = Nand1.y.v;
//   Nand1.C4.n.v = Nand1.Gnd2.p.v;
//   Nand1.Mp1.B.v = Nand1.Mp1.D.v;
//   Nand1.Mp1.B.v = Nand1.Mp2.B.v;
//   Nand1.Mp1.B.v = Nand1.Mp2.D.v;
//   Nand1.Mp1.B.v = Nand1.Vdd.v;
//   Nand1.Mn2.G.v = Nand1.Mp2.G.v;
//   Nand1.Mn2.G.v = Nand1.x1.v;
//   Nand1.Mn1.G.v = Nand1.Mp1.G.v;
//   Nand1.Mn1.G.v = Nand1.x2.v;
//   Nand1.Gnd1.p.v = Nand1.Mn2.B.v;
//   Nand1.Gnd1.p.v = Nand1.Mn2.S.v;
//   Nand1.Gnd4.p.v = Nand1.Mn1.B.v;
//   Nand1.heatPort.T = Qtot.port_a.T;
//   Nand1.y.v = Vnand.p.v;
//   Nand1.Vdd.v = VDD.p.v;
//   Nand1.x2.v = VIN2.p.v;
//   Nand1.x1.v = VIN1.p.v;
//   Gnd4.p.v = VIN1.n.v;
//   Gnd5.p.v = VIN2.n.v;
//   Gnd1.p.v = VDD.n.v;
//   Gnd2.p.v = Vnand.n.v;
//   FixedTemperature1.port.T = Qtot.port_b.T;
// algorithm
//   assert(Nand1.Mp1.NSUBeff > Nand1.Mp1.XNI, \"NSUB must be larger than intrinsic carrier concentration\");
//   assert(Nand1.Mp1.LAMBDAeff < 0.2, \"LAMBDA value too large, leads to numerical instability\");
//   assert(Nand1.Mp1.Leff > 0.0, \"The effective channel length must be larger than zero\");
//   assert(Nand1.Mp2.NSUBeff > Nand1.Mp2.XNI, \"NSUB must be larger than intrinsic carrier concentration\");
//   assert(Nand1.Mp2.LAMBDAeff < 0.2, \"LAMBDA value too large, leads to numerical instability\");
//   assert(Nand1.Mp2.Leff > 0.0, \"The effective channel length must be larger than zero\");
//   assert(Nand1.Mn1.NSUBeff > Nand1.Mn1.XNI, \"NSUB must be larger than intrinsic carrier concentration\");
//   assert(Nand1.Mn1.LAMBDAeff < 0.2, \"LAMBDA value too large, leads to numerical instability\");
//   assert(Nand1.Mn1.Leff > 0.0, \"The effective channel length must be larger than zero\");
//   assert(Nand1.Mn2.NSUBeff > Nand1.Mn2.XNI, \"NSUB must be larger than intrinsic carrier concentration\");
//   assert(Nand1.Mn2.LAMBDAeff < 0.2, \"LAMBDA value too large, leads to numerical instability\");
//   assert(Nand1.Mn2.Leff > 0.0, \"The effective channel length must be larger than zero\");
// end BondLib_Examples_ModelicaSpice_NandGate_TestNand;
// "
// ""
// endResult
