//name:        Modelica.Media.Examples.TestOnly.MixIdealGasAir [version 3.1]
//keyword:     media
//status:      correct
//
// instantiate/check model example
//

loadModel(Modelica,{"3.1"}); getErrorString();

instantiateModel(Modelica.Media.Examples.TestOnly.MixIdealGasAir); getErrorString();
checkModel(Modelica.Media.Examples.TestOnly.MixIdealGasAir); getErrorString();

// Result:
// true
// ""
// ""
// "Error: Variable data[:].MM[1] not found in scope Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium
// [package.mo:4034:5-4034:78:writable] Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:4035:5-4036:96:writable] Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: Failed to elaborate expression: if referenceChoice == .Modelica.Media.Interfaces.PartialMedium.Choices.ReferenceEnthalpy.UserDefined then h_offset else 0
// [package.mo:77:3-78:83:writable] Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: Failed to elaborate expression: if referenceChoice == .Modelica.Media.Interfaces.PartialMedium.Choices.ReferenceEnthalpy.UserDefined then h_offset else 0
// [package.mo:77:3-78:83:writable] Warning: Component: h_offset with no default value! This might happen if you are using a constant with no binding as a modifier.
// Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: Variable data[:].MM[1] not found in scope Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium.specificEntropy.$foriter loop scope$
// [package.mo:985:5-985:69:writable] Warning: Duplicate elements (due to inherited elements) not syntactically identical but semantically identical:
// 	first element is:  input ThermodynamicState state	second element is: input .Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium.ThermodynamicState state	Modelica specification requires that elements are exactly identical.
// [package.mo:534:5-535:65:writable] Error: No constant value for variable data.R in scope Modelica.Media.IdealGases.Common.SingleGasNasa.thermalConductivityEstimate.
// [package.mo:1003:5-1003:71:writable] Error: Type mismatch in assignment in X := {state.X[1],state.X[2]} of Real(quantity="MassFraction", unit="kg/kg", min=0.0, max=1.0, nominal=0.1)[2] := Real(quantity="MassFraction", unit="kg/kg", min=0.0, max=1.0, nominal=0.1)[4]
// Error: Variable data[:].MM[1] not found in scope Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium
// Error: Error occured while flattening model Modelica.Media.Examples.TestOnly.MixIdealGasAir
// "
// "Error: Variable data[:].MM[1] not found in scope Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium
// [package.mo:4034:5-4034:78:writable] Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:4035:5-4036:96:writable] Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: Failed to elaborate expression: if referenceChoice == .Modelica.Media.Interfaces.PartialMedium.Choices.ReferenceEnthalpy.UserDefined then h_offset else 0
// [package.mo:77:3-78:83:writable] Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: Failed to elaborate expression: if referenceChoice == .Modelica.Media.Interfaces.PartialMedium.Choices.ReferenceEnthalpy.UserDefined then h_offset else 0
// [package.mo:77:3-78:83:writable] Warning: Component: h_offset with no default value! This might happen if you are using a constant with no binding as a modifier.
// Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// [package.mo:77:3-78:83:writable] Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.H0 in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: No constant value for variable data.name in scope Modelica.Media.IdealGases.Common.SingleGasNasa.
// Error: Variable data[:].MM[1] not found in scope Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium.specificEntropy.$foriter loop scope$
// [package.mo:985:5-985:69:writable] Warning: Duplicate elements (due to inherited elements) not syntactically identical but semantically identical:
// 	first element is:  input ThermodynamicState state	second element is: input .Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium.ThermodynamicState state	Modelica specification requires that elements are exactly identical.
// [package.mo:534:5-535:65:writable] Error: No constant value for variable data.R in scope Modelica.Media.IdealGases.Common.SingleGasNasa.thermalConductivityEstimate.
// [package.mo:1003:5-1003:71:writable] Error: Type mismatch in assignment in X := {state.X[1],state.X[2]} of Real(quantity=\"MassFraction\", unit=\"kg/kg\", min=0.0, max=1.0, nominal=0.1)[2] := Real(quantity=\"MassFraction\", unit=\"kg/kg\", min=0.0, max=1.0, nominal=0.1)[4]
// Error: Variable data[:].MM[1] not found in scope Modelica.Media.Examples.TestOnly.MixIdealGasAir.Medium
// Error: Error occured while flattening model Modelica.Media.Examples.TestOnly.MixIdealGasAir
// "
// ""
// endResult
