// name:     Modelica.Blocks.Examples.InverseModel
// keywords: simulation MSL Examples
// status: correct
// env: OPENMODELICALIBRARY=../../../../libraries/msl31/
// teardown_command: rm -rf Modelica.Blocks.Examples.InverseModel_* Modelica.Blocks.Examples.InverseModel Modelica.Blocks.Examples.InverseModel.exe Modelica.Blocks.Examples.InverseModel.cpp Modelica.Blocks.Examples.InverseModel.makefile Modelica.Blocks.Examples.InverseModel.libs Modelica.Blocks.Examples.InverseModel.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Blocks.Examples.InverseModel,stopTime=2);
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Blocks.Examples.InverseModel_res.mat",
  "Modelica.Blocks.Examples.InverseModel.mat","Modelica.Blocks.Examples.InverseModel_diff.csv",0.01,0.01,{"firstOrder1.y",
  "firstOrder2.y",
  "der(firstOrder1.y)",
  "der(firstOrder2.y)",
  "sine.y",
  "inverseBlockConstraints.y2",
  "feedback.y",
  "der(criticalDamping.x[1])",
  "firstOrder1.k",
  "firstOrder1.T",
  "firstOrder1.initType",
  "firstOrder1.y_start",
  "sine.amplitude",
  "sine.freqHz",
  "sine.phase",
  "sine.offset",
  "sine.startTime",
  "firstOrder2.k",
  "firstOrder2.T",
  "firstOrder2.initType",
  "firstOrder2.y_start",
  "criticalDamping.f",
  "criticalDamping.initType",
  "criticalDamping.y_start",
  "criticalDamping.alpha",
  "criticalDamping.w",
  "criticalDamping.x_start[1]",
  "criticalDamping.n",
  "criticalDamping.normalized"});
  
  
// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Blocks.Examples.InverseModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Blocks.Examples.InverseModel', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// "Files Equal!"
// endResult
