// name:     Modelica.Blocks.Examples.LogicalNetwork1
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Blocks.Examples.LogicalNetwork1_* Modelica.Blocks.Examples.LogicalNetwork1 Modelica.Blocks.Examples.LogicalNetwork1.exe Modelica.Blocks.Examples.LogicalNetwork1.cpp Modelica.Blocks.Examples.LogicalNetwork1.makefile Modelica.Blocks.Examples.LogicalNetwork1.libs Modelica.Blocks.Examples.LogicalNetwork1.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Blocks.Examples.LogicalNetwork1,stopTime=10.0);
val(table2.y,0.0);
val(table2.y,10.0);
val(table1.y,0.0);
val(table1.y,10.0);
val(Not1.u,0.0);
val(Not1.u,10.0);
val(Not1.y,0.0);
val(Not1.y,10.0);
val(And1.u1,0.0);
val(And1.u1,10.0);
val(And1.u2,0.0);
val(And1.u2,10.0);
val(And1.y,0.0);
val(And1.y,10.0);
val(Or1.u1,0.0);
val(Or1.u1,10.0);
val(Or1.u2,0.0);
val(Or1.u2,10.0);
val(Or1.y,0.0);
val(Or1.y,10.0);
val(Pre1.u,0.0);
val(Pre1.u,10.0);
val(Pre1.y,0.0);
val(Pre1.y,10.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Blocks.Examples.LogicalNetwork1_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Blocks.Examples.LogicalNetwork1', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat'",
//     messages = ""
// end SimulationResult;
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 1.0
// 1.0
// 1.0
// 1.0
// 0.0
// 1.0
// 0.0
// 1.0
// 0.0
// 0.0
// 0.0
// 1.0
// 0.0
// 1.0
// 0.0
// 1.0
// 0.0
// 1.0
// endResult
