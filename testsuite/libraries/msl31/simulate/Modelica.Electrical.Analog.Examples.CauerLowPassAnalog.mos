// name:     Modelica.Electrical.Analog.Examples.CauerLowPassAnalog
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -f *_init.xml *_records.c *.exe *.log *_res.mat *.c *.libs *.makefile *.o *.dll *.so *_functions.h *.h *_diff.csv
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"});

simulate(Modelica.Electrical.Analog.Examples.CauerLowPassAnalog,stopTime=60.0);
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Electrical.Analog.Examples.CauerLowPassAnalog_res.mat",
  "Modelica.Electrical.Analog.Examples.CauerLowPassAnalog.mat","Modelica.Electrical.Analog.Examples.CauerLowPassAnalog_diff.csv",
  0.01,0.001,{"C1.v",
  "C3.v",
  "C5.v",
  "L1.i",
  "L2.i",
  "der(C1.v)",
  "der(C3.v)",
  "der(C5.v)",
  "der(L1.i)",
  "der(L2.i)",
  "der(C4.v)",
  "der(C2.v)",
  "G.p.i",
  "C1.p.i",
  "C2.v",
  "C2.p.i",
  "C3.p.i",
  "C4.v",
  "C4.p.i",
  "C5.p.i",
  "L1.v",
  "L2.v",
  "R1.v",
  "R1.n.i",
  "R1.LossPower",
  "R2.n.i",
  "R2.LossPower",
  "V.p.v",
  "G.p.v",
  "C1.n.v",
  "C3.n.v",
  "C5.n.v",
  "R2.n.v",
  "V.n.v",
  "R2.R_actual",
  "R1.R_actual"});
  
// Result:
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassAnalog_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 60.0, numberOfIntervals = 500, tolerance = 0.000001, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.CauerLowPassAnalog', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Files Equal!"
// endResult
