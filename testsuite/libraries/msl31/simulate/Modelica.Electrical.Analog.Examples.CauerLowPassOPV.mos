// name:     Modelica.Electrical.Analog.Examples.CauerLowPassOPV
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.Analog.Examples.CauerLowPassOPV_* Modelica.Electrical.Analog.Examples.CauerLowPassOPV Modelica.Electrical.Analog.Examples.CauerLowPassOPV.exe Modelica.Electrical.Analog.Examples.CauerLowPassOPV.cpp Modelica.Electrical.Analog.Examples.CauerLowPassOPV.makefile Modelica.Electrical.Analog.Examples.CauerLowPassOPV.libs Modelica.Electrical.Analog.Examples.CauerLowPassOPV.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"});
loadModel(ModelicaServices,{"1.0"});

simulate(Modelica.Electrical.Analog.Examples.CauerLowPassOPV,stopTime=60.0);
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Electrical.Analog.Examples.CauerLowPassOPV_res.mat",
  "Modelica.Electrical.Analog.Examples.CauerLowPassOPV.mat","Modelica.Electrical.Analog.Examples.CauerLowPassOPV_diff.csv",0.01,0.001,
  {"C1.v",
  "C3.v",
  "C7.v",
  "C8.v",
  "C9.v",
  "der(C1.v)",
  "der(C3.v)",
  "der(C7.v)",
  "der(C8.v)",
  "der(C9.v)"});  

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassOPV_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 60.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.CauerLowPassOPV', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// "Files Equal!"
// endResult
