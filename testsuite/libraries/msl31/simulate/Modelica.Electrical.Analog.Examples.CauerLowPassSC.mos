// name:     Modelica.Electrical.Analog.Examples.CauerLowPassSC
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.Analog.Examples.CauerLowPassSC_* Modelica.Electrical.Analog.Examples.CauerLowPassSC Modelica.Electrical.Analog.Examples.CauerLowPassSC.exe Modelica.Electrical.Analog.Examples.CauerLowPassSC.cpp Modelica.Electrical.Analog.Examples.CauerLowPassSC.makefile Modelica.Electrical.Analog.Examples.CauerLowPassSC.libs Modelica.Electrical.Analog.Examples.CauerLowPassSC.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.Analog.Examples.CauerLowPassSC,stopTime=60.0);
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Electrical.Analog.Examples.CauerLowPassSC_res.mat",
  "Modelica.Electrical.Analog.Examples.CauerLowPassSC.mat","Modelica.Electrical.Analog.Examples.CauerLowPassSCdiff.csv",0.01,0.001,
  {"C3.v",
  "C5.v",
  "C7.v",
  "C8.v",
  "C9.v",
  "R4.Capacitor1.v",
  "R5.Capacitor1.v",
  "R8.Capacitor1.v",
  "R9.Capacitor1.v",
  "R1.Capacitor1.v",
  "R2.Capacitor1.v",
  "R3.Capacitor1.v",
  "Rp1.Capacitor1.v",
  "R7.Capacitor1.v",
  "R10.Capacitor1.v",
  "R11.Capacitor1.v",
  "der(C3.v)",
  "der(C5.v)",
  "der(C7.v)",
  "der(C8.v)",
  "der(C9.v)",
  "der(R4.Capacitor1.v)",
  "der(R5.Capacitor1.v)",
  "der(R8.Capacitor1.v)",
  "der(R9.Capacitor1.v)",
  "der(R1.Capacitor1.v)",
  "der(R2.Capacitor1.v)",
  "der(R3.Capacitor1.v)",
  "der(Rp1.Capacitor1.v)",
  "der(R7.Capacitor1.v)",
  "der(R10.Capacitor1.v)",
  "der(R11.Capacitor1.v)"});
  
// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassSC_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 60.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.CauerLowPassSC', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// "Files Equal!"
// endResult
