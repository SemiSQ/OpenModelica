// name:     Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc_* Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc.exe Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc.cpp Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc.makefile Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc.libs Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc,stopTime=6.0);
val(constantVoltage1.i,0.0);
val(constantVoltage1.i,6.0);
val(constantVoltage1.p.i,0.0);
val(constantVoltage1.p.i,6.0);
val(constantVoltage1.n.i,0.0);
val(constantVoltage1.n.i,6.0);
val(inductor1.v,0.0);
val(inductor1.v,6.0);
val(inductor1.i,0.0);
val(inductor1.i,6.0);
val(der(inductor1.i),0.0);
val(der(inductor1.i),6.0);
val(inductor1.p.v,0.0);
val(inductor1.p.v,6.0);
val(inductor1.p.i,0.0);
val(inductor1.p.i,6.0);
val(inductor1.n.v,0.0);
val(inductor1.n.v,6.0);
val(inductor1.n.i,0.0);
val(inductor1.n.i,6.0);
val(resistor1.v,0.0);
val(resistor1.v,6.0);
val(resistor1.i,0.0);
val(resistor1.i,6.0);
val(resistor1.p.v,0.0);
val(resistor1.p.v,6.0);
val(resistor1.p.i,0.0);
val(resistor1.p.i,6.0);
val(resistor1.n.i,0.0);
val(resistor1.n.i,6.0);
val(resistor1.LossPower,0.0);
val(resistor1.LossPower,6.0);
val(switch1.LossPower,0.0);
val(switch1.LossPower,6.0);
val(switch1.p.i,0.0);
val(switch1.p.i,6.0);
val(switch1.n.v,0.0);
val(switch1.n.v,6.0);
val(switch1.n.i,0.0);
val(switch1.n.i,6.0);
val(switch1.control.v,0.0);
val(switch1.control.v,6.0);
val(constantVoltage2.i,0.0);
val(constantVoltage2.i,6.0);
val(constantVoltage2.p.i,0.0);
val(constantVoltage2.p.i,6.0);
val(constantVoltage2.n.i,0.0);
val(constantVoltage2.n.i,6.0);
val(inductor2.v,0.0);
val(inductor2.v,6.0);
val(inductor2.i,0.0);
val(inductor2.i,6.0);
val(der(inductor2.i),0.0);
val(der(inductor2.i),6.0);
val(inductor2.p.v,0.0);
val(inductor2.p.v,6.0);
val(inductor2.p.i,0.0);
val(inductor2.p.i,6.0);
val(inductor2.n.v,0.0);
val(inductor2.n.v,6.0);
val(inductor2.n.i,0.0);
val(inductor2.n.i,6.0);
val(resistor2.v,0.0);
val(resistor2.v,6.0);
val(resistor2.i,0.0);
val(resistor2.i,6.0);
val(resistor2.p.v,0.0);
val(resistor2.p.v,6.0);
val(resistor2.p.i,0.0);
val(resistor2.p.i,6.0);
val(resistor2.n.i,0.0);
val(resistor2.n.i,6.0);
val(resistor2.LossPower,0.0);
val(resistor2.LossPower,6.0);
val(switch2.LossPower,0.0);
val(switch2.LossPower,6.0);
val(switch2.p.i,0.0);
val(switch2.p.i,6.0);
val(switch2.n.v,0.0);
val(switch2.n.v,6.0);
val(switch2.n.i,0.0);
val(switch2.n.i,6.0);
val(switch2.control.v,0.0);
val(switch2.control.v,6.0);
val(switch2.i,0.0);
val(switch2.i,6.0);
val(switch2.v,0.0);
val(switch2.v,6.0);
val(sineVoltage.v,0.0);
val(sineVoltage.v,6.0);
val(sineVoltage.p.v,0.0);
val(sineVoltage.p.v,6.0);
val(sineVoltage.signalSource.y,0.0);
val(sineVoltage.signalSource.y,6.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 6.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// -0
// -0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 50.0
// 1.23704215274e-14
// 0.0
// 0.00049999501789
// 500.0
// 1.23704215274e-13
// 50.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 2.49994997148e-07
// 0.0
// 0.024999499321
// 0.0
// 0.00049999501789
// 50.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 1.98467053203e-14
// -0
// -0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 50.0
// -1.84054160801e-15
// 0.0
// 0.00049999501789
// 500.0
// -1.84054160801e-14
// 50.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 2.49994997148e-07
// 0.0
// 0.024999499321
// 0.0
// 0.00049999501789
// 50.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 1.98467053203e-14
// 0.0
// 0.00049999501789
// 0.0
// 49.9995002747
// 0.0
// 1.98467053203e-14
// 0.0
// 1.98467053203e-14
// 0.0
// 1.98467053203e-14
// endResult
