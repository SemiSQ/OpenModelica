// name:     Modelica.Electrical.Analog.Examples.HeatingMOSInverter
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.Analog.Examples.HeatingMOSInverter_* Modelica.Electrical.Analog.Examples.HeatingMOSInverter Modelica.Electrical.Analog.Examples.HeatingMOSInverter.exe Modelica.Electrical.Analog.Examples.HeatingMOSInverter.cpp Modelica.Electrical.Analog.Examples.HeatingMOSInverter.makefile Modelica.Electrical.Analog.Examples.HeatingMOSInverter.libs Modelica.Electrical.Analog.Examples.HeatingMOSInverter.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.Analog.Examples.HeatingMOSInverter,stopTime=5.0);
val(G.p.i,0.0);
val(G.p.i,5.0);
val(Sin.v,0.0);
val(Sin.v,5.0);
val(Sin.p.v,0.0);
val(Sin.p.v,5.0);
val(Sin.signalSource.y,0.0);
val(Sin.signalSource.y,5.0);
val(Capacitor1.v,0.0);
val(Capacitor1.v,5.0);
val(der(Capacitor1.v),0.0);
val(der(Capacitor1.v),5.0);
val(Capacitor1.i,0.0);
val(Capacitor1.i,5.0);
val(Capacitor1.p.v,0.0);
val(Capacitor1.p.v,5.0);
val(Capacitor1.p.i,0.0);
val(Capacitor1.p.i,5.0);
val(Capacitor1.n.i,0.0);
val(Capacitor1.n.i,5.0);
val(HeatCapacitor1.T,0.0);
val(HeatCapacitor1.T,5.0);
val(der(HeatCapacitor1.T),0.0);
val(der(HeatCapacitor1.T),5.0);
val(HeatCapacitor1.der_T,0.0);
val(HeatCapacitor1.der_T,5.0);
val(HeatCapacitor1.port.T,0.0);
val(HeatCapacitor1.port.T,5.0);
val(HeatCapacitor1.port.Q_flow,0.0);
val(HeatCapacitor1.port.Q_flow,5.0);
val(TC1.Q_flow,0.0);
val(TC1.Q_flow,5.0);
val(TC1.dT,0.0);
val(TC1.dT,5.0);
val(TC1.port_a.T,0.0);
val(TC1.port_a.T,5.0);
val(TC1.port_a.Q_flow,0.0);
val(TC1.port_a.Q_flow,5.0);
val(TC1.port_b.T,0.0);
val(TC1.port_b.T,5.0);
val(TC1.port_b.Q_flow,0.0);
val(TC1.port_b.Q_flow,5.0);
val(H_PMOS.D.v,0.0);
val(H_PMOS.D.v,5.0);
val(H_PMOS.D.i,0.0);
val(H_PMOS.D.i,5.0);
val(H_PMOS.G.v,0.0);
val(H_PMOS.G.v,5.0);
val(H_PMOS.S.v,0.0);
val(H_PMOS.S.v,5.0);
val(H_PMOS.S.i,0.0);
val(H_PMOS.S.i,5.0);
val(H_PMOS.B.v,0.0);
val(H_PMOS.B.v,5.0);
val(H_PMOS.heatPort.T,0.0);
val(H_PMOS.heatPort.T,5.0);
val(H_PMOS.heatPort.Q_flow,0.0);
val(H_PMOS.heatPort.Q_flow,5.0);
val(H_PMOS.LossPower,0.0);
val(H_PMOS.LossPower,5.0);
val(H_PMOS.T_heatPort,0.0);
val(H_PMOS.T_heatPort,5.0);
val(H_NMOS.D.v,0.0);
val(H_NMOS.D.v,5.0);
val(H_NMOS.D.i,0.0);
val(H_NMOS.D.i,5.0);
val(H_NMOS.G.v,0.0);
val(H_NMOS.G.v,5.0);
val(H_NMOS.S.i,0.0);
val(H_NMOS.S.i,5.0);
val(H_NMOS.heatPort.T,0.0);
val(H_NMOS.heatPort.T,5.0);
val(H_NMOS.heatPort.Q_flow,0.0);
val(H_NMOS.heatPort.Q_flow,5.0);
val(H_NMOS.LossPower,0.0);
val(H_NMOS.LossPower,5.0);
val(H_NMOS.T_heatPort,0.0);
val(H_NMOS.T_heatPort,5.0);
val(V.v,0.0);
val(V.v,5.0);
val(V.i,0.0);
val(V.i,5.0);
val(V.p.v,0.0);
val(V.p.v,5.0);
val(V.p.i,0.0);
val(V.p.i,5.0);
val(V.n.i,0.0);
val(V.n.i,5.0);
val(V.signalSource.y,0.0);
val(V.signalSource.y,5.0);
val(TC2.Q_flow,0.0);
val(TC2.Q_flow,5.0);
val(TC2.dT,0.0);
val(TC2.dT,5.0);
val(TC2.port_a.T,0.0);
val(TC2.port_a.T,5.0);
val(TC2.port_a.Q_flow,0.0);
val(TC2.port_a.Q_flow,5.0);
val(TC2.port_b.T,0.0);
val(TC2.port_b.T,5.0);
val(TC2.port_b.Q_flow,0.0);
val(TC2.port_b.Q_flow,5.0);
val(FixedTemperature1.port.Q_flow,0.0);
val(FixedTemperature1.port.Q_flow,5.0);
val(TC3.Q_flow,0.0);
val(TC3.Q_flow,5.0);
val(TC3.dT,0.0);
val(TC3.dT,5.0);
val(TC3.port_a.T,0.0);
val(TC3.port_a.T,5.0);
val(TC3.port_a.Q_flow,0.0);
val(TC3.port_a.Q_flow,5.0);
val(TC3.port_b.Q_flow,0.0);
val(TC3.port_b.Q_flow,5.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.HeatingMOSInverter_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 5.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.HeatingMOSInverter', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat'",
//     messages = ""
// end SimulationResult;
// -0
// -0
// 0.0
// 8.2694606913e-14
// 0.0
// 8.2694606913e-14
// 0.0
// 8.2694606913e-14
// 0.0
// 4.9976348877
// -0
// -0.0125371254981
// -0
// -1.25371258264e-07
// 0.0
// 4.9976348877
// -0
// -1.25371258264e-07
// 0.0
// 1.25371258264e-07
// 293.149993896
// 299.974700928
// 6.84999990463
// 0.025560785085
// 6.84999990463
// 0.025560785085
// 293.149993896
// 299.974700928
// 0.0684999972582
// 0.000255607854342
// 0.0
// 8.85568729458e-10
// 0.0
// 8.8556873834e-08
// 293.149993896
// 299.974700928
// 0.0
// 8.85568729458e-10
// 293.149993896
// 299.974700928
// -0
// -8.85568729458e-10
// 0.0
// 5.0
// 0.0
// 3.74392215008e-07
// 0.0
// 8.2694606913e-14
// 0.0
// 4.9976348877
// -0
// -3.74392215008e-07
// 0.0
// 5.0
// 293.149993896
// 299.974700928
// -0
// -8.85568729458e-10
// 0.0
// 8.85568729458e-10
// 293.149993896
// 299.974700928
// 0.0
// 4.9976348877
// 0.0
// 4.99763473272e-07
// 0.0
// 8.2694606913e-14
// -0
// -4.99763473272e-07
// 293.149993896
// 299.974945068
// -0
// -2.49763525062e-06
// 0.0
// 2.49763525062e-06
// 293.149993896
// 299.974945068
// 0.0
// 5.0
// -0
// -3.74392215008e-07
// 0.0
// 5.0
// -0
// -3.74392215008e-07
// 0.0
// 3.74392215008e-07
// 0.0
// 5.0
// 0.0
// 2.49763525062e-06
// 0.0
// 0.000249763514148
// 293.149993896
// 299.974945068
// 0.0
// 2.49763525062e-06
// 293.149993896
// 299.974700928
// -0
// -2.49763525062e-06
// -0.0684999972582
// -0.000253109319601
// -0.0684999972582
// -0.000253109319601
// -6.84999990463
// -0.0253109335899
// 293.149993896
// 299.974700928
// -0.0684999972582
// -0.000253109319601
// 0.0684999972582
// 0.000253109319601
// endResult
