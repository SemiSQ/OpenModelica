// name:     Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate_* Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate.exe Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate.cpp Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate.makefile Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate.libs Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate,stopTime=200.0);
val(HeatCapacitor1.T,0.0);
val(HeatCapacitor1.T,200.0);
val(der(HeatCapacitor1.T),0.0);
val(der(HeatCapacitor1.T),200.0);
val(HeatCapacitor1.der_T,0.0);
val(HeatCapacitor1.der_T,200.0);
val(HeatCapacitor1.port.T,0.0);
val(HeatCapacitor1.port.T,200.0);
val(HeatCapacitor1.port.Q_flow,0.0);
val(HeatCapacitor1.port.Q_flow,200.0);
val(TC1.Q_flow,0.0);
val(TC1.Q_flow,200.0);
val(TC1.dT,0.0);
val(TC1.dT,200.0);
val(TC1.port_a.T,0.0);
val(TC1.port_a.T,200.0);
val(TC1.port_a.Q_flow,0.0);
val(TC1.port_a.Q_flow,200.0);
val(TC1.port_b.T,0.0);
val(TC1.port_b.T,200.0);
val(TC1.port_b.Q_flow,0.0);
val(TC1.port_b.Q_flow,200.0);
val(TC2.Q_flow,0.0);
val(TC2.Q_flow,200.0);
val(TC2.dT,0.0);
val(TC2.dT,200.0);
val(TC2.port_a.T,0.0);
val(TC2.port_a.T,200.0);
val(TC2.port_a.Q_flow,0.0);
val(TC2.port_a.Q_flow,200.0);
val(TC2.port_b.T,0.0);
val(TC2.port_b.T,200.0);
val(TC2.port_b.Q_flow,0.0);
val(TC2.port_b.Q_flow,200.0);
val(V.v,0.0);
val(V.v,200.0);
val(V.i,0.0);
val(V.i,200.0);
val(V.p.v,0.0);
val(V.p.v,200.0);
val(V.p.i,0.0);
val(V.p.i,200.0);
val(V.n.i,0.0);
val(V.n.i,200.0);
val(V.signalSource.y,0.0);
val(V.signalSource.y,200.0);
val(V1.v,0.0);
val(V1.v,200.0);
val(V1.i,0.0);
val(V1.i,200.0);
val(V1.p.v,0.0);
val(V1.p.v,200.0);
val(V1.p.i,0.0);
val(V1.p.i,200.0);
val(V1.n.i,0.0);
val(V1.n.i,200.0);
val(V1.signalSource.y,0.0);
val(V1.signalSource.y,200.0);
val(V2.v,0.0);
val(V2.v,200.0);
val(V2.i,0.0);
val(V2.i,200.0);
val(V2.p.v,0.0);
val(V2.p.v,200.0);
val(V2.p.i,0.0);
val(V2.p.i,200.0);
val(V2.n.i,0.0);
val(V2.n.i,200.0);
val(V2.signalSource.y,0.0);
val(V2.signalSource.y,200.0);
val(R1.v,0.0);
val(R1.v,200.0);
val(R1.i,0.0);
val(R1.i,200.0);
val(R1.p.v,0.0);
val(R1.p.v,200.0);
val(R1.p.i,0.0);
val(R1.p.i,200.0);
val(R1.n.v,0.0);
val(R1.n.v,200.0);
val(R1.n.i,0.0);
val(R1.n.i,200.0);
val(R1.LossPower,0.0);
val(R1.LossPower,200.0);
val(R2.v,0.0);
val(R2.v,200.0);
val(R2.i,0.0);
val(R2.i,200.0);
val(R2.p.v,0.0);
val(R2.p.v,200.0);
val(R2.p.i,0.0);
val(R2.p.i,200.0);
val(R2.n.v,0.0);
val(R2.n.v,200.0);
val(R2.n.i,0.0);
val(R2.n.i,200.0);
val(R2.LossPower,0.0);
val(R2.LossPower,200.0);
val(RI.v,0.0);
val(RI.v,200.0);
val(RI.i,0.0);
val(RI.i,200.0);
val(RI.p.v,0.0);
val(RI.p.v,200.0);
val(RI.p.i,0.0);
val(RI.p.i,200.0);
val(RI.n.v,0.0);
val(RI.n.v,200.0);
val(RI.n.i,0.0);
val(RI.n.i,200.0);
val(RI.LossPower,0.0);
val(RI.LossPower,200.0);
val(Gnd.p.i,0.0);
val(Gnd.p.i,200.0);
val(Gnd1.p.i,0.0);
val(Gnd1.p.i,200.0);
val(Gnd2.p.i,0.0);
val(Gnd2.p.i,200.0);
val(Gnd3.p.i,0.0);
val(Gnd3.p.i,200.0);
val(Gnd4.p.i,0.0);
val(Gnd4.p.i,200.0);
val(C1.v,0.0);
val(C1.v,200.0);
val(C1.p.v,0.0);
val(C1.p.v,200.0);
val(C2.v,0.0);
val(C2.v,200.0);
val(C2.p.v,0.0);
val(C2.p.v,200.0);
val(C3.v,0.0);
val(C3.v,200.0);
val(C3.p.v,0.0);
val(C3.p.v,200.0);
val(T1.heatPort.T,0.0);
val(T1.heatPort.T,200.0);
val(T1.heatPort.Q_flow,0.0);
val(T1.heatPort.Q_flow,200.0);
val(T1.LossPower,0.0);
val(T1.LossPower,200.0);
val(T1.T_heatPort,0.0);
val(T1.T_heatPort,200.0);
val(T1.vbc,0.0);
val(T1.vbc,200.0);
val(T1.vbe,0.0);
val(T1.vbe,200.0);
val(T1.qbk,0.0);
val(T1.qbk,200.0);
val(T1.ibc,0.0);
val(T1.ibc,200.0);
val(T1.ibe,0.0);
val(T1.ibe,200.0);
val(T1.is_t,0.0);
val(T1.is_t,200.0);
val(T1.br_t,0.0);
val(T1.br_t,200.0);
val(T1.bf_t,0.0);
val(T1.bf_t,200.0);
val(T1.vt_t,0.0);
val(T1.vt_t,200.0);
val(T1.hexp,0.0);
val(T1.hexp,200.0);
val(T1.htempexp,0.0);
val(T1.htempexp,200.0);
val(T1.C.v,0.0);
val(T1.C.v,200.0);
val(T1.C.i,0.0);
val(T1.C.i,200.0);
val(T1.B.v,0.0);
val(T1.B.v,200.0);
val(T1.B.i,0.0);
val(T1.B.i,200.0);
val(T1.E.i,0.0);
val(T1.E.i,200.0);
val(T2.heatPort.T,0.0);
val(T2.heatPort.T,200.0);
val(T2.heatPort.Q_flow,0.0);
val(T2.heatPort.Q_flow,200.0);
val(T2.LossPower,0.0);
val(T2.LossPower,200.0);
val(T2.T_heatPort,0.0);
val(T2.T_heatPort,200.0);
val(T2.vbc,0.0);
val(T2.vbc,200.0);
val(T2.vbe,0.0);
val(T2.vbe,200.0);
val(T2.qbk,0.0);
val(T2.qbk,200.0);
val(T2.ibc,0.0);
val(T2.ibc,200.0);
val(T2.ibe,0.0);
val(T2.ibe,200.0);
val(T2.is_t,0.0);
val(T2.is_t,200.0);
val(T2.br_t,0.0);
val(T2.br_t,200.0);
val(T2.bf_t,0.0);
val(T2.bf_t,200.0);
val(T2.vt_t,0.0);
val(T2.vt_t,200.0);
val(T2.hexp,0.0);
val(T2.hexp,200.0);
val(T2.htempexp,0.0);
val(T2.htempexp,200.0);
val(T2.C.v,0.0);
val(T2.C.v,200.0);
val(T2.C.i,0.0);
val(T2.C.i,200.0);
val(T2.B.v,0.0);
val(T2.B.v,200.0);
val(T2.B.i,0.0);
val(T2.B.i,200.0);
val(T2.E.i,0.0);
val(T2.E.i,200.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 200.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat'",
//     messages = ""
// end SimulationResult;
// 293.149993896
// 331.977386475
// 0.0
// 1.63880709003e-09
// 0.0
// 1.63880709003e-09
// 293.149993896
// 331.977386475
// 0.0
// 1.63880714554e-10
// 0.0
// 8.19403572772e-11
// 0.0
// 8.1940356722e-09
// 293.149993896
// 331.977386475
// 0.0
// 8.19403572772e-11
// 293.149993896
// 331.977386475
// -0
// -8.19403572772e-11
// 0.0
// 8.19403572772e-11
// 0.0
// 8.1940356722e-09
// 293.149993896
// 331.977386475
// 0.0
// 8.19403572772e-11
// 293.149993896
// 331.977386475
// -0
// -8.19403572772e-11
// 0.0
// 6.0
// -0
// -2.7313398071e-11
// 0.0
// 6.0
// -0
// -2.7313398071e-11
// 0.0
// 2.7313398071e-11
// 0.0
// 6.0
// 0.0
// 0.0
// -0
// 6.82834908408e-12
// 0.0
// 0.0
// -0
// 6.82834908408e-12
// 0.0
// -6.82834908408e-12
// 0.0
// 0.0
// 0.0
// 0.0
// -0
// 6.82834908408e-12
// 0.0
// 0.0
// -0
// 6.82834908408e-12
// 0.0
// -6.82834908408e-12
// 0.0
// 0.0
// 0.0
// -1.22910286393e-08
// 0.0
// -6.82834908408e-12
// 0.0
// 0.0
// 0.0
// -6.82834908408e-12
// 0.0
// 1.22910286393e-08
// -0
// 6.82834908408e-12
// 0.0
// 8.39274316226e-20
// 0.0
// -1.22910286393e-08
// 0.0
// -6.82834908408e-12
// 0.0
// 0.0
// 0.0
// -6.82834908408e-12
// 0.0
// 1.22910286393e-08
// -0
// 6.82834908408e-12
// 0.0
// 8.39274316226e-20
// -0
// -1.0925359506e-09
// -0
// -2.7313398071e-11
// 0.0
// 6.0
// -0
// -2.7313398071e-11
// 0.0
// 6.0
// 0.0
// 2.7313398071e-11
// 0.0
// 2.98408669465e-20
// -0
// -2.7313398071e-11
// -0
// 6.82834908408e-12
// -0
// 6.82834908408e-12
// 0.0
// 6.82834951776e-12
// 0.0
// 6.82834951776e-12
// 0.0
// 1.22910286393e-08
// 0.0
// 1.22910286393e-08
// 0.0
// 6.0
// 0.0
// 6.0
// 0.0
// 1.22910286393e-08
// 0.0
// 1.22910286393e-08
// 293.149993896
// 331.977386475
// -0
// -8.19403572772e-11
// 0.0
// 8.19403572772e-11
// 293.149993896
// 331.977386475
// 0.0
// -6.0
// 0.0
// 1.22910286393e-08
// 1.0
// 1.0
// 0.0
// -6.82834908408e-12
// 0.0
// 3.68192437061e-19
// 3.34346393006e-15
// 8.28349216477e-13
// 1.0
// 1.0
// 100.0
// 100.0
// 0.0252609904855
// 0.0286067798734
// -1.02478396893
// 4.11449623108
// 0.358873993158
// 61.2213630676
// 0.0
// 6.0
// 0.0
// 1.36566990355e-11
// 0.0
// 1.22910286393e-08
// 0.0
// -6.82834908408e-12
// -0
// -6.82834951776e-12
// 293.149993896
// 331.977386475
// -0
// -8.19403572772e-11
// 0.0
// 8.19403572772e-11
// 293.149993896
// 331.977386475
// 0.0
// -6.0
// 0.0
// 1.22910286393e-08
// 1.0
// 1.0
// 0.0
// -6.82834908408e-12
// 0.0
// 3.68201510198e-19
// 3.34346393006e-15
// 8.28349216477e-13
// 1.0
// 1.0
// 100.0
// 100.0
// 0.0252609904855
// 0.0286067798734
// -1.02478396893
// 4.11449623108
// 0.358873993158
// 61.2213630676
// 0.0
// 6.0
// 0.0
// 1.36566990355e-11
// 0.0
// 1.22910286393e-08
// 0.0
// -6.82834908408e-12
// -0
// -6.82834951776e-12
// endResult
