// name:     Modelica.Electrical.Analog.Examples.SwitchWithArc
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.Analog.Examples.SwitchWithArc_* Modelica.Electrical.Analog.Examples.SwitchWithArc Modelica.Electrical.Analog.Examples.SwitchWithArc.exe Modelica.Electrical.Analog.Examples.SwitchWithArc.cpp Modelica.Electrical.Analog.Examples.SwitchWithArc.makefile Modelica.Electrical.Analog.Examples.SwitchWithArc.libs Modelica.Electrical.Analog.Examples.SwitchWithArc.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.Analog.Examples.SwitchWithArc,stopTime=2.0);
val(booleanPulse.y,0.0);
val(booleanPulse.y,2.0);
val(constantVoltage1.i,0.0);
val(constantVoltage1.i,2.0);
val(constantVoltage1.p.i,0.0);
val(constantVoltage1.p.i,2.0);
val(constantVoltage1.n.i,0.0);
val(constantVoltage1.n.i,2.0);
val(inductor1.v,0.0);
val(inductor1.v,2.0);
val(inductor1.i,0.0);
val(inductor1.i,2.0);
val(der(inductor1.i),0.0);
val(der(inductor1.i),2.0);
val(inductor1.p.v,0.0);
val(inductor1.p.v,2.0);
val(inductor1.p.i,0.0);
val(inductor1.p.i,2.0);
val(inductor1.n.v,0.0);
val(inductor1.n.v,2.0);
val(inductor1.n.i,0.0);
val(inductor1.n.i,2.0);
val(resistor1.v,0.0);
val(resistor1.v,2.0);
val(resistor1.i,0.0);
val(resistor1.i,2.0);
val(resistor1.p.v,0.0);
val(resistor1.p.v,2.0);
val(resistor1.p.i,0.0);
val(resistor1.p.i,2.0);
val(resistor1.n.i,0.0);
val(resistor1.n.i,2.0);
val(resistor1.LossPower,0.0);
val(resistor1.LossPower,2.0);
val(switch1.v,0.0);
val(switch1.v,2.0);
val(switch1.i,0.0);
val(switch1.i,2.0);
val(switch1.p.i,0.0);
val(switch1.p.i,2.0);
val(switch1.n.v,0.0);
val(switch1.n.v,2.0);
val(switch1.n.i,0.0);
val(switch1.n.i,2.0);
val(switch1.LossPower,0.0);
val(switch1.LossPower,2.0);
val(switch1.control,0.0);
val(switch1.control,2.0);
val(constantVoltage2.i,0.0);
val(constantVoltage2.i,2.0);
val(constantVoltage2.p.i,0.0);
val(constantVoltage2.p.i,2.0);
val(constantVoltage2.n.i,0.0);
val(constantVoltage2.n.i,2.0);
val(inductor2.v,0.0);
val(inductor2.v,2.0);
val(inductor2.i,0.0);
val(inductor2.i,2.0);
val(der(inductor2.i),0.0);
val(der(inductor2.i),2.0);
val(inductor2.p.v,0.0);
val(inductor2.p.v,2.0);
val(inductor2.p.i,0.0);
val(inductor2.p.i,2.0);
val(inductor2.n.v,0.0);
val(inductor2.n.v,2.0);
val(inductor2.n.i,0.0);
val(inductor2.n.i,2.0);
val(resistor2.v,0.0);
val(resistor2.v,2.0);
val(resistor2.i,0.0);
val(resistor2.i,2.0);
val(resistor2.p.v,0.0);
val(resistor2.p.v,2.0);
val(resistor2.p.i,0.0);
val(resistor2.p.i,2.0);
val(resistor2.n.i,0.0);
val(resistor2.n.i,2.0);
val(resistor2.LossPower,0.0);
val(resistor2.LossPower,2.0);
val(switch2.v,0.0);
val(switch2.v,2.0);
val(switch2.i,0.0);
val(switch2.i,2.0);
val(switch2.p.i,0.0);
val(switch2.p.i,2.0);
val(switch2.n.v,0.0);
val(switch2.n.v,2.0);
val(switch2.n.i,0.0);
val(switch2.n.i,2.0);
val(switch2.LossPower,0.0);
val(switch2.LossPower,2.0);
val(switch2.control,0.0);
val(switch2.control,2.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.SwitchWithArc_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.SwitchWithArc', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// 1.0
// 1.0
// -0
// -0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 50.0
// 49.9995002747
// 0.0
// 0.00049999501789
// 500.0
// -8.94607738583e-14
// 50.0
// 50.0
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 2.49994997148e-07
// 0.0
// 4.99994978753e-09
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 50.0
// 50.0
// -0
// -0.00049999501789
// 0.0
// 2.49994989987e-12
// 1.0
// 1.0
// -0
// -0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 50.0
// 49.9995002747
// 0.0
// 0.00049999501789
// 500.0
// -1.84054160801e-14
// 50.0
// 50.0
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// -0
// -0.00049999501789
// 0.0
// 2.49994997148e-07
// 0.0
// 4.99994978753e-09
// 0.0
// 0.00049999501789
// 0.0
// 0.00049999501789
// 50.0
// 50.0
// -0
// -0.00049999501789
// 0.0
// 2.49994989987e-12
// 1.0
// 1.0
// endResult
