// name:     Modelica.Electrical.Machines.Examples.DCSE_Start
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.Machines.Examples.DCSE_Start_* Modelica.Electrical.Machines.Examples.DCSE_Start Modelica.Electrical.Machines.Examples.DCSE_Start.exe Modelica.Electrical.Machines.Examples.DCSE_Start.cpp Modelica.Electrical.Machines.Examples.DCSE_Start.makefile Modelica.Electrical.Machines.Examples.DCSE_Start.libs Modelica.Electrical.Machines.Examples.DCSE_Start.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.Machines.Examples.DCSE_Start,stopTime=2.0);
val(dcse.phiMechanical,0.0);
val(dcse.phiMechanical,2.0);
val(der(dcse.phiMechanical),0.0);
val(der(dcse.phiMechanical),2.0);
val(dcse.wMechanical,0.0);
val(dcse.wMechanical,2.0);
val(dcse.tauElectrical,0.0);
val(dcse.tauElectrical,2.0);
val(dcse.tauShaft,0.0);
val(dcse.tauShaft,2.0);
val(dcse.flange.phi,0.0);
val(dcse.flange.phi,2.0);
val(dcse.flange.tau,0.0);
val(dcse.flange.tau,2.0);
val(dcse.inertiaRotor.flange_a.phi,0.0);
val(dcse.inertiaRotor.flange_a.phi,2.0);
val(dcse.inertiaRotor.flange_a.tau,0.0);
val(dcse.inertiaRotor.flange_a.tau,2.0);
val(dcse.inertiaRotor.flange_b.phi,0.0);
val(dcse.inertiaRotor.flange_b.phi,2.0);
val(dcse.inertiaRotor.flange_b.tau,0.0);
val(dcse.inertiaRotor.flange_b.tau,2.0);
val(dcse.inertiaRotor.phi,0.0);
val(dcse.inertiaRotor.phi,2.0);
val(der(dcse.inertiaRotor.phi),0.0);
val(der(dcse.inertiaRotor.phi),2.0);
val(dcse.inertiaRotor.w,0.0);
val(dcse.inertiaRotor.w,2.0);
val(der(dcse.inertiaRotor.w),0.0);
val(der(dcse.inertiaRotor.w),2.0);
val(dcse.inertiaRotor.a,0.0);
val(dcse.inertiaRotor.a,2.0);
val(dcse.fixed.flange.tau,0.0);
val(dcse.fixed.flange.tau,2.0);
val(dcse.va,0.0);
val(dcse.va,2.0);
val(dcse.ia,0.0);
val(dcse.ia,2.0);
val(dcse.pin_ap.v,0.0);
val(dcse.pin_ap.v,2.0);
val(dcse.pin_ap.i,0.0);
val(dcse.pin_ap.i,2.0);
val(dcse.pin_an.v,0.0);
val(dcse.pin_an.v,2.0);
val(dcse.pin_an.i,0.0);
val(dcse.pin_an.i,2.0);
val(dcse.ra.v,0.0);
val(dcse.ra.v,2.0);
val(dcse.ra.i,0.0);
val(dcse.ra.i,2.0);
val(dcse.ra.p.v,0.0);
val(dcse.ra.p.v,2.0);
val(dcse.ra.p.i,0.0);
val(dcse.ra.p.i,2.0);
val(dcse.ra.n.v,0.0);
val(dcse.ra.n.v,2.0);
val(dcse.ra.n.i,0.0);
val(dcse.ra.n.i,2.0);
val(dcse.ra.LossPower,0.0);
val(dcse.ra.LossPower,2.0);
val(dcse.la.v,0.0);
val(dcse.la.v,2.0);
val(dcse.la.i,0.0);
val(dcse.la.i,2.0);
val(der(dcse.la.i),0.0);
val(der(dcse.la.i),2.0);
val(dcse.la.p.v,0.0);
val(dcse.la.p.v,2.0);
val(dcse.la.p.i,0.0);
val(dcse.la.p.i,2.0);
val(dcse.la.n.v,0.0);
val(dcse.la.n.v,2.0);
val(dcse.la.n.i,0.0);
val(dcse.la.n.i,2.0);
val(dcse.airGapDC.w,0.0);
val(dcse.airGapDC.w,2.0);
val(dcse.airGapDC.vei,0.0);
val(dcse.airGapDC.vei,2.0);
val(dcse.airGapDC.ie,0.0);
val(dcse.airGapDC.ie,2.0);
val(dcse.airGapDC.psi_e,0.0);
val(dcse.airGapDC.psi_e,2.0);
val(der(dcse.airGapDC.psi_e),0.0);
val(der(dcse.airGapDC.psi_e),2.0);
val(dcse.airGapDC.vai,0.0);
val(dcse.airGapDC.vai,2.0);
val(dcse.airGapDC.ia,0.0);
val(dcse.airGapDC.ia,2.0);
val(dcse.airGapDC.tauElectrical,0.0);
val(dcse.airGapDC.tauElectrical,2.0);
val(dcse.airGapDC.flange.phi,0.0);
val(dcse.airGapDC.flange.phi,2.0);
val(der(dcse.airGapDC.flange.phi),0.0);
val(der(dcse.airGapDC.flange.phi),2.0);
val(dcse.airGapDC.flange.tau,0.0);
val(dcse.airGapDC.flange.tau,2.0);
val(dcse.airGapDC.support.tau,0.0);
val(dcse.airGapDC.support.tau,2.0);
val(dcse.airGapDC.pin_ap.v,0.0);
val(dcse.airGapDC.pin_ap.v,2.0);
val(dcse.airGapDC.pin_ap.i,0.0);
val(dcse.airGapDC.pin_ap.i,2.0);
val(dcse.airGapDC.pin_ep.v,0.0);
val(dcse.airGapDC.pin_ep.v,2.0);
val(dcse.airGapDC.pin_ep.i,0.0);
val(dcse.airGapDC.pin_ep.i,2.0);
val(dcse.airGapDC.pin_an.v,0.0);
val(dcse.airGapDC.pin_an.v,2.0);
val(dcse.airGapDC.pin_an.i,0.0);
val(dcse.airGapDC.pin_an.i,2.0);
val(dcse.airGapDC.pin_en.i,0.0);
val(dcse.airGapDC.pin_en.i,2.0);
val(dcse.ve,0.0);
val(dcse.ve,2.0);
val(dcse.ie,0.0);
val(dcse.ie,2.0);
val(dcse.re.v,0.0);
val(dcse.re.v,2.0);
val(dcse.re.i,0.0);
val(dcse.re.i,2.0);
val(dcse.re.p.v,0.0);
val(dcse.re.p.v,2.0);
val(dcse.re.p.i,0.0);
val(dcse.re.p.i,2.0);
val(dcse.re.n.v,0.0);
val(dcse.re.n.v,2.0);
val(dcse.re.n.i,0.0);
val(dcse.re.n.i,2.0);
val(dcse.re.LossPower,0.0);
val(dcse.re.LossPower,2.0);
val(dcse.pin_ep.v,0.0);
val(dcse.pin_ep.v,2.0);
val(dcse.pin_ep.i,0.0);
val(dcse.pin_ep.i,2.0);
val(dcse.pin_en.i,0.0);
val(dcse.pin_en.i,2.0);
val(ramp.y,0.0);
val(ramp.y,2.0);
val(signalVoltage.p.v,0.0);
val(signalVoltage.p.v,2.0);
val(signalVoltage.p.i,0.0);
val(signalVoltage.p.i,2.0);
val(signalVoltage.n.i,0.0);
val(signalVoltage.n.i,2.0);
val(signalVoltage.v,0.0);
val(signalVoltage.v,2.0);
val(signalVoltage.i,0.0);
val(signalVoltage.i,2.0);
val(loadInertia.flange_a.phi,0.0);
val(loadInertia.flange_a.phi,2.0);
val(loadInertia.flange_a.tau,0.0);
val(loadInertia.flange_a.tau,2.0);
val(loadInertia.flange_b.phi,0.0);
val(loadInertia.flange_b.phi,2.0);
val(loadInertia.flange_b.tau,0.0);
val(loadInertia.flange_b.tau,2.0);
val(loadInertia.phi,0.0);
val(loadInertia.phi,2.0);
val(der(loadInertia.phi),0.0);
val(der(loadInertia.phi),2.0);
val(loadInertia.w,0.0);
val(loadInertia.w,2.0);
val(der(loadInertia.w),0.0);
val(der(loadInertia.w),2.0);
val(loadInertia.a,0.0);
val(loadInertia.a,2.0);
val(quadraticLoadTorque.flange.phi,0.0);
val(quadraticLoadTorque.flange.phi,2.0);
val(quadraticLoadTorque.flange.tau,0.0);
val(quadraticLoadTorque.flange.tau,2.0);
val(quadraticLoadTorque.phi,0.0);
val(quadraticLoadTorque.phi,2.0);
val(der(quadraticLoadTorque.phi),0.0);
val(der(quadraticLoadTorque.phi),2.0);
val(quadraticLoadTorque.w,0.0);
val(quadraticLoadTorque.w,2.0);
val(quadraticLoadTorque.tau,0.0);
val(quadraticLoadTorque.tau,2.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.Machines.Examples.DCSE_Start_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Machines.Examples.DCSE_Start', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// 0.0
// 195.807693481
// 0.0
// 147.582641602
// 0.0
// 147.582641602
// 0.0
// 63.7212181091
// -0
// 63.6594848633
// 0.0
// 195.807693481
// 0.0
// -63.6594848633
// 0.0
// 195.807693481
// 0.0
// 63.7212181091
// 0.0
// 195.807693481
// 0.0
// -63.6594848633
// 0.0
// 195.807693481
// 0.0
// 147.582641602
// 0.0
// 147.582641602
// 0.0
// 0.411556869745
// 0.0
// 0.411556869745
// -0
// -63.7212181091
// 0.0
// 98.9996643066
// 0.0
// 100.046516418
// 0.0
// 100.0
// 0.0
// 100.046516418
// 0.0
// 1.00033295155
// -0
// -100.046516418
// 0.0
// 5.00232601166
// 0.0
// 100.046516418
// 0.0
// 100.0
// 0.0
// 100.046516418
// 0.0
// 94.9976730347
// -0
// -100.046516418
// 0.0
// 500.465301514
// -0
// -0.000396547926357
// 0.0
// 100.046516418
// -0
// -0.264365285635
// 0.0
// 94.9976730347
// 0.0
// 100.046516418
// 0.0
// 94.9980697632
// -0
// -100.046516418
// 0.0
// 147.582641602
// -0
// -0.000132182642119
// 0.0
// 100.046516418
// 0.0
// 0.0500232577324
// -0
// -0.000132182642119
// 0.0
// 93.9977340698
// 0.0
// 100.046516418
// 0.0
// 63.7212181091
// 0.0
// 195.807693481
// 0.0
// 147.582641602
// -0
// -63.7212181091
// 0.0
// 63.7212181091
// 0.0
// 94.9980697632
// 0.0
// 100.046516418
// -0
// -0.000132182642119
// 0.0
// 100.046516418
// 0.0
// 1.00033295155
// -0
// -100.046516418
// -0
// -100.046516418
// 0.0
// 1.00033295155
// 0.0
// 100.046516418
// 0.0
// 1.00046515465
// 0.0
// 100.046516418
// 0.0
// 1.00033295155
// 0.0
// 100.046516418
// -0
// -0.000132182642119
// -0
// -100.046516418
// 0.0
// 100.093055725
// 0.0
// 1.00033295155
// 0.0
// 100.046516418
// -0
// -100.046516418
// 0.0
// 100.0
// 0.0
// 100.0
// -0
// -100.046516418
// 0.0
// 100.046516418
// 0.0
// 100.0
// -0
// -100.046516418
// 0.0
// 195.807693481
// -0
// 63.6594848633
// 0.0
// 195.807693481
// -0
// -63.5977516174
// 0.0
// 195.807693481
// 0.0
// 147.582641602
// 0.0
// 147.582641602
// 0.0
// 0.411556869745
// 0.0
// 0.411556869745
// 0.0
// 195.807693481
// 0.0
// 63.5977516174
// 0.0
// 195.807693481
// 0.0
// 147.582641602
// 0.0
// 147.582641602
// -0
// -63.5977516174
// endResult
