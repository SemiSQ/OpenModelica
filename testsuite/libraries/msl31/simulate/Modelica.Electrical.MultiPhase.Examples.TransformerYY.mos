// name:     Modelica.Electrical.MultiPhase.Examples.TransformerYY
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Electrical.MultiPhase.Examples.TransformerYY_* Modelica.Electrical.MultiPhase.Examples.TransformerYY Modelica.Electrical.MultiPhase.Examples.TransformerYY.exe Modelica.Electrical.MultiPhase.Examples.TransformerYY.cpp Modelica.Electrical.MultiPhase.Examples.TransformerYY.makefile Modelica.Electrical.MultiPhase.Examples.TransformerYY.libs Modelica.Electrical.MultiPhase.Examples.TransformerYY.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.MultiPhase.Examples.TransformerYY);
val(sineVoltage.v[1],0.0);
val(sineVoltage.v[1],1.0);
val(sineVoltage.v[2],0.0);
val(sineVoltage.v[2],1.0);
val(sineVoltage.v[3],0.0);
val(sineVoltage.v[3],1.0);
val(sineVoltage.i[1],0.0);
val(sineVoltage.i[1],1.0);
val(sineVoltage.i[2],0.0);
val(sineVoltage.i[2],1.0);
val(sineVoltage.i[3],0.0);
val(sineVoltage.i[3],1.0);
val(sineVoltage.plug_p.pin[1].v,0.0);
val(sineVoltage.plug_p.pin[1].v,1.0);
val(sineVoltage.plug_p.pin[1].i,0.0);
val(sineVoltage.plug_p.pin[1].i,1.0);
val(sineVoltage.plug_p.pin[2].v,0.0);
val(sineVoltage.plug_p.pin[2].v,1.0);
val(sineVoltage.plug_p.pin[2].i,0.0);
val(sineVoltage.plug_p.pin[2].i,1.0);
val(sineVoltage.plug_p.pin[3].v,0.0);
val(sineVoltage.plug_p.pin[3].v,1.0);
val(sineVoltage.plug_p.pin[3].i,0.0);
val(sineVoltage.plug_p.pin[3].i,1.0);
val(sineVoltage.plug_n.pin[1].i,0.0);
val(sineVoltage.plug_n.pin[1].i,1.0);
val(sineVoltage.plug_n.pin[2].i,0.0);
val(sineVoltage.plug_n.pin[2].i,1.0);
val(sineVoltage.plug_n.pin[3].i,0.0);
val(sineVoltage.plug_n.pin[3].i,1.0);
val(sineVoltage.sineVoltage[1].v,0.0);
val(sineVoltage.sineVoltage[1].v,1.0);
val(sineVoltage.sineVoltage[1].i,0.0);
val(sineVoltage.sineVoltage[1].i,1.0);
val(sineVoltage.sineVoltage[1].p.v,0.0);
val(sineVoltage.sineVoltage[1].p.v,1.0);
val(sineVoltage.sineVoltage[1].p.i,0.0);
val(sineVoltage.sineVoltage[1].p.i,1.0);
val(sineVoltage.sineVoltage[1].n.i,0.0);
val(sineVoltage.sineVoltage[1].n.i,1.0);
val(sineVoltage.sineVoltage[1].signalSource.y,0.0);
val(sineVoltage.sineVoltage[1].signalSource.y,1.0);
val(sineVoltage.sineVoltage[2].v,0.0);
val(sineVoltage.sineVoltage[2].v,1.0);
val(sineVoltage.sineVoltage[2].i,0.0);
val(sineVoltage.sineVoltage[2].i,1.0);
val(sineVoltage.sineVoltage[2].p.v,0.0);
val(sineVoltage.sineVoltage[2].p.v,1.0);
val(sineVoltage.sineVoltage[2].p.i,0.0);
val(sineVoltage.sineVoltage[2].p.i,1.0);
val(sineVoltage.sineVoltage[2].n.i,0.0);
val(sineVoltage.sineVoltage[2].n.i,1.0);
val(sineVoltage.sineVoltage[2].signalSource.y,0.0);
val(sineVoltage.sineVoltage[2].signalSource.y,1.0);
val(sineVoltage.sineVoltage[3].v,0.0);
val(sineVoltage.sineVoltage[3].v,1.0);
val(sineVoltage.sineVoltage[3].i,0.0);
val(sineVoltage.sineVoltage[3].i,1.0);
val(sineVoltage.sineVoltage[3].p.v,0.0);
val(sineVoltage.sineVoltage[3].p.v,1.0);
val(sineVoltage.sineVoltage[3].p.i,0.0);
val(sineVoltage.sineVoltage[3].p.i,1.0);
val(sineVoltage.sineVoltage[3].n.i,0.0);
val(sineVoltage.sineVoltage[3].n.i,1.0);
val(sineVoltage.sineVoltage[3].signalSource.y,0.0);
val(sineVoltage.sineVoltage[3].signalSource.y,1.0);
val(starS.plug_p.pin[1].i,0.0);
val(starS.plug_p.pin[1].i,1.0);
val(starS.plug_p.pin[2].i,0.0);
val(starS.plug_p.pin[2].i,1.0);
val(starS.plug_p.pin[3].i,0.0);
val(starS.plug_p.pin[3].i,1.0);
val(starS.pin_n.i,0.0);
val(starS.pin_n.i,1.0);
val(groundS.p.i,0.0);
val(groundS.p.i,1.0);
val(idealTransformer.v1[1],0.0);
val(idealTransformer.v1[1],1.0);
val(idealTransformer.v1[2],0.0);
val(idealTransformer.v1[2],1.0);
val(idealTransformer.v1[3],0.0);
val(idealTransformer.v1[3],1.0);
val(idealTransformer.v2[1],0.0);
val(idealTransformer.v2[1],1.0);
val(idealTransformer.v2[2],0.0);
val(idealTransformer.v2[2],1.0);
val(idealTransformer.v2[3],0.0);
val(idealTransformer.v2[3],1.0);
val(idealTransformer.i1[1],0.0);
val(idealTransformer.i1[1],1.0);
val(idealTransformer.i1[2],0.0);
val(idealTransformer.i1[2],1.0);
val(idealTransformer.i1[3],0.0);
val(idealTransformer.i1[3],1.0);
val(idealTransformer.i2[1],0.0);
val(idealTransformer.i2[1],1.0);
val(idealTransformer.i2[2],0.0);
val(idealTransformer.i2[2],1.0);
val(idealTransformer.i2[3],0.0);
val(idealTransformer.i2[3],1.0);
val(idealTransformer.plug_p1.pin[1].v,0.0);
val(idealTransformer.plug_p1.pin[1].v,1.0);
val(idealTransformer.plug_p1.pin[1].i,0.0);
val(idealTransformer.plug_p1.pin[1].i,1.0);
val(idealTransformer.plug_p1.pin[2].v,0.0);
val(idealTransformer.plug_p1.pin[2].v,1.0);
val(idealTransformer.plug_p1.pin[2].i,0.0);
val(idealTransformer.plug_p1.pin[2].i,1.0);
val(idealTransformer.plug_p1.pin[3].v,0.0);
val(idealTransformer.plug_p1.pin[3].v,1.0);
val(idealTransformer.plug_p1.pin[3].i,0.0);
val(idealTransformer.plug_p1.pin[3].i,1.0);
val(idealTransformer.plug_p2.pin[1].v,0.0);
val(idealTransformer.plug_p2.pin[1].v,1.0);
val(idealTransformer.plug_p2.pin[1].i,0.0);
val(idealTransformer.plug_p2.pin[1].i,1.0);
val(idealTransformer.plug_p2.pin[2].v,0.0);
val(idealTransformer.plug_p2.pin[2].v,1.0);
val(idealTransformer.plug_p2.pin[2].i,0.0);
val(idealTransformer.plug_p2.pin[2].i,1.0);
val(idealTransformer.plug_p2.pin[3].v,0.0);
val(idealTransformer.plug_p2.pin[3].v,1.0);
val(idealTransformer.plug_p2.pin[3].i,0.0);
val(idealTransformer.plug_p2.pin[3].i,1.0);
val(idealTransformer.plug_n1.pin[1].i,0.0);
val(idealTransformer.plug_n1.pin[1].i,1.0);
val(idealTransformer.plug_n1.pin[2].i,0.0);
val(idealTransformer.plug_n1.pin[2].i,1.0);
val(idealTransformer.plug_n1.pin[3].i,0.0);
val(idealTransformer.plug_n1.pin[3].i,1.0);
val(idealTransformer.plug_n2.pin[1].i,0.0);
val(idealTransformer.plug_n2.pin[1].i,1.0);
val(idealTransformer.plug_n2.pin[2].i,0.0);
val(idealTransformer.plug_n2.pin[2].i,1.0);
val(idealTransformer.plug_n2.pin[3].i,0.0);
val(idealTransformer.plug_n2.pin[3].i,1.0);
val(idealTransformer.idealTransformer[1].v1,0.0);
val(idealTransformer.idealTransformer[1].v1,1.0);
val(idealTransformer.idealTransformer[1].v2,0.0);
val(idealTransformer.idealTransformer[1].v2,1.0);
val(idealTransformer.idealTransformer[1].i1,0.0);
val(idealTransformer.idealTransformer[1].i1,1.0);
val(idealTransformer.idealTransformer[1].i2,0.0);
val(idealTransformer.idealTransformer[1].i2,1.0);
val(idealTransformer.idealTransformer[1].p1.v,0.0);
val(idealTransformer.idealTransformer[1].p1.v,1.0);
val(idealTransformer.idealTransformer[1].p1.i,0.0);
val(idealTransformer.idealTransformer[1].p1.i,1.0);
val(idealTransformer.idealTransformer[1].n1.i,0.0);
val(idealTransformer.idealTransformer[1].n1.i,1.0);
val(idealTransformer.idealTransformer[1].p2.v,0.0);
val(idealTransformer.idealTransformer[1].p2.v,1.0);
val(idealTransformer.idealTransformer[1].p2.i,0.0);
val(idealTransformer.idealTransformer[1].p2.i,1.0);
val(idealTransformer.idealTransformer[1].n2.i,0.0);
val(idealTransformer.idealTransformer[1].n2.i,1.0);
val(idealTransformer.idealTransformer[2].v1,0.0);
val(idealTransformer.idealTransformer[2].v1,1.0);
val(idealTransformer.idealTransformer[2].v2,0.0);
val(idealTransformer.idealTransformer[2].v2,1.0);
val(idealTransformer.idealTransformer[2].i1,0.0);
val(idealTransformer.idealTransformer[2].i1,1.0);
val(idealTransformer.idealTransformer[2].i2,0.0);
val(idealTransformer.idealTransformer[2].i2,1.0);
val(idealTransformer.idealTransformer[2].p1.v,0.0);
val(idealTransformer.idealTransformer[2].p1.v,1.0);
val(idealTransformer.idealTransformer[2].p1.i,0.0);
val(idealTransformer.idealTransformer[2].p1.i,1.0);
val(idealTransformer.idealTransformer[2].n1.i,0.0);
val(idealTransformer.idealTransformer[2].n1.i,1.0);
val(idealTransformer.idealTransformer[2].p2.v,0.0);
val(idealTransformer.idealTransformer[2].p2.v,1.0);
val(idealTransformer.idealTransformer[2].p2.i,0.0);
val(idealTransformer.idealTransformer[2].p2.i,1.0);
val(idealTransformer.idealTransformer[2].n2.i,0.0);
val(idealTransformer.idealTransformer[2].n2.i,1.0);
val(idealTransformer.idealTransformer[3].v1,0.0);
val(idealTransformer.idealTransformer[3].v1,1.0);
val(idealTransformer.idealTransformer[3].v2,0.0);
val(idealTransformer.idealTransformer[3].v2,1.0);
val(idealTransformer.idealTransformer[3].i1,0.0);
val(idealTransformer.idealTransformer[3].i1,1.0);
val(idealTransformer.idealTransformer[3].i2,0.0);
val(idealTransformer.idealTransformer[3].i2,1.0);
val(idealTransformer.idealTransformer[3].p1.v,0.0);
val(idealTransformer.idealTransformer[3].p1.v,1.0);
val(idealTransformer.idealTransformer[3].p1.i,0.0);
val(idealTransformer.idealTransformer[3].p1.i,1.0);
val(idealTransformer.idealTransformer[3].n1.i,0.0);
val(idealTransformer.idealTransformer[3].n1.i,1.0);
val(idealTransformer.idealTransformer[3].p2.v,0.0);
val(idealTransformer.idealTransformer[3].p2.v,1.0);
val(idealTransformer.idealTransformer[3].p2.i,0.0);
val(idealTransformer.idealTransformer[3].p2.i,1.0);
val(idealTransformer.idealTransformer[3].n2.i,0.0);
val(idealTransformer.idealTransformer[3].n2.i,1.0);
val(starT1.plug_p.pin[1].i,0.0);
val(starT1.plug_p.pin[1].i,1.0);
val(starT1.plug_p.pin[2].i,0.0);
val(starT1.plug_p.pin[2].i,1.0);
val(starT1.plug_p.pin[3].i,0.0);
val(starT1.plug_p.pin[3].i,1.0);
val(starT1.pin_n.i,0.0);
val(starT1.pin_n.i,1.0);
val(starT2.plug_p.pin[1].i,0.0);
val(starT2.plug_p.pin[1].i,1.0);
val(starT2.plug_p.pin[2].i,0.0);
val(starT2.plug_p.pin[2].i,1.0);
val(starT2.plug_p.pin[3].i,0.0);
val(starT2.plug_p.pin[3].i,1.0);
val(starT2.pin_n.i,0.0);
val(starT2.pin_n.i,1.0);
val(groundT2.p.i,0.0);
val(groundT2.p.i,1.0);
val(transformerR.v[1],0.0);
val(transformerR.v[1],1.0);
val(transformerR.v[2],0.0);
val(transformerR.v[2],1.0);
val(transformerR.v[3],0.0);
val(transformerR.v[3],1.0);
val(transformerR.i[1],0.0);
val(transformerR.i[1],1.0);
val(transformerR.i[2],0.0);
val(transformerR.i[2],1.0);
val(transformerR.i[3],0.0);
val(transformerR.i[3],1.0);
val(transformerR.plug_p.pin[1].v,0.0);
val(transformerR.plug_p.pin[1].v,1.0);
val(transformerR.plug_p.pin[1].i,0.0);
val(transformerR.plug_p.pin[1].i,1.0);
val(transformerR.plug_p.pin[2].v,0.0);
val(transformerR.plug_p.pin[2].v,1.0);
val(transformerR.plug_p.pin[2].i,0.0);
val(transformerR.plug_p.pin[2].i,1.0);
val(transformerR.plug_p.pin[3].v,0.0);
val(transformerR.plug_p.pin[3].v,1.0);
val(transformerR.plug_p.pin[3].i,0.0);
val(transformerR.plug_p.pin[3].i,1.0);
val(transformerR.plug_n.pin[1].v,0.0);
val(transformerR.plug_n.pin[1].v,1.0);
val(transformerR.plug_n.pin[1].i,0.0);
val(transformerR.plug_n.pin[1].i,1.0);
val(transformerR.plug_n.pin[2].v,0.0);
val(transformerR.plug_n.pin[2].v,1.0);
val(transformerR.plug_n.pin[2].i,0.0);
val(transformerR.plug_n.pin[2].i,1.0);
val(transformerR.plug_n.pin[3].v,0.0);
val(transformerR.plug_n.pin[3].v,1.0);
val(transformerR.plug_n.pin[3].i,0.0);
val(transformerR.plug_n.pin[3].i,1.0);
val(transformerR.resistor[1].v,0.0);
val(transformerR.resistor[1].v,1.0);
val(transformerR.resistor[1].i,0.0);
val(transformerR.resistor[1].i,1.0);
val(transformerR.resistor[1].p.v,0.0);
val(transformerR.resistor[1].p.v,1.0);
val(transformerR.resistor[1].p.i,0.0);
val(transformerR.resistor[1].p.i,1.0);
val(transformerR.resistor[1].n.v,0.0);
val(transformerR.resistor[1].n.v,1.0);
val(transformerR.resistor[1].n.i,0.0);
val(transformerR.resistor[1].n.i,1.0);
val(transformerR.resistor[1].LossPower,0.0);
val(transformerR.resistor[1].LossPower,1.0);
val(transformerR.resistor[2].v,0.0);
val(transformerR.resistor[2].v,1.0);
val(transformerR.resistor[2].i,0.0);
val(transformerR.resistor[2].i,1.0);
val(transformerR.resistor[2].p.v,0.0);
val(transformerR.resistor[2].p.v,1.0);
val(transformerR.resistor[2].p.i,0.0);
val(transformerR.resistor[2].p.i,1.0);
val(transformerR.resistor[2].n.v,0.0);
val(transformerR.resistor[2].n.v,1.0);
val(transformerR.resistor[2].n.i,0.0);
val(transformerR.resistor[2].n.i,1.0);
val(transformerR.resistor[2].LossPower,0.0);
val(transformerR.resistor[2].LossPower,1.0);
val(transformerR.resistor[3].v,0.0);
val(transformerR.resistor[3].v,1.0);
val(transformerR.resistor[3].i,0.0);
val(transformerR.resistor[3].i,1.0);
val(transformerR.resistor[3].p.v,0.0);
val(transformerR.resistor[3].p.v,1.0);
val(transformerR.resistor[3].p.i,0.0);
val(transformerR.resistor[3].p.i,1.0);
val(transformerR.resistor[3].n.v,0.0);
val(transformerR.resistor[3].n.v,1.0);
val(transformerR.resistor[3].n.i,0.0);
val(transformerR.resistor[3].n.i,1.0);
val(transformerR.resistor[3].LossPower,0.0);
val(transformerR.resistor[3].LossPower,1.0);
val(transformerL.v[1],0.0);
val(transformerL.v[1],1.0);
val(transformerL.v[2],0.0);
val(transformerL.v[2],1.0);
val(transformerL.v[3],0.0);
val(transformerL.v[3],1.0);
val(transformerL.i[1],0.0);
val(transformerL.i[1],1.0);
val(transformerL.i[2],0.0);
val(transformerL.i[2],1.0);
val(transformerL.i[3],0.0);
val(transformerL.i[3],1.0);
val(transformerL.plug_p.pin[1].v,0.0);
val(transformerL.plug_p.pin[1].v,1.0);
val(transformerL.plug_p.pin[1].i,0.0);
val(transformerL.plug_p.pin[1].i,1.0);
val(transformerL.plug_p.pin[2].v,0.0);
val(transformerL.plug_p.pin[2].v,1.0);
val(transformerL.plug_p.pin[2].i,0.0);
val(transformerL.plug_p.pin[2].i,1.0);
val(transformerL.plug_p.pin[3].v,0.0);
val(transformerL.plug_p.pin[3].v,1.0);
val(transformerL.plug_p.pin[3].i,0.0);
val(transformerL.plug_p.pin[3].i,1.0);
val(transformerL.plug_n.pin[1].v,0.0);
val(transformerL.plug_n.pin[1].v,1.0);
val(transformerL.plug_n.pin[1].i,0.0);
val(transformerL.plug_n.pin[1].i,1.0);
val(transformerL.plug_n.pin[2].v,0.0);
val(transformerL.plug_n.pin[2].v,1.0);
val(transformerL.plug_n.pin[2].i,0.0);
val(transformerL.plug_n.pin[2].i,1.0);
val(transformerL.plug_n.pin[3].v,0.0);
val(transformerL.plug_n.pin[3].v,1.0);
val(transformerL.plug_n.pin[3].i,0.0);
val(transformerL.plug_n.pin[3].i,1.0);
val(transformerL.inductor[1].v,0.0);
val(transformerL.inductor[1].v,1.0);
val(transformerL.inductor[1].i,0.0);
val(transformerL.inductor[1].i,1.0);
val(der(transformerL.inductor[1].i),0.0);
val(der(transformerL.inductor[1].i),1.0);
val(transformerL.inductor[1].p.v,0.0);
val(transformerL.inductor[1].p.v,1.0);
val(transformerL.inductor[1].p.i,0.0);
val(transformerL.inductor[1].p.i,1.0);
val(transformerL.inductor[1].n.v,0.0);
val(transformerL.inductor[1].n.v,1.0);
val(transformerL.inductor[1].n.i,0.0);
val(transformerL.inductor[1].n.i,1.0);
val(transformerL.inductor[2].v,0.0);
val(transformerL.inductor[2].v,1.0);
val(transformerL.inductor[2].i,0.0);
val(transformerL.inductor[2].i,1.0);
val(der(transformerL.inductor[2].i),0.0);
val(der(transformerL.inductor[2].i),1.0);
val(transformerL.inductor[2].p.v,0.0);
val(transformerL.inductor[2].p.v,1.0);
val(transformerL.inductor[2].p.i,0.0);
val(transformerL.inductor[2].p.i,1.0);
val(transformerL.inductor[2].n.v,0.0);
val(transformerL.inductor[2].n.v,1.0);
val(transformerL.inductor[2].n.i,0.0);
val(transformerL.inductor[2].n.i,1.0);
val(transformerL.inductor[3].v,0.0);
val(transformerL.inductor[3].v,1.0);
val(transformerL.inductor[3].i,0.0);
val(transformerL.inductor[3].i,1.0);
val(der(transformerL.inductor[3].i),0.0);
val(der(transformerL.inductor[3].i),1.0);
val(transformerL.inductor[3].p.v,0.0);
val(transformerL.inductor[3].p.v,1.0);
val(transformerL.inductor[3].p.i,0.0);
val(transformerL.inductor[3].p.i,1.0);
val(transformerL.inductor[3].n.v,0.0);
val(transformerL.inductor[3].n.v,1.0);
val(transformerL.inductor[3].n.i,0.0);
val(transformerL.inductor[3].n.i,1.0);
val(loadR.v[1],0.0);
val(loadR.v[1],1.0);
val(loadR.v[2],0.0);
val(loadR.v[2],1.0);
val(loadR.v[3],0.0);
val(loadR.v[3],1.0);
val(loadR.i[1],0.0);
val(loadR.i[1],1.0);
val(loadR.i[2],0.0);
val(loadR.i[2],1.0);
val(loadR.i[3],0.0);
val(loadR.i[3],1.0);
val(loadR.plug_p.pin[1].v,0.0);
val(loadR.plug_p.pin[1].v,1.0);
val(loadR.plug_p.pin[1].i,0.0);
val(loadR.plug_p.pin[1].i,1.0);
val(loadR.plug_p.pin[2].v,0.0);
val(loadR.plug_p.pin[2].v,1.0);
val(loadR.plug_p.pin[2].i,0.0);
val(loadR.plug_p.pin[2].i,1.0);
val(loadR.plug_p.pin[3].v,0.0);
val(loadR.plug_p.pin[3].v,1.0);
val(loadR.plug_p.pin[3].i,0.0);
val(loadR.plug_p.pin[3].i,1.0);
val(loadR.plug_n.pin[1].v,0.0);
val(loadR.plug_n.pin[1].v,1.0);
val(loadR.plug_n.pin[1].i,0.0);
val(loadR.plug_n.pin[1].i,1.0);
val(loadR.plug_n.pin[2].v,0.0);
val(loadR.plug_n.pin[2].v,1.0);
val(loadR.plug_n.pin[2].i,0.0);
val(loadR.plug_n.pin[2].i,1.0);
val(loadR.plug_n.pin[3].v,0.0);
val(loadR.plug_n.pin[3].v,1.0);
val(loadR.plug_n.pin[3].i,0.0);
val(loadR.plug_n.pin[3].i,1.0);
val(loadR.resistor[1].v,0.0);
val(loadR.resistor[1].v,1.0);
val(loadR.resistor[1].i,0.0);
val(loadR.resistor[1].i,1.0);
val(loadR.resistor[1].p.v,0.0);
val(loadR.resistor[1].p.v,1.0);
val(loadR.resistor[1].p.i,0.0);
val(loadR.resistor[1].p.i,1.0);
val(loadR.resistor[1].n.v,0.0);
val(loadR.resistor[1].n.v,1.0);
val(loadR.resistor[1].n.i,0.0);
val(loadR.resistor[1].n.i,1.0);
val(loadR.resistor[1].LossPower,0.0);
val(loadR.resistor[1].LossPower,1.0);
val(loadR.resistor[2].v,0.0);
val(loadR.resistor[2].v,1.0);
val(loadR.resistor[2].i,0.0);
val(loadR.resistor[2].i,1.0);
val(loadR.resistor[2].p.v,0.0);
val(loadR.resistor[2].p.v,1.0);
val(loadR.resistor[2].p.i,0.0);
val(loadR.resistor[2].p.i,1.0);
val(loadR.resistor[2].n.v,0.0);
val(loadR.resistor[2].n.v,1.0);
val(loadR.resistor[2].n.i,0.0);
val(loadR.resistor[2].n.i,1.0);
val(loadR.resistor[2].LossPower,0.0);
val(loadR.resistor[2].LossPower,1.0);
val(loadR.resistor[3].v,0.0);
val(loadR.resistor[3].v,1.0);
val(loadR.resistor[3].i,0.0);
val(loadR.resistor[3].i,1.0);
val(loadR.resistor[3].p.v,0.0);
val(loadR.resistor[3].p.v,1.0);
val(loadR.resistor[3].p.i,0.0);
val(loadR.resistor[3].p.i,1.0);
val(loadR.resistor[3].n.v,0.0);
val(loadR.resistor[3].n.v,1.0);
val(loadR.resistor[3].n.i,0.0);
val(loadR.resistor[3].n.i,1.0);
val(loadR.resistor[3].LossPower,0.0);
val(loadR.resistor[3].LossPower,1.0);
val(starL.plug_p.pin[1].v,0.0);
val(starL.plug_p.pin[1].v,1.0);
val(starL.plug_p.pin[1].i,0.0);
val(starL.plug_p.pin[1].i,1.0);
val(starL.plug_p.pin[2].v,0.0);
val(starL.plug_p.pin[2].v,1.0);
val(starL.plug_p.pin[2].i,0.0);
val(starL.plug_p.pin[2].i,1.0);
val(starL.plug_p.pin[3].v,0.0);
val(starL.plug_p.pin[3].v,1.0);
val(starL.plug_p.pin[3].i,0.0);
val(starL.plug_p.pin[3].i,1.0);
val(starL.pin_n.v,0.0);
val(starL.pin_n.v,1.0);
val(groundT1.p.i,0.0);
val(groundT1.p.i,1.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.MultiPhase.Examples.TransformerYY_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.MultiPhase.Examples.TransformerYY', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// 0.0
// 1.65389213826e-14
// -0.866025388241
// -0.866025388241
// 0.866025388241
// 0.866025388241
// 0.0
// 0.0847999379039
// -0
// 0.775792002678
// -0
// -0.860591948032
// 0.0
// 1.65389213826e-14
// 0.0
// 0.0847999379039
// -0.866025388241
// -0.866025388241
// -0
// 0.775792002678
// 0.866025388241
// 0.866025388241
// -0
// -0.860591948032
// -0
// -0.0847999379039
// 0.0
// -0.775792002678
// 0.0
// 0.860591948032
// 0.0
// 1.65389213826e-14
// 0.0
// 0.0847999379039
// 0.0
// 1.65389213826e-14
// 0.0
// 0.0847999379039
// -0
// -0.0847999379039
// 0.0
// 1.65389213826e-14
// -0.866025388241
// -0.866025388241
// -0
// 0.775792002678
// -0.866025388241
// -0.866025388241
// -0
// 0.775792002678
// 0.0
// -0.775792002678
// -0.866025388241
// -0.866025388241
// 0.866025388241
// 0.866025388241
// -0
// -0.860591948032
// 0.866025388241
// 0.866025388241
// -0
// -0.860591948032
// 0.0
// 0.860591948032
// 0.866025388241
// 0.866025388241
// 0.0
// 0.0847999379039
// -0
// 0.775792002678
// -0
// -0.860591948032
// 0.0
// 0.0
// -0
// -0
// 0.0
// 1.65389213826e-14
// -0.866025388241
// -0.866025388241
// 0.866025388241
// 0.866025388241
// 0.0
// 1.65389213826e-14
// -0.866025388241
// -0.866025388241
// 0.866025388241
// 0.866025388241
// -0
// -0.0847999379039
// 0.0
// -0.775792002678
// 0.0
// 0.860591948032
// 0.0
// 0.0847999379039
// -0
// 0.775792002678
// -0
// -0.860591948032
// 0.0
// 1.65389213826e-14
// -0
// -0.0847999379039
// -0.866025388241
// -0.866025388241
// 0.0
// -0.775792002678
// 0.866025388241
// 0.866025388241
// 0.0
// 0.860591948032
// 0.0
// 1.65389213826e-14
// 0.0
// 0.0847999379039
// -0.866025388241
// -0.866025388241
// -0
// 0.775792002678
// 0.866025388241
// 0.866025388241
// -0
// -0.860591948032
// 0.0
// 0.0847999379039
// -0
// 0.775792002678
// -0
// -0.860591948032
// -0
// -0.0847999379039
// 0.0
// -0.775792002678
// 0.0
// 0.860591948032
// 0.0
// 1.65389213826e-14
// 0.0
// 1.65389213826e-14
// -0
// -0.0847999379039
// 0.0
// 0.0847999379039
// 0.0
// 1.65389213826e-14
// -0
// -0.0847999379039
// 0.0
// 0.0847999379039
// 0.0
// 1.65389213826e-14
// 0.0
// 0.0847999379039
// -0
// -0.0847999379039
// -0.866025388241
// -0.866025388241
// -0.866025388241
// -0.866025388241
// 0.0
// -0.775792002678
// -0
// 0.775792002678
// -0.866025388241
// -0.866025388241
// 0.0
// -0.775792002678
// -0
// 0.775792002678
// -0.866025388241
// -0.866025388241
// -0
// 0.775792002678
// 0.0
// -0.775792002678
// 0.866025388241
// 0.866025388241
// 0.866025388241
// 0.866025388241
// 0.0
// 0.860591948032
// -0
// -0.860591948032
// 0.866025388241
// 0.866025388241
// 0.0
// 0.860591948032
// -0
// -0.860591948032
// 0.866025388241
// 0.866025388241
// -0
// -0.860591948032
// 0.0
// 0.860591948032
// -0
// -0.0847999379039
// 0.0
// -0.775792002678
// 0.0
// 0.860591948032
// -0
// -0
// 0.0
// 0.0847999379039
// -0
// 0.775792002678
// -0
// -0.860591948032
// 0.0
// 0.0
// -0
// -0
// 0.0
// -0.00423999689519
// 0.0
// -0.0387896001339
// 0.0
// 0.0430295988917
// -0
// -0.0847999379039
// 0.0
// -0.775792002678
// 0.0
// 0.860591948032
// 0.0
// 1.65389213826e-14
// -0
// -0.0847999379039
// -0.866025388241
// -0.866025388241
// 0.0
// -0.775792002678
// 0.866025388241
// 0.866025388241
// 0.0
// 0.860591948032
// 0.0
// 0.00423999689519
// 0.0
// 0.0847999379039
// -0.866025388241
// -0.827235817909
// -0
// 0.775792002678
// 0.866025388241
// 0.822995781898
// -0
// -0.860591948032
// -0
// -0.00423999689519
// -0
// -0.0847999379039
// 0.0
// 1.65389213826e-14
// -0
// -0.0847999379039
// 0.0
// 0.00423999689519
// 0.0
// 0.0847999379039
// 0.0
// 0.000359551457223
// 0.0
// -0.0387896001339
// 0.0
// -0.775792002678
// -0.866025388241
// -0.866025388241
// 0.0
// -0.775792002678
// -0.866025388241
// -0.827235817909
// -0
// 0.775792002678
// 0.0
// 0.0300926622003
// 0.0
// 0.0430295988917
// 0.0
// 0.860591948032
// 0.866025388241
// 0.866025388241
// 0.0
// 0.860591948032
// 0.866025388241
// 0.822995781898
// -0
// -0.860591948032
// 0.0
// 0.0370309241116
// -5.11590747724e-16
// 0.0890399366617
// -0.866025388241
// -0.0514437928796
// 0.866025388241
// -0.0375961437821
// -0
// -0.0847999379039
// 0.0
// -0.775792002678
// 0.0
// 0.860591948032
// 0.0
// 0.00423999689519
// -0
// -0.0847999379039
// -0.866025388241
// -0.827235817909
// 0.0
// -0.775792002678
// 0.866025388241
// 0.822995781898
// 0.0
// 0.860591948032
// 5.11590747724e-16
// -0.0847999379039
// 0.0
// 0.0847999379039
// 5.55111512313e-16
// -0.775792002678
// -0
// 0.775792002678
// 5.55111512313e-16
// 0.860591948032
// -0
// -0.860591948032
// -5.11590747724e-16
// 0.0890399366617
// -0
// -0.0847999379039
// -1.70530256582e-13
// 29.679977417
// 0.0
// 0.00423999689519
// -0
// -0.0847999379039
// 5.11590747724e-16
// -0.0847999379039
// 0.0
// 0.0847999379039
// -0.866025388241
// -0.0514437928796
// 0.0
// -0.775792002678
// -288.675140381
// -17.1479301453
// -0.866025388241
// -0.827235817909
// 0.0
// -0.775792002678
// 5.55111512313e-16
// -0.775792002678
// -0
// 0.775792002678
// 0.866025388241
// -0.0375961437821
// 0.0
// 0.860591948032
// 288.675140381
// -12.5320472717
// 0.866025388241
// 0.822995781898
// 0.0
// 0.860591948032
// 5.55111512313e-16
// 0.860591948032
// -0
// -0.860591948032
// 0.0
// -0.0847999379039
// 4.35207414271e-17
// -0.775792002678
// 4.35207414271e-17
// 0.860591948032
// -0
// -0.0847999379039
// 0.0
// -0.775792002678
// 0.0
// 0.860591948032
// 5.11590747724e-16
// -0.0847999379039
// -0
// -0.0847999379039
// 5.55111512313e-16
// -0.775792002678
// 0.0
// -0.775792002678
// 5.55111512313e-16
// 0.860591948032
// 0.0
// 0.860591948032
// 5.11590747724e-16
// 5.55111512313e-16
// 0.0
// 0.0847999379039
// 5.11590747724e-16
// 5.55111512313e-16
// -0
// 0.775792002678
// 5.11590747724e-16
// 5.55111512313e-16
// -0
// -0.860591948032
// -0
// -0.0847999379039
// -0
// -0.0847999379039
// 5.11590747724e-16
// -0.0847999379039
// -0
// -0.0847999379039
// 5.11590747724e-16
// 5.55111512313e-16
// 0.0
// 0.0847999379039
// 0.0
// 0.00719102937728
// 0.0
// -0.775792002678
// 0.0
// -0.775792002678
// 5.55111512313e-16
// -0.775792002678
// 0.0
// -0.775792002678
// 5.11590747724e-16
// 5.55111512313e-16
// -0
// 0.775792002678
// 0.0
// 0.601853251457
// 0.0
// 0.860591948032
// 0.0
// 0.860591948032
// 5.55111512313e-16
// 0.860591948032
// 0.0
// 0.860591948032
// 5.11590747724e-16
// 5.55111512313e-16
// -0
// -0.860591948032
// 0.0
// 0.740618526936
// 5.11590747724e-16
// 5.55111512313e-16
// -0
// -0.0847999379039
// 5.11590747724e-16
// 5.55111512313e-16
// 0.0
// -0.775792002678
// 5.11590747724e-16
// 5.55111512313e-16
// 0.0
// 0.860591948032
// 5.11590747724e-16
// 5.55111512313e-16
// 0.0
// 0.0
// endResult
