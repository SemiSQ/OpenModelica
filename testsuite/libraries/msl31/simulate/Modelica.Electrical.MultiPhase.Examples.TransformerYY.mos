// name:     Modelica.Electrical.MultiPhase.Examples.TransformerYY
// keywords: simulation MSL Examples
// status: correct
// env: OPENMODELICALIBRARY=../../../../libraries/msl31/
// teardown_command: rm -rf Modelica.Electrical.MultiPhase.Examples.TransformerYY_* Modelica.Electrical.MultiPhase.Examples.TransformerYY Modelica.Electrical.MultiPhase.Examples.TransformerYY.exe Modelica.Electrical.MultiPhase.Examples.TransformerYY.cpp Modelica.Electrical.MultiPhase.Examples.TransformerYY.makefile Modelica.Electrical.MultiPhase.Examples.TransformerYY.libs Modelica.Electrical.MultiPhase.Examples.TransformerYY.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Electrical.MultiPhase.Examples.TransformerYY,stopTime=0.1);
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Electrical.MultiPhase.Examples.TransformerYY_res.mat",
  "Modelica.Electrical.MultiPhase.Examples.TransformerYY.mat","Modelica.Electrical.MultiPhase.Examples.TransformerYY_diff.csv",0.01,0.00001,
  {"transformerL.inductor[1].i",
  "transformerL.inductor[2].i",
  "der(transformerL.inductor[1].i)",
  "der(transformerL.inductor[2].i)"});

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Electrical.MultiPhase.Examples.TransformerYY_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.MultiPhase.Examples.TransformerYY', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// "Files Equal!"
// endResult
