// name:     Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour_* Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour.exe Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour.cpp Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour.makefile Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour.libs Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour);
val(actuator.x,-4.0);
val(actuator.x,4.0);
val(der(actuator.x),-4.0);
val(der(actuator.x),4.0);
val(actuator.L,-4.0);
val(actuator.L,4.0);
val(actuator.mmf_PM.port_p.Phi,-4.0);
val(actuator.mmf_PM.port_p.Phi,4.0);
val(actuator.mmf_PM.port_n.Phi,-4.0);
val(actuator.mmf_PM.port_n.Phi,4.0);
val(actuator.mmf_PM.Phi,-4.0);
val(actuator.mmf_PM.Phi,4.0);
val(actuator.armature.s,-4.0);
val(actuator.armature.s,4.0);
val(actuator.armature.v,-4.0);
val(actuator.armature.v,4.0);
val(actuator.armature.mass.s,-4.0);
val(actuator.armature.mass.s,4.0);
val(der(actuator.armature.mass.s),-4.0);
val(der(actuator.armature.mass.s),4.0);
val(actuator.armature.mass.flange_a.s,-4.0);
val(actuator.armature.mass.flange_a.s,4.0);
val(actuator.armature.mass.flange_a.f,-4.0);
val(actuator.armature.mass.flange_a.f,4.0);
val(actuator.armature.mass.flange_b.s,-4.0);
val(actuator.armature.mass.flange_b.s,4.0);
val(actuator.armature.mass.flange_b.f,-4.0);
val(actuator.armature.mass.flange_b.f,4.0);
val(actuator.armature.mass.v,-4.0);
val(actuator.armature.mass.v,4.0);
val(actuator.armature.flange_a.s,-4.0);
val(actuator.armature.flange_a.s,4.0);
val(actuator.armature.flange_b.s,-4.0);
val(actuator.armature.flange_b.s,4.0);
val(actuator.armature.flange_b.f,-4.0);
val(actuator.armature.flange_b.f,4.0);
val(actuator.armature.limit_xMin.flange.f,-4.0);
val(actuator.armature.limit_xMin.flange.f,4.0);
val(actuator.armature.limit_xMax.flange.f,-4.0);
val(actuator.armature.limit_xMax.flange.f,4.0);
val(actuator.armature.stopper_xMax.s_rel,-4.0);
val(actuator.armature.stopper_xMax.s_rel,4.0);
val(der(actuator.armature.stopper_xMax.s_rel),-4.0);
val(der(actuator.armature.stopper_xMax.s_rel),4.0);
val(actuator.armature.stopper_xMax.v_rel,-4.0);
val(actuator.armature.stopper_xMax.v_rel,4.0);
val(actuator.armature.stopper_xMax.f,-4.0);
val(actuator.armature.stopper_xMax.f,4.0);
val(actuator.armature.stopper_xMax.flange_a.s,-4.0);
val(actuator.armature.stopper_xMax.flange_a.s,4.0);
val(actuator.armature.stopper_xMax.flange_a.f,-4.0);
val(actuator.armature.stopper_xMax.flange_a.f,4.0);
val(actuator.armature.stopper_xMax.flange_b.f,-4.0);
val(actuator.armature.stopper_xMax.flange_b.f,4.0);
val(actuator.armature.stopper_xMax.contact,-4.0);
val(actuator.armature.stopper_xMax.contact,4.0);
val(actuator.armature.stopper_xMin.s_rel,-4.0);
val(actuator.armature.stopper_xMin.s_rel,4.0);
val(der(actuator.armature.stopper_xMin.s_rel),-4.0);
val(der(actuator.armature.stopper_xMin.s_rel),4.0);
val(actuator.armature.stopper_xMin.v_rel,-4.0);
val(actuator.armature.stopper_xMin.v_rel,4.0);
val(actuator.armature.stopper_xMin.f,-4.0);
val(actuator.armature.stopper_xMin.f,4.0);
val(actuator.armature.stopper_xMin.flange_a.f,-4.0);
val(actuator.armature.stopper_xMin.flange_a.f,4.0);
val(actuator.armature.stopper_xMin.flange_b.s,-4.0);
val(actuator.armature.stopper_xMin.flange_b.s,4.0);
val(actuator.armature.stopper_xMin.flange_b.f,-4.0);
val(actuator.armature.stopper_xMin.flange_b.f,4.0);
val(actuator.armature.stopper_xMin.contact,-4.0);
val(actuator.armature.stopper_xMin.contact,4.0);
val(actuator.r.p.v,-4.0);
val(actuator.r.p.v,4.0);
val(actuator.r.n.v,-4.0);
val(actuator.r.n.v,4.0);
val(actuator.ground.port.Phi,-4.0);
val(actuator.ground.port.Phi,4.0);
val(actuator.coil.port_p.Phi,-4.0);
val(actuator.coil.port_p.Phi,4.0);
val(actuator.coil.port_n.Phi,-4.0);
val(actuator.coil.port_n.Phi,4.0);
val(actuator.coil.p.v,-4.0);
val(actuator.coil.p.v,4.0);
val(actuator.coil.v,-4.0);
val(actuator.coil.v,4.0);
val(actuator.coil.Phi,-4.0);
val(actuator.coil.Phi,4.0);
val(der(actuator.coil.Phi),-4.0);
val(der(actuator.coil.Phi),4.0);
val(actuator.coil.Psi,-4.0);
val(actuator.coil.Psi,4.0);
val(actuator.coil.L_stat,-4.0);
val(actuator.coil.L_stat,4.0);
val(actuator.g_ma.port_p.Phi,-4.0);
val(actuator.g_ma.port_p.Phi,4.0);
val(actuator.g_ma.port_n.Phi,-4.0);
val(actuator.g_ma.port_n.Phi,4.0);
val(actuator.g_ma.Phi,-4.0);
val(actuator.g_ma.Phi,4.0);
val(actuator.g_ma.s,-4.0);
val(actuator.g_ma.s,4.0);
val(actuator.g_ma.R_m,-4.0);
val(actuator.g_ma.R_m,4.0);
val(der(actuator.g_ma.R_m),-4.0);
val(der(actuator.g_ma.R_m),4.0);
val(actuator.g_ma.G_m,-4.0);
val(actuator.g_ma.G_m,4.0);
val(der(actuator.g_ma.G_m),-4.0);
val(der(actuator.g_ma.G_m),4.0);
val(actuator.g_ma.flange.s,-4.0);
val(actuator.g_ma.flange.s,4.0);
val(actuator.g_ma.l,-4.0);
val(actuator.g_ma.l,4.0);
val(actuator.g_ma.B_avg,-4.0);
val(actuator.g_ma.B_avg,4.0);
val(actuator.g_mb.port_p.Phi,-4.0);
val(actuator.g_mb.port_p.Phi,4.0);
val(actuator.g_mb.port_n.Phi,-4.0);
val(actuator.g_mb.port_n.Phi,4.0);
val(actuator.g_mb.Phi,-4.0);
val(actuator.g_mb.Phi,4.0);
val(actuator.g_mb.s,-4.0);
val(actuator.g_mb.s,4.0);
val(actuator.g_mb.R_m,-4.0);
val(actuator.g_mb.R_m,4.0);
val(actuator.g_mb.G_m,-4.0);
val(actuator.g_mb.G_m,4.0);
val(actuator.g_mb.flange.s,-4.0);
val(actuator.g_mb.flange.s,4.0);
val(actuator.g_mb.l,-4.0);
val(actuator.g_mb.l,4.0);
val(actuator.g_mb.B_avg,-4.0);
val(actuator.g_mb.B_avg,4.0);
val(actuator.p.v,-4.0);
val(actuator.p.v,4.0);
val(actuator.flange.s,-4.0);
val(actuator.flange.s,4.0);
val(actuator.flange.f,-4.0);
val(actuator.flange.f,4.0);
val(source.v,-4.0);
val(source.v,4.0);
val(source.p.v,-4.0);
val(source.p.v,4.0);
val(sweepX.y,-4.0);
val(sweepX.y,4.0);
val(feedX.s,-4.0);
val(feedX.s,4.0);
val(feedX.flange.s,-4.0);
val(feedX.flange.s,4.0);
val(feedX.flange.f,-4.0);
val(feedX.flange.f,4.0);
val(feedX.s_ref,-4.0);
val(feedX.s_ref,4.0);
val(comparisonWithFEA.u,-4.0);
val(comparisonWithFEA.u,4.0);
val(comparisonWithFEA.y[1],-4.0);
val(comparisonWithFEA.y[1],4.0);
val(comparisonWithFEA.y[2],-4.0);
val(comparisonWithFEA.y[2],4.0);
val(comparisonWithFEA.y[3],-4.0);
val(comparisonWithFEA.y[3],4.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour_res.plt",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ForceStrokeBehaviour', storeInTemp = false, noClean = false, options = '', outputFormat = 'plt'",
//     messages = ""
// end SimulationResult;
// -0.00399499991909
// 0.00399499991909
// 0.000998749979772
// 0.0
// 0.00358664337546
// 0.00668740365654
// -0.000504462630488
// -0.000438017741544
// 0.000504462630488
// 0.000438017741544
// -0.000504462630488
// -0.000438017741544
// -0.00399499991909
// 0.00399499991909
// 0.000998749979772
// 0.0
// -0.00399499991909
// 0.00399499991909
// 0.000998749979772
// 0.0
// -0.00399499991909
// 0.00399499991909
// -9.89604377747
// -9.89604377747
// -0.00399499991909
// 0.00399499991909
// 9.89604377747
// 9.89604377747
// 0.000998749979772
// 0.0
// -0.00399499991909
// 0.00399499991909
// -0.00399499991909
// 0.00399499991909
// 9.89604377747
// 9.89604377747
// 0.0
// 0.0
// -0
// -0
// 0.00799500010908
// 4.99999987369e-06
// -0.000998749979772
// -0
// -0.000998749979772
// -0
// 0.0
// 0.0
// -0.00399499991909
// 0.00399499991909
// -0
// -0
// 0.0
// 0.0
// 0.0
// 0.0
// 4.99999987369e-06
// 0.00799500010908
// 0.000998749979772
// 0.0
// 0.000998749979772
// 0.0
// 0.0
// 0.0
// -0
// -0
// -0.00399499991909
// 0.00399499991909
// 0.0
// 0.0
// 0.0
// 0.0
// -8.57728672028
// -8.57999992371
// 0.00271316524595
// 0.0
// -0
// -0
// -8.96020210348e-05
// -0.000244640046731
// 8.96020210348e-05
// 0.000244640046731
// 0.00271316524595
// 0.0
// 0.00271316524595
// 0.0
// -8.96020210348e-05
// -0.000244640046731
// -1.9379751393e-05
// -0
// -0.012544282712
// -0.0342496037483
// 0.00418142741546
// 0.0114165348932
// -0.000116521063319
// -0.000271559081739
// 0.000116521063319
// 0.000271559081739
// -0.000116521063319
// -0.000271559081739
// -0.00399499991909
// 0.00399499991909
// 8410497.0
// 3608791.25
// -1398831.5
// -0
// 1.18899045276e-07
// 2.77101094071e-07
// 1.97752569875e-08
// 0.0
// -0.00399499991909
// 0.00399499991909
// 0.0060049998574
// 0.0139950001612
// -0.196078956127
// -0.196078956127
// -0.000387941545341
// -0.000166458659805
// 0.000387941545341
// 0.000166458659805
// -0.000387941545341
// -0.000166458659805
// -0.00399499991909
// 0.00399499991909
// 3608791.25
// 8410497.0
// 2.77101094071e-07
// 1.18899045276e-07
// -0.00399499991909
// 0.00399499991909
// 0.0139950001612
// 0.0060049998574
// -0.280112802982
// -0.280112802982
// -8.57728672028
// -8.57999992371
// -0.00399499991909
// 0.00399499991909
// 9.89604377747
// 9.89604377747
// -8.57728672028
// -8.57999992371
// -8.57728672028
// -8.57999992371
// -0.00399499991909
// 0.00399499991909
// -0.00399499991909
// 0.00399499991909
// -0.00399499991909
// 0.00399499991909
// -9.89604377747
// -9.89604377747
// -0.00399499991909
// 0.00399499991909
// -0.00399499991909
// 0.00399499991909
// -8.87469482422
// -8.92015552521
// -9.07678413391
// -9.0551776886
// 0.00332199991681
// 0.00637809978798
// endResult
