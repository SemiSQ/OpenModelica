// name:     Modelica.Mechanics.Translational.Examples.Brake
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Mechanics.Translational.Examples.Brake_* Modelica.Mechanics.Translational.Examples.Brake Modelica.Mechanics.Translational.Examples.Brake.exe Modelica.Mechanics.Translational.Examples.Brake.cpp Modelica.Mechanics.Translational.Examples.Brake.makefile Modelica.Mechanics.Translational.Examples.Brake.libs Modelica.Mechanics.Translational.Examples.Brake.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Mechanics.Translational.Examples.Brake,stopTime=2.0);
val(brake.flange_a.s,0.0);
val(brake.flange_a.s,2.0);
val(brake.flange_a.f,0.0);
val(brake.flange_a.f,2.0);
val(brake.flange_b.s,0.0);
val(brake.flange_b.s,2.0);
val(brake.s_a,0.0);
val(brake.s_a,2.0);
val(brake.s_b,0.0);
val(brake.s_b,2.0);
val(brake.v_relfric,0.0);
val(brake.v_relfric,2.0);
val(brake.a_relfric,0.0);
val(brake.a_relfric,2.0);
val(brake.f0,0.0);
val(brake.f0,2.0);
val(brake.f0_max,0.0);
val(brake.f0_max,2.0);
val(brake.free,0.0);
val(brake.free,2.0);
val(brake.sa,0.0);
val(brake.sa,2.0);
val(brake.startForward,0.0);
val(brake.startForward,2.0);
val(brake.startBackward,0.0);
val(brake.startBackward,2.0);
val(brake.locked,0.0);
val(brake.locked,2.0);
val(brake.mode,0.0);
val(brake.mode,2.0);
val(brake.s,0.0);
val(brake.s,2.0);
val(der(brake.s),0.0);
val(der(brake.s),2.0);
val(brake.f,0.0);
val(brake.f,2.0);
val(brake.v,0.0);
val(brake.v,2.0);
val(der(brake.v),0.0);
val(der(brake.v),2.0);
val(brake.a,0.0);
val(brake.a,2.0);
val(brake.fn,0.0);
val(brake.fn,2.0);
val(brake.f_normalized,0.0);
val(brake.f_normalized,2.0);
val(mass1.s,0.0);
val(mass1.s,2.0);
val(der(mass1.s),0.0);
val(der(mass1.s),2.0);
val(mass1.flange_a.s,0.0);
val(mass1.flange_a.s,2.0);
val(mass1.flange_b.s,0.0);
val(mass1.flange_b.s,2.0);
val(mass1.flange_b.f,0.0);
val(mass1.flange_b.f,2.0);
val(mass1.v,0.0);
val(mass1.v,2.0);
val(der(mass1.v),0.0);
val(der(mass1.v),2.0);
val(mass1.a,0.0);
val(mass1.a,2.0);
val(step.y,0.0);
val(step.y,2.0);
val(brake1.flange_a.s,0.0);
val(brake1.flange_a.s,2.0);
val(brake1.flange_a.f,0.0);
val(brake1.flange_a.f,2.0);
val(brake1.flange_b.s,0.0);
val(brake1.flange_b.s,2.0);
val(brake1.support.f,0.0);
val(brake1.support.f,2.0);
val(brake1.s_a,0.0);
val(brake1.s_a,2.0);
val(brake1.s_b,0.0);
val(brake1.s_b,2.0);
val(brake1.v_relfric,0.0);
val(brake1.v_relfric,2.0);
val(brake1.a_relfric,0.0);
val(brake1.a_relfric,2.0);
val(brake1.f0,0.0);
val(brake1.f0,2.0);
val(brake1.f0_max,0.0);
val(brake1.f0_max,2.0);
val(brake1.free,0.0);
val(brake1.free,2.0);
val(brake1.sa,0.0);
val(brake1.sa,2.0);
val(brake1.startForward,0.0);
val(brake1.startForward,2.0);
val(brake1.startBackward,0.0);
val(brake1.startBackward,2.0);
val(brake1.locked,0.0);
val(brake1.locked,2.0);
val(brake1.mode,0.0);
val(brake1.mode,2.0);
val(brake1.s,0.0);
val(brake1.s,2.0);
val(der(brake1.s),0.0);
val(der(brake1.s),2.0);
val(brake1.f,0.0);
val(brake1.f,2.0);
val(brake1.v,0.0);
val(brake1.v,2.0);
val(der(brake1.v),0.0);
val(der(brake1.v),2.0);
val(brake1.a,0.0);
val(brake1.a,2.0);
val(brake1.fn,0.0);
val(brake1.fn,2.0);
val(brake1.f_normalized,0.0);
val(brake1.f_normalized,2.0);
val(mass2.s,0.0);
val(mass2.s,2.0);
val(der(mass2.s),0.0);
val(der(mass2.s),2.0);
val(mass2.flange_a.s,0.0);
val(mass2.flange_a.s,2.0);
val(mass2.flange_b.s,0.0);
val(mass2.flange_b.s,2.0);
val(mass2.flange_b.f,0.0);
val(mass2.flange_b.f,2.0);
val(mass2.v,0.0);
val(mass2.v,2.0);
val(der(mass2.v),0.0);
val(der(mass2.v),2.0);
val(mass2.a,0.0);
val(mass2.a,2.0);
val(fixed.flange.f,0.0);
val(fixed.flange.f,2.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.Translational.Examples.Brake_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.Translational.Examples.Brake', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat'",
//     messages = ""
// end SimulationResult;
// 0.0
// 0.600000023842
// 0.0
// -0
// 0.0
// 0.600000023842
// 0.0
// 0.600000023842
// 0.0
// 0.600000023842
// 1.0
// -1.17961196366e-16
// -0
// 0.0
// 0.0
// 1.0
// 0.0
// 1.0
// 1.0
// 0.0
// -0
// -0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 1.0
// 2.0
// 0.0
// 0.0
// 0.600000023842
// 1.0
// -1.17961196366e-16
// 0.0
// -0
// 1.0
// -1.17961196366e-16
// -0
// 0.0
// -0
// 0.0
// 0.0
// 2.0
// 0.0
// 2.0
// 0.0
// 0.600000023842
// 1.0
// -1.17961196366e-16
// 0.0
// 0.600000023842
// 0.0
// 0.600000023842
// -0
// 0.0
// 1.0
// -1.17961196366e-16
// -0
// 0.0
// -0
// 0.0
// 0.0
// 2.0
// 0.0
// 0.600000023842
// 0.0
// -0
// 0.0
// 0.600000023842
// -0
// 0.0
// 0.0
// 0.600000023842
// 0.0
// 0.600000023842
// 1.0
// -1.17961196366e-16
// -0
// 0.0
// 0.0
// 1.0
// 0.0
// 1.0
// 1.0
// 0.0
// -0
// -0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 1.0
// 2.0
// 0.0
// 0.0
// 0.600000023842
// 1.0
// -1.17961196366e-16
// 0.0
// -0
// 1.0
// -1.17961196366e-16
// -0
// 0.0
// -0
// 0.0
// 0.0
// 2.0
// 0.0
// 2.0
// 0.0
// 0.600000023842
// 1.0
// -1.17961196366e-16
// 0.0
// 0.600000023842
// 0.0
// 0.600000023842
// -0
// 0.0
// 1.0
// -1.17961196366e-16
// -0
// 0.0
// -0
// 0.0
// 0.0
// -0
// endResult
