// name:     Modelica.Mechanics.Translational.Examples.Oscillator
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Mechanics.Translational.Examples.Oscillator_* Modelica.Mechanics.Translational.Examples.Oscillator Modelica.Mechanics.Translational.Examples.Oscillator.exe Modelica.Mechanics.Translational.Examples.Oscillator.cpp Modelica.Mechanics.Translational.Examples.Oscillator.makefile Modelica.Mechanics.Translational.Examples.Oscillator.libs Modelica.Mechanics.Translational.Examples.Oscillator.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Mechanics.Translational.Examples.Oscillator);
val(mass1.s,0.0);
val(mass1.s,1.0);
val(der(mass1.s),0.0);
val(der(mass1.s),1.0);
val(mass1.flange_a.s,0.0);
val(mass1.flange_a.s,1.0);
val(mass1.flange_a.f,0.0);
val(mass1.flange_a.f,1.0);
val(mass1.flange_b.s,0.0);
val(mass1.flange_b.s,1.0);
val(mass1.flange_b.f,0.0);
val(mass1.flange_b.f,1.0);
val(mass1.v,0.0);
val(mass1.v,1.0);
val(der(mass1.v),0.0);
val(der(mass1.v),1.0);
val(mass1.a,0.0);
val(mass1.a,1.0);
val(spring1.flange_a.s,0.0);
val(spring1.flange_a.s,1.0);
val(spring1.flange_a.f,0.0);
val(spring1.flange_a.f,1.0);
val(spring1.flange_b.f,0.0);
val(spring1.flange_b.f,1.0);
val(spring1.s_rel,0.0);
val(spring1.s_rel,1.0);
val(spring1.f,0.0);
val(spring1.f,1.0);
val(fixed1.flange.f,0.0);
val(fixed1.flange.f,1.0);
val(force1.s,0.0);
val(force1.s,1.0);
val(force1.flange.s,0.0);
val(force1.flange.s,1.0);
val(force1.flange.f,0.0);
val(force1.flange.f,1.0);
val(force1.f,0.0);
val(force1.f,1.0);
val(sine1.y,0.0);
val(sine1.y,1.0);
val(mass2.s,0.0);
val(mass2.s,1.0);
val(der(mass2.s),0.0);
val(der(mass2.s),1.0);
val(mass2.flange_a.s,0.0);
val(mass2.flange_a.s,1.0);
val(mass2.flange_a.f,0.0);
val(mass2.flange_a.f,1.0);
val(mass2.flange_b.s,0.0);
val(mass2.flange_b.s,1.0);
val(mass2.flange_b.f,0.0);
val(mass2.flange_b.f,1.0);
val(mass2.v,0.0);
val(mass2.v,1.0);
val(der(mass2.v),0.0);
val(der(mass2.v),1.0);
val(mass2.a,0.0);
val(mass2.a,1.0);
val(spring2.flange_a.s,0.0);
val(spring2.flange_a.s,1.0);
val(spring2.flange_a.f,0.0);
val(spring2.flange_a.f,1.0);
val(spring2.flange_b.f,0.0);
val(spring2.flange_b.f,1.0);
val(spring2.s_rel,0.0);
val(spring2.s_rel,1.0);
val(spring2.f,0.0);
val(spring2.f,1.0);
val(fixed2.flange.f,0.0);
val(fixed2.flange.f,1.0);
val(force2.s,0.0);
val(force2.s,1.0);
val(force2.flange.s,0.0);
val(force2.flange.s,1.0);
val(force2.flange.f,0.0);
val(force2.flange.f,1.0);
val(force2.f,0.0);
val(force2.f,1.0);
val(sine2.y,0.0);
val(sine2.y,1.0);
val(damper1.s_rel,0.0);
val(damper1.s_rel,1.0);
val(der(damper1.s_rel),0.0);
val(der(damper1.s_rel),1.0);
val(damper1.v_rel,0.0);
val(damper1.v_rel,1.0);
val(der(damper1.v_rel),0.0);
val(der(damper1.v_rel),1.0);
val(damper1.f,0.0);
val(damper1.f,1.0);
val(damper1.flange_a.s,0.0);
val(damper1.flange_a.s,1.0);
val(damper1.flange_a.f,0.0);
val(damper1.flange_a.f,1.0);
val(damper1.flange_b.f,0.0);
val(damper1.flange_b.f,1.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.Translational.Examples.Oscillator_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.Translational.Examples.Oscillator', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat'",
//     messages = ""
// end SimulationResult;
// -0.5
// -0.504305303097
// 0.0
// -0.235017359257
// -1.0
// -1.0043053627
// 0.0
// -0.506334781647
// 0.0
// -0.00430531753227
// 0.0
// 43.0531768799
// 0.0
// -0.235017359257
// 0.0
// 42.5468444824
// 0.0
// 42.5468444824
// 0.0
// -0.00430531753227
// -0
// -43.0531768799
// 0.0
// 43.0531768799
// 1.0
// 1.0043053627
// 0.0
// 43.0531768799
// -0
// -43.0531768799
// -1.0
// -1.0043053627
// -1.0
// -1.0043053627
// -0
// 0.506334781647
// 0.0
// -0.506334781647
// 0.0
// -0.506334781647
// -0.5
// -0.500854492188
// 0.0
// -0.0491192601621
// -1.0
// -1.00085449219
// 0.0
// -0.506334781647
// 0.0
// -0.000854510813951
// 0.0
// 9.03630065918
// 0.0
// -0.0491192601621
// 0.0
// 8.5299654007
// 0.0
// 8.5299654007
// 0.0
// -0.000854510813951
// -0
// -8.54510784149
// 0.0
// 8.54510784149
// 1.0
// 1.00085449219
// 0.0
// 8.54510784149
// -0
// -9.03630065918
// -1.0
// -1.00085449219
// -1.0
// -1.00085449219
// -0
// 0.506334781647
// 0.0
// -0.506334781647
// 0.0
// -0.506334781647
// 1.0
// 1.00085449219
// -0
// 0.0491192601621
// -0
// 0.0491192601621
// -0
// -8.5299654007
// -0
// 0.491192609072
// 0.0
// -0.000854510813951
// 0.0
// -0.491192609072
// -0
// 0.491192609072
// endResult
