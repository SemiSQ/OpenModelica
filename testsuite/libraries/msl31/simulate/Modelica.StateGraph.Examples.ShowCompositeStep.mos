// name:     Modelica.StateGraph.Examples.ShowCompositeStep
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.StateGraph.Examples.ShowCompositeStep_* Modelica.StateGraph.Examples.ShowCompositeStep Modelica.StateGraph.Examples.ShowCompositeStep.exe Modelica.StateGraph.Examples.ShowCompositeStep.cpp Modelica.StateGraph.Examples.ShowCompositeStep.makefile Modelica.StateGraph.Examples.ShowCompositeStep.libs Modelica.StateGraph.Examples.ShowCompositeStep.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.StateGraph.Examples.ShowCompositeStep,stopTime=15.0);
val(stateGraphRoot.subgraphStatePort.activeSteps,0.0);
val(stateGraphRoot.subgraphStatePort.activeSteps,15.0);
val(stateGraphRoot.activeSteps,0.0);
val(stateGraphRoot.activeSteps,15.0);
val(compositeStep.stateGraphRoot.subgraphStatePort.activeSteps,0.0);
val(compositeStep.stateGraphRoot.subgraphStatePort.activeSteps,15.0);
val(compositeStep.active,0.0);
val(compositeStep.active,15.0);
val(compositeStep.outerState.subgraphStatePort.activeSteps,0.0);
val(compositeStep.outerState.subgraphStatePort.activeSteps,15.0);
val(compositeStep.transition3.t,0.0);
val(compositeStep.transition3.t,15.0);
val(compositeStep.transition3.enableFire,0.0);
val(compositeStep.transition3.enableFire,15.0);
val(compositeStep.transition4.t,0.0);
val(compositeStep.transition4.t,15.0);
val(compositeStep.transition4.enableFire,0.0);
val(compositeStep.transition4.enableFire,15.0);
val(compositeStep.step3.active,0.0);
val(compositeStep.step3.active,15.0);
val(compositeStep.step4.active,0.0);
val(compositeStep.step4.active,15.0);
val(compositeStep.transition5.t,0.0);
val(compositeStep.transition5.t,15.0);
val(compositeStep.transition5.enableFire,0.0);
val(compositeStep.transition5.enableFire,15.0);
val(compositeStep.transition6.t,0.0);
val(compositeStep.transition6.t,15.0);
val(compositeStep.transition6.enableFire,0.0);
val(compositeStep.transition6.enableFire,15.0);
val(compositeStep.transition4a.t,0.0);
val(compositeStep.transition4a.t,15.0);
val(compositeStep.transition4a.enableFire,0.0);
val(compositeStep.transition4a.enableFire,15.0);
val(compositeStep.step4a.active,0.0);
val(compositeStep.step4a.active,15.0);
val(compositeStep.transition6a.t,0.0);
val(compositeStep.transition6a.t,15.0);
val(compositeStep.transition6a.enableFire,0.0);
val(compositeStep.transition6a.enableFire,15.0);
val(compositeStep.initStep.active,0.0);
val(compositeStep.initStep.active,15.0);
val(compositeStep.exitStep.active,0.0);
val(compositeStep.exitStep.active,15.0);
val(step0.active,0.0);
val(step0.active,15.0);
val(transition1.t,0.0);
val(transition1.t,15.0);
val(transition1.enableFire,0.0);
val(transition1.enableFire,15.0);
val(step1.active,0.0);
val(step1.active,15.0);
val(transition2.t,0.0);
val(transition2.t,15.0);
val(transition2.enableFire,0.0);
val(transition2.enableFire,15.0);
val(step6.active,0.0);
val(step6.active,15.0);
val(transition7.condition,0.0);
val(transition7.condition,15.0);
val(transition7.enableFire,0.0);
val(transition7.enableFire,15.0);
val(setCondition.y,0.0);
val(setCondition.y,15.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.StateGraph.Examples.ShowCompositeStep_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 15.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.StateGraph.Examples.ShowCompositeStep', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// -1.0
// -2.0
// 1.0
// 2.0
// -0
// -1.0
// 0.0
// 1.0
// 0.0
// 1.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 1.0
// 0.0
// 0.0
// 0.0
// 1.0
// 0.0
// 1.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 1.0
// 0.0
// 0.0
// 0.0
// 1.0
// 0.0
// 0.0
// 1.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 1.0
// 0.0
// 0.0
// 0.0
// 1.0
// endResult
