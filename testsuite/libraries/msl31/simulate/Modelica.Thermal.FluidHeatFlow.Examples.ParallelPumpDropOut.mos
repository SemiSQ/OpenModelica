// name:     Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut_* Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.exe Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.cpp Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.makefile Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.libs Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"});

simulate(Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut,stopTime=2.0);
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut_res.mat",
  "Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.mat","Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut_diff.csv",0.01,0.00001,
  {"heatCapacitor1.T","heatCapacitor2.T","pipe1.T","pipe2.T","pipe3.T"});

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// endResult
