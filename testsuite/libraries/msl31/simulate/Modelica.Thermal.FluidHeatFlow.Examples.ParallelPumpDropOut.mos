// name:     Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut_* Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.exe Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.cpp Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.makefile Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.libs Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut,stopTime=2.0);
val(dTSource1,0.0);
val(dTSource1,2.0);
val(dTtoPipe1,0.0);
val(dTtoPipe1,2.0);
val(dTCoolant1,0.0);
val(dTCoolant1,2.0);
val(dTSource2,0.0);
val(dTSource2,2.0);
val(dTtoPipe2,0.0);
val(dTtoPipe2,2.0);
val(dTCoolant2,0.0);
val(dTCoolant2,2.0);
val(dTmixedCoolant,0.0);
val(dTmixedCoolant,2.0);
val(ambient1.T_port,0.0);
val(ambient1.T_port,2.0);
val(ambient1.flowPort.m_flow,0.0);
val(ambient1.flowPort.m_flow,2.0);
val(ambient1.flowPort.h,0.0);
val(ambient1.flowPort.h,2.0);
val(ambient1.flowPort.H_flow,0.0);
val(ambient1.flowPort.H_flow,2.0);
val(pump.dp,0.0);
val(pump.dp,2.0);
val(pump.V_flow,0.0);
val(pump.V_flow,2.0);
val(pump.T,0.0);
val(pump.T,2.0);
val(pump.T_a,0.0);
val(pump.T_a,2.0);
val(pump.T_b,0.0);
val(pump.T_b,2.0);
val(pump.dT,0.0);
val(pump.dT,2.0);
val(pump.flowPort_a.m_flow,0.0);
val(pump.flowPort_a.m_flow,2.0);
val(pump.flowPort_a.h,0.0);
val(pump.flowPort_a.h,2.0);
val(pump.flowPort_a.H_flow,0.0);
val(pump.flowPort_a.H_flow,2.0);
val(pump.flowPort_b.p,0.0);
val(pump.flowPort_b.p,2.0);
val(pump.flowPort_b.m_flow,0.0);
val(pump.flowPort_b.m_flow,2.0);
val(pump.flowPort_b.h,0.0);
val(pump.flowPort_b.h,2.0);
val(pump.flowPort_b.H_flow,0.0);
val(pump.flowPort_b.H_flow,2.0);
val(pump.volumeFlow,0.0);
val(pump.volumeFlow,2.0);
val(pipe1.dp,0.0);
val(pipe1.dp,2.0);
val(pipe1.V_flow,0.0);
val(pipe1.V_flow,2.0);
val(pipe1.Q_flow,0.0);
val(pipe1.Q_flow,2.0);
val(pipe1.T,0.0);
val(pipe1.T,2.0);
val(der(pipe1.T),0.0);
val(der(pipe1.T),2.0);
val(pipe1.T_a,0.0);
val(pipe1.T_a,2.0);
val(pipe1.T_b,0.0);
val(pipe1.T_b,2.0);
val(pipe1.dT,0.0);
val(pipe1.dT,2.0);
val(pipe1.flowPort_a.p,0.0);
val(pipe1.flowPort_a.p,2.0);
val(pipe1.flowPort_a.m_flow,0.0);
val(pipe1.flowPort_a.m_flow,2.0);
val(pipe1.flowPort_a.h,0.0);
val(pipe1.flowPort_a.h,2.0);
val(pipe1.flowPort_a.H_flow,0.0);
val(pipe1.flowPort_a.H_flow,2.0);
val(pipe1.flowPort_b.p,0.0);
val(pipe1.flowPort_b.p,2.0);
val(pipe1.flowPort_b.m_flow,0.0);
val(pipe1.flowPort_b.m_flow,2.0);
val(pipe1.flowPort_b.h,0.0);
val(pipe1.flowPort_b.h,2.0);
val(pipe1.flowPort_b.H_flow,0.0);
val(pipe1.flowPort_b.H_flow,2.0);
val(pipe1.pressureDrop,0.0);
val(pipe1.pressureDrop,2.0);
val(pipe1.volumeFlow,0.0);
val(pipe1.volumeFlow,2.0);
val(pipe1.Q_friction,0.0);
val(pipe1.Q_friction,2.0);
val(pipe1.heatPort.T,0.0);
val(pipe1.heatPort.T,2.0);
val(pipe1.heatPort.Q_flow,0.0);
val(pipe1.heatPort.Q_flow,2.0);
val(pipe2.dp,0.0);
val(pipe2.dp,2.0);
val(pipe2.V_flow,0.0);
val(pipe2.V_flow,2.0);
val(pipe2.Q_flow,0.0);
val(pipe2.Q_flow,2.0);
val(pipe2.T,0.0);
val(pipe2.T,2.0);
val(der(pipe2.T),0.0);
val(der(pipe2.T),2.0);
val(pipe2.T_a,0.0);
val(pipe2.T_a,2.0);
val(pipe2.T_b,0.0);
val(pipe2.T_b,2.0);
val(pipe2.dT,0.0);
val(pipe2.dT,2.0);
val(pipe2.flowPort_a.p,0.0);
val(pipe2.flowPort_a.p,2.0);
val(pipe2.flowPort_a.m_flow,0.0);
val(pipe2.flowPort_a.m_flow,2.0);
val(pipe2.flowPort_a.h,0.0);
val(pipe2.flowPort_a.h,2.0);
val(pipe2.flowPort_a.H_flow,0.0);
val(pipe2.flowPort_a.H_flow,2.0);
val(pipe2.flowPort_b.p,0.0);
val(pipe2.flowPort_b.p,2.0);
val(pipe2.flowPort_b.m_flow,0.0);
val(pipe2.flowPort_b.m_flow,2.0);
val(pipe2.flowPort_b.h,0.0);
val(pipe2.flowPort_b.h,2.0);
val(pipe2.flowPort_b.H_flow,0.0);
val(pipe2.flowPort_b.H_flow,2.0);
val(pipe2.pressureDrop,0.0);
val(pipe2.pressureDrop,2.0);
val(pipe2.volumeFlow,0.0);
val(pipe2.volumeFlow,2.0);
val(pipe2.Q_friction,0.0);
val(pipe2.Q_friction,2.0);
val(pipe2.heatPort.T,0.0);
val(pipe2.heatPort.T,2.0);
val(pipe2.heatPort.Q_flow,0.0);
val(pipe2.heatPort.Q_flow,2.0);
val(pipe3.dp,0.0);
val(pipe3.dp,2.0);
val(pipe3.V_flow,0.0);
val(pipe3.V_flow,2.0);
val(pipe3.Q_flow,0.0);
val(pipe3.Q_flow,2.0);
val(pipe3.T,0.0);
val(pipe3.T,2.0);
val(der(pipe3.T),0.0);
val(der(pipe3.T),2.0);
val(pipe3.T_a,0.0);
val(pipe3.T_a,2.0);
val(pipe3.T_b,0.0);
val(pipe3.T_b,2.0);
val(pipe3.dT,0.0);
val(pipe3.dT,2.0);
val(pipe3.flowPort_a.p,0.0);
val(pipe3.flowPort_a.p,2.0);
val(pipe3.flowPort_a.m_flow,0.0);
val(pipe3.flowPort_a.m_flow,2.0);
val(pipe3.flowPort_a.h,0.0);
val(pipe3.flowPort_a.h,2.0);
val(pipe3.flowPort_a.H_flow,0.0);
val(pipe3.flowPort_a.H_flow,2.0);
val(pipe3.flowPort_b.m_flow,0.0);
val(pipe3.flowPort_b.m_flow,2.0);
val(pipe3.flowPort_b.h,0.0);
val(pipe3.flowPort_b.h,2.0);
val(pipe3.flowPort_b.H_flow,0.0);
val(pipe3.flowPort_b.H_flow,2.0);
val(pipe3.pressureDrop,0.0);
val(pipe3.pressureDrop,2.0);
val(pipe3.volumeFlow,0.0);
val(pipe3.volumeFlow,2.0);
val(pipe3.Q_friction,0.0);
val(pipe3.Q_friction,2.0);
val(ambient2.T_port,0.0);
val(ambient2.T_port,2.0);
val(ambient2.flowPort.m_flow,0.0);
val(ambient2.flowPort.m_flow,2.0);
val(ambient2.flowPort.h,0.0);
val(ambient2.flowPort.h,2.0);
val(ambient2.flowPort.H_flow,0.0);
val(ambient2.flowPort.H_flow,2.0);
val(heatCapacitor1.T,0.0);
val(heatCapacitor1.T,2.0);
val(der(heatCapacitor1.T),0.0);
val(der(heatCapacitor1.T),2.0);
val(heatCapacitor1.der_T,0.0);
val(heatCapacitor1.der_T,2.0);
val(heatCapacitor1.port.T,0.0);
val(heatCapacitor1.port.T,2.0);
val(heatCapacitor1.port.Q_flow,0.0);
val(heatCapacitor1.port.Q_flow,2.0);
val(prescribedHeatFlow1.port.T,0.0);
val(prescribedHeatFlow1.port.T,2.0);
val(prescribedHeatFlow1.port.Q_flow,0.0);
val(prescribedHeatFlow1.port.Q_flow,2.0);
val(Convection1.Q_flow,0.0);
val(Convection1.Q_flow,2.0);
val(Convection1.dT,0.0);
val(Convection1.dT,2.0);
val(Convection1.solid.T,0.0);
val(Convection1.solid.T,2.0);
val(Convection1.solid.Q_flow,0.0);
val(Convection1.solid.Q_flow,2.0);
val(Convection1.fluid.T,0.0);
val(Convection1.fluid.T,2.0);
val(Convection1.fluid.Q_flow,0.0);
val(Convection1.fluid.Q_flow,2.0);
val(heatCapacitor2.T,0.0);
val(heatCapacitor2.T,2.0);
val(der(heatCapacitor2.T),0.0);
val(der(heatCapacitor2.T),2.0);
val(heatCapacitor2.der_T,0.0);
val(heatCapacitor2.der_T,2.0);
val(heatCapacitor2.port.T,0.0);
val(heatCapacitor2.port.T,2.0);
val(heatCapacitor2.port.Q_flow,0.0);
val(heatCapacitor2.port.Q_flow,2.0);
val(prescribedHeatFlow2.port.T,0.0);
val(prescribedHeatFlow2.port.T,2.0);
val(prescribedHeatFlow2.port.Q_flow,0.0);
val(prescribedHeatFlow2.port.Q_flow,2.0);
val(convection2.Q_flow,0.0);
val(convection2.Q_flow,2.0);
val(convection2.dT,0.0);
val(convection2.dT,2.0);
val(convection2.solid.T,0.0);
val(convection2.solid.T,2.0);
val(convection2.solid.Q_flow,0.0);
val(convection2.solid.Q_flow,2.0);
val(convection2.fluid.T,0.0);
val(convection2.fluid.T,2.0);
val(convection2.fluid.Q_flow,0.0);
val(convection2.fluid.Q_flow,2.0);
val(volumeFlow.y,0.0);
val(volumeFlow.y,2.0);
val(volumeFlow.add.u1,0.0);
val(volumeFlow.add.u1,2.0);
val(volumeFlow.add.u2,0.0);
val(volumeFlow.add.u2,2.0);
val(volumeFlow.add.y,0.0);
val(volumeFlow.add.y,2.0);
val(volumeFlow.ramp1.y,0.0);
val(volumeFlow.ramp1.y,2.0);
val(volumeFlow.ramp2.y,0.0);
val(volumeFlow.ramp2.y,2.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Thermal.FluidHeatFlow.Examples.ParallelPumpDropOut', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat'",
//     messages = ""
// end SimulationResult;
// 0.0
// 15.199672699
// 0.0
// 5.04377317429
// 0.0
// 10.1559000015
// 0.0
// 30.3993453979
// 0.0
// 10.0875463486
// 0.0
// 20.3118000031
// 0.0
// 15.2999601364
// 293.149993896
// 293.149993896
// -1.0
// -1.0
// 293.149993896
// 293.149993896
// -293.149993896
// -293.149993896
// -1.5
// -1.5
// 1.0
// 1.0
// 293.149993896
// 293.149993896
// 293.149993896
// 293.149993896
// 293.149993896
// 293.149993896
// 0.0
// 0.0
// 1.0
// 1.0
// 293.149993896
// 293.149993896
// 293.149993896
// 293.149993896
// 1.5
// 1.5
// -1.0
// -1.0
// 293.149993896
// 293.149993896
// -293.149993896
// -293.149993896
// 1.0
// 1.0
// 0.5
// 0.5
// 0.5
// 0.5
// 0.0
// 5.04377317429
// 293.149993896
// 303.305908203
// 0.0
// -0.341766238213
// 293.149993896
// 293.149993896
// 293.149993896
// 308.383850098
// 0.0
// 10.1559000015
// 1.5
// 1.5
// 0.5
// 0.5
// 293.149993896
// 293.149993896
// 146.574996948
// 146.574996948
// 1.0
// 1.0
// -0.5
// -0.5
// 293.149993896
// 308.383850098
// -146.574996948
// -151.652954102
// 0.5
// 0.5
// 0.5
// 0.5
// 0.0
// 0.0
// 293.149993896
// 303.305908203
// 0.0
// 5.04377317429
// 0.5
// 0.5
// 0.5
// 0.5
// 0.0
// 10.0875463486
// 293.149993896
// 313.461791992
// 0.0
// -0.683532476425
// 293.149993896
// 293.149993896
// 293.149993896
// 308.383850098
// 0.0
// 20.3118000031
// 1.5
// 1.5
// 0.5
// 0.5
// 293.149993896
// 293.149993896
// 146.574996948
// 146.574996948
// 1.0
// 1.0
// -0.5
// -0.5
// 293.149993896
// 308.383850098
// -146.574996948
// -156.730895996
// 0.5
// 0.5
// 0.5
// 0.5
// 0.0
// 0.0
// 293.149993896
// 313.461791992
// 0.0
// 10.0875463486
// 1.0
// 1.0
// 1.0
// 1.0
// 0.0
// 0.0
// 293.149993896
// 308.449951172
// 0.0
// -0.661111354828
// 293.149993896
// 308.383850098
// 293.149993896
// 308.449951172
// 0.0
// 0.0661111325026
// 1.0
// 1.0
// 1.0
// 1.0
// 293.149993896
// 308.383850098
// 293.149993896
// 308.383850098
// -1.0
// -1.0
// 293.149993896
// 308.449951172
// -293.149993896
// -308.449951172
// 1.0
// 1.0
// 1.0
// 1.0
// 0.0
// 0.0
// 293.149993896
// 308.449951172
// 1.0
// 1.0
// 293.149993896
// 308.449951172
// 293.149993896
// 308.449951172
// 293.149993896
// 308.34967041
// 50.0
// -0.437731534243
// 50.0
// -0.437731534243
// 293.149993896
// 308.34967041
// 5.0
// -0.0437731556594
// 293.149993896
// 308.34967041
// -5.0
// -5.0
// 0.0
// 5.04377317429
// 0.0
// 5.04377317429
// 293.149993896
// 308.34967041
// 0.0
// 5.04377317429
// 293.149993896
// 303.305908203
// -0
// -5.04377317429
// 293.149993896
// 323.549346924
// 100.0
// -0.875463068485
// 100.0
// -0.875463068485
// 293.149993896
// 323.549346924
// 10.0
// -0.0875463113189
// 293.149993896
// 323.549346924
// -10.0
// -10.0
// 0.0
// 10.0875463486
// 0.0
// 10.0875463486
// 293.149993896
// 323.549346924
// 0.0
// 10.0875463486
// 293.149993896
// 313.461791992
// -0
// -10.0875463486
// 1.0
// 1.0
// 1.0
// 0.0
// 0.0
// 1.0
// 1.0
// 1.0
// 1.0
// 0.0
// 0.0
// 1.0
// endResult
