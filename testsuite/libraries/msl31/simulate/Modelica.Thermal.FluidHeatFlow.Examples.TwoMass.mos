// name:     Modelica.Thermal.FluidHeatFlow.Examples.TwoMass
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Thermal.FluidHeatFlow.Examples.TwoMass_* Modelica.Thermal.FluidHeatFlow.Examples.TwoMass Modelica.Thermal.FluidHeatFlow.Examples.TwoMass.exe Modelica.Thermal.FluidHeatFlow.Examples.TwoMass.cpp Modelica.Thermal.FluidHeatFlow.Examples.TwoMass.makefile Modelica.Thermal.FluidHeatFlow.Examples.TwoMass.libs Modelica.Thermal.FluidHeatFlow.Examples.TwoMass.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Thermal.FluidHeatFlow.Examples.TwoMass);
val(dTMass1,0.0);
val(dTMass1,1.0);
val(dTtoPipe1,0.0);
val(dTtoPipe1,1.0);
val(dTCoolant1,0.0);
val(dTCoolant1,1.0);
val(dTMass2,0.0);
val(dTMass2,1.0);
val(dTtoPipe2,0.0);
val(dTtoPipe2,1.0);
val(dTCoolant2,0.0);
val(dTCoolant2,1.0);
val(dTmixedCoolant,0.0);
val(dTmixedCoolant,1.0);
val(ambient1.T_port,0.0);
val(ambient1.T_port,1.0);
val(ambient1.flowPort.m_flow,0.0);
val(ambient1.flowPort.m_flow,1.0);
val(ambient1.flowPort.h,0.0);
val(ambient1.flowPort.h,1.0);
val(ambient1.flowPort.H_flow,0.0);
val(ambient1.flowPort.H_flow,1.0);
val(pump.dp,0.0);
val(pump.dp,1.0);
val(pump.V_flow,0.0);
val(pump.V_flow,1.0);
val(pump.T,0.0);
val(pump.T,1.0);
val(pump.T_a,0.0);
val(pump.T_a,1.0);
val(pump.T_b,0.0);
val(pump.T_b,1.0);
val(pump.dT,0.0);
val(pump.dT,1.0);
val(pump.flowPort_a.m_flow,0.0);
val(pump.flowPort_a.m_flow,1.0);
val(pump.flowPort_a.h,0.0);
val(pump.flowPort_a.h,1.0);
val(pump.flowPort_a.H_flow,0.0);
val(pump.flowPort_a.H_flow,1.0);
val(pump.flowPort_b.p,0.0);
val(pump.flowPort_b.p,1.0);
val(pump.flowPort_b.m_flow,0.0);
val(pump.flowPort_b.m_flow,1.0);
val(pump.flowPort_b.h,0.0);
val(pump.flowPort_b.h,1.0);
val(pump.flowPort_b.H_flow,0.0);
val(pump.flowPort_b.H_flow,1.0);
val(pump.volumeFlow,0.0);
val(pump.volumeFlow,1.0);
val(pipe1.dp,0.0);
val(pipe1.dp,1.0);
val(pipe1.V_flow,0.0);
val(pipe1.V_flow,1.0);
val(pipe1.Q_flow,0.0);
val(pipe1.Q_flow,1.0);
val(pipe1.T,0.0);
val(pipe1.T,1.0);
val(der(pipe1.T),0.0);
val(der(pipe1.T),1.0);
val(pipe1.T_a,0.0);
val(pipe1.T_a,1.0);
val(pipe1.T_b,0.0);
val(pipe1.T_b,1.0);
val(pipe1.dT,0.0);
val(pipe1.dT,1.0);
val(pipe1.flowPort_a.p,0.0);
val(pipe1.flowPort_a.p,1.0);
val(pipe1.flowPort_a.m_flow,0.0);
val(pipe1.flowPort_a.m_flow,1.0);
val(pipe1.flowPort_a.h,0.0);
val(pipe1.flowPort_a.h,1.0);
val(pipe1.flowPort_a.H_flow,0.0);
val(pipe1.flowPort_a.H_flow,1.0);
val(pipe1.flowPort_b.p,0.0);
val(pipe1.flowPort_b.p,1.0);
val(pipe1.flowPort_b.m_flow,0.0);
val(pipe1.flowPort_b.m_flow,1.0);
val(pipe1.flowPort_b.h,0.0);
val(pipe1.flowPort_b.h,1.0);
val(pipe1.flowPort_b.H_flow,0.0);
val(pipe1.flowPort_b.H_flow,1.0);
val(pipe1.pressureDrop,0.0);
val(pipe1.pressureDrop,1.0);
val(pipe1.volumeFlow,0.0);
val(pipe1.volumeFlow,1.0);
val(pipe1.Q_friction,0.0);
val(pipe1.Q_friction,1.0);
val(pipe1.heatPort.T,0.0);
val(pipe1.heatPort.T,1.0);
val(pipe1.heatPort.Q_flow,0.0);
val(pipe1.heatPort.Q_flow,1.0);
val(pipe2.dp,0.0);
val(pipe2.dp,1.0);
val(pipe2.V_flow,0.0);
val(pipe2.V_flow,1.0);
val(pipe2.Q_flow,0.0);
val(pipe2.Q_flow,1.0);
val(pipe2.T,0.0);
val(pipe2.T,1.0);
val(der(pipe2.T),0.0);
val(der(pipe2.T),1.0);
val(pipe2.T_a,0.0);
val(pipe2.T_a,1.0);
val(pipe2.T_b,0.0);
val(pipe2.T_b,1.0);
val(pipe2.dT,0.0);
val(pipe2.dT,1.0);
val(pipe2.flowPort_a.p,0.0);
val(pipe2.flowPort_a.p,1.0);
val(pipe2.flowPort_a.m_flow,0.0);
val(pipe2.flowPort_a.m_flow,1.0);
val(pipe2.flowPort_a.h,0.0);
val(pipe2.flowPort_a.h,1.0);
val(pipe2.flowPort_a.H_flow,0.0);
val(pipe2.flowPort_a.H_flow,1.0);
val(pipe2.flowPort_b.p,0.0);
val(pipe2.flowPort_b.p,1.0);
val(pipe2.flowPort_b.m_flow,0.0);
val(pipe2.flowPort_b.m_flow,1.0);
val(pipe2.flowPort_b.h,0.0);
val(pipe2.flowPort_b.h,1.0);
val(pipe2.flowPort_b.H_flow,0.0);
val(pipe2.flowPort_b.H_flow,1.0);
val(pipe2.pressureDrop,0.0);
val(pipe2.pressureDrop,1.0);
val(pipe2.volumeFlow,0.0);
val(pipe2.volumeFlow,1.0);
val(pipe2.Q_friction,0.0);
val(pipe2.Q_friction,1.0);
val(pipe2.heatPort.T,0.0);
val(pipe2.heatPort.T,1.0);
val(pipe2.heatPort.Q_flow,0.0);
val(pipe2.heatPort.Q_flow,1.0);
val(pipe3.dp,0.0);
val(pipe3.dp,1.0);
val(pipe3.V_flow,0.0);
val(pipe3.V_flow,1.0);
val(pipe3.Q_flow,0.0);
val(pipe3.Q_flow,1.0);
val(pipe3.T,0.0);
val(pipe3.T,1.0);
val(der(pipe3.T),0.0);
val(der(pipe3.T),1.0);
val(pipe3.T_a,0.0);
val(pipe3.T_a,1.0);
val(pipe3.T_b,0.0);
val(pipe3.T_b,1.0);
val(pipe3.dT,0.0);
val(pipe3.dT,1.0);
val(pipe3.flowPort_a.p,0.0);
val(pipe3.flowPort_a.p,1.0);
val(pipe3.flowPort_a.m_flow,0.0);
val(pipe3.flowPort_a.m_flow,1.0);
val(pipe3.flowPort_a.h,0.0);
val(pipe3.flowPort_a.h,1.0);
val(pipe3.flowPort_a.H_flow,0.0);
val(pipe3.flowPort_a.H_flow,1.0);
val(pipe3.flowPort_b.m_flow,0.0);
val(pipe3.flowPort_b.m_flow,1.0);
val(pipe3.flowPort_b.h,0.0);
val(pipe3.flowPort_b.h,1.0);
val(pipe3.flowPort_b.H_flow,0.0);
val(pipe3.flowPort_b.H_flow,1.0);
val(pipe3.pressureDrop,0.0);
val(pipe3.pressureDrop,1.0);
val(pipe3.volumeFlow,0.0);
val(pipe3.volumeFlow,1.0);
val(pipe3.Q_friction,0.0);
val(pipe3.Q_friction,1.0);
val(ambient2.T_port,0.0);
val(ambient2.T_port,1.0);
val(ambient2.flowPort.m_flow,0.0);
val(ambient2.flowPort.m_flow,1.0);
val(ambient2.flowPort.h,0.0);
val(ambient2.flowPort.h,1.0);
val(ambient2.flowPort.H_flow,0.0);
val(ambient2.flowPort.H_flow,1.0);
val(heatCapacitor1.T,0.0);
val(heatCapacitor1.T,1.0);
val(der(heatCapacitor1.T),0.0);
val(der(heatCapacitor1.T),1.0);
val(heatCapacitor1.der_T,0.0);
val(heatCapacitor1.der_T,1.0);
val(heatCapacitor1.port.T,0.0);
val(heatCapacitor1.port.T,1.0);
val(heatCapacitor1.port.Q_flow,0.0);
val(heatCapacitor1.port.Q_flow,1.0);
val(thermalConductor1.Q_flow,0.0);
val(thermalConductor1.Q_flow,1.0);
val(thermalConductor1.dT,0.0);
val(thermalConductor1.dT,1.0);
val(thermalConductor1.port_a.T,0.0);
val(thermalConductor1.port_a.T,1.0);
val(thermalConductor1.port_a.Q_flow,0.0);
val(thermalConductor1.port_a.Q_flow,1.0);
val(thermalConductor1.port_b.T,0.0);
val(thermalConductor1.port_b.T,1.0);
val(thermalConductor1.port_b.Q_flow,0.0);
val(thermalConductor1.port_b.Q_flow,1.0);
val(heatCapacitor2.T,0.0);
val(heatCapacitor2.T,1.0);
val(der(heatCapacitor2.T),0.0);
val(der(heatCapacitor2.T),1.0);
val(heatCapacitor2.der_T,0.0);
val(heatCapacitor2.der_T,1.0);
val(heatCapacitor2.port.T,0.0);
val(heatCapacitor2.port.T,1.0);
val(heatCapacitor2.port.Q_flow,0.0);
val(heatCapacitor2.port.Q_flow,1.0);
val(thermalConductor2.Q_flow,0.0);
val(thermalConductor2.Q_flow,1.0);
val(thermalConductor2.dT,0.0);
val(thermalConductor2.dT,1.0);
val(thermalConductor2.port_a.T,0.0);
val(thermalConductor2.port_a.T,1.0);
val(thermalConductor2.port_a.Q_flow,0.0);
val(thermalConductor2.port_a.Q_flow,1.0);
val(thermalConductor2.port_b.T,0.0);
val(thermalConductor2.port_b.T,1.0);
val(thermalConductor2.port_b.Q_flow,0.0);
val(thermalConductor2.port_b.Q_flow,1.0);
val(volumeFlow.y,0.0);
val(volumeFlow.y,1.0);
val(volumeFlow.add.u1,0.0);
val(volumeFlow.add.u1,1.0);
val(volumeFlow.add.u2,0.0);
val(volumeFlow.add.u2,1.0);
val(volumeFlow.add.y,0.0);
val(volumeFlow.add.y,1.0);
val(volumeFlow.ramp1.y,0.0);
val(volumeFlow.ramp1.y,1.0);
val(volumeFlow.ramp2.y,0.0);
val(volumeFlow.ramp2.y,1.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Thermal.FluidHeatFlow.Examples.TwoMass_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Thermal.FluidHeatFlow.Examples.TwoMass', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat'",
//     messages = ""
// end SimulationResult;
// 20.0
// 3.92337679863
// 20.0
// 0.639666438103
// 293.149993896
// -2.67244958878
// 40.0
// 6.82557868958
// 40.0
// 1.2670083046
// 293.149993896
// -4.94730997086
// 293.149993896
// -4.42114067078
// 0.0
// 297.571136475
// -0
// 1.0
// 0.0
// 297.571136475
// -0
// 297.571136475
// 0.0
// 1.5
// 0.0
// -1.0
// 0.0
// 297.571136475
// 0.0
// 297.571136475
// 0.0
// 297.571136475
// 0.0
// 0.0
// 0.0
// -1.0
// 0.0
// 297.571136475
// 0.0
// -297.571136475
// 0.0
// -1.5
// -0
// 1.0
// 0.0
// 297.571136475
// -0
// 297.571136475
// 0.0
// -1.0
// 0.0
// -0.5
// 0.0
// -0.5
// 20.0
// 0.639666438103
// 293.149993896
// 296.43371582
// 200.0
// -6.96558332443
// 0.0
// 297.571136475
// 0.0
// 293.761260986
// 293.149993896
// -2.67244958878
// 0.0
// -1.5
// 0.0
// -0.5
// 0.0
// 297.571136475
// 0.0
// -148.21685791
// 0.0
// -1.0
// -0
// 0.5
// 0.0
// 293.761260986
// -0
// 146.880630493
// 0.0
// -0.5
// 0.0
// -0.5
// 0.0
// 0.0
// 293.149993896
// 296.43371582
// 20.0
// 0.639666438103
// 0.0
// -0.5
// 0.0
// -0.5
// 40.0
// 1.2670083046
// 293.149993896
// 298.708557129
// 400.0
// -12.0664653778
// 0.0
// 297.571136475
// 0.0
// 293.761260986
// 293.149993896
// -4.94730997086
// 0.0
// -1.5
// 0.0
// -0.5
// 0.0
// 297.571136475
// 0.0
// -149.354278564
// 0.0
// -1.0
// -0
// 0.5
// 0.0
// 293.761260986
// -0
// 146.880630493
// 0.0
// -0.5
// 0.0
// -0.5
// 0.0
// 0.0
// 293.149993896
// 298.708557129
// 40.0
// 1.2670083046
// 0.0
// -1.0
// 0.0
// -1.0
// 0.0
// 0.0
// 293.149993896
// 293.761260986
// 0.0
// -6.11260795593
// 0.0
// 293.761260986
// 293.149993896
// 293.149993896
// 293.149993896
// -0.611260831356
// 0.0
// -1.0
// 0.0
// -1.0
// 0.0
// 293.761260986
// 0.0
// -293.761260986
// -0
// 1.0
// 293.149993896
// 293.149993896
// -0
// 293.149993896
// 0.0
// -1.0
// 0.0
// -1.0
// 0.0
// 0.0
// 293.149993896
// 293.149993896
// 0.0
// -1.0
// 293.149993896
// 293.149993896
// 0.0
// -293.149993896
// 313.149993896
// 297.073364258
// -200.0
// -6.39666461945
// -200.0
// -6.39666461945
// 313.149993896
// 297.073364258
// -20.0
// -0.639666438103
// 20.0
// 0.639666438103
// 20.0
// 0.639666438103
// 313.149993896
// 297.073364258
// 20.0
// 0.639666438103
// 293.149993896
// 296.43371582
// -20.0
// -0.639666438103
// 333.149993896
// 299.975585938
// -400.0
// -12.670083046
// -400.0
// -12.670083046
// 333.149993896
// 299.975585938
// -40.0
// -1.2670083046
// 40.0
// 1.2670083046
// 40.0
// 1.2670083046
// 333.149993896
// 299.975585938
// 40.0
// 1.2670083046
// 293.149993896
// 298.708557129
// -40.0
// -1.2670083046
// 0.0
// -1.0
// 0.0
// 1.0
// 0.0
// -2.0
// 0.0
// -1.0
// 0.0
// 1.0
// 0.0
// -2.0
// endResult
