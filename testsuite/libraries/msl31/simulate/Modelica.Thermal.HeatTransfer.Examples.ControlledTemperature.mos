// name:     Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -rf Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature_* Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature.exe Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature.cpp Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature.makefile Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature.libs Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature.log output.log
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica);
loadModel(ModelicaServices);

simulate(Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature,stopTime=10.0);
val(TRes,0.0);
val(TRes,10.0);
val(constantVoltage.i,0.0);
val(constantVoltage.i,10.0);
val(constantVoltage.p.i,0.0);
val(constantVoltage.p.i,10.0);
val(constantVoltage.n.i,0.0);
val(constantVoltage.n.i,10.0);
val(heatCapacitor.T,0.0);
val(heatCapacitor.T,10.0);
val(der(heatCapacitor.T),0.0);
val(der(heatCapacitor.T),10.0);
val(heatCapacitor.der_T,0.0);
val(heatCapacitor.der_T,10.0);
val(heatCapacitor.port.T,0.0);
val(heatCapacitor.port.T,10.0);
val(heatCapacitor.port.Q_flow,0.0);
val(heatCapacitor.port.Q_flow,10.0);
val(heatingResistor.v,0.0);
val(heatingResistor.v,10.0);
val(heatingResistor.i,0.0);
val(heatingResistor.i,10.0);
val(heatingResistor.p.v,0.0);
val(heatingResistor.p.v,10.0);
val(heatingResistor.p.i,0.0);
val(heatingResistor.p.i,10.0);
val(heatingResistor.n.i,0.0);
val(heatingResistor.n.i,10.0);
val(heatingResistor.heatPort.T,0.0);
val(heatingResistor.heatPort.T,10.0);
val(heatingResistor.heatPort.Q_flow,0.0);
val(heatingResistor.heatPort.Q_flow,10.0);
val(heatingResistor.LossPower,0.0);
val(heatingResistor.LossPower,10.0);
val(heatingResistor.T_heatPort,0.0);
val(heatingResistor.T_heatPort,10.0);
val(heatingResistor.R,0.0);
val(heatingResistor.R,10.0);
val(fixedTemperature.port.Q_flow,0.0);
val(fixedTemperature.port.Q_flow,10.0);
val(temperatureSensor.T,0.0);
val(temperatureSensor.T,10.0);
val(temperatureSensor.port.T,0.0);
val(temperatureSensor.port.T,10.0);
val(thermalConductor.Q_flow,0.0);
val(thermalConductor.Q_flow,10.0);
val(thermalConductor.dT,0.0);
val(thermalConductor.dT,10.0);
val(thermalConductor.port_a.T,0.0);
val(thermalConductor.port_a.T,10.0);
val(thermalConductor.port_a.Q_flow,0.0);
val(thermalConductor.port_a.Q_flow,10.0);
val(thermalConductor.port_b.Q_flow,0.0);
val(thermalConductor.port_b.Q_flow,10.0);
val(idealSwitch.v,0.0);
val(idealSwitch.v,10.0);
val(idealSwitch.i,0.0);
val(idealSwitch.i,10.0);
val(idealSwitch.p.i,0.0);
val(idealSwitch.p.i,10.0);
val(idealSwitch.n.v,0.0);
val(idealSwitch.n.v,10.0);
val(idealSwitch.n.i,0.0);
val(idealSwitch.n.i,10.0);
val(idealSwitch.LossPower,0.0);
val(idealSwitch.LossPower,10.0);
val(idealSwitch.control,0.0);
val(idealSwitch.control,10.0);
val(ramp.y,0.0);
val(ramp.y,10.0);
val(onOffController.reference,0.0);
val(onOffController.reference,10.0);
val(onOffController.u,0.0);
val(onOffController.u,10.0);
val(onOffController.y,0.0);
val(onOffController.y,10.0);
val(logicalNot.u,0.0);
val(logicalNot.u,10.0);
val(logicalNot.y,0.0);
val(logicalNot.y,10.0);

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature_res.plt",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Thermal.HeatTransfer.Examples.ControlledTemperature', storeInTemp = false, noClean = false, options = '', outputFormat = 'plt'",
//     messages = ""
// end SimulationResult;
// 293.149993896
// 322.427642822
// -0.999998986721
// -0.897009551525
// -0.999998986721
// -0.897009551525
// 0.999998986721
// 0.897009551525
// 293.149993896
// 322.427642822
// 9.99997997284
// 6.04232215881
// 9.99997997284
// 6.04232215881
// 293.149993896
// 322.427642822
// 9.99997997284
// 6.04232215881
// 9.99999046326
// 9.99999141693
// 0.999998986721
// 0.897009551525
// 9.99999046326
// 9.99999141693
// 0.999998986721
// 0.897009551525
// -0.999998986721
// -0.897009551525
// 293.149993896
// 322.427642822
// -9.99997997284
// -8.97008705139
// 9.99997997284
// 8.97008705139
// 293.149993896
// 322.427642822
// 10.0
// 11.1481428146
// 0.0
// 2.92776536942
// 20.0
// 49.2776527405
// 293.149993896
// 322.427642822
// 0.0
// 2.92776536942
// 0.0
// 29.2776546478
// 293.149993896
// 322.427642822
// 0.0
// 2.92776536942
// -0
// -2.92776536942
// 9.99998974294e-06
// 8.97009522305e-06
// 0.999998986721
// 0.897009551525
// 0.999998986721
// 0.897009551525
// 9.99999046326
// 9.99999141693
// -0.999998986721
// -0.897009551525
// 9.9999797385e-06
// 8.04626142781e-06
// 0.0
// 0.0
// 25.0
// 50.0
// 25.0
// 50.0
// 20.0
// 49.2776527405
// 1.0
// 1.0
// 1.0
// 1.0
// 0.0
// 0.0
// endResult
