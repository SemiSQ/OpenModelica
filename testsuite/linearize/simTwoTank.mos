// name:     twoflattankmodel linearization
// keywords: twoflattankmodel, linearization
// status:   correct
// cflags:   +postOptModules=inlineArrayEqn,constantLinearSystem,removeSimpleEquations,generateSymbolicLinearization
// teardown_command: rm -rf twoflattankmodel.* twoflattankmodel_* output.log linear_twoflattankmodel.* linear_twoflattankmodel_* linear_twoflattankmodel twoflattankmodel
// 
//  Case for linearization of twoflattankmodel model
//
loadFile("modelTwoflattankmodel.mo");
simulate(twoflattankmodel,numberOfIntervals=1); // 1 intervals == 2 values
//linearize
system("twoflattankmodel -l 0");
loadFile("linear_twoflattankmodel.mo");
list(linear_twoflattankmodel);
simulate(linear_twoflattankmodel,method="dassl");
readFile("output.log"); // Check that output log is emtpy
//echo(false); // turns of output
// Result:
// true
// record SimulationResult
//     resultFile = "twoflattankmodel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 1, tolerance = 0.000001, method = 'dassl', fileNamePrefix = 'twoflattankmodel', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// Linearization will performed at point of time: 0
// Linear model is created!
// 0
// true
// "model linear_twoflattankmodel
//   parameter Integer n = 2;
//   // states 
//   parameter Integer k = 1;
//   // top-level inputs 
//   parameter Integer l = 1;
//   // top-level outputs 
//   parameter Real x0[2] = {2,1};
//   parameter Real u0[1] = {0};
//   parameter Real A[2,2] = [-0.5,0.5;2,-3];
//   parameter Real B[2,1] = [0.5;0];
//   parameter Real C[1,2] = [0,0.5];
//   parameter Real D[1,1] = [0];
//   Real x[2](start = x0);
//   input Real u[1](start = u0);
//   output Real y[1];
//   Real x_Ph1 = x[1];
//   Real x_Ph2 = x[2];
//   Real u_PF = u[1];
//   Real y_PF2 = y[1];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_twoflattankmodel;
// 
// "
// record SimulationResult
//     resultFile = "linear_twoflattankmodel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.000001, method = 'dassl', fileNamePrefix = 'linear_twoflattankmodel', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// endResult
