// name:     extfunctions linearization
// keywords: extfunctions, linearization
// status:   correct
// cflags:   +d=linearization
// teardown_command: rm -rf extfunction.* extfunction_* output.log linear_extfunction.* linear_extfunction_* linear_extfunction extfunction
// 
//  Case for linearization of extfunctions model
//
loadFile("modelextfunction.mo");
simulate(extfunction,numberOfIntervals=1); // 1 intervals == 2 values
//linearize at point in time 0 
system("extfunction -l 0");
loadFile("linear_extfunction.mo");
list(linear_extfunction);
simulate(linear_extfunction,method="dassl2");
readFile("output.log"); // Check that output log is empty
//system("pause");
//linearize at point in time 1 
system("extfunction -l 1");
loadFile("linear_extfunction.mo");
list(linear_extfunction);
simulate(linear_extfunction,method="dassl2");
readFile("output.log"); // Check that output log is emtpy
//echo(false); // turns of output
// Result:
// true
// record SimulationResult
//     resultFile = "extfunction_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 1, tolerance = 0.000001, method = 'dassl', fileNamePrefix = 'extfunction', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// Linearization will performed at point of time: 0
// Linear model is created!
// 0
// true
// "model linear_extfunction
//   parameter Integer n = 2;
//   // states 
//   parameter Integer k = 0;
//   // top-level inputs 
//   parameter Integer l = 0;
//   // top-level outputs 
//   parameter Real x0[2] = {1,-1};
//   parameter Real u0[0] = array(i for i in 1:0);
//   parameter Real A[2,2] = [0.5403023058681398,0.8414709848078965;0.841470981782777,0.5403023058681398];
//   parameter Real B[2,0] = zeros(2, 0);
//   parameter Real C[0,2] = zeros(0, 2);
//   parameter Real D[0,0] = zeros(0, 0);
//   Real x[2](start = x0);
//   input Real u[0];
//   output Real y[0];
//   Real x_Px = x[1];
//   Real x_Py = x[2];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_extfunction;
// 
// "
// record SimulationResult
//     resultFile = "linear_extfunction_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.000001, method = 'dassl2', fileNamePrefix = 'linear_extfunction', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// Linearization will performed at point of time: 1
// Linear model is created!
// 0
// true
// "model linear_extfunction
//   parameter Integer n = 2;
//   // states 
//   parameter Integer k = 0;
//   // top-level inputs 
//   parameter Integer l = 0;
//   // top-level outputs 
//   parameter Real x0[2] = {1.398992316494363,-1.398992316494363};
//   parameter Real u0[0] = array(i for i in 1:0);
//   parameter Real A[2,2] = [0.1709600778762038,1.378396290902256;1.378396299878126,0.1709600778762038];
//   parameter Real B[2,0] = zeros(2, 0);
//   parameter Real C[0,2] = zeros(0, 2);
//   parameter Real D[0,0] = zeros(0, 0);
//   Real x[2](start = x0);
//   input Real u[0];
//   output Real y[0];
//   Real x_Px = x[1];
//   Real x_Py = x[2];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_extfunction;
// 
// "
// record SimulationResult
//     resultFile = "linear_extfunction_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 0.000001, method = 'dassl2', fileNamePrefix = 'linear_extfunction', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// endResult
