// name:     test_05.mos
// keywords: <...>
// status:   correct
// cflags:   +d=linearization
// teardown_command: rm -rf *simple_test* output.log
// 
// <insert description here>
//

loadFile("test_05.mo");
simulate(simple_test, startTime=0.0, stopTime=10.0);
readFile("output.log");

system("simple_test -l 0");

loadFile("linear_simple_test.mo");
simulate(linear_simple_test, startTime=0.0, stopTime=10.0, method="euler");
readFile("output.log");

list(linear_simple_test);

// Result:
// true
// record SimulationResult
//     resultFile = "simple_test_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'simple_test', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// ""
// Linearization will performed at point of time: 0
// Linear model is created!
// 0
// true
// record SimulationResult
//     resultFile = "linear_simple_test_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'euler', fileNamePrefix = 'linear_simple_test', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// ""
// "model linear_simple_test
//   parameter Integer n = 2;
//   parameter Integer k = 0;
//   parameter Integer l = 0;
//   parameter Real x0[2] = {0,0};
//   parameter Real u0[0] = {};
//   parameter Real A[2,2] = [6,-0;-0,4];
//   parameter Real B[2,0] = zeros(2, 0);
//   parameter Real C[0,2] = zeros(0, 2);
//   parameter Real D[0,0] = zeros(0, 0);
//   Real x[2](start = x0);
//   input Real u[0];
//   output Real y[0];
//   Real x_Pa = x[1];
//   Real x_Pb = x[2];
// 
// equation 
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_simple_test;
// 
// "
// endResult
