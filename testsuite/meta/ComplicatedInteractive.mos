// name:     ComplicatedInteractive
// keywords: MetaModelica
// status:   correct
// cflags:   +g=MetaModelica
//
// Testing nested complex datatypes, like tuple, list, option...
loadFile("ComplicatedInteractive.mo");

res := ComplicatedInteractive.RecordWithComplicatedTypes((1, {}));
res := ComplicatedInteractive.RecordWithComplicatedTypes((1, {(1.0, SOME({}))}));
res := ComplicatedInteractive.RecordWithComplicatedTypes((1, {(1.0, NONE()), (1.0, SOME({1,2,3}))}));
res2 := ComplicatedInteractive.LI2Ident(res);
res3 := ComplicatedInteractive.NewComplicatedThingy(NONE());
res3 := ComplicatedInteractive.NewComplicatedThingy(SOME({}));
res3 := ComplicatedInteractive.NewComplicatedThingy(SOME({1,2,3}));

res4 := ComplicatedInteractive.listOfTuple((2,3.5));

// Expecting failures
ComplicatedInteractive.RecordWithComplicatedTypes((1, {(1.0, NONE()), (1.0, SOME({true}))})); 
getErrorString();
ComplicatedInteractive.NewComplicatedThingy(SOME({true}));
getErrorString();

// Result:
// true
// record ComplicatedInteractive.LI2.RecordWithComplicatedTypes
//     rcf = (1.0,{})
// end ComplicatedInteractive.LI2.RecordWithComplicatedTypes;
// record ComplicatedInteractive.LI2.RecordWithComplicatedTypes
//     rcf = (1.0,{(1.0,SOME({}))})
// end ComplicatedInteractive.LI2.RecordWithComplicatedTypes;
// record ComplicatedInteractive.LI2.RecordWithComplicatedTypes
//     rcf = (1.0,{(1.0,NONE()),(1.0,SOME({1,2,3}))})
// end ComplicatedInteractive.LI2.RecordWithComplicatedTypes;
// record ComplicatedInteractive.LI2.RecordWithComplicatedTypes
//     rcf = (1.0,{(1.0,NONE()),(1.0,SOME({1,2,3}))})
// end ComplicatedInteractive.LI2.RecordWithComplicatedTypes;
// (4,record ComplicatedInteractive.LI2.RecordWithComplicatedTypes
//     rcf = (1.0,{(7.5,NONE())})
// end ComplicatedInteractive.LI2.RecordWithComplicatedTypes;)
// (4,record ComplicatedInteractive.LI2.RecordWithComplicatedTypes
//     rcf = (1.0,{(7.5,SOME({}))})
// end ComplicatedInteractive.LI2.RecordWithComplicatedTypes;)
// (4,record ComplicatedInteractive.LI2.RecordWithComplicatedTypes
//     rcf = (1.0,{(7.5,SOME({1,2,3}))})
// end ComplicatedInteractive.LI2.RecordWithComplicatedTypes;)
// {(2,3.5),(2,3.5),(2,3.5),(1,7.5),(2,3.5),(2,3.5)}
// 
// "Error: In metarecord call ComplicatedInteractive.LI2.RecordWithComplicatedTypes: Failed to match types:
//     actual:   ((Integer, list<tuple<Real, Option<list<Boolean>>>>))
//     expected: (tuple<Real, list<tuple<Real, Option<list<Integer>>>>>)
// "
// 
// "Error: No matching function found for ComplicatedInteractive.NewComplicatedThingy(SOME(List(true))) of type function(opt:Option<list<Boolean>>) => tuple<Integer, ComplicatedInteractive.LI2> in component <NO COMPONENT>, candidates are function(opt:Option<list<Integer>>) => tuple<Integer, ComplicatedInteractive.LI2>
// "
// endResult
