// name:     Algorithms
// keywords: Simulate, readSimulationData
// status:   correct
// 
//  Simulate model containing algortithms and read in data.
//
loadFile("Algorithm.mo");

// Alg1 - an algorithm for a single variable.
simulate(Alg1, numberOfIntervals=10, tolerance=1e-5);
val(x,0.0);
system("rm -rf Alg1.* Alg1_* output.log");

// Alg2 - two variables in an algorithm
simulate(Alg2);
val(x,0.0);
system("rm -rf Alg2.* Alg2_* output.log");

// Alg3 - mixed algorithm and equation sections
simulate(Alg3);
val(x,0.0);
val(z,0.0);
val(u,0.0);
system("rm -rf Alg3.* Alg3_* output.log");

// Alg4 - single algorithm with wrong causality
simulate(Alg4);

// Result:
// true
// record SimulationResult
//     resultFile = "Alg1_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 10, tolerance = 1e-05, method = 'dasslold', fileNamePrefix = 'Alg1', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*'",
//     messages = ""
// end SimulationResult;
// 2.0
// 0
// record SimulationResult
//     resultFile = "Alg2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dasslold', fileNamePrefix = 'Alg2', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*'",
//     messages = ""
// end SimulationResult;
// 1.0
// 0
// record SimulationResult
//     resultFile = "Alg3_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dasslold', fileNamePrefix = 'Alg3', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*'",
//     messages = ""
// end SimulationResult;
// 4.0
// 3.0
// 4.0
// 0
// record SimulationResult
//     resultFile = "",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dasslold', fileNamePrefix = 'Alg4', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*'",
//     messages = "Simulation failed for model: Alg4
// Error: Internal error Inverse Algorithm needs to be solved for in   x := 1.0 + y;
// . This is not implemented yet.
// 
// Error: Internal error createEquations failed
// Error: Internal error Generation of simulation using code using templates failed
// "
// end SimulationResult;
// endResult
