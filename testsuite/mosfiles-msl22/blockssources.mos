// name:     Blocks Sources
// keywords: Simulate, readSimulationData
// status:   correct
// env: OPENMODELICALIBRARY=../../libraries/msl221
// 
//  Simulate blocks sources and simulate.
//
loadModel(Modelica);
loadFile("TestModels.mo");

// ConstantTest
simulate(TestModels.BlockModels.SourceTests.ConstantTest, tolerance=1e-5, numberOfIntervals=100);
{val(constant1.y,0.0),val(constant1.y,0.5)};
{val(derivative1.y,0.0),val(derivative1.y,0.5)};
system("rm -rf *ConstantTest.* *ConstantTest_* output.log");

//ExpSineTest
simulate(TestModels.BlockModels.SourceTests.ExpSineTest, tolerance=1e-7, numberOfIntervals=200);
{val(expSine1.y,0.0),val(expSine1.y,0.2),val(expSine1.y,0.4),val(expSine1.y,0.6),
val(expSine1.y,0.8),val(expSine1.y,1.0)};

{val(transferFunction1.y,0.0),val(transferFunction1.y,0.2),val(transferFunction1.y,0.4),
val(transferFunction1.y,0.6),val(transferFunction1.y,0.8),val(transferFunction1.y,1.0)};

// ExponentialsTest
simulate(TestModels.BlockModels.SourceTests.ExponentialsTest, tolerance=1e-8, numberOfIntervals=400);
{val(exponentials1.y,0.0),val(exponentials1.y,0.2),val(exponentials1.y,0.4),
val(exponentials1.y,0.6),val(exponentials1.y,0.8),val(exponentials1.y,1.0)};
{val(derivative1.y,0.0),val(derivative1.y,0.2),val(derivative1.y,0.4)
,val(derivative1.y,0.6),val(derivative1.y,0.8),val(derivative1.y,1.0)};
system("rm -rf *ExponentialsTest.* *ExponentialsTest_* output.log");

// SineTest
simulate(TestModels.BlockModels.SourceTests.SineTest, tolerance=1e-5, numberOfIntervals=100);
{val(sine1.y,0.0),val(sine1.y,0.2),val(sine1.y,0.4),
val(sine1.y,0.6),val(sine1.y,0.8),val(sine1.y,1.0)};
{val(transferFunction1.y,0.0),val(transferFunction1.y,0.2),val(transferFunction1.y,0.4)
,val(transferFunction1.y,0.6),val(transferFunction1.y,0.8),val(transferFunction1.y,1.0)};
system("rm -rf *SineTest.* *SineTest_* output.log");

// PulseTest
simulate(TestModels.BlockModels.SourceTests.PulseTest, tolerance=1e-5, numberOfIntervals=100);
{val(p.y,0.0),val(p.y,0.4),val(p.y,0.4000001),val(p.y,0.8),val(p.y,0.8000001)};
system("rm -rf *PulseTest.* *PulseTest_* output.log");


// Result:
// true
// true
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.ConstantTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 100, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.ConstantTest', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// {1.0,1.0}
// {100000.0,0.0}
// 0
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.ExpSineTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 200, tolerance = 1e-07, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.ExpSineTest', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// {0.0,0.481237862257513,-0.637512247785408,0.521950882725781,-0.264108938535931,2.43373169355745e-15}
// {0.0,0.117854094239582,0.0368458939587023,0.0301689370336794,0.064687645576104,2.00696373938953e-06}
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.ExponentialsTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 400, tolerance = 1e-08, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.ExponentialsTest', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// {0.0,0.864664716763384,0.981684361111265,0.365400688994786,0.0494516057399628,0.00669254706932298}
// {0.0,1.50369169068041,0.20347773148052,-4.05967499472093,-0.549579422160047,-0.0743494142249263}
// 0
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.SineTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 100, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.SineTest', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// {0.0,0.198669330795061,0.38941834230865,0.564642473395034,0.717356090899521,0.841470984807896}
// {0.0,0.0186566371544324,0.0693349274774376,0.144058271489358,0.234991742483417,0.334528874157095}
// 0
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.PulseTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 100, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.PulseTest', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false",
//     messages = ""
// end SimulationResult;
// {1.0,0.0,1.0,0.0,1.0}
// 0
// endResult
