// name:     API Classes
// keywords: Graphical API
// status:   correct
// 
//  Subset of the Graphical API.
//

createModel(A);
createModel(A.test);
createModel(test2);
addComponent(x,Integer,A.test);
addComponent(z,Real,A.test);
addComponent(y,Integer,test2);
updateComponent(x,Integer,A.test,binding=33);
getErrorString();
addClassAnnotation(A.test,annotate=Icon(extent={{0,0},{100,100}},graphics={Line(points={{0,0},{100,100}})})); // add an erroneous annotation!
getErrorString(); // that works fine
getIconAnnotation(A.test); // try to get the erroneous annotation!
getErrorString(); // get the error about non-existing modifier
addClassAnnotation(A.test, annotate= Icon(graphics={Line(color={127,127,127}, arrow= {Arrow.None, Arrow.Open}, points={{-50, -50}, {50,50}, {100, 0}, {0, 100}})}));  // replace with a good annotation!
addClassAnnotation(A.test, annotate= Diagram(graphics={Line(color={127,127,127}, arrow= {Arrow.None, Arrow.Open}, points={{-50, -50}, {50,50}, {100, 0}, {0, 100}})}));
addClassAnnotation(A.test, annotate=Documentation(info="<HTML>foo</HTML>",revisions="1.0"));
list();
getErrorString();
getIconAnnotation(A.test);
getErrorString();
getDiagramAnnotation(A.test);
getErrorString();
getDocumentationAnnotation(A.test);
getErrorString();
getComponentCount(A.test);
getComponentCount(test2);
getComponents(A.test);
addConnection(a.n,b.z,A.test);
addConnection(a.n[1],b.z[2],A.test);
getNthConnection(A.test,1);
getClassNames(A);
// Result:
// true
// true
// true
// true
// true
// true
// true
// ""
// true
// ""
// 
// ""
// true
// true
// true
// "model test2
//   Integer y;
// end test2;
// model A
//   model test
//     Real z;
//     Integer x = 33;
//     annotation(Icon(graphics = {Line(color = {127,127,127}, arrow = {Arrow.None,Arrow.Open}, points = {{ -50, -50},{50,50},{100,0},{0,100}})}), Diagram(graphics = {Line(color = {127,127,127}, arrow = {Arrow.None,Arrow.Open}, points = {{ -50, -50},{50,50},{100,0},{0,100}})}), Documentation(info = "<HTML>foo</HTML>", revisions = "1.0"));
//   end test;
// end A;
// 
// "
// ""
// {-10.0,-10.0,10.0,10.0,{Line(true,{{-50,-50},{50,50},{100,0},{0,100}},{127,127,127},LinePattern.Solid,0.25,{Arrow.None,Arrow.Open},3.0,false)}}
// ""
// {-100.0,-100.0,100.0,100.0,{Line(true,{{-50,-50},{50,50},{100,0},{0,100}},{127,127,127},LinePattern.Solid,0.25,{Arrow.None,Arrow.Open},3.0,false)}}
// ""
// {"<HTML>foo</HTML>","1.0"}
// ""
// 2
// 1
// {{Real,z,"", "public", false, false, false, false, "unspecified", "none", "unspecified",{}},{Integer,x,"", "public", false, false, false, false, "unspecified", "none", "unspecified",{}}}
// Ok
// Ok
// {a.n[1],b.z[2], ""}
// {test}
// endResult
