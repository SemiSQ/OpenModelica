// name:     AlgorithmForInClass
// keywords: algorithm, for, class
// status: correct
// teardown_command: rm -rf AlgorithmForInClass_* AlgorithmForInClass.cpp AlgorithmForInClass.makefile AlgorithmForInClass AlgorithmForInClass.exe AlgorithmForInClass.libs AlgorithmForInClass.log output.log
// 
//  Tests for-statements in algorithm-sections in classes.
//
loadFile("AlgorithmForInClass.mo");
getErrorString();
instantiateModel(AlgorithmForInClass);
getErrorString();
simulate(AlgorithmForInClass,numberOfIntervals=2); // 2 intervals == 3 values
getErrorString();
echo(false); // turns of output 

res:=readSimulationResult("AlgorithmForInClass_res.plt",{accum_sum[5], S[2],
sum2[6], sum3[2,2]},4); 
accum_sum := res[1];
S := res[2];
sum2 := res[3];
sum3 := res[4];
accum_sum := 1000*accum_sum;
S := 1000*S;
sum2 := 1000*sum2;
sum3 := 1000*sum3;
accum_sum := floor(accum_sum);
S := floor(S);
sum2 := floor(sum2);
sum3 := floor(sum3);
echo(true); // turns on output
accum_sum/1000.0; // rounded value to 3 digits
S/1000.0;
sum2/1000.0;
sum3/1000.0;
readFile("output.log"); // Check that output log is emtpy


// Result:
// true
// ""
// "class AlgorithmForInClass
//   Real accum_sum[1];
//   Real accum_sum[2];
//   Real accum_sum[3];
//   Real accum_sum[4];
//   Real accum_sum[5];
//   parameter Real N = 3.0;
//   Real S[1];
//   Real S[2];
//   Real S[3];
//   Real sum2[1];
//   Real sum2[2];
//   Real sum2[3];
//   Real sum2[4];
//   Real sum2[5];
//   Real sum2[6];
//   Real sum3[1,1];
//   Real sum3[1,2];
//   Real sum3[1,3];
//   Real sum3[2,1];
//   Real sum3[2,2];
//   Real sum3[2,3];
//   Real sum3[3,1];
//   Real sum3[3,2];
//   Real sum3[3,3];
//   parameter Real v1[1] = 3.0;
//   parameter Real v1[2] = 9.0;
//   parameter Real v1[3] = 4.0;
//   parameter Real v2[1] = 2.0;
//   parameter Real v2[2] = 4.0;
//   parameter Real v2[3] = 1.0;
// algorithm
//   accum_sum[1] := 1.0;
//   for i in 2:5 loop
//     accum_sum[i] := accum_sum[i] + Real(i);
//   end for;
//   for i in 1:3 loop
//     S[i] := v1[i] + v2[i];
//   end for;
//   sum2[1] := 3.0;
//   for i in 1:3 loop
//     for j in 1:3 loop
//       sum2[i + j] := v1[i] + v2[j];
//       sum3[i, j] := v2[i] + v1[j];
//     end for;
//   end for;
// end AlgorithmForInClass;
// "
// ""
// record SimulationResult
//     resultFile = "AlgorithmForInClass_res.plt",
//     messages = ""
// end SimulationResult;
// ""
// true
// {20.0,30.0,5295.0,10300.0}
// {13.0,13.0,13.0,13.0}
// {5.0,5.0,5.0,5.0}
// {13.0,13.0,13.0,13.0}
// ""
// endResult
