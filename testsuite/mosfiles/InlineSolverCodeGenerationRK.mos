// name:     InlineSolverCodeGenerationRK
// keywords: events
// status: correct
// teardown_command: rm -rf DerivativeCodeGeneration_* DerivativeCodeGeneration DerivativeCodeGeneration.exe DerivativeCodeGeneration.cpp DerivativeCodeGeneration.makefile DerivativeCodeGeneration.libs DerivativeCodeGeneration.log output.log
//
// Tests code generation for the inline euler solver. Uses a model designed to create every equation block that omc generates $DER crefs for.
// 

loadFile("DerivativeCodeGeneration.mo");
simulate(DerivativeCodeGeneration,method="inline-rungekutta",numberOfIntervals=10000,stopTime=4.0);
getErrorString();
"x[1]";
val(x[1],0.0);val(x[1],1.0);val(x[1],2.0);
"x[2]";
val(x[2],0.0);val(x[2],1.0);val(x[2],2.0);
"mixed.v1";
val(mixed.v1,0.0);val(mixed.v1,1.0);val(mixed.v1,2.0);
"y";
val(y,0.0);val(y,1.0);val(y,2.0);
"z";
val(z,0.0);val(z,1.0);val(z,2.0);

// Result:
// true
// record SimulationResult
//     resultFile = "DerivativeCodeGeneration_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 4.0, numberOfIntervals = 10000, tolerance = 0.000001, method = 'inline-rungekutta', fileNamePrefix = 'DerivativeCodeGeneration', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', measureTime = false, cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// "x[1]"
// 0.0
// 1.0012883811950355
// 2.0018236236571942
// "x[2]"
// 0.0
// 2.002576762390071
// 4.0036472473143885
// "mixed.v1"
// 0.0
// -0.44107305625810456
// -0.7488236328282173
// "y"
// 2.0
// 3.001288381195003
// 4.001823623657164
// "z"
// 15.0
// 15.5007424217577
// 17.00191405584529
// endResult
