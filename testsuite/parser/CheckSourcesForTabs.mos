// name: Check Compiler sources for tabs
// status: correct
// teardown_command: rm -f CheckSourcesForTabs.count

system("bash -c 'grep \	 ../../Compiler/{BackEnd,FrontEnd,Main,Script,Util}/*.mo' | wc -l > CheckSourcesForTabs.count");
if readFile("CheckSourcesForTabs.count") == "0
" then "OK" else "Found tabs in the source; to fix this, backup your work and run: sed -i 's/	/  /g' Compiler/{BackEnd,FrontEnd,Main,Script,Util}/*.mo";

system("bash -c 'grep \	 ../../Compiler/modpar/*.{cpp,hpp} ../../Compiler/runtime/*.{cpp,c,h,hpp} ../../c_runtime/*.{cpp,c,h}' | wc -l > CheckSourcesForTabs.count");
if readFile("CheckSourcesForTabs.count") == "0
" then "OK" else "Found tabs in the source; to fix this, backup your work and run: sed -i 's/	/  /g' ../../Compiler/modpar/*.{cpp,hpp} ../../Compiler/runtime/*.{cpp,c,h,hpp} c_runtime/{*/,}*.{cpp,c,h}";

system("bash -c 'grep \	 ../../OMShell/*.{cpp,h} ../../OMNotebook/*/*.{cpp,h,hpp} ../../OMEdit/OMEditGUI/*.{cpp,h}' | wc -l > CheckSourcesForTabs.count");
if readFile("CheckSourcesForTabs.count") == "0
" then "OK" else "Found tabs in the source; to fix this, backup your work and run: sed -i 's/	/  /g' OMShell/*.{cpp,h} OMNotebook/*/*.{cpp,h,hpp} OMEdit/OMEditGUI/*.{cpp,h}";

// Result:
// [CheckSourcesForTabs.mos:5:16-5:17:writable] Warning: Lexer treating \ as \\, since \	 is not a valid Modelica escape sequence.
// [CheckSourcesForTabs.mos:9:16-9:17:writable] Warning: Lexer treating \ as \\, since \	 is not a valid Modelica escape sequence.
// [CheckSourcesForTabs.mos:13:16-13:17:writable] Warning: Lexer treating \ as \\, since \	 is not a valid Modelica escape sequence.
// 
// 0
// "OK"
// 0
// "OK"
// 0
// "OK"
// endResult
