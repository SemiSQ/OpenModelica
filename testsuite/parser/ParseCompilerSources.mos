// name: ParseCompiler/Sources
// status: correct
// cflags: +g=MetaModelica
//
// Loads the OpenModelica sources and verifies that it can parse all of them
// (for MDT).
//

loadFile("../../Compiler/AbsynDep.mo"); getErrorString();
loadFile("../../Compiler/Absyn.mo"); getErrorString();
loadFile("../../Compiler/Algorithm.mo"); getErrorString();
loadFile("../../Compiler/BackendVarTransform.mo"); getErrorString();
loadFile("../../Compiler/BackendVarTransform_stub.mo"); getErrorString();
loadFile("../../Compiler/Builtin.mo"); getErrorString();
loadFile("../../Compiler/Cevalfunc.mo"); getErrorString();
loadFile("../../Compiler/Ceval.mo"); getErrorString();
loadFile("../../Compiler/CevalScript.mo"); getErrorString();
loadFile("../../Compiler/CevalScript_stub.mo"); getErrorString();
loadFile("../../Compiler/ClassInf.mo"); getErrorString();
loadFile("../../Compiler/ClassLoader.mo"); getErrorString();
loadFile("../../Compiler/CompiledTemplates.mo"); getErrorString();
loadFile("../../Compiler/ConnectionGraph.mo"); getErrorString();
loadFile("../../Compiler/Connect.mo"); getErrorString();
loadFile("../../Compiler/ConnectUtil.mo"); getErrorString();
loadFile("../../Compiler/Constants.mo"); getErrorString();
loadFile("../../Compiler/Convert.mo"); getErrorString();
loadFile("../../Compiler/Corba.mo"); getErrorString();
loadFile("../../Compiler/DAEDump.mo"); getErrorString();
loadFile("../../Compiler/DAEEXT.mo"); getErrorString();
loadFile("../../Compiler/DAELow.mo"); getErrorString();
loadFile("../../Compiler/DAELow_stub.mo"); getErrorString();
loadFile("../../Compiler/DAE.mo"); getErrorString();
loadFile("../../Compiler/DAEQuery.mo"); getErrorString();
loadFile("../../Compiler/DAEUtil.mo"); getErrorString();
loadFile("../../Compiler/Debug.mo"); getErrorString();
loadFile("../../Compiler/Dependency.mo"); getErrorString();
loadFile("../../Compiler/Derive.mo"); getErrorString();
loadFile("../../Compiler/Derive_stub.mo"); getErrorString();
loadFile("../../Compiler/DFA.mo"); getErrorString();
loadFile("../../Compiler/DumpGraphviz.mo"); getErrorString();
loadFile("../../Compiler/Dump.mo"); getErrorString();
loadFile("../../Compiler/DynLoad.mo"); getErrorString();
loadFile("../../Compiler/Env.mo"); getErrorString();
loadFile("../../Compiler/ErrorExt.mo"); getErrorString();
loadFile("../../Compiler/Error.mo"); getErrorString();
loadFile("../../Compiler/ExpandableConnectors.mo"); getErrorString();
loadFile("../../Compiler/Exp.mo"); getErrorString();
loadFile("../../Compiler/Graphviz.mo"); getErrorString();
loadFile("../../Compiler/HashTable2.mo"); getErrorString();
loadFile("../../Compiler/HashTable3.mo"); getErrorString();
loadFile("../../Compiler/HashTable4.mo"); getErrorString();
loadFile("../../Compiler/HashTable5.mo"); getErrorString();
loadFile("../../Compiler/HashTable6.mo"); getErrorString();
loadFile("../../Compiler/HashTableCG.mo"); getErrorString();
loadFile("../../Compiler/HashTable.mo"); getErrorString();
loadFile("../../Compiler/HashTableStringToPath.mo"); getErrorString();
loadFile("../../Compiler/Inline.mo"); getErrorString();
loadFile("../../Compiler/InnerOuter.mo"); getErrorString();
loadFile("../../Compiler/InstanceHierarchy.mo"); getErrorString();
loadFile("../../Compiler/InstExtends.mo"); getErrorString();
loadFile("../../Compiler/InstSection.mo"); getErrorString();
loadFile("../../Compiler/Inst.mo"); getErrorString();
loadFile("../../Compiler/Interactive.mo"); getErrorString();
loadFile("../../Compiler/IOStreamExt.mo"); getErrorString();
loadFile("../../Compiler/IOStream.mo"); getErrorString();
loadFile("../../Compiler/Lookup.mo"); getErrorString();
loadFile("../../Compiler/Main.mo"); getErrorString();
loadFile("../../Compiler/Main_stub.mo"); getErrorString();
loadFile("../../Compiler/MetaUtil.mo"); getErrorString();
loadFile("../../Compiler/MMath.mo"); getErrorString();
loadFile("../../Compiler/Mod.mo"); getErrorString();
loadFile("../../Compiler/ModUtil.mo"); getErrorString();
loadFile("../../Compiler/OptManager.mo"); getErrorString();
loadFile("../../Compiler/Parser.mo"); getErrorString();
loadFile("../../Compiler/PartFn.mo"); getErrorString();
loadFile("../../Compiler/Patternm.mo"); getErrorString();
loadFile("../../Compiler/Prefix.mo"); getErrorString();
loadFile("../../Compiler/PrefixUtil.mo"); getErrorString();
loadFile("../../Compiler/Print.mo"); getErrorString();
loadFile("../../Compiler/Refactor.mo"); getErrorString();
loadFile("../../Compiler/RTOpts.mo"); getErrorString();
loadFile("../../Compiler/SCode.mo"); getErrorString();
loadFile("../../Compiler/SCodeUtil.mo"); getErrorString();
loadFile("../../Compiler/Settings.mo"); getErrorString();
loadFile("../../Compiler/SimCodeC.mo"); getErrorString();
loadFile("../../Compiler/SimCodeCSharp.mo"); getErrorString();
loadFile("../../Compiler/SimCode.mo"); getErrorString();
loadFile("../../Compiler/SimulationResults.mo"); getErrorString();
loadFile("../../Compiler/Socket.mo"); getErrorString();
loadFile("../../Compiler/Static.mo"); getErrorString();
loadFile("../../Compiler/System.mo"); getErrorString();
loadFile("../../Compiler/TaskGraphExt.mo"); getErrorString();
loadFile("../../Compiler/TaskGraph.mo"); getErrorString();
loadFile("../../Compiler/TemplCG.mo"); getErrorString();
loadFile("../../Compiler/TplAbsyn.mo"); getErrorString();
loadFile("../../Compiler/TplCodegen.mo"); getErrorString();
loadFile("../../Compiler/TplMain.mo"); getErrorString();
loadFile("../../Compiler/Tpl.mo"); getErrorString();
loadFile("../../Compiler/TplParser.mo"); getErrorString();
loadFile("../../Compiler/Types.mo"); getErrorString();
loadFile("../../Compiler/UnitAbsynBuilder.mo"); getErrorString();
loadFile("../../Compiler/UnitAbsyn.mo"); getErrorString();
loadFile("../../Compiler/UnitChecker.mo"); getErrorString();
loadFile("../../Compiler/UnitParserExt.mo"); getErrorString();
loadFile("../../Compiler/Util.mo"); getErrorString();
loadFile("../../Compiler/Values.mo"); getErrorString();
loadFile("../../Compiler/ValuesUtil.mo"); getErrorString();
loadFile("../../Compiler/VarTransform.mo"); getErrorString();
loadFile("../../Compiler/XMLDump.mo"); getErrorString();
// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// endResult
